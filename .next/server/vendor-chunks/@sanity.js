/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sanity";
exports.ids = ["vendor-chunks/@sanity"];
exports.modules = {

/***/ "(ssr)/./node_modules/@sanity/eventsource/node.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/eventsource/node.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! eventsource */ \"(ssr)/./node_modules/eventsource/lib/eventsource.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9ldmVudHNvdXJjZS9ub2RlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhHQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbnRlYy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2V2ZW50c291cmNlL25vZGUuanM/MmY3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJ2V2ZW50c291cmNlJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/eventsource/node.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/eventsource/node.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/eventsource/node.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! eventsource */ \"(action-browser)/./node_modules/eventsource/lib/eventsource.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2V2ZW50c291cmNlL25vZGUuanMiLCJtYXBwaW5ncyI6IkFBQUEseUhBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFudGVjLy4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvZXZlbnRzb3VyY2Uvbm9kZS5qcz9hMzQ4Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnZXZlbnRzb3VyY2UnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/eventsource/node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/eventsource/node.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/eventsource/node.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! eventsource */ \"(rsc)/./node_modules/eventsource/lib/eventsource.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9ldmVudHNvdXJjZS9ub2RlLmpzIiwibWFwcGluZ3MiOiJBQUFBLDhHQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbnRlYy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2V2ZW50c291cmNlL25vZGUuanM/NDk5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJ2V2ZW50c291cmNlJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/eventsource/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/_chunks-es/config.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/config.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataset: () => (/* binding */ dataset),\n/* harmony export */   defaultConfig: () => (/* binding */ defaultConfig),\n/* harmony export */   hasDataset: () => (/* binding */ hasDataset),\n/* harmony export */   initConfig: () => (/* binding */ initConfig),\n/* harmony export */   printCdnPreviewDraftsWarning: () => (/* binding */ printCdnPreviewDraftsWarning),\n/* harmony export */   printNoDefaultExport: () => (/* binding */ printNoDefaultExport),\n/* harmony export */   printPreviewDraftsDeprecationWarning: () => (/* binding */ printPreviewDraftsDeprecationWarning),\n/* harmony export */   requestTag: () => (/* binding */ requestTag),\n/* harmony export */   requireDocumentId: () => (/* binding */ requireDocumentId),\n/* harmony export */   requireDocumentType: () => (/* binding */ requireDocumentType),\n/* harmony export */   resourceConfig: () => (/* binding */ resourceConfig),\n/* harmony export */   resourceGuard: () => (/* binding */ resourceGuard),\n/* harmony export */   validateApiPerspective: () => (/* binding */ validateApiPerspective),\n/* harmony export */   validateAssetType: () => (/* binding */ validateAssetType),\n/* harmony export */   validateDocumentId: () => (/* binding */ validateDocumentId),\n/* harmony export */   validateInsert: () => (/* binding */ validateInsert),\n/* harmony export */   validateObject: () => (/* binding */ validateObject),\n/* harmony export */   validateVersionIdMatch: () => (/* binding */ validateVersionIdMatch)\n/* harmony export */ });\nconst BASE_URL = \"https://www.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nconst VALID_ASSET_TYPES = [\"image\", \"file\"], VALID_INSERT_LOCATIONS = [\"before\", \"after\", \"replace\"], dataset = (name) => {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name))\n    throw new Error(\n      \"Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters\"\n    );\n}, projectId = (id) => {\n  if (!/^[-a-z0-9]+$/i.test(id))\n    throw new Error(\"`projectId` can only contain only a-z, 0-9 and dashes\");\n}, validateAssetType = (type) => {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1)\n    throw new Error(`Invalid asset type: ${type}. Must be one of ${VALID_ASSET_TYPES.join(\", \")}`);\n}, validateObject = (op, val) => {\n  if (val === null || typeof val != \"object\" || Array.isArray(val))\n    throw new Error(`${op}() takes an object of properties`);\n}, validateDocumentId = (op, id) => {\n  if (typeof id != \"string\" || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes(\"..\"))\n    throw new Error(`${op}(): \"${id}\" is not a valid document ID`);\n}, requireDocumentId = (op, doc) => {\n  if (!doc._id)\n    throw new Error(`${op}() requires that the document contains an ID (\"_id\" property)`);\n  validateDocumentId(op, doc._id);\n}, validateDocumentType = (op, type) => {\n  if (typeof type != \"string\")\n    throw new Error(`\\`${op}()\\`: \\`${type}\\` is not a valid document type`);\n}, requireDocumentType = (op, doc) => {\n  if (!doc._type)\n    throw new Error(`\\`${op}()\\` requires that the document contains a type (\\`_type\\` property)`);\n  validateDocumentType(op, doc._type);\n}, validateVersionIdMatch = (builtVersionId, document) => {\n  if (document._id && document._id !== builtVersionId)\n    throw new Error(\n      `The provided document ID (\\`${document._id}\\`) does not match the generated version ID (\\`${builtVersionId}\\`)`\n    );\n}, validateInsert = (at, selector, items) => {\n  const signature = \"insert(at, selector, items)\";\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    const valid = VALID_INSERT_LOCATIONS.map((loc) => `\"${loc}\"`).join(\", \");\n    throw new Error(`${signature} takes an \"at\"-argument which is one of: ${valid}`);\n  }\n  if (typeof selector != \"string\")\n    throw new Error(`${signature} takes a \"selector\"-argument which must be a string`);\n  if (!Array.isArray(items))\n    throw new Error(`${signature} takes an \"items\"-argument which must be an array`);\n}, hasDataset = (config) => {\n  if (!config.dataset)\n    throw new Error(\"`dataset` must be provided to perform queries\");\n  return config.dataset || \"\";\n}, requestTag = (tag) => {\n  if (typeof tag != \"string\" || !/^[a-z0-9._-]{1,75}$/i.test(tag))\n    throw new Error(\n      \"Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.\"\n    );\n  return tag;\n}, resourceConfig = (config) => {\n  if (!config[\"~experimental_resource\"])\n    throw new Error(\"`resource` must be provided to perform resource queries\");\n  const { type, id } = config[\"~experimental_resource\"];\n  switch (type) {\n    case \"dataset\": {\n      if (id.split(\".\").length !== 2)\n        throw new Error('Dataset resource ID must be in the format \"project.dataset\"');\n      return;\n    }\n    case \"dashboard\":\n    case \"media-library\":\n    case \"canvas\":\n      return;\n    default:\n      throw new Error(`Unsupported resource type: ${type.toString()}`);\n  }\n}, resourceGuard = (service, config) => {\n  if (config[\"~experimental_resource\"])\n    throw new Error(`\\`${service}\\` does not support resource-based operations`);\n};\nfunction once(fn) {\n  let didCall = !1, returnValue;\n  return (...args) => (didCall || (returnValue = fn(...args), didCall = !0), returnValue);\n}\nconst createWarningPrinter = (message) => (\n  // eslint-disable-next-line no-console\n  once((...args) => console.warn(message.join(\" \"), ...args))\n), printCdnAndWithCredentialsWarning = createWarningPrinter([\n  \"Because you set `withCredentials` to true, we will override your `useCdn`\",\n  \"setting to be false since (cookie-based) credentials are never set on the CDN\"\n]), printCdnWarning = createWarningPrinter([\n  \"Since you haven't set a value for `useCdn`, we will deliver content using our\",\n  \"global, edge-cached API-CDN. If you wish to have content delivered faster, set\",\n  \"`useCdn: false` to use the Live API. Note: You may incur higher costs using the live API.\"\n]), printCdnPreviewDraftsWarning = createWarningPrinter([\n  \"The Sanity client is configured with the `perspective` set to `drafts` or `previewDrafts`, which doesn't support the API-CDN.\",\n  \"The Live API will be used instead. Set `useCdn: false` in your configuration to hide this warning.\"\n]), printPreviewDraftsDeprecationWarning = createWarningPrinter([\n  \"The `previewDrafts` perspective has been renamed to  `drafts` and will be removed in a future API version\"\n]), printBrowserTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.\",\n  `See ${generateHelpUrl(\n    \"js-client-browser-token\"\n  )} for more information and how to hide this warning.`\n]), printCredentialedTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token, but also provided `withCredentials: true`.\",\n  \"This is no longer supported - only token will be used - remove `withCredentials: true`.\"\n]), printNoApiVersionSpecifiedWarning = createWarningPrinter([\n  \"Using the Sanity client without specifying an API version is deprecated.\",\n  `See ${generateHelpUrl(\"js-client-api-version\")}`\n]), printNoDefaultExport = createWarningPrinter([\n  \"The default export of @sanity/client has been deprecated. Use the named export `createClient` instead.\"\n]), defaultCdnHost = \"apicdn.sanity.io\", defaultConfig = {\n  apiHost: \"https://api.sanity.io\",\n  apiVersion: \"1\",\n  useProjectHostname: !0,\n  stega: { enabled: !1 }\n}, LOCALHOSTS = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"], isLocal = (host) => LOCALHOSTS.indexOf(host) !== -1;\nfunction validateApiVersion(apiVersion) {\n  if (apiVersion === \"1\" || apiVersion === \"X\")\n    return;\n  const apiDate = new Date(apiVersion);\n  if (!(/^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0))\n    throw new Error(\"Invalid API version string, expected `1` or date in format `YYYY-MM-DD`\");\n}\nfunction validateApiPerspective(perspective) {\n  if (Array.isArray(perspective) && perspective.length > 1 && perspective.includes(\"raw\"))\n    throw new TypeError(\n      'Invalid API perspective value: \"raw\". The raw-perspective can not be combined with other perspectives'\n    );\n}\nconst initConfig = (config, prevConfig) => {\n  const specifiedConfig = {\n    ...prevConfig,\n    ...config,\n    stega: {\n      ...typeof prevConfig.stega == \"boolean\" ? { enabled: prevConfig.stega } : prevConfig.stega || defaultConfig.stega,\n      ...typeof config.stega == \"boolean\" ? { enabled: config.stega } : config.stega || {}\n    }\n  };\n  specifiedConfig.apiVersion || printNoApiVersionSpecifiedWarning();\n  const newConfig = {\n    ...defaultConfig,\n    ...specifiedConfig\n  }, projectBased = newConfig.useProjectHostname && !newConfig[\"~experimental_resource\"];\n  if (typeof Promise > \"u\") {\n    const helpUrl = generateHelpUrl(\"js-client-promise-polyfill\");\n    throw new Error(`No native Promise-implementation found, polyfill needed - see ${helpUrl}`);\n  }\n  if (projectBased && !newConfig.projectId)\n    throw new Error(\"Configuration must contain `projectId`\");\n  if (newConfig[\"~experimental_resource\"] && resourceConfig(newConfig), typeof newConfig.perspective < \"u\" && validateApiPerspective(newConfig.perspective), \"encodeSourceMap\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMap' is not supported in '@sanity/client'. Did you mean 'stega.enabled'?\"\n    );\n  if (\"encodeSourceMapAtPath\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMapAtPath' is not supported in '@sanity/client'. Did you mean 'stega.filter'?\"\n    );\n  if (typeof newConfig.stega.enabled != \"boolean\")\n    throw new Error(`stega.enabled must be a boolean, received ${newConfig.stega.enabled}`);\n  if (newConfig.stega.enabled && newConfig.stega.studioUrl === void 0)\n    throw new Error(\"stega.studioUrl must be defined when stega.enabled is true\");\n  if (newConfig.stega.enabled && typeof newConfig.stega.studioUrl != \"string\" && typeof newConfig.stega.studioUrl != \"function\")\n    throw new Error(\n      `stega.studioUrl must be a string or a function, received ${newConfig.stega.studioUrl}`\n    );\n  const isBrowser = typeof window < \"u\" && window.location && window.location.hostname, isLocalhost = isBrowser && isLocal(window.location.hostname), hasToken = !!newConfig.token;\n  newConfig.withCredentials && hasToken && (printCredentialedTokenWarning(), newConfig.withCredentials = !1), isBrowser && isLocalhost && hasToken && newConfig.ignoreBrowserTokenWarning !== !0 ? printBrowserTokenWarning() : typeof newConfig.useCdn > \"u\" && printCdnWarning(), projectBased && projectId(newConfig.projectId), newConfig.dataset && dataset(newConfig.dataset), \"requestTagPrefix\" in newConfig && (newConfig.requestTagPrefix = newConfig.requestTagPrefix ? requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, \"\") : void 0), newConfig.apiVersion = `${newConfig.apiVersion}`.replace(/^v/, \"\"), newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost, newConfig.useCdn === !0 && newConfig.withCredentials && printCdnAndWithCredentialsWarning(), newConfig.useCdn = newConfig.useCdn !== !1 && !newConfig.withCredentials, validateApiVersion(newConfig.apiVersion);\n  const hostParts = newConfig.apiHost.split(\"://\", 2), protocol = hostParts[0], host = hostParts[1], cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n  return projectBased ? (newConfig.url = `${protocol}://${newConfig.projectId}.${host}/v${newConfig.apiVersion}`, newConfig.cdnUrl = `${protocol}://${newConfig.projectId}.${cdnHost}/v${newConfig.apiVersion}`) : (newConfig.url = `${newConfig.apiHost}/v${newConfig.apiVersion}`, newConfig.cdnUrl = newConfig.url), newConfig;\n};\n\n//# sourceMappingURL=config.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/_chunks-es/config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DRAFTS_FOLDER: () => (/* binding */ DRAFTS_FOLDER),\n/* harmony export */   VERSION_FOLDER: () => (/* binding */ VERSION_FOLDER),\n/* harmony export */   createEditUrl: () => (/* binding */ createEditUrl),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   getDraftId: () => (/* binding */ getDraftId),\n/* harmony export */   getPublishedId: () => (/* binding */ getPublishedId),\n/* harmony export */   getVersionFromId: () => (/* binding */ getVersionFromId),\n/* harmony export */   getVersionId: () => (/* binding */ getVersionId),\n/* harmony export */   isDraftId: () => (/* binding */ isDraftId),\n/* harmony export */   isPublishedId: () => (/* binding */ isPublishedId),\n/* harmony export */   isVersionId: () => (/* binding */ isVersionId),\n/* harmony export */   jsonPath: () => (/* binding */ jsonPath),\n/* harmony export */   jsonPathToStudioPath: () => (/* binding */ jsonPathToStudioPath),\n/* harmony export */   parseJsonPath: () => (/* binding */ parseJsonPath),\n/* harmony export */   reKeySegment: () => (/* binding */ reKeySegment),\n/* harmony export */   resolveEditInfo: () => (/* binding */ resolveEditInfo),\n/* harmony export */   resolveMapping: () => (/* binding */ resolveMapping),\n/* harmony export */   resolveStudioBaseRoute: () => (/* binding */ resolveStudioBaseRoute),\n/* harmony export */   studioPath: () => (/* binding */ studioPath),\n/* harmony export */   studioPathToJsonPath: () => (/* binding */ studioPathToJsonPath),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   walkMap: () => (/* binding */ walkMap)\n/* harmony export */ });\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, reIndexTuple = /^\\d*:\\d*$/;\nfunction isIndexSegment(segment) {\n  return typeof segment == \"number\" || typeof segment == \"string\" && /^\\[\\d+\\]$/.test(segment);\n}\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction isIndexTuple(segment) {\n  if (typeof segment == \"string\" && reIndexTuple.test(segment))\n    return !0;\n  if (!Array.isArray(segment) || segment.length !== 2)\n    return !1;\n  const [from, to] = segment;\n  return (typeof from == \"number\" || from === \"\") && (typeof to == \"number\" || to === \"\");\n}\nfunction get(obj, path, defaultVal) {\n  const select = typeof path == \"string\" ? fromString(path) : path;\n  if (!Array.isArray(select))\n    throw new Error(\"Path must be an array or a string\");\n  let acc = obj;\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i];\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc[segment];\n    }\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc.find((item) => item._key === segment._key);\n    }\n    if (typeof segment == \"string\" && (acc = typeof acc == \"object\" && acc !== null ? acc[segment] : void 0), typeof acc > \"u\")\n      return defaultVal;\n  }\n  return acc;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nfunction fromString(path) {\n  if (typeof path != \"string\")\n    throw new Error(\"Path is not a string\");\n  const segments = path.match(rePropName);\n  if (!segments)\n    throw new Error(\"Invalid path string\");\n  return segments.map(parsePathSegment);\n}\nfunction parsePathSegment(segment) {\n  return isIndexSegment(segment) ? parseIndexSegment(segment) : isKeySegment(segment) ? parseKeySegment(segment) : isIndexTuple(segment) ? parseIndexTupleSegment(segment) : segment;\n}\nfunction parseIndexSegment(segment) {\n  return Number(segment.replace(/[^\\d]/g, \"\"));\n}\nfunction parseKeySegment(segment) {\n  return { _key: segment.match(reKeySegment)[1] };\n}\nfunction parseIndexTupleSegment(segment) {\n  const [from, to] = segment.split(\":\").map((seg) => seg === \"\" ? seg : Number(seg));\n  return [from, to];\n}\nvar studioPath = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  fromString,\n  get,\n  isIndexSegment,\n  isIndexTuple,\n  isKeySegment,\n  reKeySegment,\n  toString\n});\nconst DRAFTS_FOLDER = \"drafts\", VERSION_FOLDER = \"versions\", PATH_SEPARATOR = \".\", DRAFTS_PREFIX = `${DRAFTS_FOLDER}${PATH_SEPARATOR}`, VERSION_PREFIX = `${VERSION_FOLDER}${PATH_SEPARATOR}`;\nfunction isDraftId(id) {\n  return id.startsWith(DRAFTS_PREFIX);\n}\nfunction isVersionId(id) {\n  return id.startsWith(VERSION_PREFIX);\n}\nfunction isPublishedId(id) {\n  return !isDraftId(id) && !isVersionId(id);\n}\nfunction getDraftId(id) {\n  if (isVersionId(id)) {\n    const publishedId = getPublishedId(id);\n    return DRAFTS_PREFIX + publishedId;\n  }\n  return isDraftId(id) ? id : DRAFTS_PREFIX + id;\n}\nfunction getVersionId(id, version) {\n  if (version === \"drafts\" || version === \"published\")\n    throw new Error('Version can not be \"published\" or \"drafts\"');\n  return `${VERSION_PREFIX}${version}${PATH_SEPARATOR}${getPublishedId(id)}`;\n}\nfunction getVersionFromId(id) {\n  if (!isVersionId(id)) return;\n  const [_versionPrefix, versionId, ..._publishedId] = id.split(PATH_SEPARATOR);\n  return versionId;\n}\nfunction getPublishedId(id) {\n  return isVersionId(id) ? id.split(PATH_SEPARATOR).slice(2).join(PATH_SEPARATOR) : isDraftId(id) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction studioPathToJsonPath(path) {\n  return (typeof path == \"string\" ? fromString(path) : path).map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (Array.isArray(segment))\n      throw new Error(`IndexTuple segments aren't supported:${JSON.stringify(segment)}`);\n    if (isContentSourceMapParsedPathKeyedSegment(segment))\n      return segment;\n    if (segment._key)\n      return { _key: segment._key, _index: -1 };\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction isContentSourceMapParsedPathKeyedSegment(segment) {\n  return typeof segment == \"object\" && \"_key\" in segment && \"_index\" in segment;\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  if (workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), isPublishedId(_id))\n    searchParams.set(\"perspective\", \"published\");\n  else if (isVersionId(_id)) {\n    const versionId = getVersionFromId(_id);\n    searchParams.set(\"perspective\", versionId);\n  }\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveEditInfo(options) {\n  const { resultSourceMap: csm, resultPath } = options, { mapping, pathSuffix } = resolveMapping(resultPath, csm) || {};\n  if (!mapping || mapping.source.type === \"literal\" || mapping.source.type === \"unknown\")\n    return;\n  const sourceDoc = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path];\n  if (sourceDoc && sourcePath) {\n    const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n      typeof options.studioUrl == \"function\" ? options.studioUrl(sourceDoc) : options.studioUrl\n    );\n    if (!baseUrl) return;\n    const { _id, _type, _projectId, _dataset } = sourceDoc;\n    return {\n      baseUrl,\n      workspace,\n      tool,\n      id: _id,\n      type: _type,\n      path: parseJsonPath(sourcePath + pathSuffix),\n      projectId: _projectId,\n      dataset: _dataset\n    };\n  }\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\n\n//# sourceMappingURL=resolveEditInfo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ C),\n/* harmony export */   stegaClean: () => (/* binding */ stegaClean),\n/* harmony export */   vercelStegaCleanAll: () => (/* binding */ vercelStegaCleanAll)\n/* harmony export */ });\nvar s = { 0: 8203, 1: 8204, 2: 8205, 3: 8290, 4: 8291, 5: 8288, 6: 65279, 7: 8289, 8: 119155, 9: 119156, a: 119157, b: 119158, c: 119159, d: 119160, e: 119161, f: 119162 }, c = { 0: 8203, 1: 8204, 2: 8205, 3: 65279 }, u = new Array(4).fill(String.fromCodePoint(c[0])).join(\"\");\nfunction E(t) {\n  let e = JSON.stringify(t);\n  return `${u}${Array.from(e).map((r) => {\n    let n = r.charCodeAt(0);\n    if (n > 255) throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);\n    return Array.from(n.toString(4).padStart(4, \"0\")).map((o) => String.fromCodePoint(c[o])).join(\"\");\n  }).join(\"\")}`;\n}\nfunction I(t) {\n  return !Number.isNaN(Number(t)) || /[a-z]/i.test(t) && !/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t) ? !1 : !!Date.parse(t);\n}\nfunction T(t) {\n  try {\n    new URL(t, t.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction C(t, e, r = \"auto\") {\n  return r === !0 || r === \"auto\" && (I(t) || T(t)) ? t : `${t}${E(e)}`;\n}\nObject.fromEntries(Object.entries(c).map((t) => t.reverse()));\nObject.fromEntries(Object.entries(s).map((t) => t.reverse()));\nvar S = `${Object.values(s).map((t) => `\\\\u{${t.toString(16)}}`).join(\"\")}`, f = new RegExp(`[${S}]{4,}`, \"gu\");\nfunction _(t) {\n  var e;\n  return { cleaned: t.replace(f, \"\"), encoded: ((e = t.match(f)) == null ? void 0 : e[0]) || \"\" };\n}\nfunction O(t) {\n  return t && JSON.parse(_(JSON.stringify(t)).cleaned);\n}\nfunction stegaClean(result) {\n  return O(result);\n}\nconst vercelStegaCleanAll = stegaClean;\n\n//# sourceMappingURL=stegaClean.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9fY2h1bmtzLWVzL3N0ZWdhQ2xlYW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsVUFBVSxpS0FBaUssUUFBUSxxQ0FBcUM7QUFDeE47QUFDQTtBQUNBLFlBQVksRUFBRSxFQUFFO0FBQ2hCO0FBQ0Esb0dBQW9HLEdBQUcsZUFBZSxHQUFHLEdBQUcsRUFBRTtBQUM5SDtBQUNBLEdBQUcsV0FBVztBQUNkO0FBQ0E7QUFDQSw0RUFBNEUsRUFBRSxxQkFBcUIsSUFBSTtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELEVBQUUsRUFBRSxLQUFLO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUNBQWlDLEVBQUUsZ0JBQWdCLFlBQVksc0JBQXNCLEVBQUUsRUFBRSxHQUFHO0FBQ3ZHO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9fY2h1bmtzLWVzL3N0ZWdhQ2xlYW4uanM/NWY1YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcyA9IHsgMDogODIwMywgMTogODIwNCwgMjogODIwNSwgMzogODI5MCwgNDogODI5MSwgNTogODI4OCwgNjogNjUyNzksIDc6IDgyODksIDg6IDExOTE1NSwgOTogMTE5MTU2LCBhOiAxMTkxNTcsIGI6IDExOTE1OCwgYzogMTE5MTU5LCBkOiAxMTkxNjAsIGU6IDExOTE2MSwgZjogMTE5MTYyIH0sIGMgPSB7IDA6IDgyMDMsIDE6IDgyMDQsIDI6IDgyMDUsIDM6IDY1Mjc5IH0sIHUgPSBuZXcgQXJyYXkoNCkuZmlsbChTdHJpbmcuZnJvbUNvZGVQb2ludChjWzBdKSkuam9pbihcIlwiKTtcbmZ1bmN0aW9uIEUodCkge1xuICBsZXQgZSA9IEpTT04uc3RyaW5naWZ5KHQpO1xuICByZXR1cm4gYCR7dX0ke0FycmF5LmZyb20oZSkubWFwKChyKSA9PiB7XG4gICAgbGV0IG4gPSByLmNoYXJDb2RlQXQoMCk7XG4gICAgaWYgKG4gPiAyNTUpIHRocm93IG5ldyBFcnJvcihgT25seSBBU0NJSSBlZGl0IGluZm8gY2FuIGJlIGVuY29kZWQuIEVycm9yIGF0dGVtcHRpbmcgdG8gZW5jb2RlICR7ZX0gb24gY2hhcmFjdGVyICR7cn0gKCR7bn0pYCk7XG4gICAgcmV0dXJuIEFycmF5LmZyb20obi50b1N0cmluZyg0KS5wYWRTdGFydCg0LCBcIjBcIikpLm1hcCgobykgPT4gU3RyaW5nLmZyb21Db2RlUG9pbnQoY1tvXSkpLmpvaW4oXCJcIik7XG4gIH0pLmpvaW4oXCJcIil9YDtcbn1cbmZ1bmN0aW9uIEkodCkge1xuICByZXR1cm4gIU51bWJlci5pc05hTihOdW1iZXIodCkpIHx8IC9bYS16XS9pLnRlc3QodCkgJiYgIS9cXGQrKD86Wy06XFwvXVxcZCspezJ9KD86VFxcZCsoPzpbLTpcXC9dXFxkKyl7MSwyfShcXC5cXGQrKT9aPyk/Ly50ZXN0KHQpID8gITEgOiAhIURhdGUucGFyc2UodCk7XG59XG5mdW5jdGlvbiBUKHQpIHtcbiAgdHJ5IHtcbiAgICBuZXcgVVJMKHQsIHQuc3RhcnRzV2l0aChcIi9cIikgPyBcImh0dHBzOi8vYWNtZS5jb21cIiA6IHZvaWQgMCk7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiAhMTtcbiAgfVxuICByZXR1cm4gITA7XG59XG5mdW5jdGlvbiBDKHQsIGUsIHIgPSBcImF1dG9cIikge1xuICByZXR1cm4gciA9PT0gITAgfHwgciA9PT0gXCJhdXRvXCIgJiYgKEkodCkgfHwgVCh0KSkgPyB0IDogYCR7dH0ke0UoZSl9YDtcbn1cbk9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhjKS5tYXAoKHQpID0+IHQucmV2ZXJzZSgpKSk7XG5PYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMocykubWFwKCh0KSA9PiB0LnJldmVyc2UoKSkpO1xudmFyIFMgPSBgJHtPYmplY3QudmFsdWVzKHMpLm1hcCgodCkgPT4gYFxcXFx1eyR7dC50b1N0cmluZygxNil9fWApLmpvaW4oXCJcIil9YCwgZiA9IG5ldyBSZWdFeHAoYFske1N9XXs0LH1gLCBcImd1XCIpO1xuZnVuY3Rpb24gXyh0KSB7XG4gIHZhciBlO1xuICByZXR1cm4geyBjbGVhbmVkOiB0LnJlcGxhY2UoZiwgXCJcIiksIGVuY29kZWQ6ICgoZSA9IHQubWF0Y2goZikpID09IG51bGwgPyB2b2lkIDAgOiBlWzBdKSB8fCBcIlwiIH07XG59XG5mdW5jdGlvbiBPKHQpIHtcbiAgcmV0dXJuIHQgJiYgSlNPTi5wYXJzZShfKEpTT04uc3RyaW5naWZ5KHQpKS5jbGVhbmVkKTtcbn1cbmZ1bmN0aW9uIHN0ZWdhQ2xlYW4ocmVzdWx0KSB7XG4gIHJldHVybiBPKHJlc3VsdCk7XG59XG5jb25zdCB2ZXJjZWxTdGVnYUNsZWFuQWxsID0gc3RlZ2FDbGVhbjtcbmV4cG9ydCB7XG4gIEMsXG4gIHN0ZWdhQ2xlYW4sXG4gIHZlcmNlbFN0ZWdhQ2xlYW5BbGxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGVnYUNsZWFuLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeIntoResult: () => (/* binding */ encodeIntoResult),\n/* harmony export */   stegaEncodeSourceMap: () => (/* binding */ stegaEncodeSourceMap),\n/* harmony export */   stegaEncodeSourceMap$1: () => (/* binding */ stegaEncodeSourceMap$1)\n/* harmony export */ });\n/* harmony import */ var _stegaClean_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stegaClean.js */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/;\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction encodeIntoResult(result, csm, encoder) {\n  return walkMap(result, (value, path) => {\n    if (typeof value != \"string\")\n      return value;\n    const resolveMappingResult = resolveMapping(path, csm);\n    if (!resolveMappingResult)\n      return value;\n    const { mapping, matchedPath } = resolveMappingResult;\n    if (mapping.type !== \"value\" || mapping.source.type !== \"documentValue\")\n      return value;\n    const sourceDocument = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path], matchPathSegments = parseJsonPath(matchedPath), fullSourceSegments = parseJsonPath(sourcePath).concat(path.slice(matchPathSegments.length));\n    return encoder({\n      sourcePath: fullSourceSegments,\n      sourceDocument,\n      resultPath: path,\n      value\n    });\n  });\n}\nconst DRAFTS_FOLDER = \"drafts\", VERSION_FOLDER = \"versions\", PATH_SEPARATOR = \".\", DRAFTS_PREFIX = `${DRAFTS_FOLDER}${PATH_SEPARATOR}`, VERSION_PREFIX = `${VERSION_FOLDER}${PATH_SEPARATOR}`;\nfunction isDraftId(id) {\n  return id.startsWith(DRAFTS_PREFIX);\n}\nfunction isVersionId(id) {\n  return id.startsWith(VERSION_PREFIX);\n}\nfunction isPublishedId(id) {\n  return !isDraftId(id) && !isVersionId(id);\n}\nfunction getVersionFromId(id) {\n  if (!isVersionId(id)) return;\n  const [_versionPrefix, versionId, ..._publishedId] = id.split(PATH_SEPARATOR);\n  return versionId;\n}\nfunction getPublishedId(id) {\n  return isVersionId(id) ? id.split(PATH_SEPARATOR).slice(2).join(PATH_SEPARATOR) : isDraftId(id) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  if (workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), isPublishedId(_id))\n    searchParams.set(\"perspective\", \"published\");\n  else if (isVersionId(_id)) {\n    const versionId = getVersionFromId(_id);\n    searchParams.set(\"perspective\", versionId);\n  }\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\nconst filterDefault = ({ sourcePath, resultPath, value }) => {\n  if (isValidDate(value) || isValidURL(value))\n    return !1;\n  const endPath = sourcePath.at(-1);\n  return !(sourcePath.at(-2) === \"slug\" && endPath === \"current\" || typeof endPath == \"string\" && (endPath.startsWith(\"_\") || endPath.endsWith(\"Id\")) || sourcePath.some(\n    (path) => path === \"meta\" || path === \"metadata\" || path === \"openGraph\" || path === \"seo\"\n  ) || hasTypeLike(sourcePath) || hasTypeLike(resultPath) || typeof endPath == \"string\" && denylist.has(endPath));\n}, denylist = /* @__PURE__ */ new Set([\n  \"color\",\n  \"colour\",\n  \"currency\",\n  \"email\",\n  \"format\",\n  \"gid\",\n  \"hex\",\n  \"href\",\n  \"hsl\",\n  \"hsla\",\n  \"icon\",\n  \"id\",\n  \"index\",\n  \"key\",\n  \"language\",\n  \"layout\",\n  \"link\",\n  \"linkAction\",\n  \"locale\",\n  \"lqip\",\n  \"page\",\n  \"path\",\n  \"ref\",\n  \"rgb\",\n  \"rgba\",\n  \"route\",\n  \"secret\",\n  \"slug\",\n  \"status\",\n  \"tag\",\n  \"template\",\n  \"theme\",\n  \"type\",\n  \"textTheme\",\n  \"unit\",\n  \"url\",\n  \"username\",\n  \"variant\",\n  \"website\"\n]);\nfunction isValidDate(dateString) {\n  return /^\\d{4}-\\d{2}-\\d{2}/.test(dateString) ? !!Date.parse(dateString) : !1;\n}\nfunction isValidURL(url) {\n  try {\n    new URL(url, url.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction hasTypeLike(path) {\n  return path.some((segment) => typeof segment == \"string\" && segment.match(/type/i) !== null);\n}\nconst TRUNCATE_LENGTH = 20;\nfunction stegaEncodeSourceMap(result, resultSourceMap, config) {\n  const { filter, logger, enabled } = config;\n  if (!enabled) {\n    const msg = \"config.enabled must be true, don't call this function otherwise\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  if (!resultSourceMap)\n    return logger?.error?.(\"[@sanity/client]: Missing Content Source Map from response body\", {\n      result,\n      resultSourceMap,\n      config\n    }), result;\n  if (!config.studioUrl) {\n    const msg = \"config.studioUrl must be defined\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  const report = {\n    encoded: [],\n    skipped: []\n  }, resultWithStega = encodeIntoResult(\n    result,\n    resultSourceMap,\n    ({ sourcePath, sourceDocument, resultPath, value }) => {\n      if ((typeof filter == \"function\" ? filter({ sourcePath, resultPath, filterDefault, sourceDocument, value }) : filterDefault({ sourcePath, resultPath, value })) === !1)\n        return logger && report.skipped.push({\n          path: prettyPathForLogging(sourcePath),\n          value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n          length: value.length\n        }), value;\n      logger && report.encoded.push({\n        path: prettyPathForLogging(sourcePath),\n        value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n        length: value.length\n      });\n      const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n        typeof config.studioUrl == \"function\" ? config.studioUrl(sourceDocument) : config.studioUrl\n      );\n      if (!baseUrl) return value;\n      const { _id: id, _type: type, _projectId: projectId, _dataset: dataset } = sourceDocument;\n      return (0,_stegaClean_js__WEBPACK_IMPORTED_MODULE_0__.C)(\n        value,\n        {\n          origin: \"sanity.io\",\n          href: createEditUrl({\n            baseUrl,\n            workspace,\n            tool,\n            id,\n            type,\n            path: sourcePath,\n            ...!config.omitCrossDatasetReferenceData && { dataset, projectId }\n          })\n        },\n        // We use custom logic to determine if we should skip encoding\n        !1\n      );\n    }\n  );\n  if (logger) {\n    const isSkipping = report.skipped.length, isEncoding = report.encoded.length;\n    if ((isSkipping || isEncoding) && ((logger?.groupCollapsed || logger.log)?.(\"[@sanity/client]: Encoding source map into result\"), logger.log?.(\n      `[@sanity/client]: Paths encoded: ${report.encoded.length}, skipped: ${report.skipped.length}`\n    )), report.encoded.length > 0 && (logger?.log?.(\"[@sanity/client]: Table of encoded paths\"), (logger?.table || logger.log)?.(report.encoded)), report.skipped.length > 0) {\n      const skipped = /* @__PURE__ */ new Set();\n      for (const { path } of report.skipped)\n        skipped.add(path.replace(reKeySegment, \"0\").replace(/\\[\\d+\\]/g, \"[]\"));\n      logger?.log?.(\"[@sanity/client]: List of skipped paths\", [...skipped.values()]);\n    }\n    (isSkipping || isEncoding) && logger?.groupEnd?.();\n  }\n  return resultWithStega;\n}\nfunction prettyPathForLogging(path) {\n  return toString(jsonPathToStudioPath(path));\n}\nvar stegaEncodeSourceMap$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  stegaEncodeSourceMap\n});\n\n//# sourceMappingURL=stegaEncodeSourceMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/client/dist/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@sanity/client/dist/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePatch: () => (/* binding */ BasePatch),\n/* harmony export */   BaseTransaction: () => (/* binding */ BaseTransaction),\n/* harmony export */   ChannelError: () => (/* binding */ ChannelError),\n/* harmony export */   ClientError: () => (/* binding */ ClientError),\n/* harmony export */   ConnectionFailedError: () => (/* binding */ ConnectionFailedError),\n/* harmony export */   CorsOriginError: () => (/* binding */ CorsOriginError),\n/* harmony export */   DisconnectError: () => (/* binding */ DisconnectError),\n/* harmony export */   MessageError: () => (/* binding */ MessageError),\n/* harmony export */   MessageParseError: () => (/* binding */ MessageParseError),\n/* harmony export */   ObservablePatch: () => (/* binding */ ObservablePatch),\n/* harmony export */   ObservableSanityClient: () => (/* binding */ ObservableSanityClient),\n/* harmony export */   ObservableTransaction: () => (/* binding */ ObservableTransaction),\n/* harmony export */   Patch: () => (/* binding */ Patch),\n/* harmony export */   SanityClient: () => (/* binding */ SanityClient),\n/* harmony export */   ServerError: () => (/* binding */ ServerError),\n/* harmony export */   Transaction: () => (/* binding */ Transaction),\n/* harmony export */   connectEventSource: () => (/* binding */ connectEventSource),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   \"default\": () => (/* binding */ deprecatedCreateClient),\n/* harmony export */   requester: () => (/* binding */ requester),\n/* harmony export */   unstable__adapter: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_26__.a),\n/* harmony export */   unstable__environment: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_0__.environment),\n/* harmony export */   validateApiPerspective: () => (/* reexport safe */ _chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.validateApiPerspective)\n/* harmony export */ });\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-it */ \"(ssr)/./node_modules/get-it/dist/index.js\");\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! get-it */ \"(ssr)/./node_modules/get-it/dist/_chunks-es/node-request.js\");\n/* harmony import */ var get_it_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! get-it/middleware */ \"(ssr)/./node_modules/get-it/dist/middleware.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/util/isObservable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/catchError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/concat.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/timer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/throwError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/tap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/finalize.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/share.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/merge.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/firstValueFrom.js\");\n/* harmony import */ var _chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./_chunks-es/stegaClean.js */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ \"(ssr)/./node_modules/rxjs/dist/cjs/operators/index.js\");\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sanity/client/csm */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! nanoid */ \"(ssr)/./node_modules/nanoid/index.js\");\n/* harmony import */ var _chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_chunks-es/config.js */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/config.js\");\n\n\n\n\n\n\n\n\n\nclass ClientError extends Error {\n  response;\n  statusCode = 400;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nclass ServerError extends Error {\n  response;\n  statusCode = 500;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nfunction extractErrorProps(res) {\n  const body = res.body, props = {\n    response: res,\n    statusCode: res.statusCode,\n    responseBody: stringifyBody(body, res),\n    message: \"\",\n    details: void 0\n  };\n  if (body.error && body.message)\n    return props.message = `${body.error} - ${body.message}`, props;\n  if (isMutationError(body) || isActionError(body)) {\n    const allItems = body.error.items || [], items = allItems.slice(0, 5).map((item) => item.error?.description).filter(Boolean);\n    let itemsStr = items.length ? `:\n- ${items.join(`\n- `)}` : \"\";\n    return allItems.length > 5 && (itemsStr += `\n...and ${allItems.length - 5} more`), props.message = `${body.error.description}${itemsStr}`, props.details = body.error, props;\n  }\n  return body.error && body.error.description ? (props.message = body.error.description, props.details = body.error, props) : (props.message = body.error || body.message || httpErrorMessage(res), props);\n}\nfunction isMutationError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"mutationError\" && typeof body.error.description == \"string\";\n}\nfunction isActionError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"actionError\" && typeof body.error.description == \"string\";\n}\nfunction isPlainObject(obj) {\n  return typeof obj == \"object\" && obj !== null && !Array.isArray(obj);\n}\nfunction httpErrorMessage(res) {\n  const statusMessage = res.statusMessage ? ` ${res.statusMessage}` : \"\";\n  return `${res.method}-request to ${res.url} resulted in HTTP ${res.statusCode}${statusMessage}`;\n}\nfunction stringifyBody(body, res) {\n  return (res.headers[\"content-type\"] || \"\").toLowerCase().indexOf(\"application/json\") !== -1 ? JSON.stringify(body, null, 2) : body;\n}\nclass CorsOriginError extends Error {\n  projectId;\n  addOriginUrl;\n  constructor({ projectId }) {\n    super(\"CorsOriginError\"), this.name = \"CorsOriginError\", this.projectId = projectId;\n    const url = new URL(`https://sanity.io/manage/project/${projectId}/api`);\n    if (typeof location < \"u\") {\n      const { origin } = location;\n      url.searchParams.set(\"cors\", \"add\"), url.searchParams.set(\"origin\", origin), this.addOriginUrl = url, this.message = `The current origin is not allowed to connect to the Live Content API. Add it here: ${url}`;\n    } else\n      this.message = `The current origin is not allowed to connect to the Live Content API. Change your configuration here: ${url}`;\n  }\n}\nconst httpError = {\n  onResponse: (res) => {\n    if (res.statusCode >= 500)\n      throw new ServerError(res);\n    if (res.statusCode >= 400)\n      throw new ClientError(res);\n    return res;\n  }\n};\nfunction printWarnings() {\n  const seen = {};\n  return {\n    onResponse: (res) => {\n      const warn = res.headers[\"x-sanity-warning\"], warnings = Array.isArray(warn) ? warn : [warn];\n      for (const msg of warnings)\n        !msg || seen[msg] || (seen[msg] = !0, console.warn(msg));\n      return res;\n    }\n  };\n}\nfunction defineHttpRequest(envMiddleware) {\n  return (0,get_it__WEBPACK_IMPORTED_MODULE_0__.getIt)([\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry)({ shouldRetry }),\n    ...envMiddleware,\n    printWarnings(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonRequest)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonResponse)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.progress)(),\n    httpError,\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.observable)({ implementation: rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable })\n  ]);\n}\nfunction shouldRetry(err, attempt, options) {\n  if (options.maxRetries === 0) return !1;\n  const isSafe = options.method === \"GET\" || options.method === \"HEAD\", isQuery2 = (options.uri || options.url).startsWith(\"/data/query\"), isRetriableResponse = err.response && (err.response.statusCode === 429 || err.response.statusCode === 502 || err.response.statusCode === 503);\n  return (isSafe || isQuery2) && isRetriableResponse ? !0 : get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry.shouldRetry(err, attempt, options);\n}\nclass ConnectionFailedError extends Error {\n  name = \"ConnectionFailedError\";\n}\nclass DisconnectError extends Error {\n  name = \"DisconnectError\";\n  reason;\n  constructor(message, reason, options = {}) {\n    super(message, options), this.reason = reason;\n  }\n}\nclass ChannelError extends Error {\n  name = \"ChannelError\";\n  data;\n  constructor(message, data) {\n    super(message), this.data = data;\n  }\n}\nclass MessageError extends Error {\n  name = \"MessageError\";\n  data;\n  constructor(message, data, options = {}) {\n    super(message, options), this.data = data;\n  }\n}\nclass MessageParseError extends Error {\n  name = \"MessageParseError\";\n}\nconst REQUIRED_EVENTS = [\"channelError\", \"disconnect\"];\nfunction connectEventSource(initEventSource, events) {\n  return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.defer)(() => {\n    const es = initEventSource();\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.isObservable)(es) ? es : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(es);\n  }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)((es) => connectWithESInstance(es, events)));\n}\nfunction connectWithESInstance(es, events) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const emitOpen = events.includes(\"open\"), emitReconnect = events.includes(\"reconnect\");\n    function onError(evt) {\n      if (\"data\" in evt) {\n        const [parseError, event] = parseEvent(evt);\n        observer.error(\n          parseError ? new MessageParseError(\"Unable to parse EventSource error message\", { cause: event }) : new MessageError((event?.data).message, event)\n        );\n        return;\n      }\n      es.readyState === es.CLOSED ? observer.error(new ConnectionFailedError(\"EventSource connection failed\")) : emitReconnect && observer.next({ type: \"reconnect\" });\n    }\n    function onOpen() {\n      observer.next({ type: \"open\" });\n    }\n    function onMessage(message) {\n      const [parseError, event] = parseEvent(message);\n      if (parseError) {\n        observer.error(\n          new MessageParseError(\"Unable to parse EventSource message\", { cause: parseError })\n        );\n        return;\n      }\n      if (message.type === \"channelError\") {\n        observer.error(new ChannelError(extractErrorMessage(event?.data), event.data));\n        return;\n      }\n      if (message.type === \"disconnect\") {\n        observer.error(\n          new DisconnectError(\n            `Server disconnected client: ${event.data?.reason || \"unknown error\"}`\n          )\n        );\n        return;\n      }\n      observer.next({\n        type: message.type,\n        id: message.lastEventId,\n        ...event.data ? { data: event.data } : {}\n      });\n    }\n    es.addEventListener(\"error\", onError), emitOpen && es.addEventListener(\"open\", onOpen);\n    const cleanedEvents = [.../* @__PURE__ */ new Set([...REQUIRED_EVENTS, ...events])].filter((type) => type !== \"error\" && type !== \"open\" && type !== \"reconnect\");\n    return cleanedEvents.forEach((type) => es.addEventListener(type, onMessage)), () => {\n      es.removeEventListener(\"error\", onError), emitOpen && es.removeEventListener(\"open\", onOpen), cleanedEvents.forEach((type) => es.removeEventListener(type, onMessage)), es.close();\n    };\n  });\n}\nfunction parseEvent(message) {\n  try {\n    const data = typeof message.data == \"string\" && JSON.parse(message.data);\n    return [\n      null,\n      {\n        type: message.type,\n        id: message.lastEventId,\n        ...isEmptyObject(data) ? {} : { data }\n      }\n    ];\n  } catch (err) {\n    return [err, null];\n  }\n}\nfunction extractErrorMessage(err) {\n  return err.error ? err.error.description ? err.error.description : typeof err.error == \"string\" ? err.error : JSON.stringify(err.error, null, 2) : err.message || \"Unknown listener error\";\n}\nfunction isEmptyObject(data) {\n  for (const _ in data)\n    return !1;\n  return !0;\n}\nfunction getSelection(sel) {\n  if (typeof sel == \"string\")\n    return { id: sel };\n  if (Array.isArray(sel))\n    return { query: \"*[_id in $ids]\", params: { ids: sel } };\n  if (typeof sel == \"object\" && sel !== null && \"query\" in sel && typeof sel.query == \"string\")\n    return \"params\" in sel && typeof sel.params == \"object\" && sel.params !== null ? { query: sel.query, params: sel.params } : { query: sel.query };\n  const selectionOpts = [\n    \"* Document ID (<docId>)\",\n    \"* Array of document IDs\",\n    \"* Object containing `query`\"\n  ].join(`\n`);\n  throw new Error(`Unknown selection - must be one of:\n\n${selectionOpts}`);\n}\nclass BasePatch {\n  selection;\n  operations;\n  constructor(selection, operations = {}) {\n    this.selection = selection, this.operations = operations;\n  }\n  /**\n   * Sets the given attributes to the document. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  set(attrs) {\n    return this._assign(\"set\", attrs);\n  }\n  /**\n   * Sets the given attributes to the document if they are not currently set. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  setIfMissing(attrs) {\n    return this._assign(\"setIfMissing\", attrs);\n  }\n  /**\n   * Performs a \"diff-match-patch\" operation on the string attributes provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to perform operation on. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"dmp\"\\}\n   */\n  diffMatchPatch(attrs) {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.validateObject)(\"diffMatchPatch\", attrs), this._assign(\"diffMatchPatch\", attrs);\n  }\n  /**\n   * Unsets the attribute paths provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attribute paths to unset.\n   */\n  unset(attrs) {\n    if (!Array.isArray(attrs))\n      throw new Error(\"unset(attrs) takes an array of attributes to unset, non-array given\");\n    return this.operations = Object.assign({}, this.operations, { unset: attrs }), this;\n  }\n  /**\n   * Increment a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to increment, values representing the number to increment by.\n   */\n  inc(attrs) {\n    return this._assign(\"inc\", attrs);\n  }\n  /**\n   * Decrement a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to decrement, values representing the number to decrement by.\n   */\n  dec(attrs) {\n    return this._assign(\"dec\", attrs);\n  }\n  /**\n   * Provides methods for modifying arrays, by inserting, appending and replacing elements via a JSONPath expression.\n   *\n   * @param at - Location to insert at, relative to the given selector, or 'replace' the matched path\n   * @param selector - JSONPath expression, eg `comments[-1]` or `blocks[_key==\"abc123\"]`\n   * @param items - Array of items to insert/replace\n   */\n  insert(at, selector, items) {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.validateInsert)(at, selector, items), this._assign(\"insert\", { [at]: selector, items });\n  }\n  /**\n   * Append the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to append to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to append to the array\n   */\n  append(selector, items) {\n    return this.insert(\"after\", `${selector}[-1]`, items);\n  }\n  /**\n   * Prepend the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to prepend to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to prepend to the array\n   */\n  prepend(selector, items) {\n    return this.insert(\"before\", `${selector}[0]`, items);\n  }\n  /**\n   * Change the contents of an array by removing existing elements and/or adding new elements.\n   *\n   * @param selector - Attribute or JSONPath expression for array\n   * @param start - Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.x\n   * @param deleteCount - An integer indicating the number of old array elements to remove.\n   * @param items - The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.\n   */\n  splice(selector, start, deleteCount, items) {\n    const delAll = typeof deleteCount > \"u\" || deleteCount === -1, startIndex = start < 0 ? start - 1 : start, delCount = delAll ? -1 : Math.max(0, start + deleteCount), delRange = startIndex < 0 && delCount >= 0 ? \"\" : delCount, rangeSelector = `${selector}[${startIndex}:${delRange}]`;\n    return this.insert(\"replace\", rangeSelector, items || []);\n  }\n  /**\n   * Adds a revision clause, preventing the document from being patched if the `_rev` property does not match the given value\n   *\n   * @param rev - Revision to lock the patch to\n   */\n  ifRevisionId(rev) {\n    return this.operations.ifRevisionID = rev, this;\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  serialize() {\n    return { ...getSelection(this.selection), ...this.operations };\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the patch of all operations\n   */\n  reset() {\n    return this.operations = {}, this;\n  }\n  _assign(op, props, merge2 = !0) {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.validateObject)(op, props), this.operations = Object.assign({}, this.operations, {\n      [op]: Object.assign({}, merge2 && this.operations[op] || {}, props)\n    }), this;\n  }\n  _set(op, props) {\n    return this._assign(op, props, !1);\n  }\n}\nclass ObservablePatch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new ObservablePatch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nclass Patch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new Patch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nconst defaultMutateOptions = { returnDocuments: !1 };\nclass BaseTransaction {\n  operations;\n  trxId;\n  constructor(operations = [], transactionId) {\n    this.operations = operations, this.trxId = transactionId;\n  }\n  /**\n   * Creates a new Sanity document. If `_id` is provided and already exists, the mutation will fail. If no `_id` is given, one will automatically be generated by the database.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create. Requires a `_type` property.\n   */\n  create(doc) {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.validateObject)(\"create\", doc), this._add({ create: doc });\n  }\n  /**\n   * Creates a new Sanity document. If a document with the same `_id` already exists, the create operation will be ignored.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */\n  createIfNotExists(doc) {\n    const op = \"createIfNotExists\";\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.validateObject)(op, doc), (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.requireDocumentId)(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Creates a new Sanity document, or replaces an existing one if the same `_id` is already used.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create or replace. Requires `_id` and `_type` properties.\n   */\n  createOrReplace(doc) {\n    const op = \"createOrReplace\";\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.validateObject)(op, doc), (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.requireDocumentId)(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Deletes the document with the given document ID\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to delete\n   */\n  delete(documentId) {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.validateDocumentId)(\"delete\", documentId), this._add({ delete: { id: documentId } });\n  }\n  transactionId(id) {\n    return id ? (this.trxId = id, this) : this.trxId;\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  serialize() {\n    return [...this.operations];\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the transaction of all operations\n   */\n  reset() {\n    return this.operations = [], this;\n  }\n  _add(mut) {\n    return this.operations.push(mut), this;\n  }\n}\nclass Transaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new Transaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\", isPatch = typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof Patch, isMutationSelection = typeof patchOrDocumentId == \"object\" && (\"query\" in patchOrDocumentId || \"id\" in patchOrDocumentId);\n    if (isPatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new Patch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof Patch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    if (isMutationSelection) {\n      const patch = new Patch(patchOrDocumentId, patchOps || {}, this.#client);\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nclass ObservableTransaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new ObservableTransaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\";\n    if (typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof ObservablePatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new ObservablePatch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof ObservablePatch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nconst projectHeader = \"X-Sanity-Project-ID\";\nfunction requestOptions(config, overrides = {}) {\n  const headers2 = {}, token = overrides.token || config.token;\n  token && (headers2.Authorization = `Bearer ${token}`), !overrides.useGlobalApi && !config.useProjectHostname && config.projectId && (headers2[projectHeader] = config.projectId);\n  const withCredentials = !!(typeof overrides.withCredentials > \"u\" ? config.withCredentials : overrides.withCredentials), timeout = typeof overrides.timeout > \"u\" ? config.timeout : overrides.timeout;\n  return Object.assign({}, overrides, {\n    headers: Object.assign({}, headers2, overrides.headers || {}),\n    timeout: typeof timeout > \"u\" ? 5 * 60 * 1e3 : timeout,\n    proxy: overrides.proxy || config.proxy,\n    json: !0,\n    withCredentials,\n    fetch: typeof overrides.fetch == \"object\" && typeof config.fetch == \"object\" ? { ...config.fetch, ...overrides.fetch } : overrides.fetch || config.fetch\n  });\n}\nconst encodeQueryString = ({\n  query,\n  params = {},\n  options = {}\n}) => {\n  const searchParams = new URLSearchParams(), { tag, includeMutations, returnQuery, ...opts } = options;\n  tag && searchParams.append(\"tag\", tag), searchParams.append(\"query\", query);\n  for (const [key, value] of Object.entries(params))\n    searchParams.append(`$${key}`, JSON.stringify(value));\n  for (const [key, value] of Object.entries(opts))\n    value && searchParams.append(key, `${value}`);\n  return returnQuery === !1 && searchParams.append(\"returnQuery\", \"false\"), includeMutations === !1 && searchParams.append(\"includeMutations\", \"false\"), `?${searchParams}`;\n}, excludeFalsey = (param, defValue) => param === !1 ? void 0 : typeof param > \"u\" ? defValue : param, getMutationQuery = (options = {}) => ({\n  dryRun: options.dryRun,\n  returnIds: !0,\n  returnDocuments: excludeFalsey(options.returnDocuments, !0),\n  visibility: options.visibility || \"sync\",\n  autoGenerateArrayKeys: options.autoGenerateArrayKeys,\n  skipCrossDatasetReferenceValidation: options.skipCrossDatasetReferenceValidation\n}), isResponse = (event) => event.type === \"response\", getBody = (event) => event.body, indexBy = (docs, attr) => docs.reduce((indexed, doc) => (indexed[attr(doc)] = doc, indexed), /* @__PURE__ */ Object.create(null)), getQuerySizeLimit = 11264;\nfunction _fetch(client, httpRequest, _stega, query, _params = {}, options = {}) {\n  const stega = \"stega\" in options ? {\n    ..._stega || {},\n    ...typeof options.stega == \"boolean\" ? { enabled: options.stega } : options.stega || {}\n  } : _stega, params = stega.enabled ? (0,_chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_8__.stegaClean)(_params) : _params, mapResponse = options.filterResponse === !1 ? (res) => res : (res) => res.result, { cache, next, ...opts } = {\n    // Opt out of setting a `signal` on an internal `fetch` if one isn't provided.\n    // This is necessary in React Server Components to avoid opting out of Request Memoization.\n    useAbortSignal: typeof options.signal < \"u\",\n    // Set `resultSourceMap' when stega is enabled, as it's required for encoding.\n    resultSourceMap: stega.enabled ? \"withKeyArraySelector\" : options.resultSourceMap,\n    ...options,\n    // Default to not returning the query, unless `filterResponse` is `false`,\n    // or `returnQuery` is explicitly set. `true` is the default in Content Lake, so skip if truthy\n    returnQuery: options.filterResponse === !1 && options.returnQuery !== !1\n  }, reqOpts = typeof cache < \"u\" || typeof next < \"u\" ? { ...opts, fetch: { cache, next } } : opts, $request = _dataRequest(client, httpRequest, \"query\", { query, params }, reqOpts);\n  return stega.enabled ? $request.pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.combineLatestWith)(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.from)(\n        __webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ./_chunks-es/stegaEncodeSourceMap.js */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\")).then(function(n) {\n          return n.stegaEncodeSourceMap$1;\n        }).then(\n          ({ stegaEncodeSourceMap }) => stegaEncodeSourceMap\n        )\n      )\n    ),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)(\n      ([res, stegaEncodeSourceMap]) => {\n        const result = stegaEncodeSourceMap(res.result, res.resultSourceMap, stega);\n        return mapResponse({ ...res, result });\n      }\n    )\n  ) : $request.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)(mapResponse));\n}\nfunction _getDocument(client, httpRequest, id, opts = {}) {\n  const docId = (() => {\n    if (!opts.releaseId)\n      return id;\n    const versionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.getVersionFromId)(id);\n    if (!versionId) {\n      if ((0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.isDraftId)(id))\n        throw new Error(\n          `The document ID (\\`${id}\\`) is a draft, but \\`options.releaseId\\` is set as \\`${opts.releaseId}\\``\n        );\n      return (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.getVersionId)(id, opts.releaseId);\n    }\n    if (versionId !== opts.releaseId)\n      throw new Error(\n        `The document ID (\\`${id}\\`) is already a version of \\`${versionId}\\` release, but this does not match the provided \\`options.releaseId\\` (\\`${opts.releaseId}\\`)`\n      );\n    return id;\n  })(), options = {\n    uri: _getDataUrl(client, \"doc\", docId),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)((event) => event.body.documents && event.body.documents[0])\n  );\n}\nfunction _getDocuments(client, httpRequest, ids, opts = {}) {\n  const options = {\n    uri: _getDataUrl(client, \"doc\", ids.join(\",\")),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)((event) => {\n      const indexed = indexBy(event.body.documents || [], (doc) => doc._id);\n      return ids.map((id) => indexed[id] || null);\n    })\n  );\n}\nfunction _getReleaseDocuments(client, httpRequest, releaseId, opts = {}) {\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"query\",\n    {\n      query: \"*[sanity::partOfRelease($releaseId)]\",\n      params: {\n        releaseId\n      }\n    },\n    opts\n  );\n}\nfunction _createIfNotExists(client, httpRequest, doc, options) {\n  return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.requireDocumentId)(\"createIfNotExists\", doc), _create(client, httpRequest, doc, \"createIfNotExists\", options);\n}\nfunction _createOrReplace(client, httpRequest, doc, options) {\n  return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.requireDocumentId)(\"createOrReplace\", doc), _create(client, httpRequest, doc, \"createOrReplace\", options);\n}\nfunction _createVersion(client, httpRequest, doc, publishedId, options) {\n  return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.requireDocumentId)(\"createVersion\", doc), (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.requireDocumentType)(\"createVersion\", doc), _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.create\",\n    publishedId,\n    document: doc\n  }, options);\n}\nfunction _delete(client, httpRequest, selection, options) {\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"mutate\",\n    { mutations: [{ delete: getSelection(selection) }] },\n    options\n  );\n}\nfunction _discardVersion(client, httpRequest, versionId, purge = !1, options) {\n  return _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.discard\",\n    versionId,\n    purge\n  }, options);\n}\nfunction _replaceVersion(client, httpRequest, doc, options) {\n  return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.requireDocumentId)(\"replaceVersion\", doc), (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.requireDocumentType)(\"replaceVersion\", doc), _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.replace\",\n    document: doc\n  }, options);\n}\nfunction _unpublishVersion(client, httpRequest, versionId, publishedId, options) {\n  return _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.unpublish\",\n    versionId,\n    publishedId\n  }, options);\n}\nfunction _mutate(client, httpRequest, mutations, options) {\n  let mut;\n  mutations instanceof Patch || mutations instanceof ObservablePatch ? mut = { patch: mutations.serialize() } : mutations instanceof Transaction || mutations instanceof ObservableTransaction ? mut = mutations.serialize() : mut = mutations;\n  const muts = Array.isArray(mut) ? mut : [mut], transactionId = options && options.transactionId || void 0;\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: muts, transactionId }, options);\n}\nfunction _action(client, httpRequest, actions, options) {\n  const acts = Array.isArray(actions) ? actions : [actions], transactionId = options && options.transactionId || void 0, skipCrossDatasetReferenceValidation = options && options.skipCrossDatasetReferenceValidation || void 0, dryRun = options && options.dryRun || void 0;\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"actions\",\n    { actions: acts, transactionId, skipCrossDatasetReferenceValidation, dryRun },\n    options\n  );\n}\nfunction _dataRequest(client, httpRequest, endpoint, body, options = {}) {\n  const isMutation = endpoint === \"mutate\", isAction = endpoint === \"actions\", isQuery2 = endpoint === \"query\", strQuery = isMutation || isAction ? \"\" : encodeQueryString(body), useGet = !isMutation && !isAction && strQuery.length < getQuerySizeLimit, stringQuery = useGet ? strQuery : \"\", returnFirst = options.returnFirst, { timeout, token, tag, headers: headers2, returnQuery, lastLiveEventId, cacheMode } = options, uri = _getDataUrl(client, endpoint, stringQuery), reqOptions = {\n    method: useGet ? \"GET\" : \"POST\",\n    uri,\n    json: !0,\n    body: useGet ? void 0 : body,\n    query: isMutation && getMutationQuery(options),\n    timeout,\n    headers: headers2,\n    token,\n    tag,\n    returnQuery,\n    perspective: options.perspective,\n    resultSourceMap: options.resultSourceMap,\n    lastLiveEventId: Array.isArray(lastLiveEventId) ? lastLiveEventId[0] : lastLiveEventId,\n    cacheMode,\n    canUseCdn: isQuery2,\n    signal: options.signal,\n    fetch: options.fetch,\n    useAbortSignal: options.useAbortSignal,\n    useCdn: options.useCdn\n  };\n  return _requestObservable(client, httpRequest, reqOptions).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)(getBody),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)((res) => {\n      if (!isMutation)\n        return res;\n      const results = res.results || [];\n      if (options.returnDocuments)\n        return returnFirst ? results[0] && results[0].document : results.map((mut) => mut.document);\n      const key = returnFirst ? \"documentId\" : \"documentIds\", ids = returnFirst ? results[0] && results[0].id : results.map((mut) => mut.id);\n      return {\n        transactionId: res.transactionId,\n        results,\n        [key]: ids\n      };\n    })\n  );\n}\nfunction _create(client, httpRequest, doc, op, options = {}) {\n  const mutation = { [op]: doc }, opts = Object.assign({ returnFirst: !0, returnDocuments: !0 }, options);\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: [mutation] }, opts);\n}\nconst hasDataConfig = (client) => client.config().dataset !== void 0 && client.config().projectId !== void 0 || client.config()[\"~experimental_resource\"] !== void 0, isQuery = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"query\")), isMutate = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"mutate\")), isDoc = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"doc\", \"\")), isListener = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"listen\")), isHistory = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"history\", \"\")), isData = (client, uri) => uri.startsWith(\"/data/\") || isQuery(client, uri) || isMutate(client, uri) || isDoc(client, uri) || isListener(client, uri) || isHistory(client, uri);\nfunction _requestObservable(client, httpRequest, options) {\n  const uri = options.url || options.uri, config = client.config(), canUseCdn = typeof options.canUseCdn > \"u\" ? [\"GET\", \"HEAD\"].indexOf(options.method || \"GET\") >= 0 && isData(client, uri) : options.canUseCdn;\n  let useCdn = (options.useCdn ?? config.useCdn) && canUseCdn;\n  const tag = options.tag && config.requestTagPrefix ? [config.requestTagPrefix, options.tag].join(\".\") : options.tag || config.requestTagPrefix;\n  if (tag && options.tag !== null && (options.query = { tag: (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.requestTag)(tag), ...options.query }), [\"GET\", \"HEAD\", \"POST\"].indexOf(options.method || \"GET\") >= 0 && isQuery(client, uri)) {\n    const resultSourceMap = options.resultSourceMap ?? config.resultSourceMap;\n    resultSourceMap !== void 0 && resultSourceMap !== !1 && (options.query = { resultSourceMap, ...options.query });\n    const perspectiveOption = options.perspective || config.perspective;\n    typeof perspectiveOption < \"u\" && (perspectiveOption === \"previewDrafts\" && (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.printPreviewDraftsDeprecationWarning)(), (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.validateApiPerspective)(perspectiveOption), options.query = {\n      perspective: Array.isArray(perspectiveOption) ? perspectiveOption.join(\",\") : perspectiveOption,\n      ...options.query\n    }, (Array.isArray(perspectiveOption) && perspectiveOption.length > 0 || // previewDrafts was renamed to drafts, but keep for backwards compat\n    perspectiveOption === \"previewDrafts\" || perspectiveOption === \"drafts\") && useCdn && (useCdn = !1, (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.printCdnPreviewDraftsWarning)())), options.lastLiveEventId && (options.query = { ...options.query, lastLiveEventId: options.lastLiveEventId }), options.returnQuery === !1 && (options.query = { returnQuery: \"false\", ...options.query }), useCdn && options.cacheMode == \"noStale\" && (options.query = { cacheMode: \"noStale\", ...options.query });\n  }\n  const reqOptions = requestOptions(\n    config,\n    Object.assign({}, options, {\n      url: _getUrl(client, uri, useCdn)\n    })\n  ), request = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable(\n    (subscriber) => httpRequest(reqOptions, config.requester).subscribe(subscriber)\n  );\n  return options.signal ? request.pipe(_withAbortSignal(options.signal)) : request;\n}\nfunction _request(client, httpRequest, options) {\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.filter)((event) => event.type === \"response\"),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)((event) => event.body)\n  );\n}\nfunction _getDataUrl(client, operation, path) {\n  const config = client.config();\n  if (config[\"~experimental_resource\"]) {\n    (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.resourceConfig)(config);\n    const resourceBase = resourceDataBase(config), uri2 = path !== void 0 ? `${operation}/${path}` : operation;\n    return `${resourceBase}/${uri2}`.replace(/\\/($|\\?)/, \"$1\");\n  }\n  const catalog = (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.hasDataset)(config), baseUri = `/${operation}/${catalog}`;\n  return `/data${path !== void 0 ? `${baseUri}/${path}` : baseUri}`.replace(/\\/($|\\?)/, \"$1\");\n}\nfunction _getUrl(client, uri, canUseCdn = !1) {\n  const { url, cdnUrl } = client.config();\n  return `${canUseCdn ? cdnUrl : url}/${uri.replace(/^\\//, \"\")}`;\n}\nfunction _withAbortSignal(signal) {\n  return (input) => new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const abort = () => observer.error(_createAbortError(signal));\n    if (signal && signal.aborted) {\n      abort();\n      return;\n    }\n    const subscription = input.subscribe(observer);\n    return signal.addEventListener(\"abort\", abort), () => {\n      signal.removeEventListener(\"abort\", abort), subscription.unsubscribe();\n    };\n  });\n}\nconst isDomExceptionSupported = !!globalThis.DOMException;\nfunction _createAbortError(signal) {\n  if (isDomExceptionSupported)\n    return new DOMException(signal?.reason ?? \"The operation was aborted.\", \"AbortError\");\n  const error = new Error(signal?.reason ?? \"The operation was aborted.\");\n  return error.name = \"AbortError\", error;\n}\nconst resourceDataBase = (config) => {\n  if (!config[\"~experimental_resource\"])\n    throw new Error(\"`resource` must be provided to perform resource queries\");\n  const { type, id } = config[\"~experimental_resource\"];\n  switch (type) {\n    case \"dataset\": {\n      const segments = id.split(\".\");\n      if (segments.length !== 2)\n        throw new Error('Dataset ID must be in the format \"project.dataset\"');\n      return `/projects/${segments[0]}/datasets/${segments[1]}`;\n    }\n    case \"canvas\":\n      return `/canvases/${id}`;\n    case \"media-library\":\n      return `/media-libraries/${id}`;\n    case \"dashboard\":\n      return `/dashboards/${id}`;\n    default:\n      throw new Error(`Unsupported resource type: ${type.toString()}`);\n  }\n};\nfunction _generate(client, httpRequest, request) {\n  const dataset2 = (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.hasDataset)(client.config());\n  return _request(client, httpRequest, {\n    method: \"POST\",\n    uri: `/agent/action/generate/${dataset2}`,\n    body: request\n  });\n}\nfunction _transform(client, httpRequest, request) {\n  const dataset2 = (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.hasDataset)(client.config());\n  return _request(client, httpRequest, {\n    method: \"POST\",\n    uri: `/agent/action/transform/${dataset2}`,\n    body: request\n  });\n}\nfunction _translate(client, httpRequest, request) {\n  const dataset2 = (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.hasDataset)(client.config());\n  return _request(client, httpRequest, {\n    method: \"POST\",\n    uri: `/agent/action/translate/${dataset2}`,\n    body: request\n  });\n}\nclass ObservableAgentsActionClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Run an instruction to generate content in a target document.\n   * @param request - instruction request\n   */\n  generate(request) {\n    return _generate(this.#client, this.#httpRequest, request);\n  }\n  /**\n   * Transform a target document based on a source.\n   * @param request - translation request\n   */\n  transform(request) {\n    return _transform(this.#client, this.#httpRequest, request);\n  }\n  /**\n   * Translate a target document based on a source.\n   * @param request - translation request\n   */\n  translate(request) {\n    return _translate(this.#client, this.#httpRequest, request);\n  }\n}\nclass AgentActionsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Run an instruction to generate content in a target document.\n   * @param request - instruction request\n   */\n  generate(request) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_generate(this.#client, this.#httpRequest, request));\n  }\n  /**\n   * Transform a target document based on a source.\n   * @param request - translation request\n   */\n  transform(request) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_transform(this.#client, this.#httpRequest, request));\n  }\n  /**\n   * Translate a target document based on a source.\n   * @param request - translation request\n   */\n  translate(request) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_translate(this.#client, this.#httpRequest, request));\n  }\n}\nclass ObservableAssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    return _upload(this.#client, this.#httpRequest, assetType, body, options);\n  }\n}\nclass AssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    const observable2 = _upload(this.#client, this.#httpRequest, assetType, body, options);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      observable2.pipe(\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.filter)((event) => event.type === \"response\"),\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)(\n          (event) => event.body.document\n        )\n      )\n    );\n  }\n}\nfunction _upload(client, httpRequest, assetType, body, opts = {}) {\n  (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.validateAssetType)(assetType);\n  let meta = opts.extract || void 0;\n  meta && !meta.length && (meta = [\"none\"]);\n  const config = client.config(), options = optionsFromFile(opts, body), { tag, label, title, description, creditLine, filename, source } = options, query = {\n    label,\n    title,\n    description,\n    filename,\n    meta,\n    creditLine\n  };\n  return source && (query.sourceId = source.id, query.sourceName = source.name, query.sourceUrl = source.url), _requestObservable(client, httpRequest, {\n    tag,\n    method: \"POST\",\n    timeout: options.timeout || 0,\n    uri: buildAssetUploadUrl(config, assetType),\n    headers: options.contentType ? { \"Content-Type\": options.contentType } : {},\n    query,\n    body\n  });\n}\nfunction buildAssetUploadUrl(config, assetType) {\n  const assetTypeEndpoint = assetType === \"image\" ? \"images\" : \"files\";\n  if (config[\"~experimental_resource\"]) {\n    const { type, id } = config[\"~experimental_resource\"];\n    switch (type) {\n      case \"dataset\":\n        throw new Error(\n          \"Assets are not supported for dataset resources, yet. Configure the client with `{projectId: <projectId>, dataset: <datasetId>}` instead.\"\n        );\n      case \"canvas\":\n        return `/canvases/${id}/assets/${assetTypeEndpoint}`;\n      case \"media-library\":\n        return `/media-libraries/${id}/upload`;\n      case \"dashboard\":\n        return `/dashboards/${id}/assets/${assetTypeEndpoint}`;\n      default:\n        throw new Error(`Unsupported resource type: ${type.toString()}`);\n    }\n  }\n  const dataset2 = (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.hasDataset)(config);\n  return `assets/${assetTypeEndpoint}/${dataset2}`;\n}\nfunction optionsFromFile(opts, file) {\n  return typeof File > \"u\" || !(file instanceof File) ? opts : Object.assign(\n    {\n      filename: opts.preserveFilename === !1 ? void 0 : file.name,\n      contentType: file.type\n    },\n    opts\n  );\n}\nvar defaults = (obj, defaults2) => Object.keys(defaults2).concat(Object.keys(obj)).reduce((target, prop) => (target[prop] = typeof obj[prop] > \"u\" ? defaults2[prop] : obj[prop], target), {});\nconst pick = (obj, props) => props.reduce((selection, prop) => (typeof obj[prop] > \"u\" || (selection[prop] = obj[prop]), selection), {}), eventSourcePolyfill = (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.defer)(() => Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/eventsource\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @sanity/eventsource */ \"(ssr)/./node_modules/@sanity/eventsource/node.js\", 19))).pipe(\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)(({ default: EventSource2 }) => EventSource2),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.shareReplay)(1)\n);\nfunction reconnectOnConnectionFailure() {\n  return function(source) {\n    return source.pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.catchError)((err, caught) => err instanceof ConnectionFailedError ? (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.concat)((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)({ type: \"reconnect\" }), (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.timer)(1e3).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)(() => caught))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.throwError)(() => err))\n    );\n  };\n}\nconst MAX_URL_LENGTH = 14800, possibleOptions = [\n  \"includePreviousRevision\",\n  \"includeResult\",\n  \"includeMutations\",\n  \"includeAllVersions\",\n  \"visibility\",\n  \"effectFormat\",\n  \"tag\"\n], defaultOptions = {\n  includeResult: !0\n};\nfunction _listen(query, params, opts = {}) {\n  const { url, token, withCredentials, requestTagPrefix } = this.config(), tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join(\".\") : opts.tag, options = { ...defaults(opts, defaultOptions), tag }, listenOpts = pick(options, possibleOptions), qs = encodeQueryString({ query, params, options: { tag, ...listenOpts } }), uri = `${url}${_getDataUrl(this, \"listen\", qs)}`;\n  if (uri.length > MAX_URL_LENGTH)\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.throwError)(() => new Error(\"Query too large for listener\"));\n  const listenFor = options.events ? options.events : [\"mutation\"], esOptions = {};\n  return withCredentials && (esOptions.withCredentials = !0), token && (esOptions.headers = {\n    Authorization: `Bearer ${token}`\n  }), connectEventSource(() => (\n    // use polyfill if there is no global EventSource or if we need to set headers\n    (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)((EventSource2) => new EventSource2(uri, esOptions)))\n  ), listenFor).pipe(\n    reconnectOnConnectionFailure(),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.filter)((event) => listenFor.includes(event.type)),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)(\n      (event) => ({\n        type: event.type,\n        ...\"data\" in event ? event.data : {}\n      })\n    )\n  );\n}\nfunction shareReplayLatest(configOrPredicate, config) {\n  return _shareReplayLatest(\n    typeof configOrPredicate == \"function\" ? { predicate: configOrPredicate, ...config } : configOrPredicate\n  );\n}\nfunction _shareReplayLatest(config) {\n  return (source) => {\n    let latest, emitted = !1;\n    const { predicate, ...shareConfig } = config, wrapped = source.pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_18__.tap)((value) => {\n        config.predicate(value) && (emitted = !0, latest = value);\n      }),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.finalize)(() => {\n        emitted = !1, latest = void 0;\n      }),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_20__.share)(shareConfig)\n    ), emitLatest = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((subscriber) => {\n      emitted && subscriber.next(\n        // this cast is safe because of the emitted check which asserts that we got T from the source\n        latest\n      ), subscriber.complete();\n    });\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_21__.merge)(wrapped, emitLatest);\n  };\n}\nconst requiredApiVersion = \"2021-03-25\";\nclass LiveClient {\n  #client;\n  constructor(client) {\n    this.#client = client;\n  }\n  /**\n   * Requires `apiVersion` to be `2021-03-25` or later.\n   */\n  events({\n    includeDrafts = !1,\n    tag: _tag\n  } = {}) {\n    (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.resourceGuard)(\"live\", this.#client.config());\n    const {\n      projectId,\n      apiVersion: _apiVersion,\n      token,\n      withCredentials,\n      requestTagPrefix\n    } = this.#client.config(), apiVersion = _apiVersion.replace(/^v/, \"\");\n    if (apiVersion !== \"X\" && apiVersion < requiredApiVersion)\n      throw new Error(\n        `The live events API requires API version ${requiredApiVersion} or later. The current API version is ${apiVersion}. Please update your API version to use this feature.`\n      );\n    if (includeDrafts && !token && !withCredentials)\n      throw new Error(\n        \"The live events API requires a token or withCredentials when 'includeDrafts: true'. Please update your client configuration. The token should have the lowest possible access role.\"\n      );\n    const path = _getDataUrl(this.#client, \"live/events\"), url = new URL(this.#client.getUrl(path, !1)), tag = _tag && requestTagPrefix ? [requestTagPrefix, _tag].join(\".\") : _tag;\n    tag && url.searchParams.set(\"tag\", tag), includeDrafts && url.searchParams.set(\"includeDrafts\", \"true\");\n    const esOptions = {};\n    includeDrafts && token && (esOptions.headers = {\n      Authorization: `Bearer ${token}`\n    }), includeDrafts && withCredentials && (esOptions.withCredentials = !0);\n    const key = `${url.href}::${JSON.stringify(esOptions)}`, existing = eventsCache.get(key);\n    if (existing)\n      return existing;\n    const events = connectEventSource(() => (\n      // use polyfill if there is no global EventSource or if we need to set headers\n      (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)((EventSource2) => new EventSource2(url.href, esOptions)))\n    ), [\n      \"message\",\n      \"restart\",\n      \"welcome\",\n      \"reconnect\",\n      \"goaway\"\n    ]).pipe(\n      reconnectOnConnectionFailure(),\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.map)((event) => {\n        if (event.type === \"message\") {\n          const { data, ...rest } = event;\n          return { ...rest, tags: data.tags };\n        }\n        return event;\n      })\n    ), checkCors = fetchObservable(url, {\n      method: \"OPTIONS\",\n      mode: \"cors\",\n      credentials: esOptions.withCredentials ? \"include\" : \"omit\",\n      headers: esOptions.headers\n    }).pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)(() => rxjs__WEBPACK_IMPORTED_MODULE_22__.EMPTY),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.catchError)(() => {\n        throw new CorsOriginError({ projectId });\n      })\n    ), observable2 = (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.concat)(checkCors, events).pipe(\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.finalize)(() => eventsCache.delete(key)),\n      shareReplayLatest({\n        predicate: (event) => event.type === \"welcome\"\n      })\n    );\n    return eventsCache.set(key, observable2), observable2;\n  }\n}\nfunction fetchObservable(url, init) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const controller = new AbortController(), signal = controller.signal;\n    return fetch(url, { ...init, signal: controller.signal }).then(\n      (response) => {\n        observer.next(response), observer.complete();\n      },\n      (err) => {\n        signal.aborted || observer.error(err);\n      }\n    ), () => controller.abort();\n  });\n}\nconst eventsCache = /* @__PURE__ */ new Map();\nclass ObservableDatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name2, options) {\n    return _modify(this.#client, this.#httpRequest, \"PUT\", name2, options);\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name2, options) {\n    return _modify(this.#client, this.#httpRequest, \"PATCH\", name2, options);\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name2) {\n    return _modify(this.#client, this.#httpRequest, \"DELETE\", name2);\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return _request(this.#client, this.#httpRequest, {\n      uri: \"/datasets\",\n      tag: null\n    });\n  }\n}\nclass DatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name2, options) {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.resourceGuard)(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PUT\", name2, options)\n    );\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name2, options) {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.resourceGuard)(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PATCH\", name2, options)\n    );\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name2) {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.resourceGuard)(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_modify(this.#client, this.#httpRequest, \"DELETE\", name2));\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.resourceGuard)(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: \"/datasets\", tag: null })\n    );\n  }\n}\nfunction _modify(client, httpRequest, method, name2, options) {\n  return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.resourceGuard)(\"dataset\", client.config()), (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.dataset)(name2), _request(client, httpRequest, {\n    method,\n    uri: `/datasets/${name2}`,\n    body: options,\n    tag: null\n  });\n}\nclass ObservableProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.resourceGuard)(\"projects\", this.#client.config());\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return _request(this.#client, this.#httpRequest, { uri });\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId) {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.resourceGuard)(\"projects\", this.#client.config()), _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId}` });\n  }\n}\nclass ProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.resourceGuard)(\"projects\", this.#client.config());\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_request(this.#client, this.#httpRequest, { uri }));\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId) {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.resourceGuard)(\"projects\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId}` })\n    );\n  }\n}\nconst generateReleaseId = (0,nanoid__WEBPACK_IMPORTED_MODULE_23__.customAlphabet)(\n  \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\n  8\n), getDocumentVersionId = (publishedId, releaseId) => releaseId ? (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.getVersionId)(publishedId, releaseId) : (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.getDraftId)(publishedId);\nfunction deriveDocumentVersionId(op, {\n  releaseId,\n  publishedId,\n  document\n}) {\n  if (publishedId && document._id) {\n    const versionId = getDocumentVersionId(publishedId, releaseId);\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.validateVersionIdMatch)(versionId, document), versionId;\n  }\n  if (document._id) {\n    const isDraft = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.isDraftId)(document._id), isVersion = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.isVersionId)(document._id);\n    if (!isDraft && !isVersion)\n      throw new Error(\n        `\\`${op}()\\` requires a document with an \\`_id\\` that is a version or draft ID`\n      );\n    if (releaseId) {\n      if (isDraft)\n        throw new Error(\n          `\\`${op}()\\` was called with a document ID (\\`${document._id}\\`) that is a draft ID, but a release ID (\\`${releaseId}\\`) was also provided.`\n        );\n      const builtVersionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.getVersionFromId)(document._id);\n      if (builtVersionId !== releaseId)\n        throw new Error(\n          `\\`${op}()\\` was called with a document ID (\\`${document._id}\\`) that is a version ID, but the release ID (\\`${releaseId}\\`) does not match the document's version ID (\\`${builtVersionId}\\`).`\n        );\n    }\n    return document._id;\n  }\n  if (publishedId)\n    return getDocumentVersionId(publishedId, releaseId);\n  throw new Error(`\\`${op}()\\` requires either a publishedId or a document with an \\`_id\\``);\n}\nconst getArgs = (releaseOrOptions, maybeOptions) => {\n  if (typeof releaseOrOptions == \"object\" && releaseOrOptions !== null && (\"releaseId\" in releaseOrOptions || \"metadata\" in releaseOrOptions)) {\n    const { releaseId = generateReleaseId(), metadata = {} } = releaseOrOptions;\n    return [releaseId, metadata, maybeOptions];\n  }\n  return [generateReleaseId(), {}, releaseOrOptions];\n}, createRelease = (releaseOrOptions, maybeOptions) => {\n  const [releaseId, metadata, options] = getArgs(releaseOrOptions, maybeOptions), finalMetadata = {\n    ...metadata,\n    releaseType: metadata.releaseType || \"undecided\"\n  };\n  return { action: {\n    actionType: \"sanity.action.release.create\",\n    releaseId,\n    metadata: finalMetadata\n  }, options };\n};\nclass ObservableReleasesClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * @public\n   *\n   * Retrieve a release by id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to retrieve.\n   * @param options - Additional query options including abort signal and query tag.\n   * @returns An observable that resolves to the release document {@link ReleaseDocument}.\n   *\n   * @example Retrieving a release by id\n   * ```ts\n   * client.observable.releases.get({releaseId: 'my-release'}).pipe(\n   *   tap((release) => console.log(release)),\n   *   // {\n   *   //   _id: '_.releases.my-release',\n   *   //   name: 'my-release'\n   *   //   _type: 'system.release',\n   *   //   metadata: {releaseType: 'asap'},\n   *   //   _createdAt: '2021-01-01T00:00:00.000Z',\n   *   //   ...\n   *   // }\n   * ).subscribe()\n   * ```\n   */\n  get({ releaseId }, options) {\n    return _getDocument(\n      this.#client,\n      this.#httpRequest,\n      `_.releases.${releaseId}`,\n      options\n    );\n  }\n  create(releaseOrOptions, maybeOptions) {\n    const { action, options } = createRelease(releaseOrOptions, maybeOptions), { releaseId, metadata } = action;\n    return _action(this.#client, this.#httpRequest, action, options).pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_24__.map)((actionResult) => ({\n        ...actionResult,\n        releaseId,\n        metadata\n      }))\n    );\n  }\n  /**\n   * @public\n   *\n   * Edits an existing release, updating the metadata.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to edit.\n   *   - `patch` - The patch operation to apply on the release metadata {@link PatchMutationOperation}.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  edit({ releaseId, patch }, options) {\n    const editAction = {\n      actionType: \"sanity.action.release.edit\",\n      releaseId,\n      patch\n    };\n    return _action(this.#client, this.#httpRequest, editAction, options);\n  }\n  /**\n   * @public\n   *\n   * Publishes all documents in a release at once. For larger releases the effect of the publish\n   * will be visible immediately when querying but the removal of the `versions.<releasesId>.*`\n   * documents and creation of the corresponding published documents with the new content may\n   * take some time.\n   *\n   * During this period both the source and target documents are locked and cannot be\n   * modified through any other means.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to publish.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  publish({ releaseId }, options) {\n    const publishAction = {\n      actionType: \"sanity.action.release.publish\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, publishAction, options);\n  }\n  /**\n   * @public\n   *\n   * An archive action removes an active release. The documents that comprise the release\n   * are deleted and therefore no longer queryable.\n   *\n   * While the documents remain in retention the last version can still be accessed using document history endpoint.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to archive.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  archive({ releaseId }, options) {\n    const archiveAction = {\n      actionType: \"sanity.action.release.archive\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, archiveAction, options);\n  }\n  /**\n   * @public\n   *\n   * An unarchive action restores an archived release and all documents\n   * with the content they had just prior to archiving.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unarchive.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  unarchive({ releaseId }, options) {\n    const unarchiveAction = {\n      actionType: \"sanity.action.release.unarchive\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, unarchiveAction, options);\n  }\n  /**\n   * @public\n   *\n   * A schedule action queues a release for publishing at the given future time.\n   * The release is locked such that no documents in the release can be modified and\n   * no documents that it references can be deleted as this would make the publish fail.\n   * At the given time, the same logic as for the publish action is triggered.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to schedule.\n   *   - `publishAt` - The serialised date and time to publish the release. If the `publishAt` is in the past, the release will be published immediately.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  schedule({ releaseId, publishAt }, options) {\n    const scheduleAction = {\n      actionType: \"sanity.action.release.schedule\",\n      releaseId,\n      publishAt\n    };\n    return _action(this.#client, this.#httpRequest, scheduleAction, options);\n  }\n  /**\n   * @public\n   *\n   * An unschedule action stops a release from being published.\n   * The documents in the release are considered unlocked and can be edited again.\n   * This may fail if another release is scheduled to be published after this one and\n   * has a reference to a document created by this one.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unschedule.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  unschedule({ releaseId }, options) {\n    const unscheduleAction = {\n      actionType: \"sanity.action.release.unschedule\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, unscheduleAction, options);\n  }\n  /**\n   * @public\n   *\n   * A delete action removes a published or archived release.\n   * The backing system document will be removed from the dataset.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to delete.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  delete({ releaseId }, options) {\n    const deleteAction = {\n      actionType: \"sanity.action.release.delete\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, deleteAction, options);\n  }\n  /**\n   * @public\n   *\n   * Fetch the documents in a release by release id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to fetch documents for.\n   * @param options - Additional mutation options {@link BaseMutationOptions}.\n   * @returns An observable that resolves to the documents in the release.\n   */\n  fetchDocuments({ releaseId }, options) {\n    return _getReleaseDocuments(this.#client, this.#httpRequest, releaseId, options);\n  }\n}\nclass ReleasesClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * @public\n   *\n   * Retrieve a release by id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to retrieve.\n   * @param options - Additional query options including abort signal and query tag.\n   * @returns A promise that resolves to the release document {@link ReleaseDocument}.\n   *\n   * @example Retrieving a release by id\n   * ```ts\n   * const release = await client.releases.get({releaseId: 'my-release'})\n   * console.log(release)\n   * // {\n   * //   _id: '_.releases.my-release',\n   * //   name: 'my-release'\n   * //   _type: 'system.release',\n   * //   metadata: {releaseType: 'asap'},\n   * //   _createdAt: '2021-01-01T00:00:00.000Z',\n   * //   ...\n   * // }\n   * ```\n   */\n  get({ releaseId }, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _getDocument(\n        this.#client,\n        this.#httpRequest,\n        `_.releases.${releaseId}`,\n        options\n      )\n    );\n  }\n  async create(releaseOrOptions, maybeOptions) {\n    const { action, options } = createRelease(releaseOrOptions, maybeOptions), { releaseId, metadata } = action;\n    return { ...await (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _action(this.#client, this.#httpRequest, action, options)\n    ), releaseId, metadata };\n  }\n  /**\n   * @public\n   *\n   * Edits an existing release, updating the metadata.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to edit.\n   *   - `patch` - The patch operation to apply on the release metadata {@link PatchMutationOperation}.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  edit({ releaseId, patch }, options) {\n    const editAction = {\n      actionType: \"sanity.action.release.edit\",\n      releaseId,\n      patch\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_action(this.#client, this.#httpRequest, editAction, options));\n  }\n  /**\n   * @public\n   *\n   * Publishes all documents in a release at once. For larger releases the effect of the publish\n   * will be visible immediately when querying but the removal of the `versions.<releasesId>.*`\n   * documents and creation of the corresponding published documents with the new content may\n   * take some time.\n   *\n   * During this period both the source and target documents are locked and cannot be\n   * modified through any other means.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to publish.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  publish({ releaseId }, options) {\n    const publishAction = {\n      actionType: \"sanity.action.release.publish\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_action(this.#client, this.#httpRequest, publishAction, options));\n  }\n  /**\n   * @public\n   *\n   * An archive action removes an active release. The documents that comprise the release\n   * are deleted and therefore no longer queryable.\n   *\n   * While the documents remain in retention the last version can still be accessed using document history endpoint.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to archive.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  archive({ releaseId }, options) {\n    const archiveAction = {\n      actionType: \"sanity.action.release.archive\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_action(this.#client, this.#httpRequest, archiveAction, options));\n  }\n  /**\n   * @public\n   *\n   * An unarchive action restores an archived release and all documents\n   * with the content they had just prior to archiving.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unarchive.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  unarchive({ releaseId }, options) {\n    const unarchiveAction = {\n      actionType: \"sanity.action.release.unarchive\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_action(this.#client, this.#httpRequest, unarchiveAction, options));\n  }\n  /**\n   * @public\n   *\n   * A schedule action queues a release for publishing at the given future time.\n   * The release is locked such that no documents in the release can be modified and\n   * no documents that it references can be deleted as this would make the publish fail.\n   * At the given time, the same logic as for the publish action is triggered.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to schedule.\n   *   - `publishAt` - The serialised date and time to publish the release. If the `publishAt` is in the past, the release will be published immediately.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  schedule({ releaseId, publishAt }, options) {\n    const scheduleAction = {\n      actionType: \"sanity.action.release.schedule\",\n      releaseId,\n      publishAt\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_action(this.#client, this.#httpRequest, scheduleAction, options));\n  }\n  /**\n   * @public\n   *\n   * An unschedule action stops a release from being published.\n   * The documents in the release are considered unlocked and can be edited again.\n   * This may fail if another release is scheduled to be published after this one and\n   * has a reference to a document created by this one.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unschedule.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  unschedule({ releaseId }, options) {\n    const unscheduleAction = {\n      actionType: \"sanity.action.release.unschedule\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_action(this.#client, this.#httpRequest, unscheduleAction, options));\n  }\n  /**\n   * @public\n   *\n   * A delete action removes a published or archived release.\n   * The backing system document will be removed from the dataset.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to delete.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  delete({ releaseId }, options) {\n    const deleteAction = {\n      actionType: \"sanity.action.release.delete\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_action(this.#client, this.#httpRequest, deleteAction, options));\n  }\n  /**\n   * @public\n   *\n   * Fetch the documents in a release by release id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to fetch documents for.\n   * @param options - Additional mutation options {@link BaseMutationOptions}.\n   * @returns A promise that resolves to the documents in the release.\n   */\n  fetchDocuments({ releaseId }, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_getReleaseDocuments(this.#client, this.#httpRequest, releaseId, options));\n  }\n}\nclass ObservableUsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return _request(\n      this.#client,\n      this.#httpRequest,\n      { uri: `/users/${id}` }\n    );\n  }\n}\nclass UsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, {\n        uri: `/users/${id}`\n      })\n    );\n  }\n}\nclass ObservableSanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  agent;\n  releases;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = _chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new ObservableAssetsClient(this, this.#httpRequest), this.datasets = new ObservableDatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ObservableProjectsClient(this, this.#httpRequest), this.users = new ObservableUsersClient(this, this.#httpRequest), this.agent = {\n      action: new ObservableAgentsActionClient(this, this.#httpRequest)\n    }, this.releases = new ObservableReleasesClient(this, this.#httpRequest);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new ObservableSanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.#clientConfig = (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.initConfig)(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new ObservableSanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return _fetch(\n      this,\n      this.#httpRequest,\n      this.#clientConfig.stega,\n      query,\n      params,\n      options\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return _getDocument(this, this.#httpRequest, id, options);\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return _getDocuments(this, this.#httpRequest, ids, options);\n  }\n  create(document, options) {\n    return _create(this, this.#httpRequest, document, \"create\", options);\n  }\n  createIfNotExists(document, options) {\n    return _createIfNotExists(this, this.#httpRequest, document, options);\n  }\n  createOrReplace(document, options) {\n    return _createOrReplace(this, this.#httpRequest, document, options);\n  }\n  createVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"createVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId }, versionPublishedId = publishedId || (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.getPublishedId)(document._id);\n    return _createVersion(\n      this,\n      this.#httpRequest,\n      documentVersion,\n      versionPublishedId,\n      options\n    );\n  }\n  delete(selection, options) {\n    return _delete(this, this.#httpRequest, selection, options);\n  }\n  /**\n   * @public\n   *\n   * Deletes the draft or release version of a document.\n   *\n   * @remarks\n   * * Discarding a version with no `releaseId` will discard the draft version of the published document.\n   * * If the draft or release version does not exist, any error will throw.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to discard the document from.\n   *   - `publishedId` - The published ID of the document to discard.\n   * @param purge - if `true` the document history is also discarded.\n   * @param options - Additional action options.\n   * @returns an observable that resolves to the `transactionId`.\n   *\n   * @example Discarding a release version of a document\n   * ```ts\n   * client.observable.discardVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be discarded.\n   * ```\n   *\n   * @example Discarding a draft version of a document\n   * ```ts\n   * client.observable.discardVersion({publishedId: 'myDocument'})\n   * // The document with the ID `drafts.myDocument` will be discarded.\n   * ```\n   */\n  discardVersion({ releaseId, publishedId }, purge, options) {\n    const documentVersionId = getDocumentVersionId(publishedId, releaseId);\n    return _discardVersion(this, this.#httpRequest, documentVersionId, purge, options);\n  }\n  replaceVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"replaceVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId };\n    return _replaceVersion(this, this.#httpRequest, documentVersion, options);\n  }\n  /**\n   * @public\n   *\n   * Used to indicate when a document within a release should be unpublished when\n   * the release is run.\n   *\n   * @remarks\n   * * If the published document does not exist, an error will be thrown.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to unpublish the document from.\n   *   - `publishedId` - The published ID of the document to unpublish.\n   * @param options - Additional action options.\n   * @returns an observable that resolves to the `transactionId`.\n   *\n   * @example Unpublishing a release version of a published document\n   * ```ts\n   * client.observable.unpublishVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be unpublished. when `myRelease` is run.\n   * ```\n   */\n  unpublishVersion({ releaseId, publishedId }, options) {\n    const versionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.getVersionId)(publishedId, releaseId);\n    return _unpublishVersion(this, this.#httpRequest, versionId, publishedId, options);\n  }\n  mutate(operations, options) {\n    return _mutate(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection, operations) {\n    return new ObservablePatch(selection, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new ObservableTransaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return _action(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Perform an HTTP request against the Sanity API\n   *\n   * @param options - Request options\n   */\n  request(options) {\n    return _request(this, this.#httpRequest, options);\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nclass SanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  agent;\n  releases;\n  /**\n   * Observable version of the Sanity client, with the same configuration as the promise-based one\n   */\n  observable;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = _chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new AssetsClient(this, this.#httpRequest), this.datasets = new DatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ProjectsClient(this, this.#httpRequest), this.users = new UsersClient(this, this.#httpRequest), this.agent = {\n      action: new AgentActionsClient(this, this.#httpRequest)\n    }, this.releases = new ReleasesClient(this, this.#httpRequest), this.observable = new ObservableSanityClient(httpRequest, config);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new SanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.observable && this.observable.config(newConfig), this.#clientConfig = (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.initConfig)(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new SanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _fetch(\n        this,\n        this.#httpRequest,\n        this.#clientConfig.stega,\n        query,\n        params,\n        options\n      )\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_getDocument(this, this.#httpRequest, id, options));\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_getDocuments(this, this.#httpRequest, ids, options));\n  }\n  create(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _create(this, this.#httpRequest, document, \"create\", options)\n    );\n  }\n  createIfNotExists(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _createIfNotExists(this, this.#httpRequest, document, options)\n    );\n  }\n  createOrReplace(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _createOrReplace(this, this.#httpRequest, document, options)\n    );\n  }\n  createVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"createVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId }, versionPublishedId = publishedId || (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.getPublishedId)(document._id);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_25__.firstValueFrom)(\n      _createVersion(\n        this,\n        this.#httpRequest,\n        documentVersion,\n        versionPublishedId,\n        options\n      )\n    );\n  }\n  delete(selection, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_delete(this, this.#httpRequest, selection, options));\n  }\n  /**\n   * @public\n   *\n   * Deletes the draft or release version of a document.\n   *\n   * @remarks\n   * * Discarding a version with no `releaseId` will discard the draft version of the published document.\n   * * If the draft or release version does not exist, any error will throw.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to discard the document from.\n   *   - `publishedId` - The published ID of the document to discard.\n   * @param purge - if `true` the document history is also discarded.\n   * @param options - Additional action options.\n   * @returns a promise that resolves to the `transactionId`.\n   *\n   * @example Discarding a release version of a document\n   * ```ts\n   * client.discardVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be discarded.\n   * ```\n   *\n   * @example Discarding a draft version of a document\n   * ```ts\n   * client.discardVersion({publishedId: 'myDocument'})\n   * // The document with the ID `drafts.myDocument` will be discarded.\n   * ```\n   */\n  discardVersion({ releaseId, publishedId }, purge, options) {\n    const documentVersionId = getDocumentVersionId(publishedId, releaseId);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _discardVersion(this, this.#httpRequest, documentVersionId, purge, options)\n    );\n  }\n  replaceVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"replaceVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_25__.firstValueFrom)(\n      _replaceVersion(this, this.#httpRequest, documentVersion, options)\n    );\n  }\n  /**\n   * @public\n   *\n   * Used to indicate when a document within a release should be unpublished when\n   * the release is run.\n   *\n   * @remarks\n   * * If the published document does not exist, an error will be thrown.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to unpublish the document from.\n   *   - `publishedId` - The published ID of the document to unpublish.\n   * @param options - Additional action options.\n   * @returns a promise that resolves to the `transactionId`.\n   *\n   * @example Unpublishing a release version of a published document\n   * ```ts\n   * await client.unpublishVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be unpublished. when `myRelease` is run.\n   * ```\n   */\n  unpublishVersion({ releaseId, publishedId }, options) {\n    const versionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_11__.getVersionId)(publishedId, releaseId);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(\n      _unpublishVersion(this, this.#httpRequest, versionId, publishedId, options)\n    );\n  }\n  mutate(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_mutate(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId, operations) {\n    return new Patch(documentId, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new Transaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   * Returns a promise that resolves to the transaction result\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_action(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Perform a request against the Sanity API\n   * NOTE: Only use this for Sanity API endpoints, not for your own APIs!\n   *\n   * @param options - Request options\n   * @returns Promise resolving to the response body\n   */\n  request(options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_request(this, this.#httpRequest, options));\n  }\n  /**\n   * Perform an HTTP request a `/data` sub-endpoint\n   * NOTE: Considered internal, thus marked as deprecated. Use `request` instead.\n   *\n   * @deprecated - Use `request()` or your own HTTP library instead\n   * @param endpoint - Endpoint to hit (mutate, query etc)\n   * @param body - Request body\n   * @param options - Request options\n   * @internal\n   */\n  dataRequest(endpoint, body, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.lastValueFrom)(_dataRequest(this, this.#httpRequest, endpoint, body, options));\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nfunction defineCreateClientExports(envMiddleware, ClassConstructor) {\n  return { requester: defineHttpRequest(envMiddleware), createClient: (config) => {\n    const clientRequester = defineHttpRequest(envMiddleware);\n    return new ClassConstructor(\n      (options, requester2) => (requester2 || clientRequester)({\n        maxRedirects: 0,\n        maxRetries: config.maxRetries,\n        retryDelay: config.retryDelay,\n        ...options\n      }),\n      config\n    );\n  } };\n}\nfunction defineDeprecatedCreateClient(createClient2) {\n  return function(config) {\n    return (0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_7__.printNoDefaultExport)(), createClient2(config);\n  };\n}\nvar name = \"@sanity/client\", version = \"7.2.1\";\nconst middleware = [\n  (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.debug)({ verbose: !0, namespace: \"sanity:client\" }),\n  (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.headers)({ \"User-Agent\": `${name} ${version}` }),\n  // Enable keep-alive, and in addition limit the number of sockets that can be opened.\n  // This avoids opening too many connections to the server if someone tries to execute\n  // a bunch of requests in parallel. It's recommended to have a concurrency limit\n  // at a \"higher limit\" (i.e. you shouldn't actually execute hundreds of requests in parallel),\n  // and this is mainly to minimize the impact for the network and server.\n  //\n  // We're currently matching the same defaults as browsers:\n  // https://stackoverflow.com/questions/26003756/is-there-a-limit-practical-or-otherwise-to-the-number-of-web-sockets-a-page-op\n  (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.agent)({\n    keepAlive: !0,\n    maxSockets: 30,\n    maxTotalSockets: 256\n  })\n], exp = defineCreateClientExports(middleware, SanityClient), requester = exp.requester, createClient = exp.createClient, deprecatedCreateClient = defineDeprecatedCreateClient(createClient);\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/client/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/color/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/color/dist/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COLOR_HUES: () => (/* binding */ COLOR_HUES),\n/* harmony export */   COLOR_TINTS: () => (/* binding */ COLOR_TINTS),\n/* harmony export */   black: () => (/* binding */ black),\n/* harmony export */   blue: () => (/* binding */ blue),\n/* harmony export */   buildTints: () => (/* binding */ buildTints),\n/* harmony export */   color: () => (/* binding */ color),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   cyan: () => (/* binding */ cyan),\n/* harmony export */   darken: () => (/* binding */ darken),\n/* harmony export */   gray: () => (/* binding */ gray),\n/* harmony export */   green: () => (/* binding */ green),\n/* harmony export */   hexToRgb: () => (/* binding */ hexToRgb),\n/* harmony export */   hslToRgb: () => (/* binding */ hslToRgb),\n/* harmony export */   hues: () => (/* binding */ hues),\n/* harmony export */   limit: () => (/* binding */ limit),\n/* harmony export */   magenta: () => (/* binding */ magenta),\n/* harmony export */   orange: () => (/* binding */ orange),\n/* harmony export */   purple: () => (/* binding */ purple),\n/* harmony export */   red: () => (/* binding */ red),\n/* harmony export */   rgbToHex: () => (/* binding */ rgbToHex),\n/* harmony export */   rgbToHsl: () => (/* binding */ rgbToHsl),\n/* harmony export */   screen: () => (/* binding */ screen),\n/* harmony export */   white: () => (/* binding */ white),\n/* harmony export */   yellow: () => (/* binding */ yellow)\n/* harmony export */ });\nconst COLOR_HUES = [\n  \"gray\",\n  \"blue\",\n  \"purple\",\n  \"magenta\",\n  \"red\",\n  \"orange\",\n  \"yellow\",\n  \"green\",\n  \"cyan\"\n], COLOR_TINTS = [\n  \"50\",\n  \"100\",\n  \"200\",\n  \"300\",\n  \"400\",\n  \"500\",\n  \"600\",\n  \"700\",\n  \"800\",\n  \"900\",\n  \"950\"\n];\nfunction hslToRgb(hsl) {\n  const h = hsl[0], s = hsl[1] / 100, l = hsl[2] / 100, k = (n) => (n + h / 30) % 12, a = s * Math.min(l, 1 - l), f = (n) => l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\n  return [255 * f(0), 255 * f(8), 255 * f(4)];\n}\nfunction rgbToHex([r, g, b]) {\n  const _r = Math.round(r), _g = Math.round(g), _b = Math.round(b);\n  return \"#\" + ((1 << 24) + (_r << 16) + (_g << 8) + _b).toString(16).slice(1);\n}\nfunction buildTints(options) {\n  const { hueKey, color: color2 } = options;\n  return COLOR_TINTS.reduce((acc, tintKey) => {\n    const tint = Number(tintKey), rgb = hslToRgb(color2.tints[tintKey].hsl), hex = rgbToHex([Math.round(rgb[0]), Math.round(rgb[1]), Math.round(rgb[2])]);\n    return acc[tintKey] = {\n      title: `${hueKey.slice(0, 1).toUpperCase()}${hueKey.slice(1)} ${tint}`,\n      hex\n    }, acc;\n  }, {});\n}\nconst black = {\n  title: \"Black\",\n  hex: \"#0d0e12\"\n}, white = {\n  title: \"White\",\n  hex: \"#ffffff\"\n}, gray = {\n  50: {\n    title: \"Gray 50\",\n    hex: \"#f6f6f8\"\n  },\n  100: {\n    title: \"Gray 100\",\n    hex: \"#eeeef1\"\n  },\n  200: {\n    title: \"Gray 200\",\n    hex: \"#e3e4e8\"\n  },\n  300: {\n    title: \"Gray 300\",\n    hex: \"#bbbdc9\"\n  },\n  400: {\n    title: \"Gray 400\",\n    hex: \"#9499ad\"\n  },\n  500: {\n    title: \"Gray 500\",\n    hex: \"#727892\"\n  },\n  600: {\n    title: \"Gray 600\",\n    hex: \"#515870\"\n  },\n  700: {\n    title: \"Gray 700\",\n    hex: \"#383d51\"\n  },\n  800: {\n    title: \"Gray 800\",\n    hex: \"#252837\"\n  },\n  900: {\n    title: \"Gray 900\",\n    hex: \"#1b1d27\"\n  },\n  950: {\n    title: \"Gray 950\",\n    hex: \"#13141b\"\n  }\n}, blue = {\n  50: {\n    title: \"Blue 50\",\n    hex: \"#f5f8ff\"\n  },\n  100: {\n    title: \"Blue 100\",\n    hex: \"#e5edff\"\n  },\n  200: {\n    title: \"Blue 200\",\n    hex: \"#dbe5ff\"\n  },\n  300: {\n    title: \"Blue 300\",\n    hex: \"#a8bfff\"\n  },\n  400: {\n    title: \"Blue 400\",\n    hex: \"#7595ff\"\n  },\n  500: {\n    title: \"Blue 500\",\n    hex: \"#556bfc\"\n  },\n  600: {\n    title: \"Blue 600\",\n    hex: \"#4043e7\"\n  },\n  700: {\n    title: \"Blue 700\",\n    hex: \"#2927aa\"\n  },\n  800: {\n    title: \"Blue 800\",\n    hex: \"#192457\"\n  },\n  900: {\n    title: \"Blue 900\",\n    hex: \"#161a41\"\n  },\n  950: {\n    title: \"Blue 950\",\n    hex: \"#101228\"\n  }\n}, purple = {\n  50: {\n    title: \"Purple 50\",\n    hex: \"#f8f5ff\"\n  },\n  100: {\n    title: \"Purple 100\",\n    hex: \"#f1ebff\"\n  },\n  200: {\n    title: \"Purple 200\",\n    hex: \"#ece1fe\"\n  },\n  300: {\n    title: \"Purple 300\",\n    hex: \"#ccb1fc\"\n  },\n  400: {\n    title: \"Purple 400\",\n    hex: \"#b087f7\"\n  },\n  500: {\n    title: \"Purple 500\",\n    hex: \"#8f57ef\"\n  },\n  600: {\n    title: \"Purple 600\",\n    hex: \"#721fe5\"\n  },\n  700: {\n    title: \"Purple 700\",\n    hex: \"#4c1a9e\"\n  },\n  800: {\n    title: \"Purple 800\",\n    hex: \"#2f1862\"\n  },\n  900: {\n    title: \"Purple 900\",\n    hex: \"#23173f\"\n  },\n  950: {\n    title: \"Purple 950\",\n    hex: \"#181128\"\n  }\n}, magenta = {\n  50: {\n    title: \"Magenta 50\",\n    hex: \"#fef6f9\"\n  },\n  100: {\n    title: \"Magenta 100\",\n    hex: \"#fde8ef\"\n  },\n  200: {\n    title: \"Magenta 200\",\n    hex: \"#fcdee9\"\n  },\n  300: {\n    title: \"Magenta 300\",\n    hex: \"#f7abc5\"\n  },\n  400: {\n    title: \"Magenta 400\",\n    hex: \"#f0709b\"\n  },\n  500: {\n    title: \"Magenta 500\",\n    hex: \"#e72767\"\n  },\n  600: {\n    title: \"Magenta 600\",\n    hex: \"#b11651\"\n  },\n  700: {\n    title: \"Magenta 700\",\n    hex: \"#7c1342\"\n  },\n  800: {\n    title: \"Magenta 800\",\n    hex: \"#4b1130\"\n  },\n  900: {\n    title: \"Magenta 900\",\n    hex: \"#341325\"\n  },\n  950: {\n    title: \"Magenta 950\",\n    hex: \"#1f0f14\"\n  }\n}, red = {\n  50: {\n    title: \"Red 50\",\n    hex: \"#fff6f5\"\n  },\n  100: {\n    title: \"Red 100\",\n    hex: \"#ffe7e5\"\n  },\n  200: {\n    title: \"Red 200\",\n    hex: \"#ffdedc\"\n  },\n  300: {\n    title: \"Red 300\",\n    hex: \"#fdada5\"\n  },\n  400: {\n    title: \"Red 400\",\n    hex: \"#f77769\"\n  },\n  500: {\n    title: \"Red 500\",\n    hex: \"#ef4434\"\n  },\n  600: {\n    title: \"Red 600\",\n    hex: \"#cc2819\"\n  },\n  700: {\n    title: \"Red 700\",\n    hex: \"#8b2018\"\n  },\n  800: {\n    title: \"Red 800\",\n    hex: \"#4d1714\"\n  },\n  900: {\n    title: \"Red 900\",\n    hex: \"#321615\"\n  },\n  950: {\n    title: \"Red 950\",\n    hex: \"#1e1011\"\n  }\n}, orange = {\n  50: {\n    title: \"Orange 50\",\n    hex: \"#fff7f0\"\n  },\n  100: {\n    title: \"Orange 100\",\n    hex: \"#ffeadb\"\n  },\n  200: {\n    title: \"Orange 200\",\n    hex: \"#ffddc7\"\n  },\n  300: {\n    title: \"Orange 300\",\n    hex: \"#ffb685\"\n  },\n  400: {\n    title: \"Orange 400\",\n    hex: \"#ff8e42\"\n  },\n  500: {\n    title: \"Orange 500\",\n    hex: \"#fa6400\"\n  },\n  600: {\n    title: \"Orange 600\",\n    hex: \"#b14802\"\n  },\n  700: {\n    title: \"Orange 700\",\n    hex: \"#7c3404\"\n  },\n  800: {\n    title: \"Orange 800\",\n    hex: \"#461e07\"\n  },\n  900: {\n    title: \"Orange 900\",\n    hex: \"#32160b\"\n  },\n  950: {\n    title: \"Orange 950\",\n    hex: \"#21120d\"\n  }\n}, yellow = {\n  50: {\n    title: \"Yellow 50\",\n    hex: \"#fefae1\"\n  },\n  100: {\n    title: \"Yellow 100\",\n    hex: \"#fcf3bb\"\n  },\n  200: {\n    title: \"Yellow 200\",\n    hex: \"#f9e994\"\n  },\n  300: {\n    title: \"Yellow 300\",\n    hex: \"#f7d455\"\n  },\n  400: {\n    title: \"Yellow 400\",\n    hex: \"#f9bc15\"\n  },\n  500: {\n    title: \"Yellow 500\",\n    hex: \"#d28a04\"\n  },\n  600: {\n    title: \"Yellow 600\",\n    hex: \"#965908\"\n  },\n  700: {\n    title: \"Yellow 700\",\n    hex: \"#653a0b\"\n  },\n  800: {\n    title: \"Yellow 800\",\n    hex: \"#3b220c\"\n  },\n  900: {\n    title: \"Yellow 900\",\n    hex: \"#271a11\"\n  },\n  950: {\n    title: \"Yellow 950\",\n    hex: \"#181410\"\n  }\n}, green = {\n  50: {\n    title: \"Green 50\",\n    hex: \"#e7fef5\"\n  },\n  100: {\n    title: \"Green 100\",\n    hex: \"#c5fce8\"\n  },\n  200: {\n    title: \"Green 200\",\n    hex: \"#a9f9dc\"\n  },\n  300: {\n    title: \"Green 300\",\n    hex: \"#59f3ba\"\n  },\n  400: {\n    title: \"Green 400\",\n    hex: \"#0ff0a1\"\n  },\n  500: {\n    title: \"Green 500\",\n    hex: \"#04b97a\"\n  },\n  600: {\n    title: \"Green 600\",\n    hex: \"#01794f\"\n  },\n  700: {\n    title: \"Green 700\",\n    hex: \"#015133\"\n  },\n  800: {\n    title: \"Green 800\",\n    hex: \"#023120\"\n  },\n  900: {\n    title: \"Green 900\",\n    hex: \"#06231a\"\n  },\n  950: {\n    title: \"Green 950\",\n    hex: \"#071715\"\n  }\n}, cyan = {\n  50: {\n    title: \"Cyan 50\",\n    hex: \"#e7fefe\"\n  },\n  100: {\n    title: \"Cyan 100\",\n    hex: \"#c5fcfc\"\n  },\n  200: {\n    title: \"Cyan 200\",\n    hex: \"#96f8f8\"\n  },\n  300: {\n    title: \"Cyan 300\",\n    hex: \"#62efef\"\n  },\n  400: {\n    title: \"Cyan 400\",\n    hex: \"#18e2e2\"\n  },\n  500: {\n    title: \"Cyan 500\",\n    hex: \"#04b8be\"\n  },\n  600: {\n    title: \"Cyan 600\",\n    hex: \"#037782\"\n  },\n  700: {\n    title: \"Cyan 700\",\n    hex: \"#024950\"\n  },\n  800: {\n    title: \"Cyan 800\",\n    hex: \"#042f34\"\n  },\n  900: {\n    title: \"Cyan 900\",\n    hex: \"#072227\"\n  },\n  950: {\n    title: \"Cyan 950\",\n    hex: \"#0d181c\"\n  }\n}, hues = { gray, blue, purple, magenta, red, orange, yellow, green, cyan }, color = { black, white, ...hues }, config = {\n  black: {\n    title: \"Black\",\n    hsl: [225, 16, 6]\n  },\n  white: {\n    title: \"White\",\n    hsl: [0, 0, 100]\n  },\n  gray: {\n    title: \"Gray\",\n    tints: {\n      50: {\n        title: \"Gray 50\",\n        hsl: [240, 12, 97]\n      },\n      100: {\n        title: \"Gray 100\",\n        hsl: [240, 10, 94]\n      },\n      200: {\n        title: \"Gray 200\",\n        hsl: [231, 10, 90]\n      },\n      300: {\n        title: \"Gray 300\",\n        hsl: [232, 11, 76]\n      },\n      400: {\n        title: \"Gray 400\",\n        hsl: [228, 13, 63]\n      },\n      500: {\n        title: \"Gray 500\",\n        hsl: [229, 13, 51]\n      },\n      600: {\n        title: \"Gray 600\",\n        hsl: [228, 16, 38]\n      },\n      700: {\n        title: \"Gray 700\",\n        hsl: [229, 18, 27]\n      },\n      800: {\n        title: \"Gray 800\",\n        hsl: [229, 19, 18]\n      },\n      900: {\n        title: \"Gray 900\",\n        hsl: [228, 19, 13]\n      },\n      950: {\n        title: \"Gray 950\",\n        hsl: [233, 17, 9]\n      }\n    }\n  },\n  blue: {\n    title: \"Blue\",\n    tints: {\n      50: {\n        title: \"Blue 50\",\n        hsl: [222, 100, 98]\n      },\n      100: {\n        title: \"Blue 100\",\n        hsl: [222, 100, 95]\n      },\n      200: {\n        title: \"Blue 200\",\n        hsl: [223, 100, 93]\n      },\n      300: {\n        title: \"Blue 300\",\n        hsl: [224, 100, 83]\n      },\n      400: {\n        title: \"Blue 400\",\n        hsl: [226, 100, 73]\n      },\n      500: {\n        title: \"Blue 500\",\n        hsl: [232, 96, 66]\n      },\n      600: {\n        title: \"Blue 600\",\n        hsl: [239, 78, 58]\n      },\n      700: {\n        title: \"Blue 700\",\n        hsl: [241, 63, 41]\n      },\n      800: {\n        title: \"Blue 800\",\n        hsl: [230, 55, 22]\n      },\n      900: {\n        title: \"Blue 900\",\n        hsl: [234, 49, 17]\n      },\n      950: {\n        title: \"Blue 950\",\n        hsl: [235, 43, 11]\n      }\n    }\n  },\n  purple: {\n    title: \"Purple\",\n    tints: {\n      50: {\n        title: \"Purple 50\",\n        hsl: [260, 95, 98]\n      },\n      100: {\n        title: \"Purple 100\",\n        hsl: [260, 98, 96]\n      },\n      200: {\n        title: \"Purple 200\",\n        hsl: [263, 96, 94]\n      },\n      300: {\n        title: \"Purple 300\",\n        hsl: [262, 92, 84]\n      },\n      400: {\n        title: \"Purple 400\",\n        hsl: [262, 88, 75]\n      },\n      500: {\n        title: \"Purple 500\",\n        hsl: [262, 83, 64]\n      },\n      600: {\n        title: \"Purple 600\",\n        hsl: [265, 79, 51]\n      },\n      700: {\n        title: \"Purple 700\",\n        hsl: [263, 72, 36]\n      },\n      800: {\n        title: \"Purple 800\",\n        hsl: [258, 60, 24]\n      },\n      900: {\n        title: \"Purple 900\",\n        hsl: [257, 46, 17]\n      },\n      950: {\n        title: \"Purple 950\",\n        hsl: [260, 41, 11]\n      }\n    }\n  },\n  magenta: {\n    title: \"Magenta\",\n    tints: {\n      50: {\n        title: \"Magenta 50\",\n        hsl: [340, 82, 98]\n      },\n      100: {\n        title: \"Magenta 100\",\n        hsl: [339, 83, 95]\n      },\n      200: {\n        title: \"Magenta 200\",\n        hsl: [339, 83, 93]\n      },\n      300: {\n        title: \"Magenta 300\",\n        hsl: [340, 82, 82]\n      },\n      400: {\n        title: \"Magenta 400\",\n        hsl: [340, 81, 69]\n      },\n      500: {\n        title: \"Magenta 500\",\n        hsl: [340, 80, 53]\n      },\n      600: {\n        title: \"Magenta 600\",\n        hsl: [337, 78, 39]\n      },\n      700: {\n        title: \"Magenta 700\",\n        hsl: [333, 73, 28]\n      },\n      800: {\n        title: \"Magenta 800\",\n        hsl: [328, 63, 18]\n      },\n      900: {\n        title: \"Magenta 900\",\n        hsl: [327, 46, 14]\n      },\n      950: {\n        title: \"Magenta 950\",\n        hsl: [341, 35, 9]\n      }\n    }\n  },\n  red: {\n    title: \"Red\",\n    tints: {\n      50: {\n        title: \"Red 50\",\n        hsl: [5, 100, 98]\n      },\n      100: {\n        title: \"Red 100\",\n        hsl: [4, 100, 95]\n      },\n      200: {\n        title: \"Red 200\",\n        hsl: [4, 98, 93]\n      },\n      300: {\n        title: \"Red 300\",\n        hsl: [5, 95, 82]\n      },\n      400: {\n        title: \"Red 400\",\n        hsl: [6, 90, 69]\n      },\n      500: {\n        title: \"Red 500\",\n        hsl: [5, 85, 57]\n      },\n      600: {\n        title: \"Red 600\",\n        hsl: [5, 78, 45]\n      },\n      700: {\n        title: \"Red 700\",\n        hsl: [4, 70, 32]\n      },\n      800: {\n        title: \"Red 800\",\n        hsl: [3, 58, 19]\n      },\n      900: {\n        title: \"Red 900\",\n        hsl: [2, 41, 14]\n      },\n      950: {\n        title: \"Red 950\",\n        hsl: [356, 30, 9]\n      }\n    }\n  },\n  orange: {\n    title: \"Orange\",\n    tints: {\n      50: {\n        title: \"Orange 50\",\n        hsl: [28, 100, 97]\n      },\n      100: {\n        title: \"Orange 100\",\n        hsl: [25, 100, 93]\n      },\n      200: {\n        title: \"Orange 200\",\n        hsl: [24, 100, 89]\n      },\n      300: {\n        title: \"Orange 300\",\n        hsl: [24, 100, 76]\n      },\n      400: {\n        title: \"Orange 400\",\n        hsl: [24, 100, 63]\n      },\n      500: {\n        title: \"Orange 500\",\n        hsl: [24, 100, 49]\n      },\n      600: {\n        title: \"Orange 600\",\n        hsl: [24, 98, 35]\n      },\n      700: {\n        title: \"Orange 700\",\n        hsl: [24, 94, 25]\n      },\n      800: {\n        title: \"Orange 800\",\n        hsl: [22, 82, 15]\n      },\n      900: {\n        title: \"Orange 900\",\n        hsl: [17, 65, 12]\n      },\n      950: {\n        title: \"Orange 950\",\n        hsl: [14, 43, 9]\n      }\n    }\n  },\n  yellow: {\n    title: \"Yellow\",\n    tints: {\n      50: {\n        title: \"Yellow 50\",\n        hsl: [51, 94, 94]\n      },\n      100: {\n        title: \"Yellow 100\",\n        hsl: [52, 91, 86]\n      },\n      200: {\n        title: \"Yellow 200\",\n        hsl: [50, 90, 78]\n      },\n      300: {\n        title: \"Yellow 300\",\n        hsl: [47, 91, 65]\n      },\n      400: {\n        title: \"Yellow 400\",\n        hsl: [44, 95, 53]\n      },\n      500: {\n        title: \"Yellow 500\",\n        hsl: [39, 96, 42]\n      },\n      600: {\n        title: \"Yellow 600\",\n        hsl: [34, 90, 31]\n      },\n      700: {\n        title: \"Yellow 700\",\n        hsl: [31, 80, 22]\n      },\n      800: {\n        title: \"Yellow 800\",\n        hsl: [28, 66, 14]\n      },\n      900: {\n        title: \"Yellow 900\",\n        hsl: [24, 40, 11]\n      },\n      950: {\n        title: \"Yellow 950\",\n        hsl: [24, 20, 8]\n      }\n    }\n  },\n  green: {\n    title: \"Green\",\n    tints: {\n      50: {\n        title: \"Green 50\",\n        hsl: [157, 89, 95]\n      },\n      100: {\n        title: \"Green 100\",\n        hsl: [158, 89, 88]\n      },\n      200: {\n        title: \"Green 200\",\n        hsl: [158, 87, 82]\n      },\n      300: {\n        title: \"Green 300\",\n        hsl: [158, 86, 65]\n      },\n      400: {\n        title: \"Green 400\",\n        hsl: [159, 88, 50]\n      },\n      500: {\n        title: \"Green 500\",\n        hsl: [159, 96, 37]\n      },\n      600: {\n        title: \"Green 600\",\n        hsl: [159, 98, 24]\n      },\n      700: {\n        title: \"Green 700\",\n        hsl: [158, 98, 16]\n      },\n      800: {\n        title: \"Green 800\",\n        hsl: [158, 91, 10]\n      },\n      900: {\n        title: \"Green 900\",\n        hsl: [162, 72, 8]\n      },\n      950: {\n        title: \"Green 950\",\n        hsl: [172, 51, 6]\n      }\n    }\n  },\n  cyan: {\n    title: \"Cyan\",\n    tints: {\n      50: {\n        title: \"Cyan 50\",\n        hsl: [180, 92, 95]\n      },\n      100: {\n        title: \"Cyan 100\",\n        hsl: [180, 91, 88]\n      },\n      200: {\n        title: \"Cyan 200\",\n        hsl: [180, 87, 78]\n      },\n      300: {\n        title: \"Cyan 300\",\n        hsl: [180, 81, 66]\n      },\n      400: {\n        title: \"Cyan 400\",\n        hsl: [180, 81, 49]\n      },\n      500: {\n        title: \"Cyan 500\",\n        hsl: [182, 96, 38]\n      },\n      600: {\n        title: \"Cyan 600\",\n        hsl: [185, 96, 26]\n      },\n      700: {\n        title: \"Cyan 700\",\n        hsl: [185, 95, 16]\n      },\n      800: {\n        title: \"Cyan 800\",\n        hsl: [187, 86, 11]\n      },\n      900: {\n        title: \"Cyan 900\",\n        hsl: [188, 68, 9]\n      },\n      950: {\n        title: \"Cyan 950\",\n        hsl: [196, 37, 8]\n      }\n    }\n  }\n};\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!result)\n    throw new Error(\"input is not valid hex\");\n  return [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n}\nfunction rgbToHsl([r, g, b]) {\n  r /= 255, g /= 255, b /= 255;\n  const cmin = Math.min(r, g, b), cmax = Math.max(r, g, b), delta = cmax - cmin;\n  let h = 0, s = 0, l = 0;\n  return delta == 0 ? h = 0 : cmax == r ? h = (g - b) / delta % 6 : cmax == g ? h = (b - r) / delta + 2 : h = (r - g) / delta + 4, h = Math.round(h * 60), h < 0 && (h += 360), l = (cmax + cmin) / 2, s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1)), s = +(s * 100).toFixed(0), l = +(l * 100).toFixed(0), [h, s, l];\n}\nfunction clamp(num) {\n  return Math.max(Math.min(num, 255), 0);\n}\nfunction darkenChannel(backdrop, source) {\n  return Math.min(backdrop, source);\n}\nfunction darken(b, s) {\n  return [\n    Math.round(clamp(darkenChannel(b[0] / 255, s[0] / 255) * 255)),\n    Math.round(clamp(darkenChannel(b[1] / 255, s[1] / 255) * 255)),\n    Math.round(clamp(darkenChannel(b[2] / 255, s[2] / 255) * 255))\n  ];\n}\nfunction interpolate(min, max, val) {\n  const size = max - min;\n  return min + size * val;\n}\nfunction limit(darkest, lightest, source) {\n  const r = Math.round(interpolate(darkest[0], lightest[0], source[0] / 255)), g = Math.round(interpolate(darkest[1], lightest[1], source[1] / 255)), b = Math.round(interpolate(darkest[2], lightest[2], source[2] / 255));\n  return [r, g, b];\n}\nfunction screenChannel(backdrop, source) {\n  return backdrop + source - backdrop * source;\n}\nfunction screen(b, s) {\n  return [\n    Math.round(clamp(screenChannel(b[0] / 255, s[0] / 255) * 255)),\n    Math.round(clamp(screenChannel(b[1] / 255, s[1] / 255) * 255)),\n    Math.round(clamp(screenChannel(b[2] / 255, s[2] / 255) * 255))\n  ];\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/color/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/comlink/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@sanity/comlink/dist/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DOMAIN: () => (/* binding */ DOMAIN),\n/* harmony export */   FETCH_TIMEOUT_DEFAULT: () => (/* binding */ FETCH_TIMEOUT_DEFAULT),\n/* harmony export */   HANDSHAKE_INTERVAL: () => (/* binding */ HANDSHAKE_INTERVAL),\n/* harmony export */   HANDSHAKE_MSG_TYPES: () => (/* binding */ HANDSHAKE_MSG_TYPES),\n/* harmony export */   HEARTBEAT_INTERVAL: () => (/* binding */ HEARTBEAT_INTERVAL),\n/* harmony export */   INTERNAL_MSG_TYPES: () => (/* binding */ INTERNAL_MSG_TYPES),\n/* harmony export */   MSG_DISCONNECT: () => (/* binding */ MSG_DISCONNECT),\n/* harmony export */   MSG_HANDSHAKE_ACK: () => (/* binding */ MSG_HANDSHAKE_ACK),\n/* harmony export */   MSG_HANDSHAKE_SYN: () => (/* binding */ MSG_HANDSHAKE_SYN),\n/* harmony export */   MSG_HANDSHAKE_SYN_ACK: () => (/* binding */ MSG_HANDSHAKE_SYN_ACK),\n/* harmony export */   MSG_HEARTBEAT: () => (/* binding */ MSG_HEARTBEAT),\n/* harmony export */   MSG_RESPONSE: () => (/* binding */ MSG_RESPONSE),\n/* harmony export */   RESPONSE_TIMEOUT_DEFAULT: () => (/* binding */ RESPONSE_TIMEOUT_DEFAULT),\n/* harmony export */   createConnection: () => (/* binding */ createConnection),\n/* harmony export */   createConnectionMachine: () => (/* binding */ createConnectionMachine),\n/* harmony export */   createController: () => (/* binding */ createController),\n/* harmony export */   createListenLogic: () => (/* binding */ createListenLogic),\n/* harmony export */   createNode: () => (/* binding */ createNode),\n/* harmony export */   createNodeMachine: () => (/* binding */ createNodeMachine),\n/* harmony export */   createRequestMachine: () => (/* binding */ createRequestMachine)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm/v4.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/log-b47a3833.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/raise-527db318.development.esm.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/util/pipe.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/filter.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/bufferCount.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/concatMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/take.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js\");\n\n\n\nconst listenInputFromContext = (config) => ({\n  context\n}) => {\n  const { count, include, exclude, responseType = \"message.received\" } = config;\n  return {\n    count,\n    domain: context.domain,\n    from: context.connectTo,\n    include: include ? Array.isArray(include) ? include : [include] : [],\n    exclude: exclude ? Array.isArray(exclude) ? exclude : [exclude] : [],\n    responseType,\n    target: context.target,\n    to: context.name\n  };\n}, listenFilter = (input) => (event) => {\n  const { data } = event;\n  return (input.include.length ? input.include.includes(data.type) : !0) && (input.exclude.length ? !input.exclude.includes(data.type) : !0) && data.domain === input.domain && data.from === input.from && data.to === input.to && (!input.target || event.source === input.target);\n}, eventToMessage = (type) => (event) => ({\n  type,\n  message: event\n}), messageEvents$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.defer)(\n  () => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(window, \"message\")\n), createListenLogic = (compatMap) => (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromEventObservable)(({ input }) => messageEvents$.pipe(\n  compatMap ? (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(compatMap) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)(),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.filter)(listenFilter(input)),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(eventToMessage(input.responseType)),\n  input.count ? (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.bufferCount)(input.count),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.concatMap)((arr) => arr),\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(input.count)\n  ) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)()\n)), DOMAIN = \"sanity/comlink\", RESPONSE_TIMEOUT_DEFAULT = 3e3, FETCH_TIMEOUT_DEFAULT = 1e4, HEARTBEAT_INTERVAL = 1e3, HANDSHAKE_INTERVAL = 500, MSG_RESPONSE = \"comlink/response\", MSG_HEARTBEAT = \"comlink/heartbeat\", MSG_DISCONNECT = \"comlink/disconnect\", MSG_HANDSHAKE_SYN = \"comlink/handshake/syn\", MSG_HANDSHAKE_SYN_ACK = \"comlink/handshake/syn-ack\", MSG_HANDSHAKE_ACK = \"comlink/handshake/ack\", HANDSHAKE_MSG_TYPES = [\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HANDSHAKE_ACK\n], INTERNAL_MSG_TYPES = [\n  MSG_RESPONSE,\n  MSG_DISCONNECT,\n  MSG_HEARTBEAT,\n  ...HANDSHAKE_MSG_TYPES\n], throwOnEvent = (message) => (source) => source.pipe(\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(1),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(() => {\n    throw new Error(message);\n  })\n), createRequestMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    listen: (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromEventObservable)(\n      ({\n        input\n      }) => {\n        const abortSignal$ = input.signal ? (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(input.signal, \"abort\").pipe(\n          throwOnEvent(`Request ${input.requestId} aborted`)\n        ) : rxjs__WEBPACK_IMPORTED_MODULE_10__.EMPTY, messageFilter = (event) => event.data?.type === MSG_RESPONSE && event.data?.responseTo === input.requestId && !!event.source && input.sources.has(event.source);\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(window, \"message\").pipe(\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.filter)(messageFilter),\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(input.sources.size),\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.takeUntil)(abortSignal$)\n        );\n      }\n    )\n  },\n  actions: {\n    \"send message\": ({ context }, params) => {\n      const { sources, targetOrigin } = context, { message } = params;\n      sources.forEach((source) => {\n        source.postMessage(message, { targetOrigin });\n      });\n    },\n    \"on success\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.response && context.resolvable?.resolve(context.response), {\n        type: \"request.success\",\n        requestId: self.id,\n        response: context.response,\n        responseTo: context.responseTo\n      })\n    ),\n    \"on fail\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.suppressWarnings || console.warn(\n        `[@sanity/comlink] Received no response to message '${context.type}' on client '${context.from}' (ID: '${context.id}').`\n      ), context.resolvable?.reject(new Error(\"No response received\")), { type: \"request.failed\", requestId: self.id })\n    ),\n    \"on abort\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)(\n      ({ context }) => context.parentRef,\n      ({ context, self }) => (context.resolvable?.reject(new Error(\"Request aborted\")), { type: \"request.aborted\", requestId: self.id })\n    )\n  },\n  guards: {\n    expectsResponse: ({ context }) => context.expectResponse\n  },\n  delays: {\n    initialTimeout: 0,\n    responseTimeout: ({ context }) => context.responseTimeout ?? RESPONSE_TIMEOUT_DEFAULT\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QAoC2BDAxgCwJYDswBKAOlwgBswBiAD1gBd0GwT0AzFgJ2QNwdzoKAFVyowAewCuDItTRY8hUuSoBtAAwBdRKAAOE2P1wT8ukLUQBGAEwBWEgBYAnK+eOAzB7sB2DzY8rABoQAE9rDQc3V0cNTw8fAA4NHwBfVJCFHAJiElgwfAgCKGpNHSQQAyMBU3NLBDsrDxI7DTaAjQA2OOcNDxDwhHsNJx9Ou0TOq2cJxP9HdMyMbOU8gqL8ErUrcv1DY1qK+sbm1vaPLp6+gcRnGydo9wDGycWQLKVc9AB3dGNN6jiWCwdAwMrmKoHMxHRCJRKOEiJHwuZKBZwXKzBMKIGyYkhtAkXOweTqOHw2RJvD45Ug-P4CAH0JgsNicMA8LhwAz4fKicTSWTyZafWm-f5QcEVSE1aGgepwhFIlF9aYYrGDC4+JzEppjGzOUkeGbpDIgfASCBwczU5QQ-YyuqIAC0nRuCBd+IJXu9KSpwppZEoYDt1RMsosiEcNjdVjiJEeGisiSTHkcVgWpptuXyhWKIahjqGzi1BqRJINnVcdkcbuTLS9VYC8ISfsUAbp4vzDphCHJIyjBvJNlxNmRNexQ3sJGH43GPj8jWJrZWuXYfyoEC7YcLsbrgRsjkcvkmdgNbopVhIPhVfnsh8ClMz-tWsCkmEwcHgUvt257u8v+6Hse4xnhOdZnImVidPqCRNB4JqpEAA */\n  context: ({ input }) => ({\n    channelId: input.channelId,\n    data: input.data,\n    domain: input.domain,\n    expectResponse: input.expectResponse ?? !1,\n    from: input.from,\n    id: `msg-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    parentRef: input.parentRef,\n    resolvable: input.resolvable,\n    response: null,\n    responseTimeout: input.responseTimeout,\n    responseTo: input.responseTo,\n    signal: input.signal,\n    sources: input.sources instanceof Set ? input.sources : /* @__PURE__ */ new Set([input.sources]),\n    suppressWarnings: input.suppressWarnings,\n    targetOrigin: input.targetOrigin,\n    to: input.to,\n    type: input.type\n  }),\n  initial: \"idle\",\n  on: {\n    abort: \".aborted\"\n  },\n  states: {\n    idle: {\n      after: {\n        initialTimeout: [\n          {\n            target: \"sending\"\n          }\n        ]\n      }\n    },\n    sending: {\n      entry: {\n        type: \"send message\",\n        params: ({ context }) => {\n          const { channelId, data, domain, from, id, responseTo, to, type } = context;\n          return { message: {\n            channelId,\n            data,\n            domain,\n            from,\n            id,\n            to,\n            type,\n            responseTo\n          } };\n        }\n      },\n      always: [\n        {\n          guard: \"expectsResponse\",\n          target: \"awaiting\"\n        },\n        \"success\"\n      ]\n    },\n    awaiting: {\n      invoke: {\n        id: \"listen for response\",\n        src: \"listen\",\n        input: ({ context }) => ({\n          requestId: context.id,\n          sources: context.sources,\n          signal: context.signal\n        }),\n        onError: \"aborted\"\n      },\n      after: {\n        responseTimeout: \"failed\"\n      },\n      on: {\n        message: {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n            response: ({ event }) => event.data.data,\n            responseTo: ({ event }) => event.data.responseTo\n          }),\n          target: \"success\"\n        }\n      }\n    },\n    failed: {\n      type: \"final\",\n      entry: \"on fail\"\n    },\n    success: {\n      type: \"final\",\n      entry: \"on success\"\n    },\n    aborted: {\n      type: \"final\",\n      entry: \"on abort\"\n    }\n  },\n  output: ({ context, self }) => ({\n    requestId: self.id,\n    response: context.response,\n    responseTo: context.responseTo\n  })\n}), sendBackAtInterval = (0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromCallback)(({ sendBack, input }) => {\n  const send = () => {\n    sendBack(input.event);\n  };\n  input.immediate && send();\n  const interval = setInterval(send, input.interval);\n  return () => {\n    clearInterval(interval);\n  };\n}), createConnectionMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    requestMachine: createRequestMachine(),\n    listen: createListenLogic(),\n    sendBackAtInterval\n  },\n  actions: {\n    \"buffer message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.assign({\n        buffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), [...context.buffer, event.data])\n      }), enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n        type: \"buffer.added\",\n        message: event.data\n      }));\n    }),\n    \"create request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      requests: ({ context, event, self, spawn }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"request\");\n        const requests = (Array.isArray(event.data) ? event.data : [event.data]).map((request) => {\n          const id = `req-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`;\n          return spawn(\"requestMachine\", {\n            id,\n            input: {\n              channelId: context.channelId,\n              data: request.data,\n              domain: context.domain,\n              expectResponse: request.expectResponse,\n              from: context.name,\n              parentRef: self,\n              responseTo: request.responseTo,\n              sources: context.target,\n              targetOrigin: context.targetOrigin,\n              to: context.connectTo,\n              type: request.type\n            }\n          });\n        });\n        return [...context.requests, ...requests];\n      }\n    }),\n    \"emit received message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), {\n        type: \"message\",\n        message: event.message.data\n      }));\n    }),\n    \"emit status\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)((_, params) => ({\n      type: \"status\",\n      status: params.status\n    })),\n    \"post message\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n      type: \"request\",\n      data: {\n        data: event.data.data,\n        expectResponse: !0,\n        type: event.data.type\n      }\n    })),\n    \"remove request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue, event }) => {\n      (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"request.success\", \"request.failed\", \"request.aborted\"]), (0,xstate__WEBPACK_IMPORTED_MODULE_14__.R)(event.requestId), enqueue.assign({ requests: context.requests.filter(({ id }) => id !== event.requestId) });\n    }),\n    respond: (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"response\"), {\n      type: \"request\",\n      data: {\n        data: event.data,\n        type: MSG_RESPONSE,\n        responseTo: event.respondTo\n      }\n    })),\n    \"send handshake ack\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_ACK }\n    }),\n    \"send disconnect\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(() => ({\n      type: \"request\",\n      data: { type: MSG_DISCONNECT }\n    })),\n    \"send handshake syn\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_SYN }\n    }),\n    \"send pending messages\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.raise(({ context }) => ({\n        type: \"request\",\n        data: context.buffer.map(({ data, type }) => ({ data, type }))\n      })), enqueue.emit(({ context }) => ({\n        type: \"buffer.flushed\",\n        messages: context.buffer\n      })), enqueue.assign({\n        buffer: []\n      });\n    }),\n    \"set target\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      target: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"target.set\"), event.target)\n    })\n  },\n  guards: {\n    \"has target\": ({ context }) => !!context.target,\n    \"should send heartbeats\": ({ context }) => context.heartbeat\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QGMAWBDAdpsAbAxAC7oBOMhAdLGIQNoAMAuoqAA4D2sAloV+5ixAAPRAHZRAJgoAWABz0ArHICMy2QGZZCgJwAaEAE9EE+tIrb6ANgkLl46fTuj1AXxf60WHARJgAjgCucJSwAcjIcLAMzEggHNy8-IIiCKLS2hQS6qb2yurisrL6RgjK9LIyCuqq0g7WstZuHhjYePi+gcEUAGboXLiQ0YLxPHwCsSmiCgoykpayDtqS6trqxYjKEk0gnq24FFwQA-jI-DjIdEzDnKNJExuOZpZ12eq29OrSCuupypYUojUaTKCnm5Wk2123gORzA+HilxibBuiXGoBSGnUAIU4gU9FWamUtR+lmUM1EllBEkslMUEnpkJa0JaEFgGAA1lxMFB8LADJghrERqjkhtshk3mTtNo5OpqpYfqCKhTptoqpY1WUtu4dky8BQWWz0Jzue1-EFYIjrgkxqLSupqRRPpoPqJtLI0hIioZENJJE7NnJ8ZYHVk1YyvPrDRyuTyEYLkTa7uixVlMh81KGFhS1j6EPkZlpVjTphr8mkI3sDVhWTHTQBbSLoGAUXwRLgAN0GVyFKNt91KimUFEKXvKC2s9R+6X+jipnzJeSqEJ1UKjNaNJp5EC4sFOrQuCbifeTwg2cgoym0RPxDtqkj0eaB9Ao8zSolMEivZVcq71+33c5CEgeFOCtXskzRM8EDxKRpmkSw3QJbQsmpH5tHmV8JHSbJpDsakV2aSMALOMALhAjoLXAxNbiglI-SxWw1Vw0QNDw0Qfg9KQ7EJSxHHxApK2hQCyOAiAzVgDhMGoI9hX7FMEHSF8cWkelpHURCbBsb481xAEgT9BQJCmWQsiE-URPI8TG1gWBmzAVsyLATtuyRY9ILtWoKmlL82Kqd0tAVJ91LMHFZDKIkVlkNVZHMkiDzE-Adz3UjDx7GiRQHCKnheD53k+HSSkDDIwpBVTqQwuKKEssSDTAUhCAAI3qyg0DIrd8Fkk86MQUMnVM+RynoegTDJH48hGp0vR-FDRqqKqasgOqGua9AQjATAd1NSiul6fpXOtWi7Wy19cslD4vnG7IX3oVjVDUVYEJQqrksW8SdstLqPKy0wKgG1RhtMWogqKhoMjkWp6XxUyFBe3c3tAz70vco6fq+V8PTkGUFzdQqNnELEM2yClrwwzQ4ZShKQJqr7UYU98AS0W9pT4z5pHG0yXwMkNNTyGk3B1TB2AgOBBDXXBDsyhSFG9EovQqN5i1JeRcKqw4Bkl+ToMx8x0j+EaqQ9XMSkBURMgMkEwQWKro2NWNNdPFJAzN0lJGM4slDxhBEJfXyplBd03wW1KxIdnrBxBh4JAyW75C8rJpmDqmIGWkgmpasPjqUcaHooMLHA0uU1UkJOgKW1B6rT1bWor5At0zgcTAkK7hrz1irB0D8cW0UvRPLyv07WqgNq2qAG+l9SnXUz0UOXD5xuMs3Y4+DVJBX7UiKrV6Q8gcfoJO54rFefLLqfJYX1WKYNLxL4NO1NwgA */\n  id: \"connection\",\n  context: ({ input }) => ({\n    id: input.id || `${input.name}-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    buffer: [],\n    channelId: `chn-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,\n    connectTo: input.connectTo,\n    domain: input.domain ?? DOMAIN,\n    heartbeat: input.heartbeat ?? !1,\n    name: input.name,\n    requests: [],\n    target: input.target,\n    targetOrigin: input.targetOrigin\n  }),\n  on: {\n    \"target.set\": {\n      actions: \"set target\"\n    },\n    \"request.success\": {\n      actions: \"remove request\"\n    },\n    \"request.failed\": {\n      actions: \"remove request\"\n    }\n  },\n  initial: \"idle\",\n  states: {\n    idle: {\n      entry: [{ type: \"emit status\", params: { status: \"idle\" } }],\n      on: {\n        connect: {\n          target: \"handshaking\",\n          guard: \"has target\"\n        },\n        post: {\n          actions: \"buffer message\"\n        }\n      }\n    },\n    handshaking: {\n      id: \"handshaking\",\n      entry: [{ type: \"emit status\", params: { status: \"handshaking\" } }],\n      invoke: [\n        {\n          id: \"send syn\",\n          src: \"sendBackAtInterval\",\n          input: () => ({\n            event: { type: \"syn\" },\n            interval: HANDSHAKE_INTERVAL,\n            immediate: !0\n          })\n        },\n        {\n          id: \"listen for handshake\",\n          src: \"listen\",\n          input: (input) => listenInputFromContext({\n            include: MSG_HANDSHAKE_SYN_ACK,\n            count: 1\n          })(input)\n          /* Below would maybe be more readable than transitioning to\n          'connected' on 'message', and 'ack' on exit but having onDone when\n          using passing invocations currently breaks XState Editor */\n          // onDone: {\n          //   target: 'connected',\n          //   actions: 'ack',\n          // },\n        }\n      ],\n      on: {\n        syn: {\n          actions: \"send handshake syn\"\n        },\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        \"message.received\": {\n          target: \"connected\"\n        },\n        disconnect: {\n          target: \"disconnected\"\n        }\n      },\n      exit: \"send handshake ack\"\n    },\n    connected: {\n      entry: [\"send pending messages\", { type: \"emit status\", params: { status: \"connected\" } }],\n      invoke: {\n        id: \"listen for messages\",\n        src: \"listen\",\n        input: listenInputFromContext({\n          exclude: [MSG_RESPONSE, MSG_HEARTBEAT]\n        })\n      },\n      on: {\n        post: {\n          actions: \"post message\"\n        },\n        request: {\n          actions: \"create request\"\n        },\n        response: {\n          actions: \"respond\"\n        },\n        \"message.received\": {\n          actions: \"emit received message\"\n        },\n        disconnect: {\n          target: \"disconnected\"\n        }\n      },\n      initial: \"heartbeat\",\n      states: {\n        heartbeat: {\n          initial: \"checking\",\n          states: {\n            checking: {\n              always: {\n                guard: \"should send heartbeats\",\n                target: \"sending\"\n              }\n            },\n            sending: {\n              on: {\n                \"request.failed\": {\n                  target: \"#handshaking\"\n                }\n              },\n              invoke: {\n                id: \"send heartbeat\",\n                src: \"sendBackAtInterval\",\n                input: () => ({\n                  event: { type: \"post\", data: { type: MSG_HEARTBEAT, data: void 0 } },\n                  interval: 2e3,\n                  immediate: !1\n                })\n              }\n            }\n          }\n        }\n      }\n    },\n    disconnected: {\n      id: \"disconnected\",\n      entry: [\"send disconnect\", { type: \"emit status\", params: { status: \"disconnected\" } }],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        connect: {\n          target: \"handshaking\",\n          guard: \"has target\"\n        }\n      }\n    }\n  }\n}), createConnection = (input, machine = createConnectionMachine()) => {\n  const id = input.id || `${input.name}-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`, actor = (0,xstate__WEBPACK_IMPORTED_MODULE_14__.A)(machine, {\n    input: { ...input, id }\n  }), eventHandlers = /* @__PURE__ */ new Map(), unhandledMessages = /* @__PURE__ */ new Map(), on = (type, handler, options) => {\n    const handlers = eventHandlers.get(type) || /* @__PURE__ */ new Set();\n    eventHandlers.has(type) || eventHandlers.set(type, handlers), handlers.add(handler);\n    const unhandledMessagesForType = unhandledMessages.get(type);\n    if (unhandledMessagesForType) {\n      const replayCount = options?.replay ?? 1;\n      Array.from(unhandledMessagesForType).slice(-replayCount).forEach(async ({ data, id: id2 }) => {\n        const response = await handler(data);\n        response && actor.send({\n          type: \"response\",\n          respondTo: id2,\n          data: response\n        });\n      }), unhandledMessages.delete(type);\n    }\n    return () => {\n      handlers.delete(handler);\n    };\n  }, connect = () => {\n    actor.send({ type: \"connect\" });\n  }, disconnect = () => {\n    actor.send({ type: \"disconnect\" });\n  }, onStatus = (handler, filter2) => {\n    const { unsubscribe } = actor.on(\"status\", (event) => {\n      filter2 && event.status !== filter2 || handler(event.status);\n    });\n    return unsubscribe;\n  }, setTarget = (target) => {\n    actor.send({ type: \"target.set\", target });\n  }, post = (type, data) => {\n    const _data = { type, data };\n    actor.send({ type: \"post\", data: _data });\n  };\n  actor.on(\"message\", async ({ message }) => {\n    const handlers = eventHandlers.get(message.type);\n    if (handlers) {\n      handlers.forEach(async (handler) => {\n        const response = await handler(message.data);\n        response && actor.send({ type: \"response\", respondTo: message.id, data: response });\n      });\n      return;\n    }\n    const unhandledMessagesForType = unhandledMessages.get(message.type);\n    unhandledMessagesForType ? unhandledMessagesForType.add(message) : unhandledMessages.set(message.type, /* @__PURE__ */ new Set([message]));\n  });\n  const stop = () => {\n    actor.stop();\n  }, start = () => (actor.start(), stop);\n  return {\n    actor,\n    connect,\n    disconnect,\n    id,\n    name: input.name,\n    machine,\n    on,\n    onStatus,\n    post,\n    setTarget,\n    start,\n    stop,\n    get target() {\n      return actor.getSnapshot().context.target;\n    }\n  };\n}, cleanupConnection = (connection) => {\n  connection.disconnect(), setTimeout(() => {\n    connection.stop();\n  }, 0);\n}, noop = () => {\n}, createController = (input) => {\n  const { targetOrigin } = input, targets = /* @__PURE__ */ new Set(), channels = /* @__PURE__ */ new Set();\n  return {\n    addTarget: (target) => {\n      if (targets.has(target))\n        return noop;\n      if (!targets.size || !channels.size)\n        return targets.add(target), channels.forEach((channel) => {\n          channel.connections.forEach((connection) => {\n            connection.setTarget(target), connection.connect();\n          });\n        }), () => {\n          targets.delete(target), channels.forEach((channel) => {\n            channel.connections.forEach((connection) => {\n              connection.target === target && connection.disconnect();\n            });\n          });\n        };\n      targets.add(target);\n      const targetConnections = /* @__PURE__ */ new Set();\n      return channels.forEach((channel) => {\n        const connection = createConnection(\n          {\n            ...channel.input,\n            target,\n            targetOrigin\n          },\n          channel.machine\n        );\n        targetConnections.add(connection), channel.connections.add(connection), channel.subscribers.forEach(({ type, handler, unsubscribers }) => {\n          unsubscribers.push(connection.on(type, handler));\n        }), channel.internalEventSubscribers.forEach(({ type, handler, unsubscribers }) => {\n          unsubscribers.push(connection.actor.on(type, handler).unsubscribe);\n        }), channel.statusSubscribers.forEach(({ handler, unsubscribers }) => {\n          unsubscribers.push(\n            connection.onStatus((status) => handler({ connection: connection.id, status }))\n          );\n        }), connection.start(), connection.connect();\n      }), () => {\n        targets.delete(target), targetConnections.forEach((connection) => {\n          cleanupConnection(connection), channels.forEach((channel) => {\n            channel.connections.delete(connection);\n          });\n        });\n      };\n    },\n    createChannel: (input2, machine = createConnectionMachine()) => {\n      const channel = {\n        connections: /* @__PURE__ */ new Set(),\n        input: input2,\n        internalEventSubscribers: /* @__PURE__ */ new Set(),\n        machine,\n        statusSubscribers: /* @__PURE__ */ new Set(),\n        subscribers: /* @__PURE__ */ new Set()\n      };\n      channels.add(channel);\n      const { connections, internalEventSubscribers, statusSubscribers, subscribers } = channel;\n      if (targets.size)\n        targets.forEach((target) => {\n          const connection = createConnection(\n            {\n              ...input2,\n              target,\n              targetOrigin\n            },\n            machine\n          );\n          connections.add(connection);\n        });\n      else {\n        const connection = createConnection({ ...input2, targetOrigin }, machine);\n        connections.add(connection);\n      }\n      const post = (...params) => {\n        const [type, data] = params;\n        connections.forEach((connection) => {\n          connection.post(type, data);\n        });\n      }, on = (type, handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(connection.on(type, handler));\n        });\n        const subscriber = { type, handler, unsubscribers };\n        return subscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), subscribers.delete(subscriber);\n        };\n      }, onInternalEvent = (type, handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(connection.actor.on(type, handler).unsubscribe);\n        });\n        const subscriber = { type, handler, unsubscribers };\n        return internalEventSubscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), internalEventSubscribers.delete(subscriber);\n        };\n      }, onStatus = (handler) => {\n        const unsubscribers = [];\n        connections.forEach((connection) => {\n          unsubscribers.push(\n            connection.onStatus((status) => handler({ connection: connection.id, status }))\n          );\n        });\n        const subscriber = { handler, unsubscribers };\n        return statusSubscribers.add(subscriber), () => {\n          unsubscribers.forEach((unsub) => unsub()), statusSubscribers.delete(subscriber);\n        };\n      }, stop = () => {\n        const connections2 = channel.connections;\n        connections2.forEach(cleanupConnection), connections2.clear(), channels.delete(channel);\n      };\n      return {\n        on,\n        onInternalEvent,\n        onStatus,\n        post,\n        start: () => (connections.forEach((connection) => {\n          connection.start(), connection.connect();\n        }), stop),\n        stop\n      };\n    },\n    destroy: () => {\n      channels.forEach(({ connections }) => {\n        connections.forEach(cleanupConnection), connections.clear();\n      }), channels.clear(), targets.clear();\n    }\n  };\n}, createNodeMachine = () => (0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({\n  types: {},\n  actors: {\n    requestMachine: createRequestMachine(),\n    listen: createListenLogic()\n  },\n  actions: {\n    \"buffer handshake\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      handshakeBuffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), [...context.handshakeBuffer, event])\n    }),\n    \"buffer message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.assign({\n        buffer: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), [\n          ...context.buffer,\n          {\n            data: event.data,\n            resolvable: event.resolvable,\n            options: event.options\n          }\n        ])\n      }), enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n        type: \"buffer.added\",\n        message: event.data\n      }));\n    }),\n    \"create request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      requests: ({ context, event, self, spawn }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"request\");\n        const requests = (Array.isArray(event.data) ? event.data : [event.data]).map((request) => {\n          const id = `req-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`;\n          return spawn(\"requestMachine\", {\n            id,\n            input: {\n              channelId: context.channelId,\n              data: request.data,\n              domain: context.domain,\n              expectResponse: request.expectResponse,\n              from: context.name,\n              parentRef: self,\n              resolvable: request.resolvable,\n              responseTimeout: request.options?.responseTimeout,\n              responseTo: request.responseTo,\n              signal: request.options?.signal,\n              sources: context.target,\n              suppressWarnings: request.options?.suppressWarnings,\n              targetOrigin: context.targetOrigin,\n              to: context.connectTo,\n              type: request.type\n            }\n          });\n        });\n        return [...context.requests, ...requests];\n      }\n    }),\n    \"emit heartbeat\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)(() => ({\n      type: \"heartbeat\"\n    })),\n    \"emit received message\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.emit(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"message.received\"), {\n        type: \"message\",\n        message: event.message.data\n      }));\n    }),\n    \"emit status\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)((_, params) => ({\n      type: \"status\",\n      status: params.status\n    })),\n    \"post message\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"post\"), {\n      type: \"request\",\n      data: {\n        data: event.data.data,\n        expectResponse: !!event.resolvable,\n        type: event.data.type,\n        resolvable: event.resolvable,\n        options: event.options\n      }\n    })),\n    \"process pending handshakes\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue }) => {\n      context.handshakeBuffer.forEach((event) => enqueue.raise(event)), enqueue.assign({\n        handshakeBuffer: []\n      });\n    }),\n    \"remove request\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ context, enqueue, event }) => {\n      (0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"request.success\", \"request.failed\", \"request.aborted\"]), (0,xstate__WEBPACK_IMPORTED_MODULE_14__.R)(event.requestId), enqueue.assign({ requests: context.requests.filter(({ id }) => id !== event.requestId) });\n    }),\n    \"send response\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)(({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, [\"message.received\", \"heartbeat.received\"]), {\n      type: \"request\",\n      data: {\n        type: MSG_RESPONSE,\n        responseTo: event.message.data.id,\n        data: void 0\n      }\n    })),\n    \"send handshake syn ack\": (0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({\n      type: \"request\",\n      data: { type: MSG_HANDSHAKE_SYN_ACK }\n    }),\n    \"send pending messages\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)(({ enqueue }) => {\n      enqueue.raise(({ context }) => ({\n        type: \"request\",\n        data: context.buffer.map(({ data, resolvable, options }) => ({\n          data: data.data,\n          type: data.type,\n          expectResponse: !!resolvable,\n          resolvable,\n          options\n        }))\n      })), enqueue.emit(({ context }) => ({\n        type: \"buffer.flushed\",\n        messages: context.buffer.map(({ data }) => data)\n      })), enqueue.assign({\n        buffer: []\n      });\n    }),\n    \"set connection config\": (0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({\n      channelId: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.data.channelId),\n      target: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.source || void 0),\n      targetOrigin: ({ event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(event, \"handshake.syn\"), event.message.origin)\n    })\n  },\n  guards: {\n    hasSource: ({ context }) => context.target !== null\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QDsD2EwGIBOYCOArnAC4B0sBAxpXLANoAMAuoqAA6qwCWxXqyrEAA9EAVgYAWUgEYJDUQA4JAZmUSJC0coDsAGhABPRNIYLSErdOkBOAGzbx227YUBfV-rQYc+IrDIAZgCGXAA2kIwsSCAc3Lz8giIIoiakqgBMDKbp2tYS0srp+kYI0ununuhgpFwQ4ZgQ-NVcyABuqADW1V7NdWAILe2UQfHIkZGCsTx8AtFJ6aKipAzWOtrpC7Z5BUWGiNoK6aS26RLW2tLaqkqqFSA9NX2YALa0QTCkuDRcrRHMk5xpgk5ogJLZSNZIVDoVCFLZiohbIVSLkXLZRHZDgxbHcHrV6rFiBNolNRolEVJbCsdGUzsoyhiEcllOC1DowelVmVrOUPPcqqQABZBZAQWDCjotKANJo1NqdboC4Wi8VBSXIKADeXDUbjf4kwFkkEILbg8RZMHKOzWKzKJkHJa086Xa4qZS4pUisUSqU+QgkYnsQ0zcnJaRLDbpZwKNQSBYspm2MEyC5KTnaDSSd18h7K71q32EwMxYPA0BJFLKY5yZxIrKSURM0RnFHSBTrQqQ9babQejBCr2q9XSiBcWCUfjIMCUIn6oNxEPGtTWFFR0RUy7iGzt+3Ip0XURXVZKPvVCfIKczyB+vyzqLzoGzcuIG0MGTyCztjRtjaJjbHVMNAUTdu1PUhz0vYhryLOcSwXMthBfK0ZGsLQGBZekCi0Jso1IdI23WG04zOE4wIg6coIgBox3Imdi1JRdnxNOxSHNSQkWtW0mTjMxMQ7fDzgcbNKn7WjKJeN4Pi+MAfj+e84MfUMFHbZZwxOHZNDyO09gQOQjmAhZJCM9IMjIycKOvQUwCCbBiAAI2sshpNkiB6NLJ9EIQBQbWOdJlMhYCUjbJkchXGsFmsJQMVsWl3BzKp4GiHoAXgjykgAWmkZZ6xy3LZF2EobCy6xsQWJQ42kE4FjA-EwBSxTjSRUhDgqkzgO2BxdykU4AvXFQ-KjMC8yHKV6qNJi6WOdcypcZsXGxe0JG0XySKjM5lKsMyLwsiAxsYzylDfONznUEqrmi+1ThkHqXDONbULi1wgA */\n  id: \"node\",\n  context: ({ input }) => ({\n    buffer: [],\n    channelId: null,\n    connectTo: input.connectTo,\n    domain: input.domain ?? DOMAIN,\n    handshakeBuffer: [],\n    name: input.name,\n    requests: [],\n    target: void 0,\n    targetOrigin: null\n  }),\n  // Always listen for handshake syn messages. The channel could have\n  // disconnected without being able to notify the node, and so need to\n  // re-establish the connection.\n  invoke: {\n    id: \"listen for handshake syn\",\n    src: \"listen\",\n    input: listenInputFromContext({\n      include: MSG_HANDSHAKE_SYN,\n      responseType: \"handshake.syn\"\n    })\n  },\n  on: {\n    \"request.success\": {\n      actions: \"remove request\"\n    },\n    \"request.failed\": {\n      actions: \"remove request\"\n    },\n    \"request.aborted\": {\n      actions: \"remove request\"\n    },\n    \"handshake.syn\": {\n      actions: \"set connection config\",\n      target: \".handshaking\"\n    }\n  },\n  initial: \"idle\",\n  states: {\n    idle: {\n      entry: [{ type: \"emit status\", params: { status: \"idle\" } }],\n      on: {\n        post: {\n          actions: \"buffer message\"\n        }\n      }\n    },\n    handshaking: {\n      guard: \"hasSource\",\n      entry: [\"send handshake syn ack\", { type: \"emit status\", params: { status: \"handshaking\" } }],\n      invoke: [\n        {\n          id: \"listen for handshake ack\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_HANDSHAKE_ACK,\n            count: 1,\n            // Override the default `message.received` responseType to prevent\n            // buffering the ack message. We transition to the connected state\n            // using onDone instead of listening to this event using `on`\n            responseType: \"handshake.complete\"\n          }),\n          onDone: \"connected\"\n        },\n        {\n          id: \"listen for disconnect\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_DISCONNECT,\n            count: 1,\n            responseType: \"disconnect\"\n          })\n        },\n        {\n          id: \"listen for messages\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            exclude: [\n              MSG_DISCONNECT,\n              MSG_HANDSHAKE_SYN,\n              MSG_HANDSHAKE_ACK,\n              MSG_HEARTBEAT,\n              MSG_RESPONSE\n            ]\n          })\n        }\n      ],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"buffer message\"\n        },\n        \"message.received\": {\n          actions: \"buffer handshake\"\n        },\n        disconnect: {\n          target: \"idle\"\n        }\n      }\n    },\n    connected: {\n      entry: [\n        \"process pending handshakes\",\n        \"send pending messages\",\n        { type: \"emit status\", params: { status: \"connected\" } }\n      ],\n      invoke: [\n        {\n          id: \"listen for messages\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            exclude: [\n              MSG_DISCONNECT,\n              MSG_HANDSHAKE_SYN,\n              MSG_HANDSHAKE_ACK,\n              MSG_HEARTBEAT,\n              MSG_RESPONSE\n            ]\n          })\n        },\n        {\n          id: \"listen for heartbeat\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_HEARTBEAT,\n            responseType: \"heartbeat.received\"\n          })\n        },\n        {\n          id: \"listen for disconnect\",\n          src: \"listen\",\n          input: listenInputFromContext({\n            include: MSG_DISCONNECT,\n            count: 1,\n            responseType: \"disconnect\"\n          })\n        }\n      ],\n      on: {\n        request: {\n          actions: \"create request\"\n        },\n        post: {\n          actions: \"post message\"\n        },\n        disconnect: {\n          target: \"idle\"\n        },\n        \"message.received\": {\n          actions: [\"send response\", \"emit received message\"]\n        },\n        \"heartbeat.received\": {\n          actions: [\"send response\", \"emit heartbeat\"]\n        }\n      }\n    }\n  }\n}), createNode = (input, machine = createNodeMachine()) => {\n  const actor = (0,xstate__WEBPACK_IMPORTED_MODULE_14__.A)(machine, {\n    input\n  }), eventHandlers = /* @__PURE__ */ new Map(), unhandledMessages = /* @__PURE__ */ new Map(), on = (type, handler, options) => {\n    const handlers = eventHandlers.get(type) || /* @__PURE__ */ new Set();\n    eventHandlers.has(type) || eventHandlers.set(type, handlers), handlers.add(handler);\n    const unhandledMessagesForType = unhandledMessages.get(type);\n    if (unhandledMessagesForType) {\n      const replayCount = options?.replay ?? 1;\n      Array.from(unhandledMessagesForType).slice(-replayCount).forEach(({ data }) => handler(data)), unhandledMessages.delete(type);\n    }\n    return () => {\n      handlers.delete(handler);\n    };\n  };\n  let cachedStatus;\n  const onStatus = (handler, filter2) => {\n    const { unsubscribe } = actor.on(\n      \"status\",\n      (event) => {\n        cachedStatus = event.status, !(filter2 && event.status !== filter2) && handler(event.status);\n      }\n    );\n    return cachedStatus && handler(cachedStatus), unsubscribe;\n  }, post = (type, data) => {\n    const _data = { type, data };\n    actor.send({ type: \"post\", data: _data });\n  }, fetch = (type, data, options) => {\n    const { responseTimeout = FETCH_TIMEOUT_DEFAULT, signal, suppressWarnings } = options || {}, resolvable = Promise.withResolvers(), _data = { type, data };\n    return actor.send({\n      type: \"post\",\n      data: _data,\n      resolvable,\n      options: { responseTimeout, signal, suppressWarnings }\n    }), resolvable.promise;\n  };\n  actor.on(\"message\", ({ message }) => {\n    const handlers = eventHandlers.get(message.type);\n    if (handlers) {\n      handlers.forEach((handler) => handler(message.data));\n      return;\n    }\n    const unhandledMessagesForType = unhandledMessages.get(message.type);\n    unhandledMessagesForType ? unhandledMessagesForType.add(message) : unhandledMessages.set(message.type, /* @__PURE__ */ new Set([message]));\n  });\n  const stop = () => {\n    actor.stop();\n  };\n  return {\n    actor,\n    fetch,\n    machine,\n    on,\n    onStatus,\n    post,\n    start: () => (actor.start(), stop),\n    stop\n  };\n};\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/comlink/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sanity/diff-match-patch/dist/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DIFF_DELETE: () => (/* binding */ DIFF_DELETE),\n/* harmony export */   DIFF_EQUAL: () => (/* binding */ DIFF_EQUAL),\n/* harmony export */   DIFF_INSERT: () => (/* binding */ DIFF_INSERT),\n/* harmony export */   adjustIndiciesToUcs2: () => (/* binding */ adjustIndiciesToUcs2),\n/* harmony export */   applyPatches: () => (/* binding */ apply),\n/* harmony export */   cleanupEfficiency: () => (/* binding */ cleanupEfficiency),\n/* harmony export */   cleanupSemantic: () => (/* binding */ cleanupSemantic),\n/* harmony export */   makeDiff: () => (/* binding */ diff),\n/* harmony export */   makePatches: () => (/* binding */ make),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   parsePatch: () => (/* binding */ parse),\n/* harmony export */   stringifyPatch: () => (/* binding */ stringifyPatch),\n/* harmony export */   stringifyPatches: () => (/* binding */ stringify),\n/* harmony export */   xIndex: () => (/* binding */ xIndex)\n/* harmony export */ });\nfunction cloneDiff(diff2) {\n  const [type, patch] = diff2;\n  return [type, patch];\n}\nfunction getCommonOverlap(textA, textB) {\n  let text1 = textA, text2 = textB;\n  const text1Length = text1.length, text2Length = text2.length;\n  if (text1Length === 0 || text2Length === 0)\n    return 0;\n  text1Length > text2Length ? text1 = text1.substring(text1Length - text2Length) : text1Length < text2Length && (text2 = text2.substring(0, text1Length));\n  const textLength = Math.min(text1Length, text2Length);\n  if (text1 === text2)\n    return textLength;\n  let best = 0, length = 1;\n  for (let found = 0; found !== -1; ) {\n    const pattern = text1.substring(textLength - length);\n    if (found = text2.indexOf(pattern), found === -1)\n      return best;\n    length += found, (found === 0 || text1.substring(textLength - length) === text2.substring(0, length)) && (best = length, length++);\n  }\n  return best;\n}\nfunction getCommonPrefix(text1, text2) {\n  if (!text1 || !text2 || text1[0] !== text2[0])\n    return 0;\n  let pointerMin = 0, pointerMax = Math.min(text1.length, text2.length), pointerMid = pointerMax, pointerStart = 0;\n  for (; pointerMin < pointerMid; )\n    text1.substring(pointerStart, pointerMid) === text2.substring(pointerStart, pointerMid) ? (pointerMin = pointerMid, pointerStart = pointerMin) : pointerMax = pointerMid, pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin);\n  return pointerMid;\n}\nfunction getCommonSuffix(text1, text2) {\n  if (!text1 || !text2 || text1[text1.length - 1] !== text2[text2.length - 1])\n    return 0;\n  let pointerMin = 0, pointerMax = Math.min(text1.length, text2.length), pointerMid = pointerMax, pointerEnd = 0;\n  for (; pointerMin < pointerMid; )\n    text1.substring(text1.length - pointerMid, text1.length - pointerEnd) === text2.substring(text2.length - pointerMid, text2.length - pointerEnd) ? (pointerMin = pointerMid, pointerEnd = pointerMin) : pointerMax = pointerMid, pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin);\n  return pointerMid;\n}\nfunction isHighSurrogate(char) {\n  const charCode = char.charCodeAt(0);\n  return charCode >= 55296 && charCode <= 56319;\n}\nfunction isLowSurrogate(char) {\n  const charCode = char.charCodeAt(0);\n  return charCode >= 56320 && charCode <= 57343;\n}\nfunction bisect(text1, text2, deadline) {\n  const text1Length = text1.length, text2Length = text2.length, maxD = Math.ceil((text1Length + text2Length) / 2), vOffset = maxD, vLength = 2 * maxD, v1 = new Array(vLength), v2 = new Array(vLength);\n  for (let x = 0; x < vLength; x++)\n    v1[x] = -1, v2[x] = -1;\n  v1[vOffset + 1] = 0, v2[vOffset + 1] = 0;\n  const delta = text1Length - text2Length, front = delta % 2 !== 0;\n  let k1start = 0, k1end = 0, k2start = 0, k2end = 0;\n  for (let d = 0; d < maxD && !(Date.now() > deadline); d++) {\n    for (let k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      const k1Offset = vOffset + k1;\n      let x1;\n      k1 === -d || k1 !== d && v1[k1Offset - 1] < v1[k1Offset + 1] ? x1 = v1[k1Offset + 1] : x1 = v1[k1Offset - 1] + 1;\n      let y1 = x1 - k1;\n      for (; x1 < text1Length && y1 < text2Length && text1.charAt(x1) === text2.charAt(y1); )\n        x1++, y1++;\n      if (v1[k1Offset] = x1, x1 > text1Length)\n        k1end += 2;\n      else if (y1 > text2Length)\n        k1start += 2;\n      else if (front) {\n        const k2Offset = vOffset + delta - k1;\n        if (k2Offset >= 0 && k2Offset < vLength && v2[k2Offset] !== -1) {\n          const x2 = text1Length - v2[k2Offset];\n          if (x1 >= x2)\n            return bisectSplit(text1, text2, x1, y1, deadline);\n        }\n      }\n    }\n    for (let k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      const k2Offset = vOffset + k2;\n      let x2;\n      k2 === -d || k2 !== d && v2[k2Offset - 1] < v2[k2Offset + 1] ? x2 = v2[k2Offset + 1] : x2 = v2[k2Offset - 1] + 1;\n      let y2 = x2 - k2;\n      for (; x2 < text1Length && y2 < text2Length && text1.charAt(text1Length - x2 - 1) === text2.charAt(text2Length - y2 - 1); )\n        x2++, y2++;\n      if (v2[k2Offset] = x2, x2 > text1Length)\n        k2end += 2;\n      else if (y2 > text2Length)\n        k2start += 2;\n      else if (!front) {\n        const k1Offset = vOffset + delta - k2;\n        if (k1Offset >= 0 && k1Offset < vLength && v1[k1Offset] !== -1) {\n          const x1 = v1[k1Offset], y1 = vOffset + x1 - k1Offset;\n          if (x2 = text1Length - x2, x1 >= x2)\n            return bisectSplit(text1, text2, x1, y1, deadline);\n        }\n      }\n    }\n  }\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2]\n  ];\n}\nfunction bisectSplit(text1, text2, x, y, deadline) {\n  const text1a = text1.substring(0, x), text2a = text2.substring(0, y), text1b = text1.substring(x), text2b = text2.substring(y), diffs = doDiff(text1a, text2a, { checkLines: !1, deadline }), diffsb = doDiff(text1b, text2b, { checkLines: !1, deadline });\n  return diffs.concat(diffsb);\n}\nfunction findHalfMatch(text1, text2, timeout = 1) {\n  if (timeout <= 0)\n    return null;\n  const longText = text1.length > text2.length ? text1 : text2, shortText = text1.length > text2.length ? text2 : text1;\n  if (longText.length < 4 || shortText.length * 2 < longText.length)\n    return null;\n  const halfMatch1 = halfMatchI(longText, shortText, Math.ceil(longText.length / 4)), halfMatch2 = halfMatchI(longText, shortText, Math.ceil(longText.length / 2));\n  let halfMatch;\n  if (halfMatch1 && halfMatch2)\n    halfMatch = halfMatch1[4].length > halfMatch2[4].length ? halfMatch1 : halfMatch2;\n  else {\n    if (!halfMatch1 && !halfMatch2)\n      return null;\n    halfMatch2 ? halfMatch1 || (halfMatch = halfMatch2) : halfMatch = halfMatch1;\n  }\n  if (!halfMatch)\n    throw new Error(\"Unable to find a half match.\");\n  let text1A, text1B, text2A, text2B;\n  text1.length > text2.length ? (text1A = halfMatch[0], text1B = halfMatch[1], text2A = halfMatch[2], text2B = halfMatch[3]) : (text2A = halfMatch[0], text2B = halfMatch[1], text1A = halfMatch[2], text1B = halfMatch[3]);\n  const midCommon = halfMatch[4];\n  return [text1A, text1B, text2A, text2B, midCommon];\n}\nfunction halfMatchI(longText, shortText, i) {\n  const seed = longText.slice(i, i + Math.floor(longText.length / 4));\n  let j = -1, bestCommon = \"\", bestLongTextA, bestLongTextB, bestShortTextA, bestShortTextB;\n  for (; (j = shortText.indexOf(seed, j + 1)) !== -1; ) {\n    const prefixLength = getCommonPrefix(longText.slice(i), shortText.slice(j)), suffixLength = getCommonSuffix(longText.slice(0, i), shortText.slice(0, j));\n    bestCommon.length < suffixLength + prefixLength && (bestCommon = shortText.slice(j - suffixLength, j) + shortText.slice(j, j + prefixLength), bestLongTextA = longText.slice(0, i - suffixLength), bestLongTextB = longText.slice(i + prefixLength), bestShortTextA = shortText.slice(0, j - suffixLength), bestShortTextB = shortText.slice(j + prefixLength));\n  }\n  return bestCommon.length * 2 >= longText.length ? [\n    bestLongTextA || \"\",\n    bestLongTextB || \"\",\n    bestShortTextA || \"\",\n    bestShortTextB || \"\",\n    bestCommon || \"\"\n  ] : null;\n}\nfunction charsToLines(diffs, lineArray) {\n  for (let x = 0; x < diffs.length; x++) {\n    const chars = diffs[x][1], text = [];\n    for (let y = 0; y < chars.length; y++)\n      text[y] = lineArray[chars.charCodeAt(y)];\n    diffs[x][1] = text.join(\"\");\n  }\n}\nfunction linesToChars(textA, textB) {\n  const lineArray = [], lineHash = {};\n  lineArray[0] = \"\";\n  function diffLinesToMunge(text) {\n    let chars = \"\", lineStart = 0, lineEnd = -1, lineArrayLength = lineArray.length;\n    for (; lineEnd < text.length - 1; ) {\n      lineEnd = text.indexOf(`\n`, lineStart), lineEnd === -1 && (lineEnd = text.length - 1);\n      let line = text.slice(lineStart, lineEnd + 1);\n      (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) : lineHash[line] !== void 0) ? chars += String.fromCharCode(lineHash[line]) : (lineArrayLength === maxLines && (line = text.slice(lineStart), lineEnd = text.length), chars += String.fromCharCode(lineArrayLength), lineHash[line] = lineArrayLength, lineArray[lineArrayLength++] = line), lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  let maxLines = 4e4;\n  const chars1 = diffLinesToMunge(textA);\n  maxLines = 65535;\n  const chars2 = diffLinesToMunge(textB);\n  return { chars1, chars2, lineArray };\n}\nfunction doLineModeDiff(textA, textB, opts) {\n  let text1 = textA, text2 = textB;\n  const a = linesToChars(text1, text2);\n  text1 = a.chars1, text2 = a.chars2;\n  const linearray = a.lineArray;\n  let diffs = doDiff(text1, text2, {\n    checkLines: !1,\n    deadline: opts.deadline\n  });\n  charsToLines(diffs, linearray), diffs = cleanupSemantic(diffs), diffs.push([DIFF_EQUAL, \"\"]);\n  let pointer = 0, countDelete = 0, countInsert = 0, textDelete = \"\", textInsert = \"\";\n  for (; pointer < diffs.length; ) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++, textInsert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        countDelete++, textDelete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        if (countDelete >= 1 && countInsert >= 1) {\n          diffs.splice(pointer - countDelete - countInsert, countDelete + countInsert), pointer = pointer - countDelete - countInsert;\n          const aa = doDiff(textDelete, textInsert, {\n            checkLines: !1,\n            deadline: opts.deadline\n          });\n          for (let j = aa.length - 1; j >= 0; j--)\n            diffs.splice(pointer, 0, aa[j]);\n          pointer += aa.length;\n        }\n        countInsert = 0, countDelete = 0, textDelete = \"\", textInsert = \"\";\n        break;\n      default:\n        throw new Error(\"Unknown diff operation.\");\n    }\n    pointer++;\n  }\n  return diffs.pop(), diffs;\n}\nfunction computeDiff(text1, text2, opts) {\n  let diffs;\n  if (!text1)\n    return [[DIFF_INSERT, text2]];\n  if (!text2)\n    return [[DIFF_DELETE, text1]];\n  const longtext = text1.length > text2.length ? text1 : text2, shorttext = text1.length > text2.length ? text2 : text1, i = longtext.indexOf(shorttext);\n  if (i !== -1)\n    return diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ], text1.length > text2.length && (diffs[0][0] = DIFF_DELETE, diffs[2][0] = DIFF_DELETE), diffs;\n  if (shorttext.length === 1)\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2]\n    ];\n  const halfMatch = findHalfMatch(text1, text2);\n  if (halfMatch) {\n    const text1A = halfMatch[0], text1B = halfMatch[1], text2A = halfMatch[2], text2B = halfMatch[3], midCommon = halfMatch[4], diffsA = doDiff(text1A, text2A, opts), diffsB = doDiff(text1B, text2B, opts);\n    return diffsA.concat([[DIFF_EQUAL, midCommon]], diffsB);\n  }\n  return opts.checkLines && text1.length > 100 && text2.length > 100 ? doLineModeDiff(text1, text2, opts) : bisect(text1, text2, opts.deadline);\n}\nvar __defProp$2 = Object.defineProperty, __getOwnPropSymbols$2 = Object.getOwnPropertySymbols, __hasOwnProp$2 = Object.prototype.hasOwnProperty, __propIsEnum$2 = Object.prototype.propertyIsEnumerable, __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp$2.call(b, prop) && __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b))\n      __propIsEnum$2.call(b, prop) && __defNormalProp$2(a, prop, b[prop]);\n  return a;\n};\nconst DIFF_DELETE = -1, DIFF_INSERT = 1, DIFF_EQUAL = 0;\nfunction diff(textA, textB, opts) {\n  if (textA === null || textB === null)\n    throw new Error(\"Null input. (diff)\");\n  const diffs = doDiff(textA, textB, createInternalOpts(opts || {}));\n  return adjustDiffForSurrogatePairs(diffs), diffs;\n}\nfunction doDiff(textA, textB, options) {\n  let text1 = textA, text2 = textB;\n  if (text1 === text2)\n    return text1 ? [[DIFF_EQUAL, text1]] : [];\n  let commonlength = getCommonPrefix(text1, text2);\n  const commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength), text2 = text2.substring(commonlength), commonlength = getCommonSuffix(text1, text2);\n  const commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength), text2 = text2.substring(0, text2.length - commonlength);\n  let diffs = computeDiff(text1, text2, options);\n  return commonprefix && diffs.unshift([DIFF_EQUAL, commonprefix]), commonsuffix && diffs.push([DIFF_EQUAL, commonsuffix]), diffs = cleanupMerge(diffs), diffs;\n}\nfunction createDeadLine(timeout) {\n  let t = 1;\n  return typeof timeout < \"u\" && (t = timeout <= 0 ? Number.MAX_VALUE : timeout), Date.now() + t * 1e3;\n}\nfunction createInternalOpts(opts) {\n  return __spreadValues$2({\n    checkLines: !0,\n    deadline: createDeadLine(opts.timeout || 1)\n  }, opts);\n}\nfunction combineChar(data, char, dir) {\n  return dir === 1 ? data + char : char + data;\n}\nfunction splitChar(data, dir) {\n  return dir === 1 ? [data.substring(0, data.length - 1), data[data.length - 1]] : [data.substring(1), data[0]];\n}\nfunction hasSharedChar(diffs, i, j, dir) {\n  return dir === 1 ? diffs[i][1][diffs[i][1].length - 1] === diffs[j][1][diffs[j][1].length - 1] : diffs[i][1][0] === diffs[j][1][0];\n}\nfunction deisolateChar(diffs, i, dir) {\n  const inv = dir === 1 ? -1 : 1;\n  let insertIdx = null, deleteIdx = null, j = i + dir;\n  for (; j >= 0 && j < diffs.length && (insertIdx === null || deleteIdx === null); j += dir) {\n    const [op, text2] = diffs[j];\n    if (text2.length !== 0) {\n      if (op === DIFF_INSERT) {\n        insertIdx === null && (insertIdx = j);\n        continue;\n      } else if (op === DIFF_DELETE) {\n        deleteIdx === null && (deleteIdx = j);\n        continue;\n      } else if (op === DIFF_EQUAL) {\n        if (insertIdx === null && deleteIdx === null) {\n          const [rest, char2] = splitChar(diffs[i][1], dir);\n          diffs[i][1] = rest, diffs[j][1] = combineChar(diffs[j][1], char2, inv);\n          return;\n        }\n        break;\n      }\n    }\n  }\n  if (insertIdx !== null && deleteIdx !== null && hasSharedChar(diffs, insertIdx, deleteIdx, dir)) {\n    const [insertText, insertChar] = splitChar(diffs[insertIdx][1], inv), [deleteText] = splitChar(diffs[deleteIdx][1], inv);\n    diffs[insertIdx][1] = insertText, diffs[deleteIdx][1] = deleteText, diffs[i][1] = combineChar(diffs[i][1], insertChar, dir);\n    return;\n  }\n  const [text, char] = splitChar(diffs[i][1], dir);\n  diffs[i][1] = text, insertIdx === null ? (diffs.splice(j, 0, [DIFF_INSERT, char]), deleteIdx !== null && deleteIdx >= j && deleteIdx++) : diffs[insertIdx][1] = combineChar(diffs[insertIdx][1], char, inv), deleteIdx === null ? diffs.splice(j, 0, [DIFF_DELETE, char]) : diffs[deleteIdx][1] = combineChar(diffs[deleteIdx][1], char, inv);\n}\nfunction adjustDiffForSurrogatePairs(diffs) {\n  for (let i = 0; i < diffs.length; i++) {\n    const [diffType, diffText] = diffs[i];\n    if (diffText.length === 0) continue;\n    const firstChar = diffText[0], lastChar = diffText[diffText.length - 1];\n    isHighSurrogate(lastChar) && diffType === DIFF_EQUAL && deisolateChar(diffs, i, 1), isLowSurrogate(firstChar) && diffType === DIFF_EQUAL && deisolateChar(diffs, i, -1);\n  }\n  for (let i = 0; i < diffs.length; i++)\n    diffs[i][1].length === 0 && diffs.splice(i, 1);\n}\nfunction cleanupSemantic(rawDiffs) {\n  let diffs = rawDiffs.map((diff2) => cloneDiff(diff2)), hasChanges = !1;\n  const equalities = [];\n  let equalitiesLength = 0, lastEquality = null, pointer = 0, lengthInsertions1 = 0, lengthDeletions1 = 0, lengthInsertions2 = 0, lengthDeletions2 = 0;\n  for (; pointer < diffs.length; )\n    diffs[pointer][0] === DIFF_EQUAL ? (equalities[equalitiesLength++] = pointer, lengthInsertions1 = lengthInsertions2, lengthDeletions1 = lengthDeletions2, lengthInsertions2 = 0, lengthDeletions2 = 0, lastEquality = diffs[pointer][1]) : (diffs[pointer][0] === DIFF_INSERT ? lengthInsertions2 += diffs[pointer][1].length : lengthDeletions2 += diffs[pointer][1].length, lastEquality && lastEquality.length <= Math.max(lengthInsertions1, lengthDeletions1) && lastEquality.length <= Math.max(lengthInsertions2, lengthDeletions2) && (diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality]), diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT, equalitiesLength--, equalitiesLength--, pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1, lengthInsertions1 = 0, lengthDeletions1 = 0, lengthInsertions2 = 0, lengthDeletions2 = 0, lastEquality = null, hasChanges = !0)), pointer++;\n  for (hasChanges && (diffs = cleanupMerge(diffs)), diffs = cleanupSemanticLossless(diffs), pointer = 1; pointer < diffs.length; ) {\n    if (diffs[pointer - 1][0] === DIFF_DELETE && diffs[pointer][0] === DIFF_INSERT) {\n      const deletion = diffs[pointer - 1][1], insertion = diffs[pointer][1], overlapLength1 = getCommonOverlap(deletion, insertion), overlapLength2 = getCommonOverlap(insertion, deletion);\n      overlapLength1 >= overlapLength2 ? (overlapLength1 >= deletion.length / 2 || overlapLength1 >= insertion.length / 2) && (diffs.splice(pointer, 0, [DIFF_EQUAL, insertion.substring(0, overlapLength1)]), diffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlapLength1), diffs[pointer + 1][1] = insertion.substring(overlapLength1), pointer++) : (overlapLength2 >= deletion.length / 2 || overlapLength2 >= insertion.length / 2) && (diffs.splice(pointer, 0, [DIFF_EQUAL, deletion.substring(0, overlapLength2)]), diffs[pointer - 1][0] = DIFF_INSERT, diffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlapLength2), diffs[pointer + 1][0] = DIFF_DELETE, diffs[pointer + 1][1] = deletion.substring(overlapLength2), pointer++), pointer++;\n    }\n    pointer++;\n  }\n  return diffs;\n}\nconst nonAlphaNumericRegex = /[^a-zA-Z0-9]/, whitespaceRegex = /\\s/, linebreakRegex = /[\\r\\n]/, blanklineEndRegex = /\\n\\r?\\n$/, blanklineStartRegex = /^\\r?\\n\\r?\\n/;\nfunction cleanupSemanticLossless(rawDiffs) {\n  const diffs = rawDiffs.map((diff2) => cloneDiff(diff2));\n  function diffCleanupSemanticScore(one, two) {\n    if (!one || !two)\n      return 6;\n    const char1 = one.charAt(one.length - 1), char2 = two.charAt(0), nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex), nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex), whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex), whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex), lineBreak1 = whitespace1 && char1.match(linebreakRegex), lineBreak2 = whitespace2 && char2.match(linebreakRegex), blankLine1 = lineBreak1 && one.match(blanklineEndRegex), blankLine2 = lineBreak2 && two.match(blanklineStartRegex);\n    return blankLine1 || blankLine2 ? 5 : lineBreak1 || lineBreak2 ? 4 : nonAlphaNumeric1 && !whitespace1 && whitespace2 ? 3 : whitespace1 || whitespace2 ? 2 : nonAlphaNumeric1 || nonAlphaNumeric2 ? 1 : 0;\n  }\n  let pointer = 1;\n  for (; pointer < diffs.length - 1; ) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n      let equality1 = diffs[pointer - 1][1], edit = diffs[pointer][1], equality2 = diffs[pointer + 1][1];\n      const commonOffset = getCommonSuffix(equality1, edit);\n      if (commonOffset) {\n        const commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset), edit = commonString + edit.substring(0, edit.length - commonOffset), equality2 = commonString + equality2;\n      }\n      let bestEquality1 = equality1, bestEdit = edit, bestEquality2 = equality2, bestScore = diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2);\n      for (; edit.charAt(0) === equality2.charAt(0); ) {\n        equality1 += edit.charAt(0), edit = edit.substring(1) + equality2.charAt(0), equality2 = equality2.substring(1);\n        const score = diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2);\n        score >= bestScore && (bestScore = score, bestEquality1 = equality1, bestEdit = edit, bestEquality2 = equality2);\n      }\n      diffs[pointer - 1][1] !== bestEquality1 && (bestEquality1 ? diffs[pointer - 1][1] = bestEquality1 : (diffs.splice(pointer - 1, 1), pointer--), diffs[pointer][1] = bestEdit, bestEquality2 ? diffs[pointer + 1][1] = bestEquality2 : (diffs.splice(pointer + 1, 1), pointer--));\n    }\n    pointer++;\n  }\n  return diffs;\n}\nfunction cleanupMerge(rawDiffs) {\n  let diffs = rawDiffs.map((diff2) => cloneDiff(diff2));\n  diffs.push([DIFF_EQUAL, \"\"]);\n  let pointer = 0, countDelete = 0, countInsert = 0, textDelete = \"\", textInsert = \"\", commonlength;\n  for (; pointer < diffs.length; )\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++, textInsert += diffs[pointer][1], pointer++;\n        break;\n      case DIFF_DELETE:\n        countDelete++, textDelete += diffs[pointer][1], pointer++;\n        break;\n      case DIFF_EQUAL:\n        countDelete + countInsert > 1 ? (countDelete !== 0 && countInsert !== 0 && (commonlength = getCommonPrefix(textInsert, textDelete), commonlength !== 0 && (pointer - countDelete - countInsert > 0 && diffs[pointer - countDelete - countInsert - 1][0] === DIFF_EQUAL ? diffs[pointer - countDelete - countInsert - 1][1] += textInsert.substring(\n          0,\n          commonlength\n        ) : (diffs.splice(0, 0, [DIFF_EQUAL, textInsert.substring(0, commonlength)]), pointer++), textInsert = textInsert.substring(commonlength), textDelete = textDelete.substring(commonlength)), commonlength = getCommonSuffix(textInsert, textDelete), commonlength !== 0 && (diffs[pointer][1] = textInsert.substring(textInsert.length - commonlength) + diffs[pointer][1], textInsert = textInsert.substring(0, textInsert.length - commonlength), textDelete = textDelete.substring(0, textDelete.length - commonlength))), pointer -= countDelete + countInsert, diffs.splice(pointer, countDelete + countInsert), textDelete.length && (diffs.splice(pointer, 0, [DIFF_DELETE, textDelete]), pointer++), textInsert.length && (diffs.splice(pointer, 0, [DIFF_INSERT, textInsert]), pointer++), pointer++) : pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL ? (diffs[pointer - 1][1] += diffs[pointer][1], diffs.splice(pointer, 1)) : pointer++, countInsert = 0, countDelete = 0, textDelete = \"\", textInsert = \"\";\n        break;\n      default:\n        throw new Error(\"Unknown diff operation\");\n    }\n  diffs[diffs.length - 1][1] === \"\" && diffs.pop();\n  let hasChanges = !1;\n  for (pointer = 1; pointer < diffs.length - 1; )\n    diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL && (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) === diffs[pointer - 1][1] ? (diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length), diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1], diffs.splice(pointer - 1, 1), hasChanges = !0) : diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1] && (diffs[pointer - 1][1] += diffs[pointer + 1][1], diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1], diffs.splice(pointer + 1, 1), hasChanges = !0)), pointer++;\n  return hasChanges && (diffs = cleanupMerge(diffs)), diffs;\n}\nfunction trueCount(...args) {\n  return args.reduce((n, bool) => n + (bool ? 1 : 0), 0);\n}\nfunction cleanupEfficiency(rawDiffs, editCost = 4) {\n  let diffs = rawDiffs.map((diff2) => cloneDiff(diff2)), hasChanges = !1;\n  const equalities = [];\n  let equalitiesLength = 0, lastEquality = null, pointer = 0, preIns = !1, preDel = !1, postIns = !1, postDel = !1;\n  for (; pointer < diffs.length; )\n    diffs[pointer][0] === DIFF_EQUAL ? (diffs[pointer][1].length < editCost && (postIns || postDel) ? (equalities[equalitiesLength++] = pointer, preIns = postIns, preDel = postDel, lastEquality = diffs[pointer][1]) : (equalitiesLength = 0, lastEquality = null), postIns = !1, postDel = !1) : (diffs[pointer][0] === DIFF_DELETE ? postDel = !0 : postIns = !0, lastEquality && (preIns && preDel && postIns && postDel || lastEquality.length < editCost / 2 && trueCount(preIns, preDel, postIns, postDel) === 3) && (diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality]), diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT, equalitiesLength--, lastEquality = null, preIns && preDel ? (postIns = !0, postDel = !0, equalitiesLength = 0) : (equalitiesLength--, pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1, postIns = !1, postDel = !1), hasChanges = !0)), pointer++;\n  return hasChanges && (diffs = cleanupMerge(diffs)), diffs;\n}\nvar __defProp$1 = Object.defineProperty, __getOwnPropSymbols$1 = Object.getOwnPropertySymbols, __hasOwnProp$1 = Object.prototype.hasOwnProperty, __propIsEnum$1 = Object.prototype.propertyIsEnumerable, __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b))\n      __propIsEnum$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  return a;\n};\nconst DEFAULT_OPTIONS = {\n  /**\n   * At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n   */\n  threshold: 0.5,\n  /**\n   * How far to search for a match (0 = exact location, 1000+ = broad match).\n   * A match this many characters away from the expected location will add\n   * 1.0 to the score (0.0 is a perfect match).\n   */\n  distance: 1e3\n};\nfunction applyDefaults(options) {\n  return __spreadValues$1(__spreadValues$1({}, DEFAULT_OPTIONS), options);\n}\nconst MAX_BITS$1 = 32;\nfunction bitap(text, pattern, loc, opts = {}) {\n  if (pattern.length > MAX_BITS$1)\n    throw new Error(\"Pattern too long for this browser.\");\n  const options = applyDefaults(opts), s = getAlphabetFromPattern(pattern);\n  function getBitapScore(e, x) {\n    const accuracy = e / pattern.length, proximity = Math.abs(loc - x);\n    return options.distance ? accuracy + proximity / options.distance : proximity ? 1 : accuracy;\n  }\n  let scoreThreshold = options.threshold, bestLoc = text.indexOf(pattern, loc);\n  bestLoc !== -1 && (scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold), bestLoc = text.lastIndexOf(pattern, loc + pattern.length), bestLoc !== -1 && (scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold)));\n  const matchmask = 1 << pattern.length - 1;\n  bestLoc = -1;\n  let binMin, binMid, binMax = pattern.length + text.length, lastRd = [];\n  for (let d = 0; d < pattern.length; d++) {\n    for (binMin = 0, binMid = binMax; binMin < binMid; )\n      getBitapScore(d, loc + binMid) <= scoreThreshold ? binMin = binMid : binMax = binMid, binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    binMax = binMid;\n    let start = Math.max(1, loc - binMid + 1);\n    const finish = Math.min(loc + binMid, text.length) + pattern.length, rd = new Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (let j = finish; j >= start; j--) {\n      const charMatch = s[text.charAt(j - 1)];\n      if (d === 0 ? rd[j] = (rd[j + 1] << 1 | 1) & charMatch : rd[j] = (rd[j + 1] << 1 | 1) & charMatch | ((lastRd[j + 1] | lastRd[j]) << 1 | 1) | lastRd[j + 1], rd[j] & matchmask) {\n        const score = getBitapScore(d, j - 1);\n        if (score <= scoreThreshold)\n          if (scoreThreshold = score, bestLoc = j - 1, bestLoc > loc)\n            start = Math.max(1, 2 * loc - bestLoc);\n          else\n            break;\n      }\n    }\n    if (getBitapScore(d + 1, loc) > scoreThreshold)\n      break;\n    lastRd = rd;\n  }\n  return bestLoc;\n}\nfunction getAlphabetFromPattern(pattern) {\n  const s = {};\n  for (let i = 0; i < pattern.length; i++)\n    s[pattern.charAt(i)] = 0;\n  for (let i = 0; i < pattern.length; i++)\n    s[pattern.charAt(i)] |= 1 << pattern.length - i - 1;\n  return s;\n}\nfunction match(text, pattern, searchLocation, options = {}) {\n  if (text === null || pattern === null || searchLocation === null)\n    throw new Error(\"Null input. (match())\");\n  const loc = Math.max(0, Math.min(searchLocation, text.length));\n  if (text === pattern)\n    return 0;\n  if (text.length) {\n    if (text.substring(loc, loc + pattern.length) === pattern)\n      return loc;\n  } else return -1;\n  return bitap(text, pattern, loc, options);\n}\nfunction diffText1(diffs) {\n  const text = [];\n  for (let x = 0; x < diffs.length; x++)\n    diffs[x][0] !== DIFF_INSERT && (text[x] = diffs[x][1]);\n  return text.join(\"\");\n}\nfunction diffText2(diffs) {\n  const text = [];\n  for (let x = 0; x < diffs.length; x++)\n    diffs[x][0] !== DIFF_DELETE && (text[x] = diffs[x][1]);\n  return text.join(\"\");\n}\nfunction levenshtein(diffs) {\n  let leven = 0, insertions = 0, deletions = 0;\n  for (let x = 0; x < diffs.length; x++) {\n    const op = diffs[x][0], data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        leven += Math.max(insertions, deletions), insertions = 0, deletions = 0;\n        break;\n      default:\n        throw new Error(\"Unknown diff operation.\");\n    }\n  }\n  return leven += Math.max(insertions, deletions), leven;\n}\nfunction xIndex(diffs, location) {\n  let chars1 = 0, chars2 = 0, lastChars1 = 0, lastChars2 = 0, x;\n  for (x = 0; x < diffs.length && (diffs[x][0] !== DIFF_INSERT && (chars1 += diffs[x][1].length), diffs[x][0] !== DIFF_DELETE && (chars2 += diffs[x][1].length), !(chars1 > location)); x++)\n    lastChars1 = chars1, lastChars2 = chars2;\n  return diffs.length !== x && diffs[x][0] === DIFF_DELETE ? lastChars2 : lastChars2 + (location - lastChars1);\n}\nfunction countUtf8Bytes(str) {\n  let bytes = 0;\n  for (let i = 0; i < str.length; i++) {\n    const codePoint = str.codePointAt(i);\n    if (typeof codePoint > \"u\")\n      throw new Error(\"Failed to get codepoint\");\n    bytes += utf8len(codePoint);\n  }\n  return bytes;\n}\nfunction adjustIndiciesToUcs2(patches, base, options = {}) {\n  let byteOffset = 0, idx = 0;\n  function advanceTo(target) {\n    for (; byteOffset < target; ) {\n      const codePoint = base.codePointAt(idx);\n      if (typeof codePoint > \"u\")\n        return idx;\n      byteOffset += utf8len(codePoint), codePoint > 65535 ? idx += 2 : idx += 1;\n    }\n    if (!options.allowExceedingIndices && byteOffset !== target)\n      throw new Error(\"Failed to determine byte offset\");\n    return idx;\n  }\n  const adjusted = [];\n  for (const patch of patches)\n    adjusted.push({\n      diffs: patch.diffs.map((diff2) => cloneDiff(diff2)),\n      start1: advanceTo(patch.start1),\n      start2: advanceTo(patch.start2),\n      utf8Start1: patch.utf8Start1,\n      utf8Start2: patch.utf8Start2,\n      length1: patch.length1,\n      length2: patch.length2,\n      utf8Length1: patch.utf8Length1,\n      utf8Length2: patch.utf8Length2\n    });\n  return adjusted;\n}\nfunction utf8len(codePoint) {\n  return codePoint <= 127 ? 1 : codePoint <= 2047 ? 2 : codePoint <= 65535 ? 3 : 4;\n}\nconst MAX_BITS = 32, DEFAULT_MARGIN = 4;\nfunction addPadding(patches, margin = DEFAULT_MARGIN) {\n  const paddingLength = margin;\n  let nullPadding = \"\";\n  for (let x = 1; x <= paddingLength; x++)\n    nullPadding += String.fromCharCode(x);\n  for (const p of patches)\n    p.start1 += paddingLength, p.start2 += paddingLength, p.utf8Start1 += paddingLength, p.utf8Start2 += paddingLength;\n  let patch = patches[0], diffs = patch.diffs;\n  if (diffs.length === 0 || diffs[0][0] !== DIFF_EQUAL)\n    diffs.unshift([DIFF_EQUAL, nullPadding]), patch.start1 -= paddingLength, patch.start2 -= paddingLength, patch.utf8Start1 -= paddingLength, patch.utf8Start2 -= paddingLength, patch.length1 += paddingLength, patch.length2 += paddingLength, patch.utf8Length1 += paddingLength, patch.utf8Length2 += paddingLength;\n  else if (paddingLength > diffs[0][1].length) {\n    const firstDiffLength = diffs[0][1].length, extraLength = paddingLength - firstDiffLength;\n    diffs[0][1] = nullPadding.substring(firstDiffLength) + diffs[0][1], patch.start1 -= extraLength, patch.start2 -= extraLength, patch.utf8Start1 -= extraLength, patch.utf8Start2 -= extraLength, patch.length1 += extraLength, patch.length2 += extraLength, patch.utf8Length1 += extraLength, patch.utf8Length2 += extraLength;\n  }\n  if (patch = patches[patches.length - 1], diffs = patch.diffs, diffs.length === 0 || diffs[diffs.length - 1][0] !== DIFF_EQUAL)\n    diffs.push([DIFF_EQUAL, nullPadding]), patch.length1 += paddingLength, patch.length2 += paddingLength, patch.utf8Length1 += paddingLength, patch.utf8Length2 += paddingLength;\n  else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    const extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength), patch.length1 += extraLength, patch.length2 += extraLength, patch.utf8Length1 += extraLength, patch.utf8Length2 += extraLength;\n  }\n  return nullPadding;\n}\nfunction createPatchObject(start1, start2) {\n  return {\n    diffs: [],\n    start1,\n    start2,\n    utf8Start1: start1,\n    utf8Start2: start2,\n    length1: 0,\n    length2: 0,\n    utf8Length1: 0,\n    utf8Length2: 0\n  };\n}\nfunction splitMax(patches, margin = DEFAULT_MARGIN) {\n  const patchSize = MAX_BITS;\n  for (let x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patchSize)\n      continue;\n    const bigpatch = patches[x];\n    patches.splice(x--, 1);\n    let start1 = bigpatch.start1, start2 = bigpatch.start2, preContext = \"\";\n    for (; bigpatch.diffs.length !== 0; ) {\n      const patch = createPatchObject(start1 - preContext.length, start2 - preContext.length);\n      let empty = !0;\n      if (preContext !== \"\") {\n        const precontextByteCount = countUtf8Bytes(preContext);\n        patch.length1 = preContext.length, patch.utf8Length1 = precontextByteCount, patch.length2 = preContext.length, patch.utf8Length2 = precontextByteCount, patch.diffs.push([DIFF_EQUAL, preContext]);\n      }\n      for (; bigpatch.diffs.length !== 0 && patch.length1 < patchSize - margin; ) {\n        const diffType = bigpatch.diffs[0][0];\n        let diffText = bigpatch.diffs[0][1], diffTextByteCount = countUtf8Bytes(diffText);\n        if (diffType === DIFF_INSERT) {\n          patch.length2 += diffText.length, patch.utf8Length2 += diffTextByteCount, start2 += diffText.length;\n          const diff2 = bigpatch.diffs.shift();\n          diff2 && patch.diffs.push(diff2), empty = !1;\n        } else diffType === DIFF_DELETE && patch.diffs.length === 1 && patch.diffs[0][0] === DIFF_EQUAL && diffText.length > 2 * patchSize ? (patch.length1 += diffText.length, patch.utf8Length1 += diffTextByteCount, start1 += diffText.length, empty = !1, patch.diffs.push([diffType, diffText]), bigpatch.diffs.shift()) : (diffText = diffText.substring(0, patchSize - patch.length1 - margin), diffTextByteCount = countUtf8Bytes(diffText), patch.length1 += diffText.length, patch.utf8Length1 += diffTextByteCount, start1 += diffText.length, diffType === DIFF_EQUAL ? (patch.length2 += diffText.length, patch.utf8Length2 += diffTextByteCount, start2 += diffText.length) : empty = !1, patch.diffs.push([diffType, diffText]), diffText === bigpatch.diffs[0][1] ? bigpatch.diffs.shift() : bigpatch.diffs[0][1] = bigpatch.diffs[0][1].substring(diffText.length));\n      }\n      preContext = diffText2(patch.diffs), preContext = preContext.substring(preContext.length - margin);\n      const postContext = diffText1(bigpatch.diffs).substring(0, margin), postContextByteCount = countUtf8Bytes(postContext);\n      postContext !== \"\" && (patch.length1 += postContext.length, patch.length2 += postContext.length, patch.utf8Length1 += postContextByteCount, patch.utf8Length2 += postContextByteCount, patch.diffs.length !== 0 && patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL ? patch.diffs[patch.diffs.length - 1][1] += postContext : patch.diffs.push([DIFF_EQUAL, postContext])), empty || patches.splice(++x, 0, patch);\n    }\n  }\n}\nfunction apply(patches, originalText, opts = {}) {\n  if (typeof patches == \"string\")\n    throw new Error(\"Patches must be an array - pass the patch to `parsePatch()` first\");\n  let text = originalText;\n  if (patches.length === 0)\n    return [text, []];\n  const parsed = adjustIndiciesToUcs2(patches, text, {\n    allowExceedingIndices: opts.allowExceedingIndices\n  }), margin = opts.margin || DEFAULT_MARGIN, deleteThreshold = opts.deleteThreshold || 0.4, nullPadding = addPadding(parsed, margin);\n  text = nullPadding + text + nullPadding, splitMax(parsed, margin);\n  let delta = 0;\n  const results = [];\n  for (let x = 0; x < parsed.length; x++) {\n    const expectedLoc = parsed[x].start2 + delta, text1 = diffText1(parsed[x].diffs);\n    let startLoc, endLoc = -1;\n    if (text1.length > MAX_BITS ? (startLoc = match(text, text1.substring(0, MAX_BITS), expectedLoc), startLoc !== -1 && (endLoc = match(\n      text,\n      text1.substring(text1.length - MAX_BITS),\n      expectedLoc + text1.length - MAX_BITS\n    ), (endLoc === -1 || startLoc >= endLoc) && (startLoc = -1))) : startLoc = match(text, text1, expectedLoc), startLoc === -1)\n      results[x] = !1, delta -= parsed[x].length2 - parsed[x].length1;\n    else {\n      results[x] = !0, delta = startLoc - expectedLoc;\n      let text2;\n      if (endLoc === -1 ? text2 = text.substring(startLoc, startLoc + text1.length) : text2 = text.substring(startLoc, endLoc + MAX_BITS), text1 === text2)\n        text = text.substring(0, startLoc) + diffText2(parsed[x].diffs) + text.substring(startLoc + text1.length);\n      else {\n        let diffs = diff(text1, text2, { checkLines: !1 });\n        if (text1.length > MAX_BITS && levenshtein(diffs) / text1.length > deleteThreshold)\n          results[x] = !1;\n        else {\n          diffs = cleanupSemanticLossless(diffs);\n          let index1 = 0, index2 = 0;\n          for (let y = 0; y < parsed[x].diffs.length; y++) {\n            const mod = parsed[x].diffs[y];\n            mod[0] !== DIFF_EQUAL && (index2 = xIndex(diffs, index1)), mod[0] === DIFF_INSERT ? text = text.substring(0, startLoc + index2) + mod[1] + text.substring(startLoc + index2) : mod[0] === DIFF_DELETE && (text = text.substring(0, startLoc + index2) + text.substring(startLoc + xIndex(diffs, index1 + mod[1].length))), mod[0] !== DIFF_DELETE && (index1 += mod[1].length);\n          }\n        }\n      }\n    }\n  }\n  return text = text.substring(nullPadding.length, text.length - nullPadding.length), [text, results];\n}\nvar __defProp = Object.defineProperty, __getOwnPropSymbols = Object.getOwnPropertySymbols, __hasOwnProp = Object.prototype.hasOwnProperty, __propIsEnum = Object.prototype.propertyIsEnumerable, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b))\n      __propIsEnum.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  return a;\n};\nconst DEFAULT_OPTS = {\n  margin: 4\n};\nfunction getDefaultOpts(opts = {}) {\n  return __spreadValues(__spreadValues({}, DEFAULT_OPTS), opts);\n}\nfunction make(a, b, options) {\n  if (typeof a == \"string\" && typeof b == \"string\") {\n    let diffs = diff(a, b, { checkLines: !0 });\n    return diffs.length > 2 && (diffs = cleanupSemantic(diffs), diffs = cleanupEfficiency(diffs)), _make(a, diffs, getDefaultOpts(options));\n  }\n  if (a && Array.isArray(a) && typeof b > \"u\")\n    return _make(diffText1(a), a, getDefaultOpts(options));\n  if (typeof a == \"string\" && b && Array.isArray(b))\n    return _make(a, b, getDefaultOpts(options));\n  throw new Error(\"Unknown call format to make()\");\n}\nfunction _make(textA, diffs, options) {\n  if (diffs.length === 0)\n    return [];\n  const patches = [];\n  let patch = createPatchObject(0, 0), patchDiffLength = 0, charCount1 = 0, charCount2 = 0, utf8Count1 = 0, utf8Count2 = 0, prepatchText = textA, postpatchText = textA;\n  for (let x = 0; x < diffs.length; x++) {\n    const currentDiff = diffs[x], [diffType, diffText] = currentDiff, diffTextLength = diffText.length, diffByteLength = countUtf8Bytes(diffText);\n    switch (!patchDiffLength && diffType !== DIFF_EQUAL && (patch.start1 = charCount1, patch.start2 = charCount2, patch.utf8Start1 = utf8Count1, patch.utf8Start2 = utf8Count2), diffType) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = currentDiff, patch.length2 += diffTextLength, patch.utf8Length2 += diffByteLength, postpatchText = postpatchText.substring(0, charCount2) + diffText + postpatchText.substring(charCount2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diffTextLength, patch.utf8Length1 += diffByteLength, patch.diffs[patchDiffLength++] = currentDiff, postpatchText = postpatchText.substring(0, charCount2) + postpatchText.substring(charCount2 + diffTextLength);\n        break;\n      case DIFF_EQUAL:\n        diffTextLength <= 2 * options.margin && patchDiffLength && diffs.length !== x + 1 ? (patch.diffs[patchDiffLength++] = currentDiff, patch.length1 += diffTextLength, patch.length2 += diffTextLength, patch.utf8Length1 += diffByteLength, patch.utf8Length2 += diffByteLength) : diffTextLength >= 2 * options.margin && patchDiffLength && (addContext(patch, prepatchText, options), patches.push(patch), patch = createPatchObject(-1, -1), patchDiffLength = 0, prepatchText = postpatchText, charCount1 = charCount2, utf8Count1 = utf8Count2);\n        break;\n      default:\n        throw new Error(\"Unknown diff type\");\n    }\n    diffType !== DIFF_INSERT && (charCount1 += diffTextLength, utf8Count1 += diffByteLength), diffType !== DIFF_DELETE && (charCount2 += diffTextLength, utf8Count2 += diffByteLength);\n  }\n  return patchDiffLength && (addContext(patch, prepatchText, options), patches.push(patch)), patches;\n}\nfunction addContext(patch, text, opts) {\n  if (text.length === 0)\n    return;\n  let pattern = text.substring(patch.start2, patch.start2 + patch.length1), padding = 0;\n  for (; text.indexOf(pattern) !== text.lastIndexOf(pattern) && pattern.length < MAX_BITS - opts.margin - opts.margin; )\n    padding += opts.margin, pattern = text.substring(patch.start2 - padding, patch.start2 + patch.length1 + padding);\n  padding += opts.margin;\n  let prefixStart = patch.start2 - padding;\n  prefixStart >= 1 && isLowSurrogate(text[prefixStart]) && prefixStart--;\n  const prefix = text.substring(prefixStart, patch.start2);\n  prefix && patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  const prefixLength = prefix.length, prefixUtf8Length = countUtf8Bytes(prefix);\n  let suffixEnd = patch.start2 + patch.length1 + padding;\n  suffixEnd < text.length && isLowSurrogate(text[suffixEnd]) && suffixEnd++;\n  const suffix = text.substring(patch.start2 + patch.length1, suffixEnd);\n  suffix && patch.diffs.push([DIFF_EQUAL, suffix]);\n  const suffixLength = suffix.length, suffixUtf8Length = countUtf8Bytes(suffix);\n  patch.start1 -= prefixLength, patch.start2 -= prefixLength, patch.utf8Start1 -= prefixUtf8Length, patch.utf8Start2 -= prefixUtf8Length, patch.length1 += prefixLength + suffixLength, patch.length2 += prefixLength + suffixLength, patch.utf8Length1 += prefixUtf8Length + suffixUtf8Length, patch.utf8Length2 += prefixUtf8Length + suffixUtf8Length;\n}\nconst patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\nfunction parse(textline) {\n  if (!textline)\n    return [];\n  const patches = [], lines = textline.split(`\n`);\n  let textPointer = 0;\n  for (; textPointer < lines.length; ) {\n    const m = lines[textPointer].match(patchHeader);\n    if (!m)\n      throw new Error(`Invalid patch string: ${lines[textPointer]}`);\n    const patch = createPatchObject(toInt(m[1]), toInt(m[3]));\n    for (patches.push(patch), m[2] === \"\" ? (patch.start1--, patch.utf8Start1--, patch.length1 = 1, patch.utf8Length1 = 1) : m[2] === \"0\" ? (patch.length1 = 0, patch.utf8Length1 = 0) : (patch.start1--, patch.utf8Start1--, patch.utf8Length1 = toInt(m[2]), patch.length1 = patch.utf8Length1), m[4] === \"\" ? (patch.start2--, patch.utf8Start2--, patch.length2 = 1, patch.utf8Length2 = 1) : m[4] === \"0\" ? (patch.length2 = 0, patch.utf8Length2 = 0) : (patch.start2--, patch.utf8Start2--, patch.utf8Length2 = toInt(m[4]), patch.length2 = patch.utf8Length2), textPointer++; textPointer < lines.length; ) {\n      const currentLine = lines[textPointer], sign = currentLine.charAt(0);\n      if (sign === \"@\")\n        break;\n      if (sign === \"\") {\n        textPointer++;\n        continue;\n      }\n      let line;\n      try {\n        line = decodeURI(currentLine.slice(1));\n      } catch (ex) {\n        throw new Error(`Illegal escape in parse: ${currentLine}`);\n      }\n      const utf8Diff = countUtf8Bytes(line) - line.length;\n      if (sign === \"-\")\n        patch.diffs.push([DIFF_DELETE, line]), patch.length1 -= utf8Diff;\n      else if (sign === \"+\")\n        patch.diffs.push([DIFF_INSERT, line]), patch.length2 -= utf8Diff;\n      else if (sign === \" \")\n        patch.diffs.push([DIFF_EQUAL, line]), patch.length1 -= utf8Diff, patch.length2 -= utf8Diff;\n      else\n        throw new Error(`Invalid patch mode \"${sign}\" in: ${line}`);\n      textPointer++;\n    }\n  }\n  return patches;\n}\nfunction toInt(num) {\n  return parseInt(num, 10);\n}\nfunction stringify(patches) {\n  return patches.map(stringifyPatch).join(\"\");\n}\nfunction stringifyPatch(patch) {\n  const { utf8Length1, utf8Length2, utf8Start1, utf8Start2, diffs } = patch;\n  let coords1;\n  utf8Length1 === 0 ? coords1 = `${utf8Start1},0` : utf8Length1 === 1 ? coords1 = `${utf8Start1 + 1}` : coords1 = `${utf8Start1 + 1},${utf8Length1}`;\n  let coords2;\n  utf8Length2 === 0 ? coords2 = `${utf8Start2},0` : utf8Length2 === 1 ? coords2 = `${utf8Start2 + 1}` : coords2 = `${utf8Start2 + 1},${utf8Length2}`;\n  const text = [`@@ -${coords1} +${coords2} @@\n`];\n  let op;\n  for (let x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        op = \"+\";\n        break;\n      case DIFF_DELETE:\n        op = \"-\";\n        break;\n      case DIFF_EQUAL:\n        op = \" \";\n        break;\n      default:\n        throw new Error(\"Unknown patch operation.\");\n    }\n    text[x + 1] = `${op + encodeURI(diffs[x][1])}\n`;\n  }\n  return text.join(\"\").replace(/%20/g, \" \");\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/icons/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/icons/dist/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessDeniedIcon: () => (/* binding */ AccessDeniedIcon),\n/* harmony export */   ActivityIcon: () => (/* binding */ ActivityIcon),\n/* harmony export */   AddCircleIcon: () => (/* binding */ AddCircleIcon),\n/* harmony export */   AddCommentIcon: () => (/* binding */ AddCommentIcon),\n/* harmony export */   AddDocumentIcon: () => (/* binding */ AddDocumentIcon),\n/* harmony export */   AddIcon: () => (/* binding */ AddIcon),\n/* harmony export */   AddUserIcon: () => (/* binding */ AddUserIcon),\n/* harmony export */   ApiIcon: () => (/* binding */ ApiIcon),\n/* harmony export */   ArchiveIcon: () => (/* binding */ ArchiveIcon),\n/* harmony export */   ArrowDownIcon: () => (/* binding */ ArrowDownIcon),\n/* harmony export */   ArrowLeftIcon: () => (/* binding */ ArrowLeftIcon),\n/* harmony export */   ArrowRightIcon: () => (/* binding */ ArrowRightIcon),\n/* harmony export */   ArrowTopRightIcon: () => (/* binding */ ArrowTopRightIcon),\n/* harmony export */   ArrowUpIcon: () => (/* binding */ ArrowUpIcon),\n/* harmony export */   AsteriskIcon: () => (/* binding */ AsteriskIcon),\n/* harmony export */   BarChartIcon: () => (/* binding */ BarChartIcon),\n/* harmony export */   BasketIcon: () => (/* binding */ BasketIcon),\n/* harmony export */   BellIcon: () => (/* binding */ BellIcon),\n/* harmony export */   BillIcon: () => (/* binding */ BillIcon),\n/* harmony export */   BinaryDocumentIcon: () => (/* binding */ BinaryDocumentIcon),\n/* harmony export */   BlockContentIcon: () => (/* binding */ BlockContentIcon),\n/* harmony export */   BlockElementIcon: () => (/* binding */ BlockElementIcon),\n/* harmony export */   BlockquoteIcon: () => (/* binding */ BlockquoteIcon),\n/* harmony export */   BoldIcon: () => (/* binding */ BoldIcon),\n/* harmony export */   BoltIcon: () => (/* binding */ BoltIcon),\n/* harmony export */   BookIcon: () => (/* binding */ BookIcon),\n/* harmony export */   BookmarkFilledIcon: () => (/* binding */ BookmarkFilledIcon),\n/* harmony export */   BookmarkIcon: () => (/* binding */ BookmarkIcon),\n/* harmony export */   BottleIcon: () => (/* binding */ BottleIcon),\n/* harmony export */   BugIcon: () => (/* binding */ BugIcon),\n/* harmony export */   BulbFilledIcon: () => (/* binding */ BulbFilledIcon),\n/* harmony export */   BulbOutlineIcon: () => (/* binding */ BulbOutlineIcon),\n/* harmony export */   CalendarIcon: () => (/* binding */ CalendarIcon),\n/* harmony export */   CaseIcon: () => (/* binding */ CaseIcon),\n/* harmony export */   ChartUpwardIcon: () => (/* binding */ ChartUpwardIcon),\n/* harmony export */   CheckmarkCircleIcon: () => (/* binding */ CheckmarkCircleIcon),\n/* harmony export */   CheckmarkIcon: () => (/* binding */ CheckmarkIcon),\n/* harmony export */   ChevronDownIcon: () => (/* binding */ ChevronDownIcon),\n/* harmony export */   ChevronLeftIcon: () => (/* binding */ ChevronLeftIcon),\n/* harmony export */   ChevronRightIcon: () => (/* binding */ ChevronRightIcon),\n/* harmony export */   ChevronUpIcon: () => (/* binding */ ChevronUpIcon),\n/* harmony export */   CircleIcon: () => (/* binding */ CircleIcon),\n/* harmony export */   ClipboardIcon: () => (/* binding */ ClipboardIcon),\n/* harmony export */   ClipboardImageIcon: () => (/* binding */ ClipboardImageIcon),\n/* harmony export */   ClockIcon: () => (/* binding */ ClockIcon),\n/* harmony export */   CloseCircleIcon: () => (/* binding */ CloseCircleIcon),\n/* harmony export */   CloseIcon: () => (/* binding */ CloseIcon),\n/* harmony export */   CodeBlockIcon: () => (/* binding */ CodeBlockIcon),\n/* harmony export */   CodeIcon: () => (/* binding */ CodeIcon),\n/* harmony export */   CogIcon: () => (/* binding */ CogIcon),\n/* harmony export */   CollapseIcon: () => (/* binding */ CollapseIcon),\n/* harmony export */   ColorWheelIcon: () => (/* binding */ ColorWheelIcon),\n/* harmony export */   CommentIcon: () => (/* binding */ CommentIcon),\n/* harmony export */   ComponentIcon: () => (/* binding */ ComponentIcon),\n/* harmony export */   ComposeIcon: () => (/* binding */ ComposeIcon),\n/* harmony export */   ComposeSparklesIcon: () => (/* binding */ ComposeSparklesIcon),\n/* harmony export */   ConfettiIcon: () => (/* binding */ ConfettiIcon),\n/* harmony export */   ControlsIcon: () => (/* binding */ ControlsIcon),\n/* harmony export */   CopyIcon: () => (/* binding */ CopyIcon),\n/* harmony export */   CreditCardIcon: () => (/* binding */ CreditCardIcon),\n/* harmony export */   CropIcon: () => (/* binding */ CropIcon),\n/* harmony export */   CubeIcon: () => (/* binding */ CubeIcon),\n/* harmony export */   DashboardIcon: () => (/* binding */ DashboardIcon),\n/* harmony export */   DatabaseIcon: () => (/* binding */ DatabaseIcon),\n/* harmony export */   DesktopIcon: () => (/* binding */ DesktopIcon),\n/* harmony export */   DiamondIcon: () => (/* binding */ DiamondIcon),\n/* harmony export */   DocumentIcon: () => (/* binding */ DocumentIcon),\n/* harmony export */   DocumentPdfIcon: () => (/* binding */ DocumentPdfIcon),\n/* harmony export */   DocumentRemoveIcon: () => (/* binding */ DocumentRemoveIcon),\n/* harmony export */   DocumentSheetIcon: () => (/* binding */ DocumentSheetIcon),\n/* harmony export */   DocumentTextIcon: () => (/* binding */ DocumentTextIcon),\n/* harmony export */   DocumentVideoIcon: () => (/* binding */ DocumentVideoIcon),\n/* harmony export */   DocumentWordIcon: () => (/* binding */ DocumentWordIcon),\n/* harmony export */   DocumentZipIcon: () => (/* binding */ DocumentZipIcon),\n/* harmony export */   DocumentsIcon: () => (/* binding */ DocumentsIcon),\n/* harmony export */   DotIcon: () => (/* binding */ DotIcon),\n/* harmony export */   DoubleChevronDownIcon: () => (/* binding */ DoubleChevronDownIcon),\n/* harmony export */   DoubleChevronLeftIcon: () => (/* binding */ DoubleChevronLeftIcon),\n/* harmony export */   DoubleChevronRightIcon: () => (/* binding */ DoubleChevronRightIcon),\n/* harmony export */   DoubleChevronUpIcon: () => (/* binding */ DoubleChevronUpIcon),\n/* harmony export */   DownloadIcon: () => (/* binding */ DownloadIcon),\n/* harmony export */   DragHandleIcon: () => (/* binding */ DragHandleIcon),\n/* harmony export */   DropIcon: () => (/* binding */ DropIcon),\n/* harmony export */   EarthAmericasIcon: () => (/* binding */ EarthAmericasIcon),\n/* harmony export */   EarthGlobeIcon: () => (/* binding */ EarthGlobeIcon),\n/* harmony export */   EditIcon: () => (/* binding */ EditIcon),\n/* harmony export */   EllipsisHorizontalIcon: () => (/* binding */ EllipsisHorizontalIcon),\n/* harmony export */   EllipsisVerticalIcon: () => (/* binding */ EllipsisVerticalIcon),\n/* harmony export */   EmptyIcon: () => (/* binding */ EmptyIcon),\n/* harmony export */   EnterIcon: () => (/* binding */ EnterIcon),\n/* harmony export */   EnterRightIcon: () => (/* binding */ EnterRightIcon),\n/* harmony export */   EnvelopeIcon: () => (/* binding */ EnvelopeIcon),\n/* harmony export */   EqualIcon: () => (/* binding */ EqualIcon),\n/* harmony export */   ErrorFilledIcon: () => (/* binding */ ErrorFilledIcon),\n/* harmony export */   ErrorOutlineIcon: () => (/* binding */ ErrorOutlineIcon),\n/* harmony export */   ErrorScreenIcon: () => (/* binding */ ErrorScreenIcon),\n/* harmony export */   ExpandIcon: () => (/* binding */ ExpandIcon),\n/* harmony export */   EyeClosedIcon: () => (/* binding */ EyeClosedIcon),\n/* harmony export */   EyeOpenIcon: () => (/* binding */ EyeOpenIcon),\n/* harmony export */   FaceHappyIcon: () => (/* binding */ FaceHappyIcon),\n/* harmony export */   FaceIndifferentIcon: () => (/* binding */ FaceIndifferentIcon),\n/* harmony export */   FaceSadIcon: () => (/* binding */ FaceSadIcon),\n/* harmony export */   FeedbackIcon: () => (/* binding */ FeedbackIcon),\n/* harmony export */   FilterIcon: () => (/* binding */ FilterIcon),\n/* harmony export */   FolderIcon: () => (/* binding */ FolderIcon),\n/* harmony export */   GenerateIcon: () => (/* binding */ GenerateIcon),\n/* harmony export */   GithubIcon: () => (/* binding */ GithubIcon),\n/* harmony export */   GroqIcon: () => (/* binding */ GroqIcon),\n/* harmony export */   HashIcon: () => (/* binding */ HashIcon),\n/* harmony export */   HeartFilledIcon: () => (/* binding */ HeartFilledIcon),\n/* harmony export */   HeartIcon: () => (/* binding */ HeartIcon),\n/* harmony export */   HelpCircleIcon: () => (/* binding */ HelpCircleIcon),\n/* harmony export */   HighlightIcon: () => (/* binding */ HighlightIcon),\n/* harmony export */   HomeIcon: () => (/* binding */ HomeIcon),\n/* harmony export */   IceCreamIcon: () => (/* binding */ IceCreamIcon),\n/* harmony export */   Icon: () => (/* binding */ Icon),\n/* harmony export */   ImageIcon: () => (/* binding */ ImageIcon),\n/* harmony export */   ImageRemoveIcon: () => (/* binding */ ImageRemoveIcon),\n/* harmony export */   ImagesIcon: () => (/* binding */ ImagesIcon),\n/* harmony export */   InboxIcon: () => (/* binding */ InboxIcon),\n/* harmony export */   InfoFilledIcon: () => (/* binding */ InfoFilledIcon),\n/* harmony export */   InfoOutlineIcon: () => (/* binding */ InfoOutlineIcon),\n/* harmony export */   InlineElementIcon: () => (/* binding */ InlineElementIcon),\n/* harmony export */   InlineIcon: () => (/* binding */ InlineIcon),\n/* harmony export */   InsertAboveIcon: () => (/* binding */ InsertAboveIcon),\n/* harmony export */   InsertBelowIcon: () => (/* binding */ InsertBelowIcon),\n/* harmony export */   ItalicIcon: () => (/* binding */ ItalicIcon),\n/* harmony export */   JoystickIcon: () => (/* binding */ JoystickIcon),\n/* harmony export */   JsonIcon: () => (/* binding */ JsonIcon),\n/* harmony export */   LaunchIcon: () => (/* binding */ LaunchIcon),\n/* harmony export */   LeaveIcon: () => (/* binding */ LeaveIcon),\n/* harmony export */   LemonIcon: () => (/* binding */ LemonIcon),\n/* harmony export */   LinkIcon: () => (/* binding */ LinkIcon),\n/* harmony export */   LinkRemovedIcon: () => (/* binding */ LinkRemovedIcon),\n/* harmony export */   LinkedinIcon: () => (/* binding */ LinkedinIcon),\n/* harmony export */   ListIcon: () => (/* binding */ ListIcon),\n/* harmony export */   LockIcon: () => (/* binding */ LockIcon),\n/* harmony export */   LogoJsIcon: () => (/* binding */ LogoJsIcon),\n/* harmony export */   LogoTsIcon: () => (/* binding */ LogoTsIcon),\n/* harmony export */   MarkerIcon: () => (/* binding */ MarkerIcon),\n/* harmony export */   MarkerRemovedIcon: () => (/* binding */ MarkerRemovedIcon),\n/* harmony export */   MasterDetailIcon: () => (/* binding */ MasterDetailIcon),\n/* harmony export */   MenuIcon: () => (/* binding */ MenuIcon),\n/* harmony export */   MicrophoneIcon: () => (/* binding */ MicrophoneIcon),\n/* harmony export */   MicrophoneSlashIcon: () => (/* binding */ MicrophoneSlashIcon),\n/* harmony export */   MobileDeviceIcon: () => (/* binding */ MobileDeviceIcon),\n/* harmony export */   MoonIcon: () => (/* binding */ MoonIcon),\n/* harmony export */   NumberIcon: () => (/* binding */ NumberIcon),\n/* harmony export */   OkHandIcon: () => (/* binding */ OkHandIcon),\n/* harmony export */   OlistIcon: () => (/* binding */ OlistIcon),\n/* harmony export */   OverageIcon: () => (/* binding */ OverageIcon),\n/* harmony export */   PackageIcon: () => (/* binding */ PackageIcon),\n/* harmony export */   PanelLeftIcon: () => (/* binding */ PanelLeftIcon),\n/* harmony export */   PanelRightIcon: () => (/* binding */ PanelRightIcon),\n/* harmony export */   PauseIcon: () => (/* binding */ PauseIcon),\n/* harmony export */   PinFilledIcon: () => (/* binding */ PinFilledIcon),\n/* harmony export */   PinIcon: () => (/* binding */ PinIcon),\n/* harmony export */   PinRemovedIcon: () => (/* binding */ PinRemovedIcon),\n/* harmony export */   PlayIcon: () => (/* binding */ PlayIcon),\n/* harmony export */   PlugIcon: () => (/* binding */ PlugIcon),\n/* harmony export */   PresentationIcon: () => (/* binding */ PresentationIcon),\n/* harmony export */   Progress50Icon: () => (/* binding */ Progress50Icon),\n/* harmony export */   Progress75Icon: () => (/* binding */ Progress75Icon),\n/* harmony export */   ProjectsIcon: () => (/* binding */ ProjectsIcon),\n/* harmony export */   PublishIcon: () => (/* binding */ PublishIcon),\n/* harmony export */   ReadOnlyIcon: () => (/* binding */ ReadOnlyIcon),\n/* harmony export */   RedoIcon: () => (/* binding */ RedoIcon),\n/* harmony export */   RefreshIcon: () => (/* binding */ RefreshIcon),\n/* harmony export */   RemoveCircleIcon: () => (/* binding */ RemoveCircleIcon),\n/* harmony export */   RemoveIcon: () => (/* binding */ RemoveIcon),\n/* harmony export */   ResetIcon: () => (/* binding */ ResetIcon),\n/* harmony export */   RestoreIcon: () => (/* binding */ RestoreIcon),\n/* harmony export */   RetrieveIcon: () => (/* binding */ RetrieveIcon),\n/* harmony export */   RetryIcon: () => (/* binding */ RetryIcon),\n/* harmony export */   RevertIcon: () => (/* binding */ RevertIcon),\n/* harmony export */   RobotIcon: () => (/* binding */ RobotIcon),\n/* harmony export */   RocketIcon: () => (/* binding */ RocketIcon),\n/* harmony export */   SchemaIcon: () => (/* binding */ SchemaIcon),\n/* harmony export */   SearchIcon: () => (/* binding */ SearchIcon),\n/* harmony export */   SelectIcon: () => (/* binding */ SelectIcon),\n/* harmony export */   ShareIcon: () => (/* binding */ ShareIcon),\n/* harmony export */   SortIcon: () => (/* binding */ SortIcon),\n/* harmony export */   SparkleIcon: () => (/* binding */ SparkleIcon),\n/* harmony export */   SparklesIcon: () => (/* binding */ SparklesIcon),\n/* harmony export */   SpinnerIcon: () => (/* binding */ SpinnerIcon),\n/* harmony export */   SplitHorizontalIcon: () => (/* binding */ SplitHorizontalIcon),\n/* harmony export */   SplitVerticalIcon: () => (/* binding */ SplitVerticalIcon),\n/* harmony export */   SquareIcon: () => (/* binding */ SquareIcon),\n/* harmony export */   StackCompactIcon: () => (/* binding */ StackCompactIcon),\n/* harmony export */   StackIcon: () => (/* binding */ StackIcon),\n/* harmony export */   StarFilledIcon: () => (/* binding */ StarFilledIcon),\n/* harmony export */   StarIcon: () => (/* binding */ StarIcon),\n/* harmony export */   StopIcon: () => (/* binding */ StopIcon),\n/* harmony export */   StrikethroughIcon: () => (/* binding */ StrikethroughIcon),\n/* harmony export */   StringIcon: () => (/* binding */ StringIcon),\n/* harmony export */   SunIcon: () => (/* binding */ SunIcon),\n/* harmony export */   SyncIcon: () => (/* binding */ SyncIcon),\n/* harmony export */   TabletDeviceIcon: () => (/* binding */ TabletDeviceIcon),\n/* harmony export */   TagIcon: () => (/* binding */ TagIcon),\n/* harmony export */   TagsIcon: () => (/* binding */ TagsIcon),\n/* harmony export */   TargetIcon: () => (/* binding */ TargetIcon),\n/* harmony export */   TaskIcon: () => (/* binding */ TaskIcon),\n/* harmony export */   TerminalIcon: () => (/* binding */ TerminalIcon),\n/* harmony export */   TextIcon: () => (/* binding */ TextIcon),\n/* harmony export */   ThLargeIcon: () => (/* binding */ ThLargeIcon),\n/* harmony export */   ThListIcon: () => (/* binding */ ThListIcon),\n/* harmony export */   ThumbsDownIcon: () => (/* binding */ ThumbsDownIcon),\n/* harmony export */   ThumbsUpIcon: () => (/* binding */ ThumbsUpIcon),\n/* harmony export */   TiersIcon: () => (/* binding */ TiersIcon),\n/* harmony export */   TimelineIcon: () => (/* binding */ TimelineIcon),\n/* harmony export */   ToggleArrowRightIcon: () => (/* binding */ ToggleArrowRightIcon),\n/* harmony export */   TokenIcon: () => (/* binding */ TokenIcon),\n/* harmony export */   TransferIcon: () => (/* binding */ TransferIcon),\n/* harmony export */   TranslateIcon: () => (/* binding */ TranslateIcon),\n/* harmony export */   TrashIcon: () => (/* binding */ TrashIcon),\n/* harmony export */   TrendUpwardIcon: () => (/* binding */ TrendUpwardIcon),\n/* harmony export */   TriangleOutlineIcon: () => (/* binding */ TriangleOutlineIcon),\n/* harmony export */   TrolleyIcon: () => (/* binding */ TrolleyIcon),\n/* harmony export */   TruncateIcon: () => (/* binding */ TruncateIcon),\n/* harmony export */   TwitterIcon: () => (/* binding */ TwitterIcon),\n/* harmony export */   UlistIcon: () => (/* binding */ UlistIcon),\n/* harmony export */   UnarchiveIcon: () => (/* binding */ UnarchiveIcon),\n/* harmony export */   UnderlineIcon: () => (/* binding */ UnderlineIcon),\n/* harmony export */   UndoIcon: () => (/* binding */ UndoIcon),\n/* harmony export */   UnknownIcon: () => (/* binding */ UnknownIcon),\n/* harmony export */   UnlinkIcon: () => (/* binding */ UnlinkIcon),\n/* harmony export */   UnlockIcon: () => (/* binding */ UnlockIcon),\n/* harmony export */   UnpublishIcon: () => (/* binding */ UnpublishIcon),\n/* harmony export */   UploadIcon: () => (/* binding */ UploadIcon),\n/* harmony export */   UserIcon: () => (/* binding */ UserIcon),\n/* harmony export */   UsersIcon: () => (/* binding */ UsersIcon),\n/* harmony export */   VersionsIcon: () => (/* binding */ VersionsIcon),\n/* harmony export */   VideoIcon: () => (/* binding */ VideoIcon),\n/* harmony export */   WarningFilledIcon: () => (/* binding */ WarningFilledIcon),\n/* harmony export */   WarningOutlineIcon: () => (/* binding */ WarningOutlineIcon),\n/* harmony export */   WrenchIcon: () => (/* binding */ WrenchIcon),\n/* harmony export */   icons: () => (/* binding */ icons)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\nconst AccessDeniedIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"access-denied\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.1568 6.84315C21.281 9.96734 21.281 15.0327 18.1568 18.1569C15.0326 21.281 9.96733 21.281 6.84313 18.1569C3.71894 15.0327 3.71894 9.96734 6.84313 6.84315C9.96733 3.71895 15.0326 3.71895 18.1568 6.84315ZM18.1568 6.84315L6.844 18.156\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nAccessDeniedIcon.displayName = \"ForwardRef(AccessDeniedIcon)\";\nconst ActivityIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"activity\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M21 15H19L15.5 7L11 18L8 12L6 15H4\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nActivityIcon.displayName = \"ForwardRef(ActivityIcon)\";\nconst AddCircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"add-circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 12.4H17M12.5 8V17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nAddCircleIcon.displayName = \"ForwardRef(AddCircleIcon)\";\nconst AddCommentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"add-comment\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M13 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5H9.5V20.5L13.5 16.5H16.5C17.6046 16.5 18.5 15.6046 18.5 14.5V12M15 6.5H22M18.5 10V3\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nAddCommentIcon.displayName = \"ForwardRef(AddCommentIcon)\";\nconst AddDocumentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"add-document\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 4.5H18.5V12M11.5 4.5L6.5 9.5M11.5 4.5V9.5H6.5M6.5 9.5V19.5H11M20 17.5H16.5M16.5 17.5H13M16.5 17.5V14M16.5 17.5V21\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nAddDocumentIcon.displayName = \"ForwardRef(AddDocumentIcon)\";\nconst AddIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"add\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 5V20M5 12.5H20\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nAddIcon.displayName = \"ForwardRef(AddIcon)\";\nconst AddUserIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"add-user\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.17857 15.2368C6.10714 15.7632 4.5 16.8158 4.5 20.5H19.5C19.5 16.8158 18.2589 15.943 16.8214 15.2368C15.75 14.7105 13.6071 14.7105 13.6071 13.1316C13.6071 11.5526 14.6786 10.7632 14.6786 8.65789C14.6786 6.55263 13.6071 5.5 12 5.5C10.3929 5.5 9.32142 6.55263 9.32142 8.65789C9.32142 10.7632 10.3929 11.5526 10.3929 13.1316C10.3929 14.7105 8.25 14.7105 7.17857 15.2368Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M20.5 6V13M17 9.5H24\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nAddUserIcon.displayName = \"ForwardRef(AddUserIcon)\";\nconst ApiIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"api\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M5.93047 13.2107L6.66782 10.3728H6.73089L7.45854 13.2107H5.93047ZM8.17164 16H9.66089L7.56041 9H5.93047L3.82999 16H5.20767L5.65396 14.2876H7.73505L8.17164 16Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10.5389 9V16H11.9166V13.7782H13.0323C14.541 13.7782 15.5015 12.8517 15.5015 11.3964C15.5015 9.92654 14.5701 9 13.1003 9H10.5389ZM11.9166 10.1303H12.751C13.6533 10.1303 14.1044 10.5475 14.1044 11.3867C14.1044 12.2308 13.6533 12.6431 12.751 12.6431H11.9166V10.1303Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M21.1675 16V14.8164H19.717V10.1836H21.1675V9H16.8889V10.1836H18.3393V14.8164H16.8889V16H21.1675Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n});\nApiIcon.displayName = \"ForwardRef(ApiIcon)\";\nconst ArchiveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"archive\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 10V17M20.5 7.5V20.5H4.5V7.5L7.5 4.5H17.5L20.5 7.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M4.5 7.5H20.5M16 14L12.5 17.5L9 14\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nArchiveIcon.displayName = \"ForwardRef(ArchiveIcon)\";\nconst ArrowDownIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"arrow-down\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M12.5 19.5V5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M18 14L12.5 19.5L7 14\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nArrowDownIcon.displayName = \"ForwardRef(ArrowDownIcon)\";\nconst ArrowLeftIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"arrow-left\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M5.5 12.5H20\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11 18L5.5 12.5L11 7\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nArrowLeftIcon.displayName = \"ForwardRef(ArrowLeftIcon)\";\nconst ArrowRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"arrow-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M19.5 12.5H5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 7L19.5 12.5L14 18\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nArrowRightIcon.displayName = \"ForwardRef(ArrowRightIcon)\";\nconst ArrowTopRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"arrow-top-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M16.5 8.5L7 18\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M9 8.5H16.5V16\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n});\nArrowTopRightIcon.displayName = \"ForwardRef(ArrowTopRightIcon)\";\nconst ArrowUpIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"arrow-up\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7 11L12.5 5.5L18 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M12.5 5.5V20\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n});\nArrowUpIcon.displayName = \"ForwardRef(ArrowUpIcon)\";\nconst AsteriskIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"asterisk\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 4V21M16.75 5.13879L8.25 19.8612M19.8612 8.25L5.13878 16.75M4.00002 12.5H21M5.13881 8.25L19.8612 16.75M8.25002 5.13879L16.75 19.8612\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nAsteriskIcon.displayName = \"ForwardRef(AsteriskIcon)\";\nconst BarChartIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bar-chart\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 5V19.5H20M8.5 18V13M11.5 18V9M14.5 18V11M17.5 18V7\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nBarChartIcon.displayName = \"ForwardRef(BarChartIcon)\";\nconst BasketIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"basket\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.5 10.5H5L6.5 19.5H18.5L20 10.5H16.5M8.5 10.5L10.2721 5.18377C10.4082 4.77543 10.7903 4.5 11.2208 4.5H13.7792C14.2097 4.5 14.5918 4.77543 14.7279 5.18377L16.5 10.5M8.5 10.5H16.5M8.5 10.5L9.5 19.5M16.5 10.5L15.5 19.5M12.5 10.5V19.5M19.5 13.5H5.5M19 16.5H6\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nBasketIcon.displayName = \"ForwardRef(BasketIcon)\";\nconst BellIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bell\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 17.5V18.5C10.5 20 11.5 20.5 12.5 20.5C13.5 20.5 14.5 20 14.5 18.5V17.5M5.5 17.5C6.5 16 6.5 15 6.5 12C6.5 8 8.5 5.5 12.5 5.5C16.5 5.5 18.5 8 18.5 12C18.5 15 18.5 16 19.5 17.5H5.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nBellIcon.displayName = \"ForwardRef(BellIcon)\";\nconst BillIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bill\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M6.50001 5.5C8.50003 5.5 8.50003 8 8.50003 8V9.5M6.50001 5.5C4.5 5.5 4.5 8 4.5 8L4.50001 9.5H8.50003M6.50001 5.5C6.50001 5.5 15.8333 5.5 17.6667 5.5C19.5 5.5 19.5 8.5 19.5 8.5V20L17.6667 19L15.8333 20L14 19L12.1667 20L10.3334 19L8.50003 20V9.5M11 12.5H15M11 9.5H16M11 15.5H16\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nBillIcon.displayName = \"ForwardRef(BillIcon)\";\nconst BinaryDocumentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"binary-document\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.5 12.5V17.5M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM12.5 12.5V17.5H15.5V12.5H12.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinecap: \"square\",\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nBinaryDocumentIcon.displayName = \"ForwardRef(BinaryDocumentIcon)\";\nconst BlockContentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"block-content\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M21 7.60002L11 7.60003V6.40003L21 6.40002V7.60002Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M21 11.2667L12.4833 11.2667V10.0667L21 10.0667V11.2667Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M21 14.9334H13.9254V13.7334L21 13.7334V14.9334Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M21 18.6002H4V17.4002H21V18.6002Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.86438 15.6H11.2L8.27623 7.60003H6.92377L4 15.6H5.29072L6.0371 13.4767H9.12362L9.86438 15.6ZM7.53546 9.05255H7.63086L8.80374 12.4344H6.35698L7.53546 9.05255Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n});\nBlockContentIcon.displayName = \"ForwardRef(BlockContentIcon)\";\nconst BlockElementIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"block-element\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5 19.5H20M5 5.5H20M6.5 8.5H18.5V16.5H6.5V8.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nBlockElementIcon.displayName = \"ForwardRef(BlockElementIcon)\";\nconst BlockquoteIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"blockquote\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10 17.5H19M6 7.5H19M10 12.5H17M6.5 12V18\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nBlockquoteIcon.displayName = \"ForwardRef(BlockquoteIcon)\";\nconst BoldIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bold\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M13.2087 18C15.5322 18 16.9731 16.793 16.9731 14.8844C16.9731 13.4812 15.9245 12.3949 14.4836 12.2892V12.1534C15.6001 11.9875 16.4526 10.9841 16.4526 9.82991C16.4526 8.14761 15.1927 7.11409 13.0804 7.11409H8.32019V18H13.2087ZM10.5985 8.85674H12.4995C13.5859 8.85674 14.212 9.37727 14.212 10.2448C14.212 11.1199 13.5406 11.6254 12.3109 11.6254H10.5985V8.85674ZM10.5985 16.2574V13.1643H12.575C13.9178 13.1643 14.6496 13.6924 14.6496 14.6882C14.6496 15.7066 13.9404 16.2574 12.6278 16.2574H10.5985Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nBoldIcon.displayName = \"ForwardRef(BoldIcon)\";\nconst BoltIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bolt\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18 11.5L9 21L11 13.5H7L16 4L14 11.5H18Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nBoltIcon.displayName = \"ForwardRef(BoltIcon)\";\nconst BookIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"book\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M19.5 18V7C19.5 7 18.5 6.5 16.5 6.5C14.5 6.5 12.5 7.5 12.5 7.5M19.5 18V18.5C19.5 18.5 18 18.5 16 18.5C14 18.5 12.5 18.5 12.5 18.5M19.5 18C19.5 18 18.5 17.5 16.5 17.5C14.5 17.5 12.5 18.5 12.5 18.5M5.5 18V7C5.5 7 6.5 6.5 8.5 6.5C10.5 6.5 12.5 7.5 12.5 7.5M5.5 18V18.5C5.5 18.5 7 18.5 9 18.5C11 18.5 12.5 18.5 12.5 18.5M5.5 18C5.5 18 6.5 17.5 8.5 17.5C10.5 17.5 12.5 18.5 12.5 18.5M12.5 18.5V7.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nBookIcon.displayName = \"ForwardRef(BookIcon)\";\nconst BookmarkFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bookmark-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.5 6.5V19.5L12.5 14.5L17.5 19.5V6.5C17.5 5.94772 17.0523 5.5 16.5 5.5H8.5C7.94772 5.5 7.5 5.94772 7.5 6.5Z\",\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nBookmarkFilledIcon.displayName = \"ForwardRef(BookmarkFilledIcon)\";\nconst BookmarkIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bookmark\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.5 6.5V19.5L12.5 14.5L17.5 19.5V6.5C17.5 5.94772 17.0523 5.5 16.5 5.5H8.5C7.94772 5.5 7.5 5.94772 7.5 6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nBookmarkIcon.displayName = \"ForwardRef(BookmarkIcon)\";\nconst BottleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bottle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.5 17.5L17.5 17.5M17.5 13C17.5 12.087 17.5 11.3518 17.5 11C17.5 8.5 14.5 9 14.5 7.37494L14.5 5.5M17.5 13C17.5 15.1229 17.5 18.7543 17.5 20.5022C17.5 21.0545 17.0523 21.5 16.5 21.5L8.5 21.5C7.94772 21.5 7.5 21.0547 7.5 20.5024C7.5 18.8157 7.5 15.3546 7.5 13M17.5 13L7.5 13M7.5 13C7.5 12.2538 7.5 11.5648 7.5 11C7.5 8.5 10.5 9 10.5 7.37494L10.5 5.5M10.5 5.5L10.5 3.99999C10.5 3.72385 10.7239 3.49999 11 3.49999L14 3.49999C14.2761 3.49999 14.5 3.72385 14.5 3.99999L14.5 5.5M10.5 5.5L14.5 5.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nBottleIcon.displayName = \"ForwardRef(BottleIcon)\";\nconst BugIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bug\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.5 9.5V8.9C8.16863 8.9 7.9 9.16863 7.9 9.5H8.5ZM16.5 9.5H17.1C17.1 9.16863 16.8314 8.9 16.5 8.9V9.5ZM8.5 10.1H9.5V8.9H8.5V10.1ZM9.5 10.1H15.5V8.9H9.5V10.1ZM15.5 10.1H16.5V8.9H15.5V10.1ZM15.9 9.5V13.5H17.1V9.5H15.9ZM15.9 13.5C15.9 14.395 15.678 15.0264 15.3758 15.4797C15.0711 15.9367 14.6605 16.2489 14.2317 16.4633C13.8005 16.6789 13.3621 16.7897 13.0264 16.8457C12.8599 16.8734 12.7226 16.887 12.6291 16.8937C12.5825 16.897 12.5472 16.8986 12.5249 16.8994C12.5138 16.8997 12.506 16.8999 12.5018 16.9C12.4997 16.9 12.4984 16.9 12.4981 16.9C12.498 16.9 12.4981 16.9 12.4984 16.9C12.4985 16.9 12.4987 16.9 12.499 16.9C12.4991 16.9 12.4994 16.9 12.4995 16.9C12.4997 16.9 12.5 16.9 12.5 17.5C12.5 18.1 12.5003 18.1 12.5006 18.1C12.5008 18.1 12.5011 18.1 12.5014 18.1C12.5019 18.1 12.5025 18.1 12.5031 18.1C12.5044 18.1 12.5059 18.1 12.5077 18.1C12.5112 18.0999 12.5157 18.0999 12.5212 18.0998C12.532 18.0996 12.5467 18.0993 12.5649 18.0987C12.6013 18.0975 12.6519 18.0951 12.7146 18.0907C12.8399 18.0817 13.0151 18.0641 13.2236 18.0293C13.6379 17.9603 14.1995 17.8211 14.7683 17.5367C15.3395 17.2511 15.9289 16.8133 16.3742 16.1453C16.822 15.4736 17.1 14.605 17.1 13.5H15.9ZM12.5 17.5C12.5 16.9 12.5003 16.9 12.5005 16.9C12.5006 16.9 12.5009 16.9 12.501 16.9C12.5013 16.9 12.5015 16.9 12.5016 16.9C12.5019 16.9 12.502 16.9 12.5019 16.9C12.5016 16.9 12.5003 16.9 12.4982 16.9C12.494 16.8999 12.4862 16.8997 12.4751 16.8994C12.4528 16.8986 12.4175 16.897 12.3709 16.8937C12.2774 16.887 12.1401 16.8734 11.9736 16.8457C11.6379 16.7897 11.1995 16.6789 10.7683 16.4633C10.3395 16.2489 9.92894 15.9367 9.62423 15.4797C9.32203 15.0264 9.1 14.395 9.1 13.5H7.9C7.9 14.605 8.17797 15.4736 8.62577 16.1453C9.07106 16.8133 9.66049 17.2511 10.2317 17.5367C10.8005 17.8211 11.3621 17.9603 11.7764 18.0293C11.9849 18.0641 12.1601 18.0817 12.2854 18.0907C12.3481 18.0951 12.3987 18.0975 12.4351 18.0987C12.4533 18.0993 12.468 18.0996 12.4788 18.0998C12.4843 18.0999 12.4888 18.0999 12.4923 18.1C12.4941 18.1 12.4956 18.1 12.4969 18.1C12.4975 18.1 12.4981 18.1 12.4986 18.1C12.4989 18.1 12.4992 18.1 12.4994 18.1C12.4997 18.1 12.5 18.1 12.5 17.5ZM9.1 13.5V9.5H7.9V13.5H9.1ZM9.5 9.5C10.1 9.5 10.1 9.50028 10.1 9.50055C10.1 9.50063 10.1 9.50089 10.1 9.50104C10.1 9.50134 10.1 9.5016 10.1 9.50182C10.1 9.50225 10.1 9.5025 10.1 9.50259C10.1 9.50276 10.1 9.50224 10.1 9.50107C10.1001 9.49872 10.1002 9.49374 10.1004 9.4863C10.1009 9.4714 10.102 9.44678 10.1043 9.41384C10.1091 9.34776 10.1188 9.24944 10.1387 9.12989C10.179 8.88793 10.2586 8.5745 10.4117 8.26833C10.5636 7.96451 10.782 7.67894 11.0984 7.46798C11.4111 7.25953 11.855 7.1 12.5 7.1V5.9C11.645 5.9 10.9639 6.11547 10.4328 6.46952C9.90549 6.82106 9.56143 7.28549 9.33834 7.73167C9.11643 8.1755 9.00846 8.61207 8.95504 8.93261C8.92809 9.09431 8.91438 9.23036 8.90738 9.32835C8.90388 9.37744 8.90203 9.41727 8.90107 9.44632C8.90058 9.46085 8.90031 9.47272 8.90017 9.48172C8.9001 9.48622 8.90005 9.49001 8.90003 9.49306C8.90002 9.49459 8.90001 9.49593 8.90001 9.49709C8.9 9.49767 8.9 9.4982 8.9 9.49869C8.9 9.49893 8.9 9.49926 8.9 9.49938C8.9 9.4997 8.9 9.5 9.5 9.5ZM12.5 7.1C13.145 7.1 13.5889 7.25953 13.9016 7.46798C14.218 7.67894 14.4364 7.96451 14.5883 8.26833C14.7414 8.5745 14.821 8.88793 14.8613 9.12989C14.8812 9.24944 14.8909 9.34776 14.8957 9.41384C14.898 9.44678 14.8991 9.4714 14.8996 9.4863C14.8998 9.49374 14.8999 9.49872 14.9 9.50107C14.9 9.50224 14.9 9.50276 14.9 9.50259C14.9 9.5025 14.9 9.50225 14.9 9.50182C14.9 9.5016 14.9 9.50134 14.9 9.50104C14.9 9.50089 14.9 9.50063 14.9 9.50055C14.9 9.50028 14.9 9.5 15.5 9.5C16.1 9.5 16.1 9.4997 16.1 9.49938C16.1 9.49926 16.1 9.49893 16.1 9.49869C16.1 9.4982 16.1 9.49767 16.1 9.49709C16.1 9.49593 16.1 9.49459 16.1 9.49306C16.0999 9.49001 16.0999 9.48622 16.0998 9.48172C16.0997 9.47272 16.0994 9.46085 16.0989 9.44632C16.098 9.41727 16.0961 9.37744 16.0926 9.32835C16.0856 9.23036 16.0719 9.09431 16.045 8.93261C15.9915 8.61207 15.8836 8.1755 15.6617 7.73167C15.4386 7.28549 15.0945 6.82106 14.5672 6.46952C14.0361 6.11547 13.355 5.9 12.5 5.9V7.1ZM11.9 9.5V17.5H13.1V9.5H11.9ZM8.5 9.9C7.71525 9.9 7.10887 9.51034 6.67426 9.07574C6.45859 8.86006 6.29547 8.64279 6.18673 8.47968C6.1327 8.39863 6.09302 8.33235 6.06782 8.28825C6.05524 8.26624 6.04634 8.24988 6.04113 8.24011C6.03853 8.23523 6.03685 8.232 6.0361 8.23055C6.03573 8.22983 6.03559 8.22955 6.03568 8.22973C6.03573 8.22982 6.03583 8.23003 6.03599 8.23035C6.03607 8.23051 6.03617 8.2307 6.03628 8.23092C6.03634 8.23103 6.03643 8.23122 6.03646 8.23127C6.03656 8.23147 6.03666 8.23167 5.5 8.5C4.96334 8.76833 4.96345 8.76855 4.96357 8.76877C4.96361 8.76886 4.96372 8.76909 4.96381 8.76926C4.96398 8.7696 4.96417 8.76997 4.96437 8.77038C4.96478 8.77119 4.96525 8.77212 4.96579 8.77317C4.96685 8.77527 4.96818 8.77786 4.96976 8.78092C4.97292 8.78704 4.9771 8.79505 4.98231 8.80481C4.99272 8.82434 5.00726 8.85094 5.02593 8.88362C5.06323 8.9489 5.1173 9.03887 5.18827 9.14532C5.32953 9.35721 5.54141 9.63994 5.82574 9.92426C6.39113 10.4897 7.28475 11.1 8.5 11.1V9.9ZM16.5 11.1C17.7153 11.1 18.6089 10.4897 19.1743 9.92426C19.4586 9.63994 19.6705 9.35721 19.8117 9.14532C19.8827 9.03887 19.9368 8.9489 19.9741 8.88362C19.9927 8.85094 20.0073 8.82434 20.0177 8.80481C20.0229 8.79505 20.0271 8.78704 20.0302 8.78092C20.0318 8.77786 20.0331 8.77527 20.0342 8.77317C20.0347 8.77212 20.0352 8.77119 20.0356 8.77038C20.0358 8.76997 20.036 8.7696 20.0362 8.76926C20.0363 8.76909 20.0364 8.76886 20.0364 8.76877C20.0365 8.76855 20.0367 8.76833 19.5 8.5C18.9633 8.23167 18.9634 8.23147 18.9635 8.23127C18.9636 8.23122 18.9637 8.23103 18.9637 8.23092C18.9638 8.2307 18.9639 8.23051 18.964 8.23035C18.9642 8.23003 18.9643 8.22982 18.9643 8.22973C18.9644 8.22955 18.9643 8.22983 18.9639 8.23055C18.9632 8.232 18.9615 8.23523 18.9589 8.24011C18.9537 8.24988 18.9448 8.26624 18.9322 8.28825C18.907 8.33235 18.8673 8.39863 18.8133 8.47968C18.7045 8.64279 18.5414 8.86006 18.3257 9.07574C17.8911 9.51034 17.2847 9.9 16.5 9.9V11.1ZM16.5 13.1H20V11.9H16.5V13.1ZM16.5 15.1C17.2847 15.1 17.8911 15.4897 18.3257 15.9243C18.5414 16.1399 18.7045 16.3572 18.8133 16.5203C18.8673 16.6014 18.907 16.6676 18.9322 16.7117C18.9448 16.7338 18.9537 16.7501 18.9589 16.7599C18.9615 16.7648 18.9632 16.768 18.9639 16.7694C18.9643 16.7702 18.9644 16.7705 18.9643 16.7703C18.9643 16.7702 18.9642 16.77 18.964 16.7697C18.9639 16.7695 18.9638 16.7693 18.9637 16.7691C18.9637 16.769 18.9636 16.7688 18.9635 16.7687C18.9634 16.7685 18.9633 16.7683 19.5 16.5C20.0367 16.2317 20.0365 16.2315 20.0364 16.2312C20.0364 16.2311 20.0363 16.2309 20.0362 16.2307C20.036 16.2304 20.0358 16.23 20.0356 16.2296C20.0352 16.2288 20.0347 16.2279 20.0342 16.2268C20.0331 16.2247 20.0318 16.2221 20.0302 16.2191C20.0271 16.213 20.0229 16.205 20.0177 16.1952C20.0073 16.1757 19.9927 16.1491 19.9741 16.1164C19.9368 16.0511 19.8827 15.9611 19.8117 15.8547C19.6705 15.6428 19.4586 15.3601 19.1743 15.0757C18.6089 14.5103 17.7153 13.9 16.5 13.9V15.1ZM8.5 13.9C7.28475 13.9 6.39113 14.5103 5.82574 15.0757C5.54141 15.3601 5.32953 15.6428 5.18827 15.8547C5.1173 15.9611 5.06323 16.0511 5.02593 16.1164C5.00726 16.1491 4.99272 16.1757 4.98231 16.1952C4.9771 16.205 4.97292 16.213 4.96976 16.2191C4.96818 16.2221 4.96685 16.2247 4.96579 16.2268C4.96525 16.2279 4.96478 16.2288 4.96437 16.2296C4.96417 16.23 4.96398 16.2304 4.96381 16.2307C4.96372 16.2309 4.96361 16.2311 4.96357 16.2312C4.96345 16.2315 4.96334 16.2317 5.5 16.5C6.03666 16.7683 6.03656 16.7685 6.03646 16.7687C6.03643 16.7688 6.03634 16.769 6.03628 16.7691C6.03617 16.7693 6.03607 16.7695 6.03599 16.7697C6.03583 16.77 6.03573 16.7702 6.03568 16.7703C6.03559 16.7705 6.03573 16.7702 6.0361 16.7694C6.03685 16.768 6.03853 16.7648 6.04113 16.7599C6.04634 16.7501 6.05524 16.7338 6.06782 16.7117C6.09302 16.6676 6.1327 16.6014 6.18673 16.5203C6.29547 16.3572 6.45859 16.1399 6.67426 15.9243C7.10887 15.4897 7.71525 15.1 8.5 15.1V13.9ZM8.5 11.9H5V13.1H8.5V11.9Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nBugIcon.displayName = \"ForwardRef(BugIcon)\";\nconst BulbFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bulb-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H14V20.5C14 21.0523 13.5523 21.5 13 21.5H12C11.4477 21.5 11 21.0523 11 20.5V19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10C18 11.94 17.3978 12.9767 16.4272 14.3368Z\",\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2\n        }\n      )\n    }\n  );\n});\nBulbFilledIcon.displayName = \"ForwardRef(BulbFilledIcon)\";\nconst BulbOutlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"bulb-outline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 16.5H15.5M11 20V20.5C11 21.0523 11.4477 21.5 12 21.5H13C13.5523 21.5 14 21.0523 14 20.5V20M18 10C18 11.94 17.3978 12.9767 16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2\n        }\n      )\n    }\n  );\n});\nBulbOutlineIcon.displayName = \"ForwardRef(BulbOutlineIcon)\";\nconst CalendarIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"calendar\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M5.5 18.5H19.5V6.5H5.5V18.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16.5 8V4M8.5 8V4M8 12.5H10M8 15.5H10M11.5 12.5H13.5M11.5 15.5H13.5M15 12.5H17M15 15.5H17M12.5 8V4M5.5 9.5H19.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nCalendarIcon.displayName = \"ForwardRef(CalendarIcon)\";\nconst CaseIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"case\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9 8.5122V6C9 5.44772 9.44772 5 10 5H15C15.5523 5 16 5.44772 16 6V8.5122M4.5 12V18.5C4.5 19.0523 4.94772 19.5 5.5 19.5H19.5C20.0523 19.5 20.5 19.0523 20.5 18.5V12M4.5 12V9.5122C4.5 8.95991 4.94772 8.5122 5.5 8.5122H19.5C20.0523 8.5122 20.5 8.95991 20.5 9.5122V12M4.5 12L11.7978 14.7367C12.2505 14.9064 12.7495 14.9064 13.2022 14.7367L20.5 12\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nCaseIcon.displayName = \"ForwardRef(CaseIcon)\";\nconst ChartUpwardIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"chart-upward\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 5V19.5H20M7.5 16L11.5 11.5L15.5 14L19.5 8.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nChartUpwardIcon.displayName = \"ForwardRef(ChartUpwardIcon)\";\nconst CheckmarkCircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"checkmark-circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 12.1316L11.7414 14.5L16 10M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nCheckmarkCircleIcon.displayName = \"ForwardRef(CheckmarkCircleIcon)\";\nconst CheckmarkIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"checkmark\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 11.5L10.5 16.5L19.5 7.60001\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nCheckmarkIcon.displayName = \"ForwardRef(CheckmarkIcon)\";\nconst ChevronDownIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"chevron-down\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17 10L12.5 14.5L8 10\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nChevronDownIcon.displayName = \"ForwardRef(ChevronDownIcon)\";\nconst ChevronLeftIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"chevron-left\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15 17L10.5 12.5L15 8\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nChevronLeftIcon.displayName = \"ForwardRef(ChevronLeftIcon)\";\nconst ChevronRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"chevron-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10 8L14.5 12.5L10 17\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nChevronRightIcon.displayName = \"ForwardRef(ChevronRightIcon)\";\nconst ChevronUpIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"chevron-up\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 15L12.5 10.5L17 15\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nChevronUpIcon.displayName = \"ForwardRef(ChevronUpIcon)\";\nconst CircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"circle\",\n        {\n          cx: 12.5,\n          cy: 12.5,\n          r: 8,\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nCircleIcon.displayName = \"ForwardRef(CircleIcon)\";\nconst ClipboardIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"clipboard\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 5.5H6.5V19.5H18.5V5.5H17M12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nClipboardIcon.displayName = \"ForwardRef(ClipboardIcon)\";\nconst ClipboardImageIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"clipboard-image\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 5.5H6.5V19.5H10.5M17 5.5H18.5V11.5M10.5 18.5L12.73 15.8983C13.1327 15.4285 13.8613 15.4335 14.2575 15.909L15.299 17.1588C15.6754 17.6105 16.3585 17.6415 16.7743 17.2257L16.9903 17.0097C17.2947 16.7053 17.7597 16.6298 18.1447 16.8223L20.5 18M10.5 11.5H20.5V21.5H10.5V11.5ZM12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nClipboardImageIcon.displayName = \"ForwardRef(ClipboardImageIcon)\";\nconst ClockIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"clock\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 8V12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nClockIcon.displayName = \"ForwardRef(ClockIcon)\";\nconst CloseCircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"close-circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 15.5L12.5 12.5M12.5 12.5L15.5 9.5M12.5 12.5L9.5 9.5M12.5 12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nCloseCircleIcon.displayName = \"ForwardRef(CloseCircleIcon)\";\nconst CloseIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"close\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18 7L7 18M7 7L18 18\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nCloseIcon.displayName = \"ForwardRef(CloseIcon)\";\nconst CodeBlockIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"code-block\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 15L8.5 12.5L11 10M14 10L16.5 12.5L14 15M5.5 6.5H19.5V18.5H5.5V6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nCodeBlockIcon.displayName = \"ForwardRef(CodeBlockIcon)\";\nconst CodeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"code\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 16L7.5 12.5L11 9M14 9L17.5 12.5L14 16\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nCodeIcon.displayName = \"ForwardRef(CodeIcon)\";\nconst CogIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"cog\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14.0666 6.19428L13.719 5.32531C13.5196 4.82685 13.0369 4.5 12.5 4.5C11.9631 4.5 11.4804 4.82685 11.281 5.32531L10.9334 6.19428C10.7984 6.53187 10.5328 6.80068 10.1969 6.93982C9.86098 7.07896 9.48313 7.07666 9.14894 6.93343L8.2887 6.56476C7.79525 6.35328 7.22276 6.46353 6.84315 6.84315C6.46353 7.22276 6.35328 7.79525 6.56476 8.2887L6.93343 9.14894C7.07666 9.48313 7.07896 9.86098 6.93982 10.1969C6.80068 10.5328 6.53187 10.7984 6.19428 10.9334L5.32531 11.281C4.82685 11.4804 4.5 11.9631 4.5 12.5C4.5 13.0369 4.82685 13.5196 5.32531 13.719L6.19428 14.0666C6.53187 14.2016 6.80068 14.4672 6.93982 14.8031C7.07896 15.139 7.07666 15.5169 6.93343 15.8511L6.56476 16.7113C6.35328 17.2048 6.46353 17.7772 6.84315 18.1569C7.22276 18.5365 7.79525 18.6467 8.2887 18.4352L9.14894 18.0666C9.48314 17.9233 9.86099 17.921 10.1969 18.0602C10.5328 18.1993 10.7984 18.4681 10.9334 18.8057L11.281 19.6747C11.4804 20.1732 11.9631 20.5 12.5 20.5C13.0369 20.5 13.5196 20.1731 13.719 19.6747L14.0666 18.8057C14.2016 18.4681 14.4672 18.1993 14.8031 18.0602C15.139 17.921 15.5169 17.9233 15.8511 18.0666L16.7113 18.4352C17.2047 18.6467 17.7772 18.5365 18.1569 18.1569C18.5365 17.7772 18.6467 17.2047 18.4352 16.7113L18.0666 15.8511C17.9233 15.5169 17.921 15.139 18.0602 14.8031C18.1993 14.4672 18.4681 14.2016 18.8057 14.0666L19.6747 13.719C20.1731 13.5196 20.5 13.0369 20.5 12.5C20.5 11.9631 20.1731 11.4804 19.6747 11.281L18.8057 10.9334C18.4681 10.7984 18.1993 10.5328 18.0602 10.1969C17.921 9.86098 17.9233 9.48313 18.0666 9.14894L18.4352 8.2887C18.6467 7.79525 18.5365 7.22276 18.1569 6.84314C17.7772 6.46353 17.2048 6.35328 16.7113 6.56476L15.8511 6.93343C15.5169 7.07666 15.139 7.07896 14.8031 6.93982C14.4672 6.80068 14.2016 6.53187 14.0666 6.19428Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nCogIcon.displayName = \"ForwardRef(CogIcon)\";\nconst CollapseIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"collapse\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6 14.5L10.5 14.5V19M19 10.5H14.5L14.5 6\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10.5 14.5L6 19M14.5 10.5L19 6\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nCollapseIcon.displayName = \"ForwardRef(CollapseIcon)\";\nconst ColorWheelIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"color-wheel\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.43853 5.10896L11.1606 9.26642M13.8394 15.7336L15.5615 19.891M15.7336 11.1606L19.891 9.43853M9.26642 13.8394L5.10896 15.5615M5.3139 9.52342L9.23359 11.147M15.7664 13.853L19.6861 15.4766M13.853 9.23359L15.4766 5.3139M9.52342 19.6861L11.147 15.7664M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5ZM16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nColorWheelIcon.displayName = \"ForwardRef(ColorWheelIcon)\";\nconst CommentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"comment\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.5 16.5H9.5V20.5L13.5 16.5H17.5C18.6046 16.5 19.5 15.6046 19.5 14.5V8.5C19.5 7.39543 18.6046 6.5 17.5 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nCommentIcon.displayName = \"ForwardRef(CommentIcon)\";\nconst ComponentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"component\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.5 8.5L12.5 12.5M12.5 12.5L16.5 16.5M12.5 12.5L16.5 8.5M12.5 12.5L8.5 16.5M12.5 4L21 12.5L12.5 21L4 12.5L12.5 4Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nComponentIcon.displayName = \"ForwardRef(ComponentIcon)\";\nconst ComposeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"compose\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17 6L19 8M14 5.5H5.5V19.5H19.5V11M9 16L9.5 13.5L19 4L21 6L11.5 15.5L9 16Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nComposeIcon.displayName = \"ForwardRef(ComposeIcon)\";\nconst ComposeSparklesIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"compose-sparkles\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 3.5V5M11 5V6.5M11 5H12.5M11 5H9.5M17 9L9.5 16.5L9 19L11.5 18.5L19 11M17 9L19 7L21 9L19 11M17 9L19 11M4.5 10C4.5 10 5.72308 9.87692 6.3 9.3C6.87692 8.72308 7 7.5 7 7.5C7 7.5 7.12308 8.72308 7.7 9.3C8.27692 9.87692 9.5 10 9.5 10C9.5 10 8.27692 10.1231 7.7 10.7C7.12308 11.2769 7 12.5 7 12.5C7 12.5 6.87692 11.2769 6.3 10.7C5.72308 10.1231 4.5 10 4.5 10Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nComposeSparklesIcon.displayName = \"ForwardRef(ComposeSparklesIcon)\";\nconst ConfettiIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"confetti\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16.5 6.25C16.9142 6.25 17.25 5.91421 17.25 5.5C17.25 5.08579 16.9142 4.75 16.5 4.75C16.0858 4.75 15.75 5.08579 15.75 5.5C15.75 5.91421 16.0858 6.25 16.5 6.25Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19.5 16.25C19.9142 16.25 20.25 15.9142 20.25 15.5C20.25 15.0858 19.9142 14.75 19.5 14.75C19.0858 14.75 18.75 15.0858 18.75 15.5C18.75 15.9142 19.0858 16.25 19.5 16.25Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M13 4C11 6 14.5 5.5 12.5 7.5M21 12C19 14 19.5 10.5 17.5 12.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16.066 16.4904C15.3965 17.1598 13.1126 15.9613 10.9647 13.8135C8.81684 11.6656 7.61835 9.38165 8.28782 8.71218M16.066 16.4904C16.7355 15.8209 15.537 13.537 13.3891 11.3891C11.2412 9.2412 8.95729 8.04271 8.28782 8.71218M16.066 16.4904C15.8661 16.6902 15.6277 16.8474 15.3657 16.952L6.99288 20.296C6.26931 20.5849 5.44878 20.4193 4.9038 19.8744C4.35883 19.3294 4.19324 18.5089 4.48221 17.7853L7.82614 9.41242C7.93077 9.15042 8.08793 8.91208 8.28782 8.71218M20 5C20 14 11.5 5.32688 11.5 14.3269\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nConfettiIcon.displayName = \"ForwardRef(ConfettiIcon)\";\nconst ControlsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"controls\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M6.5 5V7.5M6.5 7.5C5.39543 7.5 4.5 8.39543 4.5 9.5C4.5 10.6046 5.39543 11.5 6.5 11.5M6.5 7.5C7.60457 7.5 8.5 8.39543 8.5 9.5C8.5 10.6046 7.60457 11.5 6.5 11.5M6.5 11.5V20M12.5 5V13.5M12.5 13.5C11.3954 13.5 10.5 14.3954 10.5 15.5C10.5 16.6046 11.3954 17.5 12.5 17.5M12.5 13.5C13.6046 13.5 14.5 14.3954 14.5 15.5C14.5 16.6046 13.6046 17.5 12.5 17.5M12.5 17.5V20M18.5 5V7.5M18.5 7.5C17.3954 7.5 16.5 8.39543 16.5 9.5C16.5 10.6046 17.3954 11.5 18.5 11.5M18.5 7.5C19.6046 7.5 20.5 8.39543 20.5 9.5C20.5 10.6046 19.6046 11.5 18.5 11.5M18.5 11.5V20\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nControlsIcon.displayName = \"ForwardRef(ControlsIcon)\";\nconst CopyIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"copy\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.5 8.5H5.5V20.5H16.5V16.5M19.5 4.5H8.5V16.5H19.5V4.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nCopyIcon.displayName = \"ForwardRef(CopyIcon)\";\nconst CreditCardIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"credit-card\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M20.5 9.5H4.5V11.5H20.5V9.5Z\",\n            fill: \"currentColor\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7 15.5H14M5.5 18.5H19.5C20.0523 18.5 20.5 18.0523 20.5 17.5V7.5C20.5 6.94772 20.0523 6.5 19.5 6.5H5.5C4.94772 6.5 4.5 6.94772 4.5 7.5V17.5C4.5 18.0523 4.94772 18.5 5.5 18.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nCreditCardIcon.displayName = \"ForwardRef(CreditCardIcon)\";\nconst CropIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"crop\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 5V15.5H20M5 9.5H15.5V20\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nCropIcon.displayName = \"ForwardRef(CropIcon)\";\nconst CubeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"cube\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 22V13M12.5 13L4.5 8M12.5 13L20.5 8\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nCubeIcon.displayName = \"ForwardRef(CubeIcon)\";\nconst DashboardIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"dashboard\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M14.5 19.5V12.5M10.5 12.5V5.5M5.5 12.5H19.5M5.5 19.5H19.5V5.5H5.5V19.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nDashboardIcon.displayName = \"ForwardRef(DashboardIcon)\";\nconst DatabaseIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"database\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.5 7V17.5C18.5 19.0594 16.0504 20.5 12.5 20.5C8.9496 20.5 6.5 19.0594 6.5 17.5V7M18.5 7C18.5 8.45543 15.8137 9.5 12.5 9.5C9.18629 9.5 6.5 8.45543 6.5 7C6.5 5.54457 9.18629 4.5 12.5 4.5C15.8137 4.5 18.5 5.54457 18.5 7Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nDatabaseIcon.displayName = \"ForwardRef(DatabaseIcon)\";\nconst DesktopIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"desktop\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M4.5 13.5V15.5C4.5 16.0523 4.94772 16.5 5.5 16.5H12.5M4.5 13.5V6.5C4.5 5.94772 4.94772 5.5 5.5 5.5H19.5C20.0523 5.5 20.5 5.94772 20.5 6.5V13.5M4.5 13.5H20.5M20.5 13.5V15.5C20.5 16.0523 20.0523 16.5 19.5 16.5H12.5M12.5 16.5V19.5M12.5 19.5H8M12.5 19.5H17\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nDesktopIcon.displayName = \"ForwardRef(DesktopIcon)\";\nconst DiamondIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"diamond\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M21 10.5L12.5 21M21 10.5L18 5.5H11M21 10.5H16M12.5 21L4 10.5M12.5 21L9 10.5M12.5 21L16 10.5M4 10.5L7 5.5H11M4 10.5H9M9 10.5H12.5H16M9 10.5L11 5.5M16 10.5L14.5 5.5H11\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nDiamondIcon.displayName = \"ForwardRef(DiamondIcon)\";\nconst DocumentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M18.5 20.5H6.5V9.5L11.5 4.5H18.5V20.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nDocumentIcon.displayName = \"ForwardRef(DocumentIcon)\";\nconst DocumentPdfIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-pdf\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.7127 13.8012L12.7193 13.77C12.8488 13.2366 13.0117 12.5716 12.8845 11.969C12.7997 11.4937 12.4493 11.3084 12.1503 11.295C11.7977 11.2794 11.483 11.4803 11.4049 11.7726C11.2576 12.3082 11.3893 13.0402 11.6303 13.973C11.3268 14.6961 10.8425 15.7472 10.4877 16.3721C9.8271 16.7135 8.94113 17.2402 8.80946 17.9053C8.78268 18.028 8.81392 18.1842 8.88757 18.3248C8.97014 18.481 9.10181 18.6015 9.25579 18.6596C9.32274 18.6841 9.40308 18.7042 9.49681 18.7042C9.88959 18.7042 10.5256 18.3873 11.3736 16.9322C11.5031 16.8898 11.637 16.8452 11.7664 16.8006C12.3734 16.5953 13.0028 16.381 13.5718 16.2851C14.2012 16.622 14.9175 16.8385 15.404 16.8385C15.8861 16.8385 16.0758 16.5529 16.1472 16.381C16.2722 16.0797 16.2119 15.7004 16.0088 15.4973C15.7143 15.2072 14.9979 15.1313 13.882 15.2696C13.3331 14.9349 12.9738 14.4796 12.7127 13.8012ZM10.2645 17.1911C9.95431 17.6419 9.71998 17.8673 9.59278 17.9655C9.7423 17.691 10.0346 17.4009 10.2645 17.1911ZM12.2195 11.9355C12.3355 12.1341 12.3199 12.7345 12.2306 13.038C12.1213 12.5939 12.1056 11.9645 12.1704 11.8909L12.2195 11.9355ZM12.1837 14.6247C12.4225 15.0376 12.7238 15.3924 13.0563 15.6557C12.5743 15.7651 12.1346 15.9458 11.7419 16.1065C11.6481 16.1445 11.5566 16.1824 11.4674 16.2181C11.7642 15.6803 12.0119 15.071 12.1837 14.6247ZM15.6562 16.0864L15.6428 16.1065C15.6428 16.1065 15.4375 16.2315 14.6497 15.9213C15.5558 15.8789 15.6562 16.0864 15.6562 16.0864Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nDocumentPdfIcon.displayName = \"ForwardRef(DocumentPdfIcon)\";\nconst DocumentRemoveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-remove\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6.5 14V20.5H18.5V14M6.5 11V9.5L11.5 4.5H18.5V11M3 12.5H22\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nDocumentRemoveIcon.displayName = \"ForwardRef(DocumentRemoveIcon)\";\nconst DocumentSheetIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-sheet\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10.4 19V16.4M10.4 16.4L10.4 13.4M10.4 16.4H8M10.4 16.4H14.4M10.4 13.4V11M10.4 13.4H8M10.4 13.4H14.4M14.4 19V16.4M14.4 16.4V13.4M14.4 16.4H17M14.4 13.4V11M14.4 13.4H17M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nDocumentSheetIcon.displayName = \"ForwardRef(DocumentSheetIcon)\";\nconst DocumentTextIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-text\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16 13H9M14 16H9M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nDocumentTextIcon.displayName = \"ForwardRef(DocumentTextIcon)\";\nconst DocumentVideoIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-video\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 16.5V13.5L14 15L11.5 16.5Z\",\n            fill: \"currentColor\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nDocumentVideoIcon.displayName = \"ForwardRef(DocumentVideoIcon)\";\nconst DocumentWordIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-word\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.4699 13.4588H12.5263L13.6328 17H14.5435L16 12H14.9952L14.0656 15.7214H14.0129L12.929 12H12.0672L10.9984 15.7214H10.9419L10.0124 12H9L10.4565 17H11.371L12.4699 13.4588Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nDocumentWordIcon.displayName = \"ForwardRef(DocumentWordIcon)\";\nconst DocumentZipIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"document-zip\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M11.5 4.5V9.5H6.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15 4.5L13.5 5L15.5 6L13.5 7L15.5 8L13.5 9L15.5 10L13.5 11L14.5 11.5V13M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM13.5 13H15.5L16 17H13L13.5 13Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nDocumentZipIcon.displayName = \"ForwardRef(DocumentZipIcon)\";\nconst DocumentsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"documents\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M10.5 4.5V9.5H5.5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16.5 7.5H19.5V21.5H8.5V18.5M10.5 4.5H16.5V18.5H5.5V9.5L10.5 4.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nDocumentsIcon.displayName = \"ForwardRef(DocumentsIcon)\";\nconst DotIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"dot\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"circle\",\n        {\n          cx: 12.5,\n          cy: 12.5,\n          r: 2.5,\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2\n        }\n      )\n    }\n  );\n});\nDotIcon.displayName = \"ForwardRef(DotIcon)\";\nconst DoubleChevronDownIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"double-chevron-down\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17 7.5C15.6332 8.86683 12.5 12 12.5 12L8 7.5M17 12.5C15.6332 13.8668 12.5 17 12.5 17L8 12.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nDoubleChevronDownIcon.displayName = \"ForwardRef(DoubleChevronDownIcon)\";\nconst DoubleChevronLeftIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"double-chevron-left\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 17L8 12.5L12.5 8M17.5 17L13 12.5L17.5 8\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nDoubleChevronLeftIcon.displayName = \"ForwardRef(DoubleChevronLeftIcon)\";\nconst DoubleChevronRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"double-chevron-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 8L17 12.5L12.5 17M7.5 8L12 12.5L7.5 17\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nDoubleChevronRightIcon.displayName = \"ForwardRef(DoubleChevronRightIcon)\";\nconst DoubleChevronUpIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"double-chevron-up\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 12.5L12.5 8L17 12.5M8 17.5L12.5 13L17 17.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nDoubleChevronUpIcon.displayName = \"ForwardRef(DoubleChevronUpIcon)\";\nconst DownloadIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"download\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19.5 17V19.5H5.5V17M12.5 16L12.5 5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17.5 11L12.5 16L7.5 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nDownloadIcon.displayName = \"ForwardRef(DownloadIcon)\";\nconst DragHandleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"drag-handle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.5 8C10.3284 8 11 7.32843 11 6.5C11 5.67157 10.3284 5 9.5 5C8.67157 5 8 5.67157 8 6.5C8 7.32843 8.67157 8 9.5 8Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.5 14C10.3284 14 11 13.3284 11 12.5C11 11.6716 10.3284 11 9.5 11C8.67157 11 8 11.6716 8 12.5C8 13.3284 8.67157 14 9.5 14Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11 18.5C11 19.3284 10.3284 20 9.5 20C8.67157 20 8 19.3284 8 18.5C8 17.6716 8.67157 17 9.5 17C10.3284 17 11 17.6716 11 18.5Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15.5 8C16.3284 8 17 7.32843 17 6.5C17 5.67157 16.3284 5 15.5 5C14.6716 5 14 5.67157 14 6.5C14 7.32843 14.6716 8 15.5 8Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17 12.5C17 13.3284 16.3284 14 15.5 14C14.6716 14 14 13.3284 14 12.5C14 11.6716 14.6716 11 15.5 11C16.3284 11 17 11.6716 17 12.5Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15.5 20C16.3284 20 17 19.3284 17 18.5C17 17.6716 16.3284 17 15.5 17C14.6716 17 14 17.6716 14 18.5C14 19.3284 14.6716 20 15.5 20Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n});\nDragHandleIcon.displayName = \"ForwardRef(DragHandleIcon)\";\nconst DropIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"drop\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.5 14.5C18.5 18 16 20.5 12.5 20.5C9 20.5 6.5 18 6.5 14.5C6.5 11 9.5 7.50001 12.5 4.5C15.5 7.5 18.5 11 18.5 14.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nDropIcon.displayName = \"ForwardRef(DropIcon)\";\nconst EarthAmericasIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"earth-americas\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7 13L5.5 9L10 5H15V10L14 9H11L9.5 11L10.5 12H12V13L13 14.5H15.5L18.5 17L15.5 19.5L10.5 20V17L12.5 15L9 13L7 10.5V13Z\",\n            fill: \"currentColor\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"circle\",\n          {\n            cx: 12.5,\n            cy: 12.5,\n            r: 8,\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nEarthAmericasIcon.displayName = \"ForwardRef(EarthAmericasIcon)\";\nconst EarthGlobeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"earth-globe\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M20.5 12.5H4.5M12.5 20.5C12.5 20.5 9.5 17.5 9.5 12.5C9.5 7.5 12.5 4.5 12.5 4.5C12.5 4.5 15.5 7.5 15.5 12.5C15.5 17.5 12.5 20.5 12.5 20.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nEarthGlobeIcon.displayName = \"ForwardRef(EarthGlobeIcon)\";\nconst EditIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"edit\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15 7L18 10M6 19L7 15L17 5L20 8L10 18L6 19Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nEditIcon.displayName = \"ForwardRef(EditIcon)\";\nconst EllipsisHorizontalIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"ellipsis-horizontal\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6.5 11C7.32843 11 8 11.6716 8 12.5C8 13.3284 7.32843 14 6.5 14C5.67157 14 5 13.3284 5 12.5C5 11.6716 5.67157 11 6.5 11Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 11C13.3284 11 14 11.6716 14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M18.5 11C19.3284 11 20 11.6716 20 12.5C20 13.3284 19.3284 14 18.5 14C17.6716 14 17 13.3284 17 12.5C17 11.6716 17.6716 11 18.5 11Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n});\nEllipsisHorizontalIcon.displayName = \"ForwardRef(EllipsisHorizontalIcon)\";\nconst EllipsisVerticalIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"ellipsis-vertical\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 6.5C14 7.32843 13.3284 8 12.5 8C11.6716 8 11 7.32843 11 6.5C11 5.67157 11.6716 5 12.5 5C13.3284 5 14 5.67157 14 6.5Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11C13.3284 11 14 11.6716 14 12.5Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 18.5C14 19.3284 13.3284 20 12.5 20C11.6716 20 11 19.3284 11 18.5C11 17.6716 11.6716 17 12.5 17C13.3284 17 14 17.6716 14 18.5Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n});\nEllipsisVerticalIcon.displayName = \"ForwardRef(EllipsisVerticalIcon)\";\nconst EmptyIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"empty\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 21V19.1111M8.25 19.8614L9.19445 18.2255M5.13878 16.7501L6.77461 15.8057M4 12.5H5.8889M5.13872 8.2499L6.77455 9.19436M8.25004 5.13876L9.19449 6.7746M12.5 5.88891V4M15.8055 6.77465L16.75 5.1388M18.2254 9.19449L19.8612 8.25004M19.1111 12.5001H21M18.2254 15.8056L19.8612 16.7501M15.8056 18.2255L16.75 19.8614\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2\n        }\n      )\n    }\n  );\n});\nEmptyIcon.displayName = \"ForwardRef(EmptyIcon)\";\nconst EnterIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"enter\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M6 14.5H19.5V7\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10 18.5L6 14.5L10 10.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nEnterIcon.displayName = \"ForwardRef(EnterIcon)\";\nconst EnterRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"enter-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M19 14.5H5.5V7\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15 18.5L19 14.5L15 10.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nEnterRightIcon.displayName = \"ForwardRef(EnterRightIcon)\";\nconst EnvelopeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"envelope\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M20.5 18.5H4.5V6.5H20.5V18.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M20.5 18.5L17.75 15.5L15 12.5M4.5 18.5L10 12.5M20.5 6.5L12.5 15L4.5 6.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nEnvelopeIcon.displayName = \"ForwardRef(EnvelopeIcon)\";\nconst EqualIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"equal\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M7.5 4.5H3.5V20.5H7.5\", stroke: \"currentColor\", strokeWidth: 1.2 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M17.5 20.5L21.5 20.5L21.5 4.5L17.5 4.5\", stroke: \"currentColor\", strokeWidth: 1.2 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M9 10.5H16\", stroke: \"currentColor\", strokeWidth: 1.2 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M9 14.5H16\", stroke: \"currentColor\", strokeWidth: 1.2 })\n      ]\n    }\n  );\n});\nEqualIcon.displayName = \"ForwardRef(EqualIcon)\";\nconst ErrorFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"error-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5ZM13 14.5V16H12V14.5H13ZM12 9V13H13V9H12Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nErrorFilledIcon.displayName = \"ForwardRef(ErrorFilledIcon)\";\nconst ErrorOutlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"error-outline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 16V14.5M12.5 9V13M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nErrorOutlineIcon.displayName = \"ForwardRef(ErrorOutlineIcon)\";\nconst ErrorScreenIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"error-screen\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10 8.5L15 13.5M15 8.5L10 13.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 16.5H5.5C4.94772 16.5 4.5 16.0523 4.5 15.5V6.5C4.5 5.94771 4.94772 5.5 5.5 5.5H19.5C20.0523 5.5 20.5 5.94772 20.5 6.5V15.5C20.5 16.0523 20.0523 16.5 19.5 16.5H12.5ZM12.5 16.5V19.5M12.5 19.5H8M12.5 19.5H17\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nErrorScreenIcon.displayName = \"ForwardRef(ErrorScreenIcon)\";\nconst ExpandIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"expand\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 6.5H18.5V11M11 18.5H6.5V14\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M18.5 6.5L14 11M6.5 18.5L11 14\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nExpandIcon.displayName = \"ForwardRef(ExpandIcon)\";\nconst EyeClosedIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"eye-closed\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7 15.5L5.5 17.5M20.5 12.5C19.8612 13.5647 19.041 14.6294 18.0008 15.501M18.0008 15.501C16.5985 16.676 14.7965 17.5 12.5 17.5M18.0008 15.501L18 15.5M18.0008 15.501L19.5 17.5M12.5 17.5C8.5 17.5 6 15 4.5 12.5M12.5 17.5V20M15.5 17L16.5 19.5M9.5 17L8.5 19.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nEyeClosedIcon.displayName = \"ForwardRef(EyeClosedIcon)\";\nconst EyeOpenIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"eye-open\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M9.39999 12.5C9.39999 10.7879 10.7879 9.39999 12.5 9.39999C14.2121 9.39999 15.6 10.7879 15.6 12.5C15.6 14.2121 14.2121 15.6 12.5 15.6C10.7879 15.6 9.39999 14.2121 9.39999 12.5Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 7.5C8.5 7.5 6 10 4.5 12.5C6 15 8.5 17.5 12.5 17.5C16.5 17.5 19 15 20.5 12.5C19 10 16.5 7.5 12.5 7.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nEyeOpenIcon.displayName = \"ForwardRef(EyeOpenIcon)\";\nconst FaceHappyIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"face-happy\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 9V12M14.5 9V12M8.5 14C8.5 14 9.50001 16.5 12.5 16.5C15.5 16.5 16.5 14 16.5 14M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nFaceHappyIcon.displayName = \"ForwardRef(FaceHappyIcon)\";\nconst FaceIndifferentIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"face-indifferent\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 9V12M14.5 9V12M8.5 15.5C8.5 15.5 9.50001 15.5 12.5 15.5C15.5 15.5 16.5 15.5 16.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nFaceIndifferentIcon.displayName = \"ForwardRef(FaceIndifferentIcon)\";\nconst FaceSadIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"face-sad\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 9V12M14.5 9V12M8.5 16.5C8.5 16.5 9.50001 14.5 12.5 14.5C15.5 14.5 16.5 16.5 16.5 16.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nFaceSadIcon.displayName = \"ForwardRef(FaceSadIcon)\";\nconst FeedbackIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"feedback\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M10 11.5V12H9.5L9.5 11.5H10Z\", fill: \"currentColor\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M13 11.5V12H12.5V11.5H13Z\", fill: \"currentColor\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M16 11.5V12H15.5V11.5H16Z\", fill: \"currentColor\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10 11.5V12H9.5L9.5 11.5H10Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M13 11.5V12H12.5V11.5H13Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16 11.5V12H15.5V11.5H16Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.5 16.5H9.5V20.5L13.5 16.5H17.5C18.6046 16.5 19.5 15.6046 19.5 14.5V8.5C19.5 7.39543 18.6046 6.5 17.5 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nFeedbackIcon.displayName = \"ForwardRef(FeedbackIcon)\";\nconst FilterIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"filter\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M6 7.5H19M8 12.5H17M10 17.5H15\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nFilterIcon.displayName = \"ForwardRef(FilterIcon)\";\nconst FolderIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"folder\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11.5 8.5H19.5V18.5H5.5V5.5H10.5L11.5 8.5ZM11.5 8.5H5.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nFolderIcon.displayName = \"ForwardRef(FolderIcon)\";\nconst GenerateIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"generate\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9 5.30423C6.33576 6.60253 4.5 9.33688 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5V14.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16 11L12.5 14.5L9 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nGenerateIcon.displayName = \"ForwardRef(GenerateIcon)\";\nconst GithubIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"github\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M12.507 4C7.80286 4 4 7.8309 4 12.5702C4 16.3587 6.43663 19.5655 9.81687 20.7005C10.2395 20.7858 10.3943 20.5161 10.3943 20.2892C10.3943 20.0905 10.3804 19.4094 10.3804 18.6999C8.01391 19.2108 7.52112 17.6782 7.52112 17.6782C7.14081 16.685 6.57732 16.4297 6.57732 16.4297C5.80279 15.9047 6.63374 15.9047 6.63374 15.9047C7.49291 15.9615 7.94374 16.7844 7.94374 16.7844C8.70417 18.0897 9.92953 17.7209 10.4225 17.4938C10.4929 16.9404 10.7184 16.5573 10.9578 16.3445C9.07037 16.1459 7.08457 15.4081 7.08457 12.1161C7.08457 11.1796 7.42239 10.4134 7.95767 9.81757C7.87321 9.60478 7.57736 8.72489 8.04229 7.54724C8.04229 7.54724 8.76059 7.32017 10.3802 8.42695C11.0736 8.23935 11.7887 8.14392 12.507 8.14312C13.2253 8.14312 13.9576 8.24255 14.6337 8.42695C16.2535 7.32017 16.9718 7.54724 16.9718 7.54724C17.4367 8.72489 17.1407 9.60478 17.0562 9.81757C17.6056 10.4134 17.9295 11.1796 17.9295 12.1161C17.9295 15.4081 15.9437 16.1316 14.0422 16.3445C14.3521 16.6141 14.6196 17.1248 14.6196 17.9337C14.6196 19.0829 14.6057 20.0053 14.6057 20.289C14.6057 20.5161 14.7606 20.7858 15.1831 20.7006C18.5633 19.5653 21 16.3587 21 12.5702C21.0139 7.8309 17.1971 4 12.507 4Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nGithubIcon.displayName = \"ForwardRef(GithubIcon)\";\nconst GroqIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"groq\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M13 13H21L13 21L13 13Z\", fill: \"currentColor\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M12 12V4L4 12H12Z\", fill: \"currentColor\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M12 13H4L12 21V13Z\", fill: \"currentColor\" })\n      ]\n    }\n  );\n});\nGroqIcon.displayName = \"ForwardRef(GroqIcon)\";\nconst HashIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"hash\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M8.33894 16.1002H5.44615L5.63077 14.9002H8.52356L9.26202 10.1002H6.36923L6.55384 8.90018H9.44663L9.89281 6H11.1069L10.6608 8.90018H15.4466L15.8928 6H17.1069L16.6608 8.90018H19.5539L19.3693 10.1002H16.4761L15.7377 14.9002H18.6308L18.4462 16.1002H15.5531L15.1069 19H13.8928L14.3389 16.1002H9.55306L9.10693 19H7.89281L8.33894 16.1002ZM10.4761 10.1002L9.73767 14.9002H14.5236L15.262 10.1002H10.4761Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nHashIcon.displayName = \"ForwardRef(HashIcon)\";\nconst HeartFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"heart-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nHeartFilledIcon.displayName = \"ForwardRef(HeartFilledIcon)\";\nconst HeartIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"heart\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nHeartIcon.displayName = \"ForwardRef(HeartIcon)\";\nconst HelpCircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"help-circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nHelpCircleIcon.displayName = \"ForwardRef(HelpCircleIcon)\";\nconst HighlightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"highlight\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17.5311 13.7141L8.02451 8.22547M17.5311 13.7141L20.25 9.00478M17.5311 13.7141L16.5 15.5L13.232 16.134L12 18L11.4142 17.6485M8.02451 8.22547L10.75 3.50479M8.02451 8.22547L6.99999 9.99998L7.99999 13L6.99999 15L7.58576 15.3514M7.58576 15.3514L4.90192 20L10.0566 20L11.4142 17.6485M7.58576 15.3514L11.4142 17.6485M13 20H20\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nHighlightIcon.displayName = \"ForwardRef(HighlightIcon)\";\nconst HomeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"home\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M14.5 18.5V12.5H10.5V18.5M5.5 11.5V18.5H19.5V11.5L12.5 5.5L5.5 11.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nHomeIcon.displayName = \"ForwardRef(HomeIcon)\";\nconst IceCreamIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"ice-cream\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 13.5L12.5 20.5L15.5 13.5M12.5 8.26389C11.9692 7.78885 11.2684 7.5 10.5 7.5C8.84315 7.5 7.5 8.84315 7.5 10.5C7.5 12.1569 8.84315 13.5 10.5 13.5C11.2684 13.5 11.9692 13.2111 12.5 12.7361M9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5M17.5 10.5C17.5 12.1569 16.1569 13.5 14.5 13.5C12.8431 13.5 11.5 12.1569 11.5 10.5C11.5 8.84315 12.8431 7.5 14.5 7.5C16.1569 7.5 17.5 8.84315 17.5 10.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nIceCreamIcon.displayName = \"ForwardRef(IceCreamIcon)\";\nconst ImageIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"image\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 15.5L8.79289 12.2071C9.18342 11.8166 9.81658 11.8166 10.2071 12.2071L12.8867 14.8867C13.2386 15.2386 13.7957 15.2782 14.1938 14.9796L15.1192 14.2856C15.3601 14.1049 15.6696 14.0424 15.9618 14.1154L19.5 15M5.5 6.5H19.5V18.5H5.5V6.5ZM15.5 10.5C15.5 11.0523 15.0523 11.5 14.5 11.5C13.9477 11.5 13.5 11.0523 13.5 10.5C13.5 9.94772 13.9477 9.5 14.5 9.5C15.0523 9.5 15.5 9.94772 15.5 10.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nImageIcon.displayName = \"ForwardRef(ImageIcon)\";\nconst ImageRemoveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"image-remove\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 11V6.5H19.5V11M5.5 14V18.5H19.5V14M3 12.5H22\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nImageRemoveIcon.displayName = \"ForwardRef(ImageRemoveIcon)\";\nconst ImagesIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"images\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.5 7.5H20.5V19.5H6.5V17.5M4.5 14.5L7.79289 11.2071C8.18342 10.8166 8.81658 10.8166 9.20711 11.2071L11.8867 13.8867C12.2386 14.2386 12.7957 14.2782 13.1938 13.9796L14.1192 13.2856C14.3601 13.1049 14.6696 13.0424 14.9618 13.1154L18.5 14M4.5 5.5H18.5V17.5H4.5V5.5ZM14.5 9.5C14.5 10.0523 14.0523 10.5 13.5 10.5C12.9477 10.5 12.5 10.0523 12.5 9.5C12.5 8.94772 12.9477 8.5 13.5 8.5C14.0523 8.5 14.5 8.94772 14.5 9.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nImagesIcon.displayName = \"ForwardRef(ImagesIcon)\";\nconst InboxIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"inbox\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9 8.5H8.17703C7.76813 8.5 7.40042 8.74895 7.24856 9.12861L5.5 13.5M5.5 13.5V17.5C5.5 18.0523 5.94302 18.5 6.4953 18.5C9.00381 18.5 15.5919 18.5 18.504 18.5C19.0563 18.5 19.5 18.0523 19.5 17.5V13.5M5.5 13.5H8.5L10 15.5H15L16.5 13.5H19.5M19.5 13.5L17.7514 9.12861C17.5996 8.74895 17.2319 8.5 16.823 8.5H16M12.5 5V12.5M12.5 12.5L15 10M12.5 12.5L10 10\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nInboxIcon.displayName = \"ForwardRef(InboxIcon)\";\nconst InfoFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"info-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5ZM12 10.5V9H13V10.5H12ZM13 16V12H12V16H13Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nInfoFilledIcon.displayName = \"ForwardRef(InfoFilledIcon)\";\nconst InfoOutlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"info-outline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 10.5V9M12.5 12V16M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nInfoOutlineIcon.displayName = \"ForwardRef(InfoOutlineIcon)\";\nconst InlineElementIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"inline-element\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 5V20M19.5 5V20M8.5 6.5H16.5V18.5H8.5V6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nInlineElementIcon.displayName = \"ForwardRef(InlineElementIcon)\";\nconst InlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"inline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 6.5H19.5V18.5H12.5M12.5 6.5H5.5V18.5H12.5M12.5 6.5V18.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nInlineIcon.displayName = \"ForwardRef(InlineIcon)\";\nconst InsertAboveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"insert-above\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M14.5 10.5556L10.5 10.5556M12.5 12.5L12.5 8.5M18.5 5.5L6.5 5.5M18.5 19.5L6.5 19.5L6.5 15.5L18.5 15.5L18.5 19.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinecap: \"square\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nInsertAboveIcon.displayName = \"ForwardRef(InsertAboveIcon)\";\nconst InsertBelowIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"insert-below\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 14.5H14.5M12.5 12.5V16.5M6.5 19.5H18.5M6.5 5.5H18.5V9.5H6.5V5.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinecap: \"square\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nInsertBelowIcon.displayName = \"ForwardRef(InsertBelowIcon)\";\nconst ItalicIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"italic\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.43 18H11.7276L13.4551 9.86763H12.1576L10.43 18ZM13.3042 8.29849C13.8021 8.29849 14.2095 7.89112 14.2095 7.39322C14.2095 6.89532 13.8021 6.48795 13.3042 6.48795C12.8063 6.48795 12.399 6.89532 12.399 7.39322C12.399 7.89112 12.8063 8.29849 13.3042 8.29849Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nItalicIcon.displayName = \"ForwardRef(ItalicIcon)\";\nconst JoystickIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"joystick\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 16V14.5H15.5V16M13.5 10.5V14.5M11.5 10.5V14.5M15.5 7.5C15.5 9.15685 14.1569 10.5 12.5 10.5C10.8431 10.5 9.5 9.15685 9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5ZM18.5 19.5H6.5C5.94772 19.5 5.5 19.0523 5.5 18.5V17.5C5.5 16.9477 5.94772 16.5 6.5 16.5H18.5C19.0523 16.5 19.5 16.9477 19.5 17.5V18.5C19.5 19.0523 19.0523 19.5 18.5 19.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nJoystickIcon.displayName = \"ForwardRef(JoystickIcon)\";\nconst JsonIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"json\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 5.5H9.5C8.39543 5.5 7.5 6.39543 7.5 7.5V12.5M7.5 12.5H4M7.5 12.5V17.5C7.5 18.6046 8.39543 19.5 9.5 19.5H11M14 5.5H15.5C16.6046 5.5 17.5 6.39543 17.5 7.5V12.5M17.5 12.5H21M17.5 12.5V17.5C17.5 18.6046 16.6046 19.5 15.5 19.5H14\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nJsonIcon.displayName = \"ForwardRef(JsonIcon)\";\nconst LaunchIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"launch\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12 7.5H6.5V18.5H17.5V13M19.5 5.5L10.5 14.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M14 5.5H19.5V11\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n});\nLaunchIcon.displayName = \"ForwardRef(LaunchIcon)\";\nconst LeaveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"leave\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14.5 15V18.5H5.5V6.5H14.5V10M9 12.5H21.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M18 9L21.5 12.5L18 16\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nLeaveIcon.displayName = \"ForwardRef(LeaveIcon)\";\nconst LemonIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"lemon\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.6569 10.3431L6.41422 14.5858C7.58579 15.7574 9.12132 16.3431 10.6569 16.3431M10.6569 10.3431L14.8995 6.1005C16.0711 7.27208 16.6569 8.80761 16.6569 10.3431M10.6569 10.3431L10.6569 16.3431M10.6569 10.3431L16.6569 10.3431M10.6569 10.3431L14.8995 14.5858M14.8995 14.5858C13.7279 15.7574 12.1924 16.3431 10.6569 16.3431M14.8995 14.5858C16.0711 13.4142 16.6569 11.8787 16.6569 10.3431M16.3137 4.68629C19.4379 7.81049 19.4379 12.8758 16.3137 16C13.1895 19.1242 8.12419 19.1242 5 16L16.3137 4.68629Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nLemonIcon.displayName = \"ForwardRef(LemonIcon)\";\nconst LinkIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"link\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 12.5L12.5 14C13.281 14.781 14.719 14.781 15.5 14L18.5 11C19.281 10.219 19.281 8.78105 18.5 8L18 7.5C17.2189 6.71895 15.781 6.71895 15 7.5L13 9.5M12 15.5L10 17.5C9.21895 18.281 7.78105 18.281 7 17.5L6.5 17C5.71895 16.219 5.71896 14.781 6.5 14L9.50001 11C10.2811 10.219 11.719 10.2189 12.5 11L14 12.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nLinkIcon.displayName = \"ForwardRef(LinkIcon)\";\nconst LinkRemovedIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"link-removed\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.5 11C19.281 10.219 19.281 8.78108 18.5 8.00003L18 7.50003C17.2189 6.71898 15.781 6.71898 15 7.50003L13 9.50003M15.5 14C14.7189 14.7811 13.281 14.7811 12.5 14M6.5 14C5.71895 14.7811 5.71894 16.219 6.49999 17L6.99999 17.5C7.78104 18.2811 9.21894 18.2811 9.99999 17.5L12 15.5M12.5 11C11.719 10.219 10.281 10.219 9.5 11M3 12.5H22\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nLinkRemovedIcon.displayName = \"ForwardRef(LinkRemovedIcon)\";\nconst LinkedinIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"linkedin\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M20.0249 20H16.9137V15.1278C16.9137 13.9659 16.893 12.4704 15.2956 12.4704C13.6753 12.4704 13.4273 13.7362 13.4273 15.0432V19.9997H10.3162V9.98042H13.3028V11.3496H13.3447C13.6436 10.8386 14.0755 10.4182 14.5944 10.1332C15.1134 9.8482 15.6999 9.7092 16.2915 9.7312C19.4448 9.7312 20.0262 11.8054 20.0262 14.5036L20.0249 20ZM6.80572 8.6109C6.44863 8.6109 6.0996 8.50507 5.80265 8.30683C5.50571 8.10848 5.27427 7.82653 5.13757 7.4967C5.00086 7.16677 4.96502 6.80378 5.03463 6.45356C5.10423 6.10334 5.27613 5.78157 5.52858 5.52903C5.78103 5.2765 6.10271 5.10448 6.45293 5.03476C6.80315 4.96502 7.16614 5.00072 7.49607 5.13731C7.826 5.2739 8.10796 5.50526 8.30641 5.80212C8.50486 6.09894 8.6108 6.44798 8.6109 6.80507C8.6109 7.04216 8.56422 7.277 8.47352 7.49606C8.38283 7.71512 8.24995 7.91422 8.0823 8.08187C7.91466 8.24952 7.71567 8.3826 7.4966 8.4733C7.27765 8.5641 7.04281 8.61079 6.80572 8.6109ZM8.36136 20H5.24695V9.98042H8.36136V20Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nLinkedinIcon.displayName = \"ForwardRef(LinkedinIcon)\";\nconst ListIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"list\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M6 6.5H19M6 14.5H19M6 10.5H19M6 18.5H19\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nListIcon.displayName = \"ForwardRef(ListIcon)\";\nconst LockIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"lock\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15.5 11.5V8.5C15.5 6.5 14 5.5 12.5 5.5C11 5.5 9.5 6.5 9.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nLockIcon.displayName = \"ForwardRef(LockIcon)\";\nconst LogoJsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"logo-js\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M20 5H5V20H20V5ZM12.5254 16.1572C12.5254 17.4189 11.7742 18.1536 10.4792 18.1536C9.24243 18.1536 8.49121 17.4189 8.45801 16.2942V16.261H9.67407V16.2859C9.69897 16.7466 9.9729 17.0703 10.4626 17.0703C10.9939 17.0703 11.272 16.7507 11.272 16.1489V12.011H12.5254V16.1572ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nLogoJsIcon.displayName = \"ForwardRef(LogoJsIcon)\";\nconst LogoTsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"logo-ts\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M20 5H5V20H20V5ZM11.0769 18H9.82349V13.0444H8.02637V12.011H12.874V13.0444H11.0769V18ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nLogoTsIcon.displayName = \"ForwardRef(LogoTsIcon)\";\nconst MarkerIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"marker\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 14 15.5 17.5 12.5 20.5C9.5 17.5 6.5 14 6.5 10.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 10.5C14 11.3284 13.3284 12 12.5 12C11.6716 12 11 11.3284 11 10.5C11 9.67157 11.6716 9 12.5 9C13.3284 9 14 9.67157 14 10.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nMarkerIcon.displayName = \"ForwardRef(MarkerIcon)\";\nconst MarkerRemovedIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"marker-removed\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.39787 14C8.51075 16.2897 10.5054 18.5054 12.5 20.5C14.4946 18.5054 16.4892 16.2897 17.6021 14M6.52009 11C6.50681 10.8334 6.5 10.6667 6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 10.6667 18.4932 10.8334 18.4799 11M3 12.5H22\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nMarkerRemovedIcon.displayName = \"ForwardRef(MarkerRemovedIcon)\";\nconst MasterDetailIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"master-detail\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 6.5V10.5M9.5 10.5V14.5M9.5 10.5H5.5M9.5 14.5V18.5M9.5 14.5H5.5M5.5 6.5H19.5V18.5H5.5V6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nMasterDetailIcon.displayName = \"ForwardRef(MasterDetailIcon)\";\nconst MenuIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"menu\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M6 7.5H19M6 17.5H19M6 12.5H19\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nMenuIcon.displayName = \"ForwardRef(MenuIcon)\";\nconst MicrophoneIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"microphone\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 16.5C15.8137 16.5 18.5 13.8137 18.5 10.5V10M12.5 16.5C9.18629 16.5 6.5 13.8137 6.5 10.5V10M12.5 16.5V20.5M8 20.5H17M15.5 10.5C15.5 12.1569 14.1569 13.5 12.5 13.5C10.8431 13.5 9.5 12.1569 9.5 10.5V7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5V10.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2\n        }\n      )\n    }\n  );\n});\nMicrophoneIcon.displayName = \"ForwardRef(MicrophoneIcon)\";\nconst MicrophoneSlashIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"microphone-slash\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17.8162 14.412C18.6231 13.3173 19.1 11.9644 19.1 10.5V10H17.9V10.5C17.9 11.6324 17.5514 12.6834 16.9557 13.5516L17.8162 14.412Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14.2171 15.6213L15.1446 16.5488C14.5091 16.8271 13.8213 17.0081 13.1 17.0731V19.9H17V21.1H7.99999V19.9H11.9V17.0731C8.53609 16.77 5.89999 13.9429 5.89999 10.5V10H7.09999V10.5C7.09999 13.4824 9.51766 15.9 12.5 15.9C13.1003 15.9 13.6777 15.8021 14.2171 15.6213Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15.6494 12.2453C15.9365 11.7283 16.1 11.1333 16.1 10.5V7.50002C16.1 5.5118 14.4882 3.90002 12.5 3.90002C11.0945 3.90002 9.87704 4.70551 9.2842 5.88007L10.2038 6.79966C10.5035 5.81583 11.4181 5.10002 12.5 5.10002C13.8255 5.10002 14.9 6.17454 14.9 7.50002V10.5C14.9 10.7968 14.8461 11.0811 14.7476 11.3435L15.6494 12.2453Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M8.89999 10.3042L12.6909 14.0951C12.6277 14.0984 12.564 14.1 12.5 14.1C10.5118 14.1 8.89999 12.4882 8.89999 10.5V10.3042Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M19 18L6 5\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n});\nMicrophoneSlashIcon.displayName = \"ForwardRef(MicrophoneSlashIcon)\";\nconst MobileDeviceIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"mobile-device\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.5 6.5C7.5 5.39543 8.39543 4.5 9.5 4.5H15.5C16.6046 4.5 17.5 5.39543 17.5 6.5V18.5C17.5 19.6046 16.6046 20.5 15.5 20.5H9.5C8.39543 20.5 7.5 19.6046 7.5 18.5V6.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M13.5 17.5C13.5 18.0523 13.0523 18.5 12.5 18.5C11.9477 18.5 11.5 18.0523 11.5 17.5C11.5 16.9477 11.9477 16.5 12.5 16.5C13.0523 16.5 13.5 16.9477 13.5 17.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nMobileDeviceIcon.displayName = \"ForwardRef(MobileDeviceIcon)\";\nconst MoonIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"moon\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M19.6065 16.1775C18.9417 16.387 18.234 16.5 17.5 16.5C13.634 16.5 10.5 13.366 10.5 9.5C10.5 7.54163 11.3042 5.77109 12.6004 4.50062C12.567 4.50021 12.5335 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C15.5924 20.5 18.275 18.7454 19.6065 16.1775Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nMoonIcon.displayName = \"ForwardRef(MoonIcon)\";\nconst NumberIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"number\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M21.0165 17.6336H3.83636V16.4336H21.0165V17.6336Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.09808 13.3967V7.508H5.74066L3.83636 8.78241V10.091L5.65277 8.88495H5.74066V13.3967H3.84125V14.5539H8.89984V13.3967H7.09808Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.81781 9.63202V9.66132H11.1069V9.62714C11.1069 8.95331 11.5756 8.49432 12.2739 8.49432C12.9575 8.49432 13.4018 8.89471 13.4018 9.50507C13.4018 9.9787 13.1528 10.3498 12.1909 11.3117L9.89594 13.5822V14.5539H14.8618V13.3869H11.7807V13.299L13.1577 11.9855C14.3491 10.843 14.7543 10.1838 14.7543 9.41229C14.7543 8.19159 13.7729 7.36639 12.3178 7.36639C10.8383 7.36639 9.81781 8.28436 9.81781 9.63202Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17.6694 11.4631H18.5092C19.3198 11.4631 19.8422 11.8683 19.8422 12.4982C19.8422 13.1183 19.3295 13.5139 18.5239 13.5139C17.767 13.5139 17.2592 13.133 17.2104 12.5324H15.9262C15.9897 13.8508 17.0248 14.6955 18.5629 14.6955C20.1401 14.6955 21.2192 13.841 21.2192 12.591C21.2192 11.6584 20.6528 11.0334 19.7006 10.9211V10.8332C20.4721 10.6769 20.9457 10.0666 20.9457 9.23651C20.9457 8.12323 19.9741 7.36639 18.5434 7.36639C17.0541 7.36639 16.1118 8.17694 16.0629 9.50018H17.2983C17.3422 8.88007 17.8061 8.48456 18.4995 8.48456C19.2075 8.48456 19.6567 8.85565 19.6567 9.44159C19.6567 10.0324 19.1977 10.4182 18.4946 10.4182H17.6694V11.4631Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n});\nNumberIcon.displayName = \"ForwardRef(NumberIcon)\";\nconst OkHandIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"ok-hand\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15.9957 11.5C14.8197 10.912 11.9957 9 10.4957 9C8.9957 9 5.17825 11.7674 6 13C7 14.5 9.15134 11.7256 10.4957 12C11.8401 12.2744 13 13.5 13 14.5C13 15.5 11.8401 16.939 10.4957 16.5C9.15134 16.061 8.58665 14.3415 7.4957 14C6.21272 13.5984 5.05843 14.6168 5.5 15.5C5.94157 16.3832 7.10688 17.6006 8.4957 19C9.74229 20.2561 11.9957 21.5 14.9957 20C17.9957 18.5 18.5 16.2498 18.5 13C18.5 11.5 13.7332 5.36875 11.9957 4.5C10.9957 4 10 5 10.9957 6.5C11.614 7.43149 13.5 9.27705 14 10.3751M15.5 8C15.5 8 15.3707 7.5 14.9957 6C14.4957 4 15.9957 3.5 16.4957 4.5C17.1281 5.76491 18.2872 10.9147 18.4957 13\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nOkHandIcon.displayName = \"ForwardRef(OkHandIcon)\";\nconst OlistIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"olist\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10 7.5H19M10 12.5H19M10 17.5H19M5 18.5H7.5L7 17.5L7.5 16.5H5M5 6.5H6.5V8.5M5 8.5H6.5M6.5 8.5H8M8 13.5H6L7 11.5H5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nOlistIcon.displayName = \"ForwardRef(OlistIcon)\";\nconst OverageIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"overage\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M18.5 11V6.5H14\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6.5 18.5L9 16L12 13L18.5 6.5M3 13.5H22\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nOverageIcon.displayName = \"ForwardRef(OverageIcon)\";\nconst PackageIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"package\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 13V22M12.5 13L4.5 8M12.5 13L20.5 8M8.5 5.5L16.5 10.5M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nPackageIcon.displayName = \"ForwardRef(PackageIcon)\";\nconst PanelLeftIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"panel-left\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 6.5H19.5V18.5H10.5M10.5 6.5H5.5V18.5H10.5M10.5 6.5V18.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nPanelLeftIcon.displayName = \"ForwardRef(PanelLeftIcon)\";\nconst PanelRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"panel-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M14.5 6.5H19.5V18.5H14.5M14.5 6.5H5.5V18.5H14.5M14.5 6.5V18.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nPanelRightIcon.displayName = \"ForwardRef(PanelRightIcon)\";\nconst PauseIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"pause\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M10.5 7.5H8.5V17.5H10.5V7.5Z\", fill: \"currentColor\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M16.5 7.5H14.5V17.5H16.5V7.5Z\", fill: \"currentColor\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M10.5 7.5H8.5V17.5H10.5V7.5Z\", stroke: \"currentColor\", strokeWidth: 1.2 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M16.5 7.5H14.5V17.5H16.5V7.5Z\", stroke: \"currentColor\", strokeWidth: 1.2 })\n      ]\n    }\n  );\n});\nPauseIcon.displayName = \"ForwardRef(PauseIcon)\";\nconst PinFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"pin-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17 15H8V13.5C8 12 10.5 11 10.5 11V9L8.5 7V6H16.5V7L14.5 9V11C14.5 11 17 12 17 13.5V15Z\",\n            fill: \"currentColor\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12 15L12.5 20L13 15\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nPinFilledIcon.displayName = \"ForwardRef(PinFilledIcon)\";\nconst PinIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"pin\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12 15L12.5 20L13 15\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17 15H8V13.5C8 12 10.5 11 10.5 11V9L8.5 7V6H16.5V7L14.5 9V11C14.5 11 17 12 17 13.5V15Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nPinIcon.displayName = \"ForwardRef(PinIcon)\";\nconst PinRemovedIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"pin-removed\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.39787 14C8.51075 16.2897 10.5054 18.5054 12.5 20.5C14.4946 18.5054 16.4892 16.2897 17.6021 14M6.52009 11C6.50681 10.8334 6.5 10.6667 6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 10.6667 18.4932 10.8334 18.4799 11M3 12.5H22\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nPinRemovedIcon.displayName = \"ForwardRef(PinRemovedIcon)\";\nconst PlayIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"play\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.5 18.5V6.5L17.5 12.5L7.5 18.5Z\",\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nPlayIcon.displayName = \"ForwardRef(PlayIcon)\";\nconst PlugIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"plug\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M13.25 8.5L16.75 5M16.25 11.5L19.75 8M9.25 15.5L5.25 19.5M7.75 14L9.75 12C8.25 10 8.75 9 9.75 8C10.15 7.6 11.25 6.5 11.25 6.5L18.25 13.5C18.25 13.5 17.3825 14.3675 16.75 15C15.75 16 14.75 16.5 12.75 15L10.75 17L7.75 14Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nPlugIcon.displayName = \"ForwardRef(PlugIcon)\";\nconst PresentationIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"presentation\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 18H5.5V8.5H19.5V18H14.5M10.5 18L9 22M10.5 18H14.5M14.5 18L16 22M4.5 8.5H20.5V6.5H4.5V8.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nPresentationIcon.displayName = \"ForwardRef(PresentationIcon)\";\nconst Progress50Icon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"progress-50\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17 12.5C17 14.9853 14.9853 17 12.5 17V8C14.9853 8 17 10.0147 17 12.5Z\",\n            fill: \"currentColor\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nProgress50Icon.displayName = \"ForwardRef(Progress50Icon)\";\nconst Progress75Icon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"progress-75\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 17C14.9853 17 17 14.9853 17 12.5C17 10.0147 14.9853 8 12.5 8V12.5H8C8 14.9853 10.0147 17 12.5 17Z\",\n            fill: \"currentColor\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nProgress75Icon.displayName = \"ForwardRef(Progress75Icon)\";\nconst ProjectsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"projects\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M21 17.5H14M17.5 14V21M5.5 14.5H10.5V19.5H5.5V14.5ZM14.5 5.5H19.5V10.5H14.5V5.5ZM5.5 5.5H10.5V10.5H5.5V5.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nProjectsIcon.displayName = \"ForwardRef(ProjectsIcon)\";\nconst PublishIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"publish\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M4.99997 5.50006H20M12.5 9.00005V20\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.5 14L12.5 9.00006L17.5 14\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nPublishIcon.displayName = \"ForwardRef(PublishIcon)\";\nconst ReadOnlyIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"read-only\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15 7L18 10M10 12L7 15L6 19L10 18L13 15M12 10L17 5L20 8L15 13M19 19L5 5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nReadOnlyIcon.displayName = \"ForwardRef(ReadOnlyIcon)\";\nconst RedoIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"redo\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15 13.5L19 9.5L15 5.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nRedoIcon.displayName = \"ForwardRef(RedoIcon)\";\nconst RefreshIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"refresh\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19.5 13.5C19.5 17.366 16.366 20.5 12.5 20.5C8.63401 20.5 5.5 17.366 5.5 13.5C5.5 9.63401 8.63401 6.5 12.5 6.5H15.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 10.5L15.5 6.5L11.5 2.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nRefreshIcon.displayName = \"ForwardRef(RefreshIcon)\";\nconst RemoveCircleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"remove-circle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 12.4H17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nRemoveCircleIcon.displayName = \"ForwardRef(RemoveCircleIcon)\";\nconst RemoveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"remove\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M5 12.5H20\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n    }\n  );\n});\nRemoveIcon.displayName = \"ForwardRef(RemoveIcon)\";\nconst ResetIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"reset\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7 11L4.56189 13.5L2 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.50001 15.5L15.5 9.5M9.5 9.5L15.5 15.5M4.56189 13.5C4.52104 13.1724 4.5 12.8387 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C9.75033 20.5 7.32466 19.1128 5.88468 17\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nResetIcon.displayName = \"ForwardRef(ResetIcon)\";\nconst RestoreIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"restore\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M5.88468 17C7.32466 19.1128 9.75033 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5V13.5M12.5 8V12.5L15.5 15.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7 11L4.5 13.5L2 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nRestoreIcon.displayName = \"ForwardRef(RestoreIcon)\";\nconst RetrieveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"retrieve\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16 14L12.5 10.5L9 14M5.5 7.5H19.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 10.5L12.5 17.5M19.5 7.5V19.5H5.5V7.5L7.5 5.5H17.5L19.5 7.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nRetrieveIcon.displayName = \"ForwardRef(RetrieveIcon)\";\nconst RetryIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"retry\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15 13.5L19 9.5L15 5.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nRetryIcon.displayName = \"ForwardRef(RetryIcon)\";\nconst RevertIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"revert\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10 13.5L6 9.5L10 5.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nRevertIcon.displayName = \"ForwardRef(RevertIcon)\";\nconst RobotIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"robot\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 15.5V17.5M12.5 8.5V6.5M12.5 6.5C13.3284 6.5 14 5.82843 14 5C14 4.17157 13.3284 3.5 12.5 3.5C11.6716 3.5 11 4.17157 11 5C11 5.82843 11.6716 6.5 12.5 6.5ZM20.5 20.5V19.5C20.5 18.3954 19.6046 17.5 18.5 17.5H6.5C5.39543 17.5 4.5 18.3954 4.5 19.5V20.5H20.5ZM11.5 12C11.5 12.5523 11.0523 13 10.5 13C9.94772 13 9.5 12.5523 9.5 12C9.5 11.4477 9.94772 11 10.5 11C11.0523 11 11.5 11.4477 11.5 12ZM15.5 12C15.5 12.5523 15.0523 13 14.5 13C13.9477 13 13.5 12.5523 13.5 12C13.5 11.4477 13.9477 11 14.5 11C15.0523 11 15.5 11.4477 15.5 12ZM8.5 15.5H16.5C17.6046 15.5 18.5 14.6046 18.5 13.5V10.5C18.5 9.39543 17.6046 8.5 16.5 8.5H8.5C7.39543 8.5 6.5 9.39543 6.5 10.5V13.5C6.5 14.6046 7.39543 15.5 8.5 15.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nRobotIcon.displayName = \"ForwardRef(RobotIcon)\";\nconst RocketIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"rocket\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 20.5L15.5 14M11 9.49999L4.5 12.5M9 14C9 14 7.54688 14.9531 6.5 16C5.5 17 4.5 20.5 4.5 20.5C4.5 20.5 8 19.5 9 18.5C10 17.5 11 16 11 16M9 14C9 14 10.1 9.9 12.5 7.5C15.5 4.5 20.5 4.5 20.5 4.5C20.5 4.5 20.5 9.5 17.5 12.5C15.7492 14.2508 11 16 11 16L9 14ZM16.5 9.99999C16.5 10.8284 15.8284 11.5 15 11.5C14.1716 11.5 13.5 10.8284 13.5 9.99999C13.5 9.17157 14.1716 8.49999 15 8.49999C15.8284 8.49999 16.5 9.17157 16.5 9.99999Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nRocketIcon.displayName = \"ForwardRef(RocketIcon)\";\nconst SchemaIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"schema\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 9.5V12.5M12.5 12.5H8.5V15.5M12.5 12.5H16.5V15.5M10.5 5.5H14.5V9.5H10.5V5.5ZM6.5 15.5H10.5V19.5H6.5V15.5ZM14.5 15.5H18.5V19.5H14.5V15.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nSchemaIcon.displayName = \"ForwardRef(SchemaIcon)\";\nconst SearchIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"search\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15.0355 15.0355L20 20M16.5 11.5C16.5 14.2614 14.2614 16.5 11.5 16.5C8.73858 16.5 6.5 14.2614 6.5 11.5C6.5 8.73858 8.73858 6.5 11.5 6.5C14.2614 6.5 16.5 8.73858 16.5 11.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nSearchIcon.displayName = \"ForwardRef(SearchIcon)\";\nconst SelectIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"select\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M16 15L12.5 18.5L9 15M9 10L12.5 6.5L16 10\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nSelectIcon.displayName = \"ForwardRef(SelectIcon)\";\nconst ShareIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"share\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M15 10.5H18.5V19.5H6.5L6.5 10.5H10M12.5 16V3.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M9 7L12.5 3.5L16 7\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n});\nShareIcon.displayName = \"ForwardRef(ShareIcon)\";\nconst SortIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sort\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.5 18.5V6M16.5 19V6.5M12 15L8.5 18.5L5 15M13 10L16.5 6.5L20 10\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nSortIcon.displayName = \"ForwardRef(SortIcon)\";\nconst SparkleIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sparkle\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 10.5C8.5 12.5 5 12.5 5 12.5C5 12.5 8.5 12.5 10.5 14.5C12.5 16.5 12.5 20 12.5 20C12.5 20 12.5 16.5 14.5 14.5C16.5 12.5 20 12.5 20 12.5C20 12.5 16.5 12.5 14.5 10.5C12.5 8.5 12.5 5 12.5 5C12.5 5 12.5 8.5 10.5 10.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nSparkleIcon.displayName = \"ForwardRef(SparkleIcon)\";\nconst SparklesIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sparkles\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M11 3.5V5M11 5V6.5M11 5H12.5M11 5H9.5M9.5 15C9.5 15 12.2308 14.7692 13.5 13.5C14.7692 12.2308 15 9.5 15 9.5C15 9.5 15.2308 12.2308 16.5 13.5C17.7692 14.7692 20.5 15 20.5 15C20.5 15 17.7692 15.2308 16.5 16.5C15.2308 17.7692 15 20.5 15 20.5C15 20.5 14.7692 17.7692 13.5 16.5C12.2308 15.2308 9.5 15 9.5 15ZM4.5 10C4.5 10 5.72308 9.87692 6.3 9.3C6.87692 8.72308 7 7.5 7 7.5C7 7.5 7.12308 8.72308 7.7 9.3C8.27692 9.87692 9.5 10 9.5 10C9.5 10 8.27692 10.1231 7.7 10.7C7.12308 11.2769 7 12.5 7 12.5C7 12.5 6.87692 11.2769 6.3 10.7C5.72308 10.1231 4.5 10 4.5 10Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nSparklesIcon.displayName = \"ForwardRef(SparklesIcon)\";\nconst SpinnerIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"spinner\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nSpinnerIcon.displayName = \"ForwardRef(SpinnerIcon)\";\nconst SplitHorizontalIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"split-horizontal\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M19.5 10.5V20.5H5.5V10.5M19.5 10.5H5.5M19.5 10.5V4.5H5.5V10.5M12.5 13V15.5M12.5 18V15.5M12.5 15.5H15M12.5 15.5H10\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nSplitHorizontalIcon.displayName = \"ForwardRef(SplitHorizontalIcon)\";\nconst SplitVerticalIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"split-vertical\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 5.5V19.5M13 12.5H15.5M18 12.5H15.5M15.5 12.5V15M15.5 12.5V10M4.5 5.5H20.5V19.5H4.5V5.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nSplitVerticalIcon.displayName = \"ForwardRef(SplitVerticalIcon)\";\nconst SquareIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"square\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"rect\",\n        {\n          x: 5.5,\n          y: 5.5,\n          width: 14,\n          height: 14,\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nSquareIcon.displayName = \"ForwardRef(SquareIcon)\";\nconst StackCompactIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"stack-compact\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 15.5V18.5H19.5V15.5M5.5 15.5H19.5M5.5 15.5V9.5M19.5 15.5V9.5M5.5 9.5V6.5H19.5V9.5M5.5 9.5H19.5M5.5 12.5H19.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nStackCompactIcon.displayName = \"ForwardRef(StackCompactIcon)\";\nconst StackIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"stack\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5.5 12.5H19.5M5.5 18.5H19.5V6.5H5.5V18.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nStackIcon.displayName = \"ForwardRef(StackIcon)\";\nconst StarFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"star-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 5L14.3956 9.89092L19.6329 10.1824L15.5672 13.4966L16.9084 18.5676L12.5 15.725L8.09161 18.5676L9.43284 13.4966L5.36708 10.1824L10.6044 9.89092L12.5 5Z\",\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nStarFilledIcon.displayName = \"ForwardRef(StarFilledIcon)\";\nconst StarIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"star\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 5L14.3956 9.89092L19.6329 10.1824L15.5672 13.4966L16.9084 18.5676L12.5 15.725L8.09161 18.5676L9.43284 13.4966L5.36708 10.1824L10.6044 9.89092L12.5 5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nStarIcon.displayName = \"ForwardRef(StarIcon)\";\nconst StopIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"stop\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"rect\",\n        {\n          x: 7.5,\n          y: 7.5,\n          width: 10,\n          height: 10,\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nStopIcon.displayName = \"ForwardRef(StopIcon)\";\nconst StrikethroughIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"strikethrough\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5656 7.73438C11.0656 7.73438 10.0734 8.48438 10.0734 9.625C10.0734 10.2317 10.3649 10.6613 11.0519 11H8.90358C8.71703 10.6199 8.62813 10.1801 8.62813 9.67188C8.62813 7.75781 10.2297 6.46094 12.6125 6.46094C14.7922 6.46094 16.4172 7.75781 16.5344 9.57812H15.1203C14.925 8.42188 13.9719 7.73438 12.5656 7.73438Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.4875 18.2656C10.0969 18.2656 8.44844 17 8.3 15.0547H9.72188C9.89375 16.2344 11.0188 16.9844 12.6203 16.9844C14.1359 16.9844 15.2531 16.1641 15.2531 15.0469C15.2531 14.6375 15.1255 14.292 14.8589 14H16.5912C16.6638 14.266 16.6984 14.5566 16.6984 14.875C16.6984 16.9453 15.0656 18.2656 12.4875 18.2656Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M7 13.1H18V11.9H7V13.1Z\", fill: \"currentColor\" })\n      ]\n    }\n  );\n});\nStrikethroughIcon.displayName = \"ForwardRef(StrikethroughIcon)\";\nconst StringIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"string\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.6748 15.5227H13.1855L9.87842 6.36304H8.34863L5.0415 15.5227H6.50146L7.3457 13.0916H10.8369L11.6748 15.5227ZM9.04053 8.02612H9.14844L10.4751 11.8982H7.70752L9.04053 8.02612Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16.8101 14.488C16.0674 14.488 15.5278 14.1262 15.5278 13.5042C15.5278 12.8948 15.9595 12.571 16.9116 12.5076L18.6001 12.3997V12.9773C18.6001 13.8342 17.8384 14.488 16.8101 14.488ZM16.4609 15.637C17.3687 15.637 18.124 15.2434 18.5366 14.5515H18.6445V15.5227H19.9585V10.8C19.9585 9.34009 18.981 8.47681 17.248 8.47681C15.6802 8.47681 14.563 9.23853 14.4233 10.4255H15.7437C15.896 9.93677 16.4229 9.65747 17.1846 9.65747C18.1177 9.65747 18.6001 10.0701 18.6001 10.8V11.3967L16.7275 11.5046C15.0835 11.6062 14.1567 12.3235 14.1567 13.5676C14.1567 14.8308 15.1279 15.637 16.4609 15.637Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M19.9585 18.637L5.0415 18.637V17.437L19.9585 17.437V18.637Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n});\nStringIcon.displayName = \"ForwardRef(StringIcon)\";\nconst SunIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sun\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M19 12.5H22M3 12.5H6M12.5 6V3M12.5 22V19M17.3891 7.61091L19.5104 5.48959M5.48959 19.5104L7.61091 17.3891M7.61091 7.61091L5.48959 5.48959M19.5104 19.5104L17.3891 17.3891M16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nSunIcon.displayName = \"ForwardRef(SunIcon)\";\nconst SyncIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"sync\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M13.5 4.5H12.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 15.6631 6.33576 18.3975 9 19.6958M11.5 20.5H12.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 9.33688 18.6642 6.60253 16 5.30423\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nSyncIcon.displayName = \"ForwardRef(SyncIcon)\";\nconst TabletDeviceIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"tablet-device\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M5.5 5.5C5.5 4.94772 5.94772 4.5 6.5 4.5H18.5C19.0523 4.5 19.5 4.94772 19.5 5.5V19.5C19.5 20.0523 19.0523 20.5 18.5 20.5H6.5C5.94772 20.5 5.5 20.0523 5.5 19.5V5.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M13 18C13 18.2761 12.7761 18.5 12.5 18.5C12.2239 18.5 12 18.2761 12 18C12 17.7239 12.2239 17.5 12.5 17.5C12.7761 17.5 13 17.7239 13 18Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nTabletDeviceIcon.displayName = \"ForwardRef(TabletDeviceIcon)\";\nconst TagIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"tag\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 20L5 20L5 12.5L12.5 5L20 12.5L12.5 20Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11 15.5C11 16.3284 10.3284 17 9.5 17C8.67157 17 8 16.3284 8 15.5C8 14.6716 8.67157 14 9.5 14C10.3284 14 11 14.6716 11 15.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nTagIcon.displayName = \"ForwardRef(TagIcon)\";\nconst TagsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"tags\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.1562 7.93179L13.9717 6.11633L20.3553 12.5L13.9717 18.8836L10.6855 18.8836M11.0283 18.8836L17.4119 12.5L11.0283 6.11633L4.64462 12.5L4.64462 18.8836L11.0283 18.8836ZM9.75153 15.0534C9.75153 15.7585 9.17992 16.3302 8.47481 16.3302C7.76969 16.3302 7.19808 15.7585 7.19808 15.0534C7.19808 14.3483 7.76969 13.7767 8.47481 13.7767C9.17992 13.7767 9.75153 14.3483 9.75153 15.0534Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nTagsIcon.displayName = \"ForwardRef(TagsIcon)\";\nconst TargetIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"target\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 3V10M22 12.5H15M12.5 22V15M3 12.5H10M19 12.5C19 16.0899 16.0899 19 12.5 19C8.91015 19 6 16.0899 6 12.5C6 8.91015 8.91015 6 12.5 6C16.0899 6 19 8.91015 19 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nTargetIcon.displayName = \"ForwardRef(TargetIcon)\";\nconst TaskIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"task\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M20.5 10.75V19.75H4.5V10.75M20.5 10.75V5.75H17.5M20.5 10.75H4.5M4.5 10.75V5.75H7.5M7.5 5.75H17.5M7.5 5.75V8.25M7.5 5.75V3.25M17.5 5.75V8.25M17.5 5.75V3.25M9.7002 14.7358L11.7002 16.7358L15.3002 13.1758\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nTaskIcon.displayName = \"ForwardRef(TaskIcon)\";\nconst TerminalIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"terminal\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8.5 9.5L11.5 12.5L8.5 15.5M13 15.5H17M5.5 6.5H19.5V18.5H5.5V6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nTerminalIcon.displayName = \"ForwardRef(TerminalIcon)\";\nconst TextIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"text\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M7.5 9V6.5H17.5V9M12.5 18.5V6.5M10 18.5H15\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nTextIcon.displayName = \"ForwardRef(TextIcon)\";\nconst ThLargeIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"th-large\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 6.5V12.5M12.5 12.5V18.5M12.5 12.5H19.5M12.5 12.5H5.5M19.5 12.5V6.5H5.5V12.5M19.5 12.5V18.5H5.5V12.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nThLargeIcon.displayName = \"ForwardRef(ThLargeIcon)\";\nconst ThListIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"th-list\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 6.5V10.5M9.5 10.5V14.5M9.5 10.5H19.5M9.5 10.5H5.5M9.5 14.5V18.5M9.5 14.5H19.5M9.5 14.5H5.5M5.5 6.5H19.5V18.5H5.5V6.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nThListIcon.displayName = \"ForwardRef(ThListIcon)\";\nconst ThumbsDownIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"thumbs-down\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 15C9.5 15 12.5 16.5 12.5 18C12.5 19.5 13.5 19.5 13.5 19.5C13.5 19.5 14.5 19.5 14.5 18C14.5 16.5 14.5 15.5 14.5 15.5H18C18 15.5 18 15.5 18 15.5C18 15.5 19 15.5 19 14.5C19 13.5 19.5 14 19.5 13C19.5 12 19 11.5 19 10.5C19 9.5 18 9.5 18 8.5C18 7.5 17 7.5 16.5 7.5C16 7.5 9.5 7.5 9.5 7.5M9.5 7.5H6.5V15.5H9.5V7.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nThumbsDownIcon.displayName = \"ForwardRef(ThumbsDownIcon)\";\nconst ThumbsUpIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"thumbs-up\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 10C9.5 10 12.5 8.5 12.5 7C12.5 5.5 13.5 5.5 13.5 5.5C13.5 5.5 14.5 5.5 14.5 7C14.5 8.5 14.5 9.5 14.5 9.5H18C18 9.5 18 9.5 18 9.5C18 9.5 19 9.5 19 10.5C19 11.5 19.5 11 19.5 12C19.5 13 19 13.5 19 14.5C19 15.5 18 15.5 18 16.5C18 17.5 17 17.5 16.5 17.5C16 17.5 9.5 17.5 9.5 17.5M9.5 17.5H6.5V9.5H9.5V17.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nThumbsUpIcon.displayName = \"ForwardRef(ThumbsUpIcon)\";\nconst TiersIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"tiers\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M16.5 14.5L20.5 16.5L12.5 20.5L4.5 16.5L8.5 14.5M16.5 10.5L20.5 12.5L12.5 16.5L4.5 12.5L8.5 10.5M12.5 12.5L20.5 8.5L12.5 4.5L4.5 8.5L12.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nTiersIcon.displayName = \"ForwardRef(TiersIcon)\";\nconst TimelineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"timeline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M12.5 5V20\", stroke: \"currentColor\", strokeWidth: 1.2 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M5 8.5H11M7 12.5H11M9 16.5H11M13 16.5H20M13 12.5H18M13 8.5H16\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2\n          }\n        )\n      ]\n    }\n  );\n});\nTimelineIcon.displayName = \"ForwardRef(TimelineIcon)\";\nconst ToggleArrowRightIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"toggle-arrow-right\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M10.5 16V9L16 12.5L10.5 16Z\",\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nToggleArrowRightIcon.displayName = \"ForwardRef(ToggleArrowRightIcon)\";\nconst TokenIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"token\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17.5711 12.5C17.5711 15.2614 15.3325 17.5 12.5711 17.5M7.57107 12.5C7.57107 9.73858 9.80964 7.5 12.5711 7.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nTokenIcon.displayName = \"ForwardRef(TokenIcon)\";\nconst TransferIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"transfer\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19.5 16.5H6M5.5 8.5L19 8.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M16 13L19.5 16.5L16 20M9 12L5.5 8.5L9 5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nTransferIcon.displayName = \"ForwardRef(TransferIcon)\";\nconst TranslateIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"translate\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M9.4 5.4H4V6.6H13.2189C13.1612 6.78478 13.0895 6.99578 13.0025 7.22211C12.7032 8.00031 12.2402 8.91125 11.5757 9.57574L10 11.1515L9.42426 10.5757C8.72102 9.8725 8.25297 9.16987 7.96199 8.64611C7.81668 8.38455 7.71617 8.16874 7.65305 8.02146C7.62151 7.94787 7.59937 7.89154 7.5857 7.85534C7.57886 7.83725 7.57415 7.8242 7.57144 7.81657L7.56886 7.80922C7.56886 7.80922 7.56921 7.81026 7 8C6.43079 8.18974 6.43091 8.19009 6.43091 8.19009L6.43133 8.19135L6.43206 8.19351L6.4341 8.19948L6.44052 8.21786C6.44587 8.23292 6.45336 8.25357 6.46313 8.27942C6.48266 8.33112 6.5113 8.40369 6.55008 8.49416C6.62758 8.67501 6.74582 8.92795 6.91301 9.22889C7.24703 9.83013 7.77898 10.6275 8.57574 11.4243L9.15147 12L4.57964 16.5718L4.57655 16.5749L4.57577 16.5757L5.4243 17.4242L5.42688 17.4216L10.0368 12.8117L12.6159 14.9609L13.3841 14.0391L10.8888 11.9597L12.4243 10.4243C13.2598 9.58875 13.7968 8.49969 14.1225 7.65289C14.2818 7.23863 14.395 6.87072 14.4696 6.6H16V5.4H10.6V4H9.4V5.4ZM17.4405 10L21.553 19.7672H20.2509L19.1279 17.1H14.8721L13.7491 19.7672H12.447L16.5595 10H17.4405ZM15.3773 15.9H18.6227L17 12.0462L15.3773 15.9Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nTranslateIcon.displayName = \"ForwardRef(TranslateIcon)\";\nconst TrashIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"trash\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5 6.5H20M10 6.5V4.5C10 3.94772 10.4477 3.5 11 3.5H14C14.5523 3.5 15 3.94772 15 4.5V6.5M12.5 9V17M15.5 9L15 17M9.5 9L10 17M18.5 6.5L17.571 18.5767C17.5309 19.0977 17.0965 19.5 16.574 19.5H8.42603C7.90349 19.5 7.46905 19.0977 7.42898 18.5767L6.5 6.5H18.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nTrashIcon.displayName = \"ForwardRef(TrashIcon)\";\nconst TrendUpwardIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"trend-upward\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M4.5 18.5L11.5 10.5L13.5 14.5L20.5 6.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M20.5 11V6.5H16\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n});\nTrendUpwardIcon.displayName = \"ForwardRef(TrendUpwardIcon)\";\nconst TriangleOutlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"triangle-outline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M20.5 18.5H4.5L12.5 5.5L20.5 18.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nTriangleOutlineIcon.displayName = \"ForwardRef(TriangleOutlineIcon)\";\nconst TrolleyIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"trolley\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 17.5L5.81763 6.26772C5.71013 5.81757 5.30779 5.5 4.84498 5.5H3M8 17.5H17M8 17.5C8.82843 17.5 9.5 18.1716 9.5 19C9.5 19.8284 8.82843 20.5 8 20.5C7.17157 20.5 6.5 19.8284 6.5 19C6.5 18.1716 7.17157 17.5 8 17.5ZM17 17.5C17.8284 17.5 18.5 18.1716 18.5 19C18.5 19.8284 17.8284 20.5 17 20.5C16.1716 20.5 15.5 19.8284 15.5 19C15.5 18.1716 16.1716 17.5 17 17.5ZM7.78357 14.5H17.5L19 7.5H6\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nTrolleyIcon.displayName = \"ForwardRef(TrolleyIcon)\";\nconst TruncateIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"truncate\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M5 12.5H20M8.5 19.5L12.5 15.5L16.5 19.5M16.5 5.5L12.5 9.5L8.5 5.5\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nTruncateIcon.displayName = \"ForwardRef(TruncateIcon)\";\nconst TwitterIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"twitter\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M18.8738 6.65751C18.1994 5.9447 17.2445 5.5 16.1857 5.5C14.1423 5.5 12.4857 7.15655 12.4857 9.2C12.4857 9.55263 12.535 9.89374 12.6272 10.2168C7.0826 9.56422 4.55703 6.02857 4.55703 6.02857C4.55703 6.02857 4.02846 9.2 6.14274 11.3143C5.08571 11.3143 4.55703 10.7857 4.55703 10.7857C4.55703 10.7857 4.55703 13.4286 7.19989 14.4857C6.67143 15.0143 5.61417 14.4857 5.61417 14.4857C5.97533 15.9303 7.45606 16.8562 8.82133 17.1358C6.67298 19.1676 3.5 18.7143 3.5 18.7143C5.14562 19.771 7.21334 20.3 9.31429 20.3C16.1214 20.3 19.8162 15.6315 19.8848 9.37762C20.8722 8.58943 22 7.08571 22 7.08571C22 7.08571 21.277 7.45458 19.6913 7.98315C21.277 6.92601 21.4714 5.5 21.4714 5.5C21.4714 5.5 20.4135 6.55789 18.8738 6.65751Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nTwitterIcon.displayName = \"ForwardRef(TwitterIcon)\";\nconst UlistIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"ulist\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.10153 17.5C7.10153 17.8322 6.83221 18.1016 6.5 18.1016C6.16778 18.1016 5.89847 17.8322 5.89847 17.5C5.89847 17.1678 6.16778 16.8985 6.5 16.8985C6.83221 16.8985 7.10153 17.1678 7.10153 17.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.10153 7.49997C7.10153 7.83218 6.83221 8.1015 6.5 8.1015C6.16778 8.1015 5.89847 7.83218 5.89847 7.49997C5.89847 7.16775 6.16778 6.89844 6.5 6.89844C6.83221 6.89844 7.10153 7.16775 7.10153 7.49997Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.10153 12.5C7.10153 12.8322 6.83221 13.1015 6.5 13.1015C6.16778 13.1015 5.89847 12.8322 5.89847 12.5C5.89847 12.1678 6.16778 11.8984 6.5 11.8984C6.83221 11.8984 7.10153 12.1678 7.10153 12.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10 7.5H19M10 17.5H19M10 12.5H19\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nUlistIcon.displayName = \"ForwardRef(UlistIcon)\";\nconst UnarchiveIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"unarchive\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 10.5V18M20.5 7.5V20.5H4.5V7.5L7.5 4.5H17.5L20.5 7.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M4.5 7.5H20.5M16 14L12.5 10.5L9 14\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nUnarchiveIcon.displayName = \"ForwardRef(UnarchiveIcon)\";\nconst UnderlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"underline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M9.52791 7.11407H8.17V14.2582C8.17 16.5817 9.79195 18.2565 12.4927 18.2565C15.1934 18.2565 16.8154 16.5817 16.8154 14.2582V7.11407H15.4574V14.1677C15.4574 15.8122 14.3787 17.0042 12.4927 17.0042C10.6067 17.0042 9.52791 15.8122 9.52791 14.1677V7.11407Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M7 20.5H18\", stroke: \"currentColor\", strokeWidth: 1.2, strokeLinejoin: \"round\" })\n      ]\n    }\n  );\n});\nUnderlineIcon.displayName = \"ForwardRef(UnderlineIcon)\";\nconst UndoIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"undo\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10 13.5L6 9.5L10 5.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nUndoIcon.displayName = \"ForwardRef(UndoIcon)\";\nconst UnknownIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"unknown\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M5.5 5.5H19.5V19.5H5.5V5.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nUnknownIcon.displayName = \"ForwardRef(UnknownIcon)\";\nconst UnlinkIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"unlink\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M15 13.5L17.5 11C18.281 10.219 18.281 8.78105 17.5 8L17 7.5C16.2189 6.71895 14.781 6.71895 14 7.5L11.5 10M10 11.5L7.5 14C6.71896 14.781 6.71895 16.219 7.5 17L8 17.5C8.78105 18.281 10.2189 18.281 11 17.5L13.5 15M9.5 8V5M8 9.5H5M17 15.5H20M15.5 17V20\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nUnlinkIcon.displayName = \"ForwardRef(UnlinkIcon)\";\nconst UnlockIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"unlock\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M9.5 11.5V8.5C9.5 6.5 8 5.5 6.5 5.5C5 5.5 3.5 6.5 3.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nUnlockIcon.displayName = \"ForwardRef(UnlockIcon)\";\nconst UnpublishIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"unpublish\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M5 19.5H20M12.5 16V5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M17.5 11L12.5 16L7.5 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nUnpublishIcon.displayName = \"ForwardRef(UnpublishIcon)\";\nconst UploadIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"upload\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M12.5 6V15.5M5.5 15.5H19.5V19.5H5.5V15.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M7.5 11L12.5 6L17.5 11\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nUploadIcon.displayName = \"ForwardRef(UploadIcon)\";\nconst UserIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"user\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M8 14.5C7 15 5.5 16 5.5 19.5H19.5C19.5 16 18.3416 15.1708 17 14.5C16 14 14 14 14 12.5C14 11 15 10.25 15 8.25C15 6.25 14 5.25 12.5 5.25C11 5.25 10 6.25 10 8.25C10 10.25 11 11 11 12.5C11 14 9 14 8 14.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nUserIcon.displayName = \"ForwardRef(UserIcon)\";\nconst UsersIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"users\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17.5 18.5H21.5C21.5 15 20.8416 14.1708 19.5 13.5C18.5 13 16.5 12.5 16.5 11C16.5 9.5 17.5 9 17.5 7C17.5 5 16.5 4 15 4C13.6628 4 12.723 4.79472 12.5347 6.38415M4.5 20.5C4.5 17 5.5 16 6.5 15.5C7.5 15 9.5 14.5 9.5 13C9.5 11.5 8.5 11 8.5 9C8.5 7 9.5 6 11 6C12.5 6 13.5 7 13.5 9C13.5 11 12.5 11.5 12.5 13C12.5 14.5 14.5 15 15.5 15.5C16.8416 16.1708 17.5 17 17.5 20.5H4.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nUsersIcon.displayName = \"ForwardRef(UsersIcon)\";\nconst VersionsIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"versions\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M10.5 7.5H7.5V17.5H10.5M7.5 9.5H4.5V15.5H7.5\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M20.5 19.5V5.5H10.5V19.5H20.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nVersionsIcon.displayName = \"ForwardRef(VersionsIcon)\";\nconst VideoIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"video\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M19.5 18.5H5.5V6.5H19.5V18.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"path\",\n          {\n            d: \"M11.5 14.5V10.5L14.5 12.5L11.5 14.5Z\",\n            fill: \"currentColor\",\n            stroke: \"currentColor\",\n            strokeWidth: 1.2,\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n});\nVideoIcon.displayName = \"ForwardRef(VideoIcon)\";\nconst WarningFilledIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"warning-filled\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M14.741 5.12635C13.7357 3.41736 11.2643 3.41736 10.259 5.12635L3.7558 16.1817C2.73624 17.915 3.98595 20.1 5.99683 20.1H19.0032C21.014 20.1 22.2637 17.915 21.2442 16.1817L14.741 5.12635ZM11.9 8.99998V13H13.1V8.99998H11.9ZM13.1 16V14.5H11.9V16H13.1Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nWarningFilledIcon.displayName = \"ForwardRef(WarningFilledIcon)\";\nconst WarningOutlineIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"warning-outline\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M12.5 9V13M12.5 16V14.5M14.2239 5.43058L20.727 16.486C21.5113 17.8192 20.55 19.5 19.0032 19.5H5.99683C4.45 19.5 3.48869 17.8192 4.27297 16.486L10.7761 5.43058C11.5494 4.11596 13.4506 4.11596 14.2239 5.43058Z\",\n          stroke: \"currentColor\",\n          strokeWidth: 1.2,\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n});\nWarningOutlineIcon.displayName = \"ForwardRef(WarningOutlineIcon)\";\nconst WrenchIcon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"svg\",\n    {\n      \"data-sanity-icon\": \"wrench\",\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 25 25\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      ref,\n      ...props,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"path\",\n        {\n          d: \"M17.0407 5.14624L17.4649 5.57051C17.6166 5.41887 17.6758 5.19783 17.6202 4.99071C17.5646 4.78359 17.4027 4.62189 17.1955 4.56656L17.0407 5.14624ZM14.4013 7.7856L13.9771 7.36134C13.8288 7.50959 13.7687 7.72447 13.8185 7.92813L14.4013 7.7856ZM12.8778 6.26211L12.4535 5.83784L12.8778 6.26211ZM11.8309 10.6568L12.2552 11.0811C12.4152 10.9211 12.4716 10.6847 12.401 10.4697L11.8309 10.6568ZM5.63925 16.8485L5.21498 16.4242H5.21498L5.63925 16.8485ZM5.63925 19.935L6.06351 19.5108H6.06351L5.63925 19.935ZM8.72581 19.935L9.15007 20.3593L8.72581 19.935ZM15.1184 13.5425L15.2301 12.953C15.0351 12.916 14.8344 12.9779 14.6941 13.1182L15.1184 13.5425ZM18.9718 12.3561L18.5475 11.9318L18.9718 12.3561ZM20.0877 8.19324L20.6674 8.03843C20.612 7.83124 20.4503 7.66934 20.2432 7.61375C20.0361 7.55816 19.815 7.61734 19.6634 7.76898L20.0877 8.19324ZM17.4483 10.8326L17.3058 11.4154C17.5094 11.4652 17.7243 11.4051 17.8726 11.2569L17.4483 10.8326ZM15 10.2339L14.4172 10.3764C14.4704 10.5938 14.6401 10.7635 14.8575 10.8167L15 10.2339ZM16.6164 4.72198L13.9771 7.36134L14.8256 8.20986L17.4649 5.57051L16.6164 4.72198ZM13.3021 6.68637C14.2723 5.71612 15.6467 5.39501 16.8859 5.72593L17.1955 4.56656C15.5595 4.12966 13.7389 4.55245 12.4535 5.83784L13.3021 6.68637ZM12.401 10.4697C11.9779 9.18109 12.2794 7.70907 13.3021 6.68637L12.4535 5.83784C11.0986 7.19284 10.7021 9.14217 11.2608 10.844L12.401 10.4697ZM11.4066 10.2326L5.21498 16.4242L6.06351 17.2727L12.2552 11.0811L11.4066 10.2326ZM5.21498 16.4242C4.12834 17.5109 4.12834 19.2727 5.21498 20.3593L6.06351 19.5108C5.4455 18.8928 5.4455 17.8908 6.06351 17.2727L5.21498 16.4242ZM5.21498 20.3593C6.30163 21.446 8.06343 21.446 9.15007 20.3593L8.30155 19.5108C7.68353 20.1288 6.68153 20.1288 6.06351 19.5108L5.21498 20.3593ZM9.15007 20.3593L15.5426 13.9668L14.6941 13.1182L8.30155 19.5108L9.15007 20.3593ZM18.5475 11.9318C17.6463 12.8331 16.3968 13.1742 15.2301 12.953L15.0066 14.132C16.5466 14.4239 18.2023 13.9741 19.3961 12.7804L18.5475 11.9318ZM19.508 8.34804C19.8389 9.58721 19.5178 10.9616 18.5475 11.9318L19.3961 12.7804C20.6815 11.495 21.1043 9.67445 20.6674 8.03843L19.508 8.34804ZM17.8726 11.2569L20.5119 8.6175L19.6634 7.76898L17.024 10.4083L17.8726 11.2569ZM14.8575 10.8167L17.3058 11.4154L17.5908 10.2498L15.1426 9.65106L14.8575 10.8167ZM13.8185 7.92813L14.4172 10.3764L15.5829 10.0914L14.9841 7.64307L13.8185 7.92813Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n});\nWrenchIcon.displayName = \"ForwardRef(WrenchIcon)\";\nconst icons = {\n  \"access-denied\": AccessDeniedIcon,\n  activity: ActivityIcon,\n  \"add-circle\": AddCircleIcon,\n  \"add-comment\": AddCommentIcon,\n  \"add-document\": AddDocumentIcon,\n  add: AddIcon,\n  \"add-user\": AddUserIcon,\n  api: ApiIcon,\n  archive: ArchiveIcon,\n  \"arrow-down\": ArrowDownIcon,\n  \"arrow-left\": ArrowLeftIcon,\n  \"arrow-right\": ArrowRightIcon,\n  \"arrow-top-right\": ArrowTopRightIcon,\n  \"arrow-up\": ArrowUpIcon,\n  asterisk: AsteriskIcon,\n  \"bar-chart\": BarChartIcon,\n  basket: BasketIcon,\n  bell: BellIcon,\n  bill: BillIcon,\n  \"binary-document\": BinaryDocumentIcon,\n  \"block-content\": BlockContentIcon,\n  \"block-element\": BlockElementIcon,\n  blockquote: BlockquoteIcon,\n  bold: BoldIcon,\n  bolt: BoltIcon,\n  book: BookIcon,\n  \"bookmark-filled\": BookmarkFilledIcon,\n  bookmark: BookmarkIcon,\n  bottle: BottleIcon,\n  bug: BugIcon,\n  \"bulb-filled\": BulbFilledIcon,\n  \"bulb-outline\": BulbOutlineIcon,\n  calendar: CalendarIcon,\n  case: CaseIcon,\n  \"chart-upward\": ChartUpwardIcon,\n  \"checkmark-circle\": CheckmarkCircleIcon,\n  checkmark: CheckmarkIcon,\n  \"chevron-down\": ChevronDownIcon,\n  \"chevron-left\": ChevronLeftIcon,\n  \"chevron-right\": ChevronRightIcon,\n  \"chevron-up\": ChevronUpIcon,\n  circle: CircleIcon,\n  clipboard: ClipboardIcon,\n  \"clipboard-image\": ClipboardImageIcon,\n  clock: ClockIcon,\n  \"close-circle\": CloseCircleIcon,\n  close: CloseIcon,\n  \"code-block\": CodeBlockIcon,\n  code: CodeIcon,\n  cog: CogIcon,\n  collapse: CollapseIcon,\n  \"color-wheel\": ColorWheelIcon,\n  comment: CommentIcon,\n  component: ComponentIcon,\n  compose: ComposeIcon,\n  \"compose-sparkles\": ComposeSparklesIcon,\n  confetti: ConfettiIcon,\n  controls: ControlsIcon,\n  copy: CopyIcon,\n  \"credit-card\": CreditCardIcon,\n  crop: CropIcon,\n  cube: CubeIcon,\n  dashboard: DashboardIcon,\n  database: DatabaseIcon,\n  desktop: DesktopIcon,\n  diamond: DiamondIcon,\n  document: DocumentIcon,\n  \"document-pdf\": DocumentPdfIcon,\n  \"document-remove\": DocumentRemoveIcon,\n  \"document-sheet\": DocumentSheetIcon,\n  \"document-text\": DocumentTextIcon,\n  \"document-video\": DocumentVideoIcon,\n  \"document-word\": DocumentWordIcon,\n  \"document-zip\": DocumentZipIcon,\n  documents: DocumentsIcon,\n  dot: DotIcon,\n  \"double-chevron-down\": DoubleChevronDownIcon,\n  \"double-chevron-left\": DoubleChevronLeftIcon,\n  \"double-chevron-right\": DoubleChevronRightIcon,\n  \"double-chevron-up\": DoubleChevronUpIcon,\n  download: DownloadIcon,\n  \"drag-handle\": DragHandleIcon,\n  drop: DropIcon,\n  \"earth-americas\": EarthAmericasIcon,\n  \"earth-globe\": EarthGlobeIcon,\n  edit: EditIcon,\n  \"ellipsis-horizontal\": EllipsisHorizontalIcon,\n  \"ellipsis-vertical\": EllipsisVerticalIcon,\n  empty: EmptyIcon,\n  enter: EnterIcon,\n  \"enter-right\": EnterRightIcon,\n  envelope: EnvelopeIcon,\n  equal: EqualIcon,\n  \"error-filled\": ErrorFilledIcon,\n  \"error-outline\": ErrorOutlineIcon,\n  \"error-screen\": ErrorScreenIcon,\n  expand: ExpandIcon,\n  \"eye-closed\": EyeClosedIcon,\n  \"eye-open\": EyeOpenIcon,\n  \"face-happy\": FaceHappyIcon,\n  \"face-indifferent\": FaceIndifferentIcon,\n  \"face-sad\": FaceSadIcon,\n  feedback: FeedbackIcon,\n  filter: FilterIcon,\n  folder: FolderIcon,\n  generate: GenerateIcon,\n  github: GithubIcon,\n  groq: GroqIcon,\n  hash: HashIcon,\n  \"heart-filled\": HeartFilledIcon,\n  heart: HeartIcon,\n  \"help-circle\": HelpCircleIcon,\n  highlight: HighlightIcon,\n  home: HomeIcon,\n  \"ice-cream\": IceCreamIcon,\n  image: ImageIcon,\n  \"image-remove\": ImageRemoveIcon,\n  images: ImagesIcon,\n  inbox: InboxIcon,\n  \"info-filled\": InfoFilledIcon,\n  \"info-outline\": InfoOutlineIcon,\n  \"inline-element\": InlineElementIcon,\n  inline: InlineIcon,\n  \"insert-above\": InsertAboveIcon,\n  \"insert-below\": InsertBelowIcon,\n  italic: ItalicIcon,\n  joystick: JoystickIcon,\n  json: JsonIcon,\n  launch: LaunchIcon,\n  leave: LeaveIcon,\n  lemon: LemonIcon,\n  link: LinkIcon,\n  \"link-removed\": LinkRemovedIcon,\n  linkedin: LinkedinIcon,\n  list: ListIcon,\n  lock: LockIcon,\n  \"logo-js\": LogoJsIcon,\n  \"logo-ts\": LogoTsIcon,\n  marker: MarkerIcon,\n  \"marker-removed\": MarkerRemovedIcon,\n  \"master-detail\": MasterDetailIcon,\n  menu: MenuIcon,\n  microphone: MicrophoneIcon,\n  \"microphone-slash\": MicrophoneSlashIcon,\n  \"mobile-device\": MobileDeviceIcon,\n  moon: MoonIcon,\n  number: NumberIcon,\n  \"ok-hand\": OkHandIcon,\n  olist: OlistIcon,\n  overage: OverageIcon,\n  package: PackageIcon,\n  \"panel-left\": PanelLeftIcon,\n  \"panel-right\": PanelRightIcon,\n  pause: PauseIcon,\n  \"pin-filled\": PinFilledIcon,\n  pin: PinIcon,\n  \"pin-removed\": PinRemovedIcon,\n  play: PlayIcon,\n  plug: PlugIcon,\n  presentation: PresentationIcon,\n  \"progress-50\": Progress50Icon,\n  \"progress-75\": Progress75Icon,\n  projects: ProjectsIcon,\n  publish: PublishIcon,\n  \"read-only\": ReadOnlyIcon,\n  redo: RedoIcon,\n  refresh: RefreshIcon,\n  \"remove-circle\": RemoveCircleIcon,\n  remove: RemoveIcon,\n  reset: ResetIcon,\n  restore: RestoreIcon,\n  retrieve: RetrieveIcon,\n  retry: RetryIcon,\n  revert: RevertIcon,\n  robot: RobotIcon,\n  rocket: RocketIcon,\n  schema: SchemaIcon,\n  search: SearchIcon,\n  select: SelectIcon,\n  share: ShareIcon,\n  sort: SortIcon,\n  sparkle: SparkleIcon,\n  sparkles: SparklesIcon,\n  spinner: SpinnerIcon,\n  \"split-horizontal\": SplitHorizontalIcon,\n  \"split-vertical\": SplitVerticalIcon,\n  square: SquareIcon,\n  \"stack-compact\": StackCompactIcon,\n  stack: StackIcon,\n  \"star-filled\": StarFilledIcon,\n  star: StarIcon,\n  stop: StopIcon,\n  strikethrough: StrikethroughIcon,\n  string: StringIcon,\n  sun: SunIcon,\n  sync: SyncIcon,\n  \"tablet-device\": TabletDeviceIcon,\n  tag: TagIcon,\n  tags: TagsIcon,\n  target: TargetIcon,\n  task: TaskIcon,\n  terminal: TerminalIcon,\n  text: TextIcon,\n  \"th-large\": ThLargeIcon,\n  \"th-list\": ThListIcon,\n  \"thumbs-down\": ThumbsDownIcon,\n  \"thumbs-up\": ThumbsUpIcon,\n  tiers: TiersIcon,\n  timeline: TimelineIcon,\n  \"toggle-arrow-right\": ToggleArrowRightIcon,\n  token: TokenIcon,\n  transfer: TransferIcon,\n  translate: TranslateIcon,\n  trash: TrashIcon,\n  \"trend-upward\": TrendUpwardIcon,\n  \"triangle-outline\": TriangleOutlineIcon,\n  trolley: TrolleyIcon,\n  truncate: TruncateIcon,\n  twitter: TwitterIcon,\n  ulist: UlistIcon,\n  unarchive: UnarchiveIcon,\n  underline: UnderlineIcon,\n  undo: UndoIcon,\n  unknown: UnknownIcon,\n  unlink: UnlinkIcon,\n  unlock: UnlockIcon,\n  unpublish: UnpublishIcon,\n  upload: UploadIcon,\n  user: UserIcon,\n  users: UsersIcon,\n  versions: VersionsIcon,\n  video: VideoIcon,\n  \"warning-filled\": WarningFilledIcon,\n  \"warning-outline\": WarningOutlineIcon,\n  wrench: WrenchIcon\n}, Icon = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(props, ref) {\n  const { symbol, ...restProps } = props, IconComponent = icons[symbol];\n  return IconComponent ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent, { ...restProps, ref }) : null;\n});\nIcon.displayName = \"ForwardRef(Icon)\";\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/icons/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/insert-menu/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@sanity/insert-menu/dist/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InsertMenu: () => (/* binding */ InsertMenu)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-compiler-runtime */ \"(ssr)/./node_modules/react-compiler-runtime/dist/index.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sanity/icons */ \"(ssr)/./node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var _sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/ui/_visual-editing */ \"(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/_visual-editing.mjs\");\n/* harmony import */ var lodash_startCase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/startCase.js */ \"(ssr)/./node_modules/lodash/startCase.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-is */ \"(ssr)/./node_modules/react-is/index.js\");\n\n\n\n\n\n\n\nfunction getSchemaTypeIcon(schemaType) {\n  const referenceIcon = isReferenceSchemaType(schemaType) && (schemaType.to ?? []).length === 1 ? schemaType.to[0].icon : void 0;\n  return schemaType.icon ?? schemaType.type?.icon ?? referenceIcon;\n}\nfunction isReferenceSchemaType(type) {\n  return isRecord(type) && (type.name === \"reference\" || isReferenceSchemaType(type.type));\n}\nfunction isRecord(value) {\n  return !!value && (typeof value == \"object\" || typeof value == \"function\");\n}\nfunction fullInsertMenuReducer(state, event) {\n  return {\n    query: event.type === \"change query\" ? event.query : state.query,\n    groups: event.type === \"select group\" ? state.groups.map((group) => ({\n      ...group,\n      selected: event.name === group.name\n    })) : state.groups,\n    views: event.type === \"toggle view\" ? state.views.map((view) => ({\n      ...view,\n      selected: event.name === view.name\n    })) : state.views\n  };\n}\nconst ALL_ITEMS_GROUP_NAME = \"all-items\", gridStyle = {\n  gridTemplateColumns: \"repeat(auto-fill, minmax(118px, 1fr))\"\n};\nfunction InsertMenu(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(54), showIcons = props.showIcons === void 0 ? !0 : props.showIcons, showFilter = props.filter === void 0 || props.filter === \"auto\" ? props.schemaTypes.length > 5 : props.filter;\n  let t0;\n  $[0] !== props.groups || $[1] !== props.labels ? (t0 = props.groups ? [{\n    name: ALL_ITEMS_GROUP_NAME,\n    title: props.labels[\"insert-menu.filter.all-items\"],\n    selected: !0\n  }, ...props.groups.map(_temp)] : [], $[0] = props.groups, $[1] = props.labels, $[2] = t0) : t0 = $[2];\n  let t1;\n  $[3] !== props.views ? (t1 = props.views ?? [{\n    name: \"list\"\n  }], $[3] = props.views, $[4] = t1) : t1 = $[4];\n  let t2;\n  $[5] !== t1 ? (t2 = t1.map(_temp2), $[5] = t1, $[6] = t2) : t2 = $[6];\n  let t3;\n  $[7] !== t0 || $[8] !== t2 ? (t3 = {\n    query: \"\",\n    groups: t0,\n    views: t2\n  }, $[7] = t0, $[8] = t2, $[9] = t3) : t3 = $[9];\n  const [state, send] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useReducer)(fullInsertMenuReducer, t3);\n  let T0, T1, T2, t4, t5, t6, t7, t8, t9;\n  if ($[10] !== props || $[11] !== showFilter || $[12] !== showIcons || $[13] !== state.groups || $[14] !== state.query || $[15] !== state.views) {\n    const filteredSchemaTypes = filterSchemaTypes(props.schemaTypes, state.query, state.groups), selectedView = state.views.find(_temp3), showingFilterOrViews = showFilter || state.views.length > 1, showingTabs = state.groups && state.groups.length > 0, showingAnyOptions = showingFilterOrViews || showingTabs;\n    T2 = _sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Menu, t9 = 0, T1 = _sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Flex, t6 = \"column\", t7 = \"fill\";\n    let t102;\n    $[25] !== showingAnyOptions ? (t102 = showingAnyOptions ? {\n      style: {\n        borderBottom: \"1px solid var(--card-border-color)\"\n      },\n      paddingBottom: 1\n    } : {}, $[25] = showingAnyOptions, $[26] = t102) : t102 = $[26];\n    let t112;\n    $[27] !== props.labels || $[28] !== showFilter || $[29] !== showingFilterOrViews || $[30] !== state.query || $[31] !== state.views ? (t112 = showingFilterOrViews ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Flex, { flex: \"none\", align: \"center\", paddingTop: 1, paddingX: 1, gap: 1, children: [\n      showFilter ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Box, { flex: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.TextInput, { autoFocus: !0, border: !1, fontSize: 1, icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.SearchIcon, onChange: (event) => {\n        send({\n          type: \"change query\",\n          query: event.target.value\n        });\n      }, placeholder: props.labels[\"insert-menu.search.placeholder\"], value: state.query }) }) : null,\n      state.views.length > 1 ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Box, { flex: \"none\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ViewToggle, { views: state.views, onToggle: (name) => {\n        send({\n          type: \"toggle view\",\n          name\n        });\n      }, labels: props.labels }) }) : null\n    ] }) : null, $[27] = props.labels, $[28] = showFilter, $[29] = showingFilterOrViews, $[30] = state.query, $[31] = state.views, $[32] = t112) : t112 = $[32];\n    let t122;\n    $[33] !== showingTabs || $[34] !== state.groups ? (t122 = showingTabs ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Box, { paddingTop: 1, paddingX: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.TabList, { space: 1, children: state.groups.map((group_0) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Tab, { id: `${group_0.name}-tab`, \"aria-controls\": `${group_0.name}-panel`, label: group_0.title ?? lodash_startCase_js__WEBPACK_IMPORTED_MODULE_2__(group_0.name), selected: group_0.selected, onClick: () => {\n      send({\n        type: \"select group\",\n        name: group_0.name\n      });\n    } }, group_0.name)) }) }) : null, $[33] = showingTabs, $[34] = state.groups, $[35] = t122) : t122 = $[35], $[36] !== t102 || $[37] !== t112 || $[38] !== t122 ? (t8 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Box, { ...t102, children: [\n      t112,\n      t122\n    ] }), $[36] = t102, $[37] = t112, $[38] = t122, $[39] = t8) : t8 = $[39], T0 = _sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Box, t4 = 1, t5 = filteredSchemaTypes.length === 0 ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Box, { padding: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Text, { muted: !0, size: 1, children: props.labels[\"insert-menu.search.no-results\"] }) }) : selectedView ? selectedView.name === \"grid\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Grid, { autoRows: \"auto\", flex: 1, gap: 1, style: gridStyle, children: filteredSchemaTypes.map((schemaType) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(GridMenuItem, { icon: showIcons ? getSchemaTypeIcon(schemaType) : void 0, onClick: () => {\n      props.onSelect(schemaType);\n    }, previewImageUrl: selectedView.previewImageUrl?.(schemaType.name), schemaType }, schemaType.name)) }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Stack, { flex: 1, space: 1, children: filteredSchemaTypes.map((schemaType_0) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.MenuItem, { icon: showIcons ? getSchemaTypeIcon(schemaType_0) : void 0, onClick: () => {\n      props.onSelect(schemaType_0);\n    }, text: schemaType_0.title ?? lodash_startCase_js__WEBPACK_IMPORTED_MODULE_2__(schemaType_0.name) }, schemaType_0.name)) }) : null, $[10] = props, $[11] = showFilter, $[12] = showIcons, $[13] = state.groups, $[14] = state.query, $[15] = state.views, $[16] = T0, $[17] = T1, $[18] = T2, $[19] = t4, $[20] = t5, $[21] = t6, $[22] = t7, $[23] = t8, $[24] = t9;\n  } else\n    T0 = $[16], T1 = $[17], T2 = $[18], t4 = $[19], t5 = $[20], t6 = $[21], t7 = $[22], t8 = $[23], t9 = $[24];\n  let t10;\n  $[40] !== T0 || $[41] !== t4 || $[42] !== t5 ? (t10 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(T0, { padding: t4, children: t5 }), $[40] = T0, $[41] = t4, $[42] = t5, $[43] = t10) : t10 = $[43];\n  let t11;\n  $[44] !== T1 || $[45] !== t10 || $[46] !== t6 || $[47] !== t7 || $[48] !== t8 ? (t11 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(T1, { direction: t6, height: t7, children: [\n    t8,\n    t10\n  ] }), $[44] = T1, $[45] = t10, $[46] = t6, $[47] = t7, $[48] = t8, $[49] = t11) : t11 = $[49];\n  let t12;\n  return $[50] !== T2 || $[51] !== t11 || $[52] !== t9 ? (t12 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(T2, { padding: t9, children: t11 }), $[50] = T2, $[51] = t11, $[52] = t9, $[53] = t12) : t12 = $[53], t12;\n}\nfunction _temp3(view_0) {\n  return view_0.selected;\n}\nfunction _temp2(view, index) {\n  return {\n    ...view,\n    selected: index === 0\n  };\n}\nfunction _temp(group) {\n  return {\n    ...group,\n    selected: !1\n  };\n}\nconst viewToggleIcon = {\n  grid: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.ThLargeIcon,\n  list: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.UlistIcon\n}, viewToggleTooltip = {\n  grid: \"insert-menu.toggle-grid-view.tooltip\",\n  list: \"insert-menu.toggle-list-view.tooltip\"\n};\nfunction ViewToggle(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(11), viewIndex = props.views.findIndex(_temp4), nextView = props.views[viewIndex + 1] ?? props.views[0], t0 = props.labels[viewToggleTooltip[nextView.name]];\n  let t1;\n  $[0] !== t0 ? (t1 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Text, { size: 1, children: t0 }), $[0] = t0, $[1] = t1) : t1 = $[1];\n  const t2 = viewToggleIcon[nextView.name];\n  let t3;\n  $[2] !== nextView.name || $[3] !== props ? (t3 = () => {\n    props.onToggle(nextView.name);\n  }, $[2] = nextView.name, $[3] = props, $[4] = t3) : t3 = $[4];\n  let t4;\n  $[5] !== t2 || $[6] !== t3 ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Button, { mode: \"bleed\", icon: t2, onClick: t3 }), $[5] = t2, $[6] = t3, $[7] = t4) : t4 = $[7];\n  let t5;\n  return $[8] !== t1 || $[9] !== t4 ? (t5 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Tooltip, { content: t1, placement: \"top\", portal: !0, children: t4 }), $[8] = t1, $[9] = t4, $[10] = t5) : t5 = $[10], t5;\n}\nfunction _temp4(view) {\n  return view.selected;\n}\nfunction GridMenuItem(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(19), [failedToLoad, setFailedToLoad] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(!1), Icon = props.icon;\n  let t0;\n  $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = {\n    overflow: \"hidden\"\n  }, $[0] = t0) : t0 = $[0];\n  let t1;\n  $[1] === Symbol.for(\"react.memo_cache_sentinel\") ? (t1 = {\n    backgroundColor: \"var(--card-muted-bg-color)\",\n    paddingBottom: \"66.6%\",\n    position: \"relative\"\n  }, $[1] = t1) : t1 = $[1];\n  let t2;\n  $[2] !== Icon ? (t2 = (0,react_is__WEBPACK_IMPORTED_MODULE_4__.isValidElementType)(Icon) ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Flex, { align: \"center\", justify: \"center\", style: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\"\n  }, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Text, { size: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Icon, {}) }) }) : null, $[2] = Icon, $[3] = t2) : t2 = $[3];\n  let t3;\n  $[4] !== failedToLoad || $[5] !== props.previewImageUrl ? (t3 = !props.previewImageUrl || failedToLoad ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", { src: props.previewImageUrl, style: {\n    objectFit: \"contain\",\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    inset: 0\n  }, onError: () => {\n    setFailedToLoad(!0);\n  } }), $[4] = failedToLoad, $[5] = props.previewImageUrl, $[6] = t3) : t3 = $[6];\n  let t4;\n  $[7] === Symbol.for(\"react.memo_cache_sentinel\") ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { style: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    boxShadow: \"inset 0 0 0 0.5px var(--card-fg-color)\",\n    opacity: 0.1\n  } }), $[7] = t4) : t4 = $[7];\n  let t5;\n  $[8] !== t2 || $[9] !== t3 ? (t5 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Box, { flex: \"none\", style: t1, children: [\n    t2,\n    t3,\n    t4\n  ] }), $[8] = t2, $[9] = t3, $[10] = t5) : t5 = $[10];\n  const t6 = props.schemaType.title ?? props.schemaType.name;\n  let t7;\n  $[11] !== t6 ? (t7 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Box, { flex: 1, padding: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Text, { size: 1, weight: \"medium\", children: t6 }) }), $[11] = t6, $[12] = t7) : t7 = $[12];\n  let t8;\n  $[13] !== t5 || $[14] !== t7 ? (t8 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Flex, { direction: \"column\", gap: 1, padding: 1, children: [\n    t5,\n    t7\n  ] }), $[13] = t5, $[14] = t7, $[15] = t8) : t8 = $[15];\n  let t9;\n  return $[16] !== props.onClick || $[17] !== t8 ? (t9 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.MenuItem, { padding: 0, radius: 2, onClick: props.onClick, style: t0, children: t8 }), $[16] = props.onClick, $[17] = t8, $[18] = t9) : t9 = $[18], t9;\n}\nfunction filterSchemaTypes(schemaTypes, query, groups) {\n  return schemaTypes.filter((schemaType) => passesGroupFilter(schemaType, groups) && passesQueryFilter(schemaType, query));\n}\nfunction passesQueryFilter(schemaType, query) {\n  const sanitizedQuery = query.trim().toLowerCase();\n  return schemaType.title ? schemaType.title?.toLowerCase().includes(sanitizedQuery) : schemaType.name.includes(sanitizedQuery);\n}\nfunction passesGroupFilter(schemaType, groups) {\n  const selectedGroup = groups.find((group) => group.selected);\n  return selectedGroup ? selectedGroup.name === ALL_ITEMS_GROUP_NAME ? !0 : selectedGroup.of?.includes(schemaType.name) : !0;\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/insert-menu/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/PresentationComlink.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/PresentationComlink.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PresentationComlink)\n/* harmony export */ });\n/* harmony import */ var _sanity_comlink__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/comlink */ \"(ssr)/./node_modules/@sanity/comlink/dist/index.js\");\n/* harmony import */ var _sanity_next_loader_server_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sanity/next-loader/server-actions */ \"(ssr)/./node_modules/@sanity/next-loader/dist/server-actions.js\");\n/* harmony import */ var _sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sanity/presentation-comlink */ \"(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js\");\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var use_effect_event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-effect-event */ \"(ssr)/./node_modules/use-effect-event/dist/index.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/context.js\");\n\n\n\n\n\n\n\nfunction PresentationComlink(props) {\n  const { projectId, dataset, draftModeEnabled, draftModePerspective } = props, router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_0__.useRouter)();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    (0,_context_js__WEBPACK_IMPORTED_MODULE_2__.setComlinkClientConfig)(projectId, dataset);\n  }, [dataset, projectId]);\n  const handlePerspectiveChange = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_3__.useEffectEvent)(\n    (perspective, signal) => {\n      draftModeEnabled && perspective !== draftModePerspective && (0,_sanity_next_loader_server_actions__WEBPACK_IMPORTED_MODULE_4__.setPerspectiveCookie)(perspective).then(() => {\n        signal.aborted || router.refresh();\n      }).catch((reason) => console.error(\"Failed to set the preview perspective cookie\", reason));\n    }\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const comlink = (0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_5__.createNode)(\n      {\n        name: \"loaders\",\n        connectTo: \"presentation\"\n      },\n      (0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_5__.createNodeMachine)().provide({\n        actors: (0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_6__.createCompatibilityActors)()\n      })\n    );\n    let controller;\n    comlink.on(\"loader/perspective\", (data) => {\n      controller?.abort(), controller = new AbortController(), handlePerspectiveChange(data.perspective, controller.signal);\n    });\n    const stop = comlink.start();\n    return (0,_context_js__WEBPACK_IMPORTED_MODULE_2__.setComlink)(comlink), () => {\n      stop();\n    };\n  }, []), null;\n}\nPresentationComlink.displayName = \"PresentationComlink\";\n\n//# sourceMappingURL=PresentationComlink.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUHJlc2VudGF0aW9uQ29tbGluay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFnRTtBQUNVO0FBQ0Q7QUFDMUI7QUFDYjtBQUNnQjtBQUNnQjtBQUNsRTtBQUNBLFVBQVUsNkRBQTZELGtCQUFrQiw2REFBUztBQUNsRyxFQUFFLGdEQUFTO0FBQ1gsSUFBSSxtRUFBc0I7QUFDMUIsR0FBRztBQUNILGtDQUFrQyxnRUFBYztBQUNoRDtBQUNBLGtFQUFrRSx3RkFBb0I7QUFDdEY7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFNBQVMsZ0RBQVM7QUFDbEIsb0JBQW9CLDJEQUFVO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxNQUFNLGtFQUFpQjtBQUN2QixnQkFBZ0IsdUZBQXlCO0FBQ3pDLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFdBQVcsdURBQVU7QUFDckI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbnRlYy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L25leHQtbG9hZGVyL2Rpc3QvX2NodW5rcy1lcy9QcmVzZW50YXRpb25Db21saW5rLmpzP2MxMjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTm9kZSwgY3JlYXRlTm9kZU1hY2hpbmUgfSBmcm9tIFwiQHNhbml0eS9jb21saW5rXCI7XG5pbXBvcnQgeyBzZXRQZXJzcGVjdGl2ZUNvb2tpZSB9IGZyb20gXCJAc2FuaXR5L25leHQtbG9hZGVyL3NlcnZlci1hY3Rpb25zXCI7XG5pbXBvcnQgeyBjcmVhdGVDb21wYXRpYmlsaXR5QWN0b3JzIH0gZnJvbSBcIkBzYW5pdHkvcHJlc2VudGF0aW9uLWNvbWxpbmtcIjtcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L25hdmlnYXRpb24uanNcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlRWZmZWN0RXZlbnQgfSBmcm9tIFwidXNlLWVmZmVjdC1ldmVudFwiO1xuaW1wb3J0IHsgc2V0Q29tbGlua0NsaWVudENvbmZpZywgc2V0Q29tbGluayB9IGZyb20gXCIuL2NvbnRleHQuanNcIjtcbmZ1bmN0aW9uIFByZXNlbnRhdGlvbkNvbWxpbmsocHJvcHMpIHtcbiAgY29uc3QgeyBwcm9qZWN0SWQsIGRhdGFzZXQsIGRyYWZ0TW9kZUVuYWJsZWQsIGRyYWZ0TW9kZVBlcnNwZWN0aXZlIH0gPSBwcm9wcywgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0Q29tbGlua0NsaWVudENvbmZpZyhwcm9qZWN0SWQsIGRhdGFzZXQpO1xuICB9LCBbZGF0YXNldCwgcHJvamVjdElkXSk7XG4gIGNvbnN0IGhhbmRsZVBlcnNwZWN0aXZlQ2hhbmdlID0gdXNlRWZmZWN0RXZlbnQoXG4gICAgKHBlcnNwZWN0aXZlLCBzaWduYWwpID0+IHtcbiAgICAgIGRyYWZ0TW9kZUVuYWJsZWQgJiYgcGVyc3BlY3RpdmUgIT09IGRyYWZ0TW9kZVBlcnNwZWN0aXZlICYmIHNldFBlcnNwZWN0aXZlQ29va2llKHBlcnNwZWN0aXZlKS50aGVuKCgpID0+IHtcbiAgICAgICAgc2lnbmFsLmFib3J0ZWQgfHwgcm91dGVyLnJlZnJlc2goKTtcbiAgICAgIH0pLmNhdGNoKChyZWFzb24pID0+IGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gc2V0IHRoZSBwcmV2aWV3IHBlcnNwZWN0aXZlIGNvb2tpZVwiLCByZWFzb24pKTtcbiAgICB9XG4gICk7XG4gIHJldHVybiB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGNvbWxpbmsgPSBjcmVhdGVOb2RlKFxuICAgICAge1xuICAgICAgICBuYW1lOiBcImxvYWRlcnNcIixcbiAgICAgICAgY29ubmVjdFRvOiBcInByZXNlbnRhdGlvblwiXG4gICAgICB9LFxuICAgICAgY3JlYXRlTm9kZU1hY2hpbmUoKS5wcm92aWRlKHtcbiAgICAgICAgYWN0b3JzOiBjcmVhdGVDb21wYXRpYmlsaXR5QWN0b3JzKClcbiAgICAgIH0pXG4gICAgKTtcbiAgICBsZXQgY29udHJvbGxlcjtcbiAgICBjb21saW5rLm9uKFwibG9hZGVyL3BlcnNwZWN0aXZlXCIsIChkYXRhKSA9PiB7XG4gICAgICBjb250cm9sbGVyPy5hYm9ydCgpLCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpLCBoYW5kbGVQZXJzcGVjdGl2ZUNoYW5nZShkYXRhLnBlcnNwZWN0aXZlLCBjb250cm9sbGVyLnNpZ25hbCk7XG4gICAgfSk7XG4gICAgY29uc3Qgc3RvcCA9IGNvbWxpbmsuc3RhcnQoKTtcbiAgICByZXR1cm4gc2V0Q29tbGluayhjb21saW5rKSwgKCkgPT4ge1xuICAgICAgc3RvcCgpO1xuICAgIH07XG4gIH0sIFtdKSwgbnVsbDtcbn1cblByZXNlbnRhdGlvbkNvbWxpbmsuZGlzcGxheU5hbWUgPSBcIlByZXNlbnRhdGlvbkNvbWxpbmtcIjtcbmV4cG9ydCB7XG4gIFByZXNlbnRhdGlvbkNvbWxpbmsgYXMgZGVmYXVsdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVByZXNlbnRhdGlvbkNvbWxpbmsuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/PresentationComlink.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnFocus.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnFocus.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RefreshOnFocus)\n/* harmony export */ });\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\nconst focusThrottleInterval = 5e3;\nfunction RefreshOnFocus() {\n  const router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_0__.useRouter)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const controller = new AbortController();\n    let nextFocusRevalidatedAt = 0;\n    const callback = () => {\n      const now = Date.now();\n      now > nextFocusRevalidatedAt && document.visibilityState !== \"hidden\" && (router.refresh(), nextFocusRevalidatedAt = now + focusThrottleInterval);\n    }, { signal } = controller;\n    return document.addEventListener(\"visibilitychange\", callback, { passive: !0, signal }), window.addEventListener(\"focus\", callback, { passive: !0, signal }), () => controller.abort();\n  }, [router]), null;\n}\nRefreshOnFocus.displayName = \"RefreshOnFocus\";\n\n//# sourceMappingURL=RefreshOnFocus.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUmVmcmVzaE9uRm9jdXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStDO0FBQ2I7QUFDbEM7QUFDQTtBQUNBLGlCQUFpQiw2REFBUztBQUMxQixTQUFTLGdEQUFTO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLElBQUksU0FBUztBQUNsQixxRUFBcUUscUJBQXFCLGdEQUFnRCxxQkFBcUI7QUFDL0osR0FBRztBQUNIO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFudGVjLy4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvbmV4dC1sb2FkZXIvZGlzdC9fY2h1bmtzLWVzL1JlZnJlc2hPbkZvY3VzLmpzPzkzODMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvbi5qc1wiO1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5jb25zdCBmb2N1c1Rocm90dGxlSW50ZXJ2YWwgPSA1ZTM7XG5mdW5jdGlvbiBSZWZyZXNoT25Gb2N1cygpIHtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIHJldHVybiB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gICAgbGV0IG5leHRGb2N1c1JldmFsaWRhdGVkQXQgPSAwO1xuICAgIGNvbnN0IGNhbGxiYWNrID0gKCkgPT4ge1xuICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgIG5vdyA+IG5leHRGb2N1c1JldmFsaWRhdGVkQXQgJiYgZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlICE9PSBcImhpZGRlblwiICYmIChyb3V0ZXIucmVmcmVzaCgpLCBuZXh0Rm9jdXNSZXZhbGlkYXRlZEF0ID0gbm93ICsgZm9jdXNUaHJvdHRsZUludGVydmFsKTtcbiAgICB9LCB7IHNpZ25hbCB9ID0gY29udHJvbGxlcjtcbiAgICByZXR1cm4gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIiwgY2FsbGJhY2ssIHsgcGFzc2l2ZTogITAsIHNpZ25hbCB9KSwgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c1wiLCBjYWxsYmFjaywgeyBwYXNzaXZlOiAhMCwgc2lnbmFsIH0pLCAoKSA9PiBjb250cm9sbGVyLmFib3J0KCk7XG4gIH0sIFtyb3V0ZXJdKSwgbnVsbDtcbn1cblJlZnJlc2hPbkZvY3VzLmRpc3BsYXlOYW1lID0gXCJSZWZyZXNoT25Gb2N1c1wiO1xuZXhwb3J0IHtcbiAgUmVmcmVzaE9uRm9jdXMgYXMgZGVmYXVsdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlZnJlc2hPbkZvY3VzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnFocus.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnMount.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnMount.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RefreshOnMount)\n/* harmony export */ });\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\nfunction RefreshOnMount() {\n  const router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_0__.useRouter)(), [mounted, mount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(() => !0, !1);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    mounted || (mount(), router.refresh());\n  }, [mounted, router]), null;\n}\nRefreshOnMount.displayName = \"RefreshOnMount\";\n\n//# sourceMappingURL=RefreshOnMount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUmVmcmVzaE9uTW91bnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStDO0FBQ0Q7QUFDOUM7QUFDQSxpQkFBaUIsNkRBQVMsdUJBQXVCLGlEQUFVO0FBQzNELFNBQVMsZ0RBQVM7QUFDbEI7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUmVmcmVzaE9uTW91bnQuanM/MWY1YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uLmpzXCI7XG5pbXBvcnQgeyB1c2VSZWR1Y2VyLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIFJlZnJlc2hPbk1vdW50KCkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKSwgW21vdW50ZWQsIG1vdW50XSA9IHVzZVJlZHVjZXIoKCkgPT4gITAsICExKTtcbiAgcmV0dXJuIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbW91bnRlZCB8fCAobW91bnQoKSwgcm91dGVyLnJlZnJlc2goKSk7XG4gIH0sIFttb3VudGVkLCByb3V0ZXJdKSwgbnVsbDtcbn1cblJlZnJlc2hPbk1vdW50LmRpc3BsYXlOYW1lID0gXCJSZWZyZXNoT25Nb3VudFwiO1xuZXhwb3J0IHtcbiAgUmVmcmVzaE9uTW91bnQgYXMgZGVmYXVsdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlZnJlc2hPbk1vdW50LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnMount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnReconnect.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnReconnect.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RefreshOnReconnect)\n/* harmony export */ });\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\nfunction RefreshOnReconnect() {\n  const router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_0__.useRouter)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const controller = new AbortController(), { signal } = controller;\n    return window.addEventListener(\"online\", () => router.refresh(), { passive: !0, signal }), () => controller.abort();\n  }, [router]), null;\n}\nRefreshOnReconnect.displayName = \"RefreshOnReconnect\";\n\n//# sourceMappingURL=RefreshOnReconnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUmVmcmVzaE9uUmVjb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUNiO0FBQ2xDO0FBQ0EsaUJBQWlCLDZEQUFTO0FBQzFCLFNBQVMsZ0RBQVM7QUFDbEIsZ0RBQWdELFNBQVM7QUFDekQsdUVBQXVFLHFCQUFxQjtBQUM1RixHQUFHO0FBQ0g7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvUmVmcmVzaE9uUmVjb25uZWN0LmpzPzVhMzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvbi5qc1wiO1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBSZWZyZXNoT25SZWNvbm5lY3QoKSB7XG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICByZXR1cm4gdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpLCB7IHNpZ25hbCB9ID0gY29udHJvbGxlcjtcbiAgICByZXR1cm4gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvbmxpbmVcIiwgKCkgPT4gcm91dGVyLnJlZnJlc2goKSwgeyBwYXNzaXZlOiAhMCwgc2lnbmFsIH0pLCAoKSA9PiBjb250cm9sbGVyLmFib3J0KCk7XG4gIH0sIFtyb3V0ZXJdKSwgbnVsbDtcbn1cblJlZnJlc2hPblJlY29ubmVjdC5kaXNwbGF5TmFtZSA9IFwiUmVmcmVzaE9uUmVjb25uZWN0XCI7XG5leHBvcnQge1xuICBSZWZyZXNoT25SZWNvbm5lY3QgYXMgZGVmYXVsdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlZnJlc2hPblJlY29ubmVjdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnReconnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/SanityLiveStream.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/SanityLiveStream.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("var react__WEBPACK_IMPORTED_MODULE_2___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SanityLiveStream)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _sanity_client_stega__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/client/stega */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\");\n/* harmony import */ var dequal_lite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dequal/lite */ \"(ssr)/./node_modules/dequal/lite/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var use_effect_event__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! use-effect-event */ \"(ssr)/./node_modules/use-effect-event/dist/index.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./context.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/context.js\");\n\n\n\n\n\n\n\nconst use = \"use\" in /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_2__, 2))) ? (\n  // @ts-expect-error this is fine\n  react__WEBPACK_IMPORTED_MODULE_2__.use\n) : () => {\n  throw new TypeError(\"SanityLiveStream requires a React version with React.use()\");\n}, LISTEN_HEARTBEAT_INTERVAL = 1e4;\nfunction SanityLiveStream(props) {\n  const { query, dataset, params = {}, perspective, projectId, stega } = props, subscribe = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((listener) => (_context_js__WEBPACK_IMPORTED_MODULE_3__.comlinkListeners.add(listener), () => _context_js__WEBPACK_IMPORTED_MODULE_3__.comlinkListeners.delete(listener)), []), comlink$1 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStore)(\n    subscribe,\n    () => _context_js__WEBPACK_IMPORTED_MODULE_3__.comlink,\n    () => null\n  ), [children, setChildren] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(void 0), handleQueryHeartbeat = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_4__.useEffectEvent)((comlink2) => {\n    comlink2.post(\"loader/query-listen\", {\n      projectId,\n      dataset,\n      perspective,\n      query,\n      params,\n      heartbeat: LISTEN_HEARTBEAT_INTERVAL\n    });\n  }), handleQueryChange = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_4__.useEffectEvent)(\n    (event) => {\n      if ((0,dequal_lite__WEBPACK_IMPORTED_MODULE_1__.dequal)(\n        {\n          projectId,\n          dataset,\n          query,\n          params\n        },\n        {\n          projectId: event.projectId,\n          dataset: event.dataset,\n          query: event.query,\n          params: event.params\n        }\n      )) {\n        const { result, resultSourceMap, tags } = event, data = stega ? (0,_sanity_client_stega__WEBPACK_IMPORTED_MODULE_5__.stegaEncodeSourceMap)(result, resultSourceMap, { enabled: !0, studioUrl: \"/\" }) : result;\n        console.groupCollapsed(\"rendering with server action\"), props.children({\n          data,\n          sourceMap: resultSourceMap,\n          tags: tags || []\n        }).then(\n          (children2) => {\n            console.log(\"setChildren(children)\"), setChildren(children2);\n          },\n          (reason) => {\n            console.error(\"rendering with server action: render children error\", reason);\n          }\n        ).finally(() => console.groupEnd());\n      }\n    }\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    if (!comlink$1) return;\n    const unsubscribe = comlink$1.on(\"loader/query-change\", handleQueryChange), interval = setInterval(() => handleQueryHeartbeat(comlink$1), LISTEN_HEARTBEAT_INTERVAL);\n    return () => {\n      clearInterval(interval), unsubscribe();\n    };\n  }, [comlink$1]), !comlink$1 || children === void 0 ? use(props.initial) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children });\n}\nSanityLiveStream.displayName = \"SanityLiveStream\";\n\n//# sourceMappingURL=SanityLiveStream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvU2FuaXR5TGl2ZVN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFrRDtBQUNVO0FBQ3ZCO0FBQ047QUFDZ0Q7QUFDN0I7QUFDTztBQUN6RCxZQUFZLGtNQUFjO0FBQzFCO0FBQ0EsRUFBRSxzQ0FBUztBQUNYO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxVQUFVLDJCQUEyQixrQ0FBa0MscUJBQXFCLGtEQUFXLGdCQUFnQix5REFBZ0Isc0JBQXNCLHlEQUFnQixxQ0FBcUMsMkRBQW9CO0FBQ3RPO0FBQ0EsVUFBVSxnREFBTztBQUNqQjtBQUNBLCtCQUErQiwrQ0FBUSxpQ0FBaUMsZ0VBQWM7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRyx1QkFBdUIsZ0VBQWM7QUFDeEM7QUFDQSxVQUFVLG1EQUFNO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0NBQWdDLHdCQUF3QiwwRUFBb0IsNEJBQTRCLDZCQUE2QjtBQUNySjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxnREFBUztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyx5RkFBeUYsc0RBQUcsQ0FBQyx1REFBUSxJQUFJLFVBQVU7QUFDdEg7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvU2FuaXR5TGl2ZVN0cmVhbS5qcz81MzgwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCwgRnJhZ21lbnQgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IHN0ZWdhRW5jb2RlU291cmNlTWFwIH0gZnJvbSBcIkBzYW5pdHkvY2xpZW50L3N0ZWdhXCI7XG5pbXBvcnQgeyBkZXF1YWwgfSBmcm9tIFwiZGVxdWFsL2xpdGVcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVN5bmNFeHRlcm5hbFN0b3JlLCB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VFZmZlY3RFdmVudCB9IGZyb20gXCJ1c2UtZWZmZWN0LWV2ZW50XCI7XG5pbXBvcnQgeyBjb21saW5rTGlzdGVuZXJzLCBjb21saW5rIH0gZnJvbSBcIi4vY29udGV4dC5qc1wiO1xuY29uc3QgdXNlID0gXCJ1c2VcIiBpbiBSZWFjdCA/IChcbiAgLy8gQHRzLWV4cGVjdC1lcnJvciB0aGlzIGlzIGZpbmVcbiAgUmVhY3QudXNlXG4pIDogKCkgPT4ge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU2FuaXR5TGl2ZVN0cmVhbSByZXF1aXJlcyBhIFJlYWN0IHZlcnNpb24gd2l0aCBSZWFjdC51c2UoKVwiKTtcbn0sIExJU1RFTl9IRUFSVEJFQVRfSU5URVJWQUwgPSAxZTQ7XG5mdW5jdGlvbiBTYW5pdHlMaXZlU3RyZWFtKHByb3BzKSB7XG4gIGNvbnN0IHsgcXVlcnksIGRhdGFzZXQsIHBhcmFtcyA9IHt9LCBwZXJzcGVjdGl2ZSwgcHJvamVjdElkLCBzdGVnYSB9ID0gcHJvcHMsIHN1YnNjcmliZSA9IHVzZUNhbGxiYWNrKChsaXN0ZW5lcikgPT4gKGNvbWxpbmtMaXN0ZW5lcnMuYWRkKGxpc3RlbmVyKSwgKCkgPT4gY29tbGlua0xpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpKSwgW10pLCBjb21saW5rJDEgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZShcbiAgICBzdWJzY3JpYmUsXG4gICAgKCkgPT4gY29tbGluayxcbiAgICAoKSA9PiBudWxsXG4gICksIFtjaGlsZHJlbiwgc2V0Q2hpbGRyZW5dID0gdXNlU3RhdGUodm9pZCAwKSwgaGFuZGxlUXVlcnlIZWFydGJlYXQgPSB1c2VFZmZlY3RFdmVudCgoY29tbGluazIpID0+IHtcbiAgICBjb21saW5rMi5wb3N0KFwibG9hZGVyL3F1ZXJ5LWxpc3RlblwiLCB7XG4gICAgICBwcm9qZWN0SWQsXG4gICAgICBkYXRhc2V0LFxuICAgICAgcGVyc3BlY3RpdmUsXG4gICAgICBxdWVyeSxcbiAgICAgIHBhcmFtcyxcbiAgICAgIGhlYXJ0YmVhdDogTElTVEVOX0hFQVJUQkVBVF9JTlRFUlZBTFxuICAgIH0pO1xuICB9KSwgaGFuZGxlUXVlcnlDaGFuZ2UgPSB1c2VFZmZlY3RFdmVudChcbiAgICAoZXZlbnQpID0+IHtcbiAgICAgIGlmIChkZXF1YWwoXG4gICAgICAgIHtcbiAgICAgICAgICBwcm9qZWN0SWQsXG4gICAgICAgICAgZGF0YXNldCxcbiAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICBwYXJhbXNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb2plY3RJZDogZXZlbnQucHJvamVjdElkLFxuICAgICAgICAgIGRhdGFzZXQ6IGV2ZW50LmRhdGFzZXQsXG4gICAgICAgICAgcXVlcnk6IGV2ZW50LnF1ZXJ5LFxuICAgICAgICAgIHBhcmFtczogZXZlbnQucGFyYW1zXG4gICAgICAgIH1cbiAgICAgICkpIHtcbiAgICAgICAgY29uc3QgeyByZXN1bHQsIHJlc3VsdFNvdXJjZU1hcCwgdGFncyB9ID0gZXZlbnQsIGRhdGEgPSBzdGVnYSA/IHN0ZWdhRW5jb2RlU291cmNlTWFwKHJlc3VsdCwgcmVzdWx0U291cmNlTWFwLCB7IGVuYWJsZWQ6ICEwLCBzdHVkaW9Vcmw6IFwiL1wiIH0pIDogcmVzdWx0O1xuICAgICAgICBjb25zb2xlLmdyb3VwQ29sbGFwc2VkKFwicmVuZGVyaW5nIHdpdGggc2VydmVyIGFjdGlvblwiKSwgcHJvcHMuY2hpbGRyZW4oe1xuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgc291cmNlTWFwOiByZXN1bHRTb3VyY2VNYXAsXG4gICAgICAgICAgdGFnczogdGFncyB8fCBbXVxuICAgICAgICB9KS50aGVuKFxuICAgICAgICAgIChjaGlsZHJlbjIpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic2V0Q2hpbGRyZW4oY2hpbGRyZW4pXCIpLCBzZXRDaGlsZHJlbihjaGlsZHJlbjIpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgKHJlYXNvbikgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcInJlbmRlcmluZyB3aXRoIHNlcnZlciBhY3Rpb246IHJlbmRlciBjaGlsZHJlbiBlcnJvclwiLCByZWFzb24pO1xuICAgICAgICAgIH1cbiAgICAgICAgKS5maW5hbGx5KCgpID0+IGNvbnNvbGUuZ3JvdXBFbmQoKSk7XG4gICAgICB9XG4gICAgfVxuICApO1xuICByZXR1cm4gdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWNvbWxpbmskMSkgcmV0dXJuO1xuICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gY29tbGluayQxLm9uKFwibG9hZGVyL3F1ZXJ5LWNoYW5nZVwiLCBoYW5kbGVRdWVyeUNoYW5nZSksIGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gaGFuZGxlUXVlcnlIZWFydGJlYXQoY29tbGluayQxKSwgTElTVEVOX0hFQVJUQkVBVF9JTlRFUlZBTCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpLCB1bnN1YnNjcmliZSgpO1xuICAgIH07XG4gIH0sIFtjb21saW5rJDFdKSwgIWNvbWxpbmskMSB8fCBjaGlsZHJlbiA9PT0gdm9pZCAwID8gdXNlKHByb3BzLmluaXRpYWwpIDogLyogQF9fUFVSRV9fICovIGpzeChGcmFnbWVudCwgeyBjaGlsZHJlbiB9KTtcbn1cblNhbml0eUxpdmVTdHJlYW0uZGlzcGxheU5hbWUgPSBcIlNhbml0eUxpdmVTdHJlYW1cIjtcbmV4cG9ydCB7XG4gIFNhbml0eUxpdmVTdHJlYW0gYXMgZGVmYXVsdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNhbml0eUxpdmVTdHJlYW0uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/SanityLiveStream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/context.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/context.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   comlink: () => (/* binding */ comlink),\n/* harmony export */   comlinkDataset: () => (/* binding */ comlinkDataset),\n/* harmony export */   comlinkListeners: () => (/* binding */ comlinkListeners),\n/* harmony export */   comlinkProjectId: () => (/* binding */ comlinkProjectId),\n/* harmony export */   environment: () => (/* binding */ environment),\n/* harmony export */   environmentListeners: () => (/* binding */ environmentListeners),\n/* harmony export */   perspective: () => (/* binding */ perspective),\n/* harmony export */   perspectiveListeners: () => (/* binding */ perspectiveListeners),\n/* harmony export */   setComlink: () => (/* binding */ setComlink),\n/* harmony export */   setComlinkClientConfig: () => (/* binding */ setComlinkClientConfig),\n/* harmony export */   setEnvironment: () => (/* binding */ setEnvironment),\n/* harmony export */   setPerspective: () => (/* binding */ setPerspective)\n/* harmony export */ });\nconst perspectiveListeners = /* @__PURE__ */ new Set();\nlet perspective = \"checking\";\nfunction setPerspective(nextPerspective) {\n  if (perspective !== nextPerspective) {\n    perspective = nextPerspective;\n    for (const onPerspectiveChange of perspectiveListeners)\n      onPerspectiveChange();\n  }\n}\nconst environmentListeners = /* @__PURE__ */ new Set();\nlet environment = \"checking\";\nfunction setEnvironment(nextEnvironment) {\n  environment = nextEnvironment;\n  for (const onEnvironmentChange of environmentListeners)\n    onEnvironmentChange();\n}\nconst comlinkListeners = /* @__PURE__ */ new Set();\nlet comlink = null, comlinkProjectId = null, comlinkDataset = null;\nfunction setComlink(nextComlink) {\n  comlink = nextComlink;\n  for (const onComlinkChange of comlinkListeners)\n    onComlinkChange();\n}\nfunction setComlinkClientConfig(nextComlinkProjectId, nextComlinkDataset) {\n  comlinkProjectId = nextComlinkProjectId, comlinkDataset = nextComlinkDataset;\n  for (const onComlinkChange of comlinkListeners)\n    onComlinkChange();\n}\n\n//# sourceMappingURL=context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvY29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWNFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvY29udGV4dC5qcz8xNWJiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBlcnNwZWN0aXZlTGlzdGVuZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbmxldCBwZXJzcGVjdGl2ZSA9IFwiY2hlY2tpbmdcIjtcbmZ1bmN0aW9uIHNldFBlcnNwZWN0aXZlKG5leHRQZXJzcGVjdGl2ZSkge1xuICBpZiAocGVyc3BlY3RpdmUgIT09IG5leHRQZXJzcGVjdGl2ZSkge1xuICAgIHBlcnNwZWN0aXZlID0gbmV4dFBlcnNwZWN0aXZlO1xuICAgIGZvciAoY29uc3Qgb25QZXJzcGVjdGl2ZUNoYW5nZSBvZiBwZXJzcGVjdGl2ZUxpc3RlbmVycylcbiAgICAgIG9uUGVyc3BlY3RpdmVDaGFuZ2UoKTtcbiAgfVxufVxuY29uc3QgZW52aXJvbm1lbnRMaXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xubGV0IGVudmlyb25tZW50ID0gXCJjaGVja2luZ1wiO1xuZnVuY3Rpb24gc2V0RW52aXJvbm1lbnQobmV4dEVudmlyb25tZW50KSB7XG4gIGVudmlyb25tZW50ID0gbmV4dEVudmlyb25tZW50O1xuICBmb3IgKGNvbnN0IG9uRW52aXJvbm1lbnRDaGFuZ2Ugb2YgZW52aXJvbm1lbnRMaXN0ZW5lcnMpXG4gICAgb25FbnZpcm9ubWVudENoYW5nZSgpO1xufVxuY29uc3QgY29tbGlua0xpc3RlbmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG5sZXQgY29tbGluayA9IG51bGwsIGNvbWxpbmtQcm9qZWN0SWQgPSBudWxsLCBjb21saW5rRGF0YXNldCA9IG51bGw7XG5mdW5jdGlvbiBzZXRDb21saW5rKG5leHRDb21saW5rKSB7XG4gIGNvbWxpbmsgPSBuZXh0Q29tbGluaztcbiAgZm9yIChjb25zdCBvbkNvbWxpbmtDaGFuZ2Ugb2YgY29tbGlua0xpc3RlbmVycylcbiAgICBvbkNvbWxpbmtDaGFuZ2UoKTtcbn1cbmZ1bmN0aW9uIHNldENvbWxpbmtDbGllbnRDb25maWcobmV4dENvbWxpbmtQcm9qZWN0SWQsIG5leHRDb21saW5rRGF0YXNldCkge1xuICBjb21saW5rUHJvamVjdElkID0gbmV4dENvbWxpbmtQcm9qZWN0SWQsIGNvbWxpbmtEYXRhc2V0ID0gbmV4dENvbWxpbmtEYXRhc2V0O1xuICBmb3IgKGNvbnN0IG9uQ29tbGlua0NoYW5nZSBvZiBjb21saW5rTGlzdGVuZXJzKVxuICAgIG9uQ29tbGlua0NoYW5nZSgpO1xufVxuZXhwb3J0IHtcbiAgY29tbGluayxcbiAgY29tbGlua0RhdGFzZXQsXG4gIGNvbWxpbmtMaXN0ZW5lcnMsXG4gIGNvbWxpbmtQcm9qZWN0SWQsXG4gIGVudmlyb25tZW50LFxuICBlbnZpcm9ubWVudExpc3RlbmVycyxcbiAgcGVyc3BlY3RpdmUsXG4gIHBlcnNwZWN0aXZlTGlzdGVuZXJzLFxuICBzZXRDb21saW5rLFxuICBzZXRDb21saW5rQ2xpZW50Q29uZmlnLFxuICBzZXRFbnZpcm9ubWVudCxcbiAgc2V0UGVyc3BlY3RpdmVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250ZXh0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/context.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/isCorsOriginError.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/isCorsOriginError.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCorsOriginError: () => (/* binding */ isCorsOriginError)\n/* harmony export */ });\n/* harmony import */ var _sanity_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanity/client */ \"(ssr)/./node_modules/@sanity/client/dist/index.js\");\n\nfunction isCorsOriginError(error) {\n  return error instanceof _sanity_client__WEBPACK_IMPORTED_MODULE_0__.CorsOriginError;\n}\n\n//# sourceMappingURL=isCorsOriginError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L19jaHVua3MtZXMvaXNDb3JzT3JpZ2luRXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUQ7QUFDakQ7QUFDQSwwQkFBMEIsMkRBQWU7QUFDekM7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFudGVjLy4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvbmV4dC1sb2FkZXIvZGlzdC9fY2h1bmtzLWVzL2lzQ29yc09yaWdpbkVycm9yLmpzP2RjOWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yc09yaWdpbkVycm9yIH0gZnJvbSBcIkBzYW5pdHkvY2xpZW50XCI7XG5mdW5jdGlvbiBpc0NvcnNPcmlnaW5FcnJvcihlcnJvcikge1xuICByZXR1cm4gZXJyb3IgaW5zdGFuY2VvZiBDb3JzT3JpZ2luRXJyb3I7XG59XG5leHBvcnQge1xuICBpc0NvcnNPcmlnaW5FcnJvclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzQ29yc09yaWdpbkVycm9yLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/isCorsOriginError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/client-components/live-stream.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/client-components/live-stream.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SanityLiveStreamLazyClientComponent)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ \"(ssr)/./node_modules/next/dist/api/app-dynamic.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nconst SanityLiveStreamClientComponent = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/dequal\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../_chunks-es/SanityLiveStream.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/SanityLiveStream.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"node_modules\\\\@sanity\\\\next-loader\\\\dist\\\\client-components\\\\live-stream.js -> \" + \"../_chunks-es/SanityLiveStream.js\"\n        ]\n    },\n    ssr: !1\n});\nfunction SanityLiveStreamLazyClientComponent(props) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SanityLiveStreamClientComponent, {\n        ...props\n    });\n}\n //# sourceMappingURL=live-stream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L2NsaWVudC1jb21wb25lbnRzL2xpdmUtc3RyZWFtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBU0EsTUFBTUEsa0NBQWtDQyx3REFBT0EsQ0FBQyxJQUFNLHdTQUFPOzs7Ozs7SUFBd0JDLEtBQUs7O0FBRW5GLFNBQVNDLG9DQUFvQ0MsS0FBQTtJQUMzQyx1QkFBQUMsc0RBQUFBLENBQUNMLGlDQUFpQztRQUFBLEdBQUdJLEtBQUE7SUFBTztBQUNyRCIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbnRlYy8uLi8uLi9zcmMvY2xpZW50LWNvbXBvbmVudHMvbGl2ZS1zdHJlYW0vU2FuaXR5TGl2ZVN0cmVhbUxhenkudHN4PzViZWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGZpbGUgd29ya3MgYXJvdW5kIGEgbmV3IHJlc3RyaWN0aW9uIGluIE5leHQgdjE1IHdoZXJlIHNlcnZlciBjb21wb25lbnRzIGFyZSBub3QgYWxsb3dlZFxuICogdG8gdXNlIGR5bmFtaWMoKCkgPT4gaW1wb3J0KCcuLi4pLCB7c3NyOiBmYWxzZX0pXG4gKiBvbmx5IENsaWVudCBDb21wb25lbnRzIGNhbiBzZXQgc3NyOiBmYWxzZS5cbiAqL1xuXG5pbXBvcnQgZHluYW1pYyBmcm9tICduZXh0L2R5bmFtaWMnXG5pbXBvcnQgdHlwZSB7U2FuaXR5TGl2ZVN0cmVhbVByb3BzfSBmcm9tICcuL1Nhbml0eUxpdmVTdHJlYW0nXG5cbmNvbnN0IFNhbml0eUxpdmVTdHJlYW1DbGllbnRDb21wb25lbnQgPSBkeW5hbWljKCgpID0+IGltcG9ydCgnLi9TYW5pdHlMaXZlU3RyZWFtJyksIHtzc3I6IGZhbHNlfSlcblxuZXhwb3J0IGZ1bmN0aW9uIFNhbml0eUxpdmVTdHJlYW1MYXp5Q2xpZW50Q29tcG9uZW50KHByb3BzOiBTYW5pdHlMaXZlU3RyZWFtUHJvcHMpOiBSZWFjdC5SZWFjdE5vZGUge1xuICByZXR1cm4gPFNhbml0eUxpdmVTdHJlYW1DbGllbnRDb21wb25lbnQgey4uLnByb3BzfSAvPlxufVxuIl0sIm5hbWVzIjpbIlNhbml0eUxpdmVTdHJlYW1DbGllbnRDb21wb25lbnQiLCJkeW5hbWljIiwic3NyIiwiU2FuaXR5TGl2ZVN0cmVhbUxhenlDbGllbnRDb21wb25lbnQiLCJwcm9wcyIsImpzeCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/client-components/live-stream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/client-components/live.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/client-components/live.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SanityLive)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _sanity_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/client */ \"(ssr)/./node_modules/@sanity/client/dist/index.js\");\n/* harmony import */ var _sanity_next_loader_server_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sanity/next-loader/server-actions */ \"(ssr)/./node_modules/@sanity/next-loader/dist/server-actions.js\");\n/* harmony import */ var _sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sanity/presentation-comlink */ \"(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ \"(ssr)/./node_modules/next/dist/api/app-dynamic.js\");\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var use_effect_event__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! use-effect-event */ \"(ssr)/./node_modules/use-effect-event/dist/index.js\");\n/* harmony import */ var _chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../_chunks-es/context.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/context.js\");\n/* harmony import */ var _chunks_es_isCorsOriginError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_chunks-es/isCorsOriginError.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/isCorsOriginError.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n\n\n\n\nconst PresentationComlink = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ../_chunks-es/PresentationComlink.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/PresentationComlink.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"node_modules\\\\@sanity\\\\next-loader\\\\dist\\\\client-components\\\\live.js -> \" + \"../_chunks-es/PresentationComlink.js\"\n        ]\n    },\n    ssr: !1\n}), RefreshOnMount = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ../_chunks-es/RefreshOnMount.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnMount.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"node_modules\\\\@sanity\\\\next-loader\\\\dist\\\\client-components\\\\live.js -> \" + \"../_chunks-es/RefreshOnMount.js\"\n        ]\n    },\n    ssr: !1\n}), RefreshOnFocus = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ../_chunks-es/RefreshOnFocus.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnFocus.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"node_modules\\\\@sanity\\\\next-loader\\\\dist\\\\client-components\\\\live.js -> \" + \"../_chunks-es/RefreshOnFocus.js\"\n        ]\n    },\n    ssr: !1\n}), RefreshOnReconnect = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ../_chunks-es/RefreshOnReconnect.js */ \"(ssr)/./node_modules/@sanity/next-loader/dist/_chunks-es/RefreshOnReconnect.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"node_modules\\\\@sanity\\\\next-loader\\\\dist\\\\client-components\\\\live.js -> \" + \"../_chunks-es/RefreshOnReconnect.js\"\n        ]\n    },\n    ssr: !1\n});\nfunction handleError(error) {\n    (0,_chunks_es_isCorsOriginError_js__WEBPACK_IMPORTED_MODULE_4__.isCorsOriginError)(error) ? console.warn(`Sanity Live is unable to connect to the Sanity API as the current origin - ${window.origin} - is not in the list of allowed CORS origins for this Sanity Project.`, error.addOriginUrl && \"Add it here:\", error.addOriginUrl?.toString()) : console.error(error);\n}\nfunction handleOnGoAway(event, intervalOnGoAway) {\n    intervalOnGoAway ? console.warn(\"Sanity Live connection closed, switching to long polling set to a interval of\", intervalOnGoAway / 1e3, \"seconds and the server gave this reason:\", event.reason) : console.error(\"Sanity Live connection closed, automatic revalidation is disabled, the server gave this reason:\", event.reason);\n}\nfunction SanityLive(props) {\n    const { projectId, dataset, apiHost, apiVersion, useProjectHostname, token, requestTagPrefix, // handleDraftModeAction,\n    draftModeEnabled, draftModePerspective, refreshOnMount = !1, refreshOnFocus = draftModeEnabled ? !1 :  true ? !0 : 0, refreshOnReconnect = !0, intervalOnGoAway = 3e4, requestTag = \"next-loader.live\", onError = handleError, onGoAway = handleOnGoAway } = props, client = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(()=>(0,_sanity_client__WEBPACK_IMPORTED_MODULE_5__.createClient)({\n            projectId,\n            dataset,\n            apiHost,\n            apiVersion,\n            useProjectHostname,\n            ignoreBrowserTokenWarning: !0,\n            token,\n            useCdn: !1,\n            requestTagPrefix\n        }), [\n        apiHost,\n        apiVersion,\n        dataset,\n        projectId,\n        requestTagPrefix,\n        token,\n        useProjectHostname\n    ]), [longPollingInterval, setLongPollingInterval] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(!1), router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_2__.useRouter)(), handleLiveEvent = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_6__.useEffectEvent)((event)=>{\n         true && event.type === \"welcome\" ? (console.info(\"Sanity is live with\", token ? \"automatic revalidation for draft content changes as well as published content\" : draftModeEnabled ? \"automatic revalidation for only published content. Provide a `browserToken` to `defineLive` to support draft content outside of Presentation Tool.\" : \"automatic revalidation of published content\"), setLongPollingInterval(!1)) : event.type === \"message\" ? (0,_sanity_next_loader_server_actions__WEBPACK_IMPORTED_MODULE_7__.revalidateSyncTags)(event.tags) : event.type === \"restart\" || event.type === \"reconnect\" ? router.refresh() : event.type === \"goaway\" && (onGoAway(event, intervalOnGoAway), setLongPollingInterval(intervalOnGoAway));\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        const subscription = client.live.events({\n            includeDrafts: !!token,\n            tag: requestTag\n        }).subscribe({\n            next: handleLiveEvent,\n            error: (err)=>{\n                onError(err);\n            }\n        });\n        return ()=>subscription.unsubscribe();\n    }, [\n        client.live,\n        onError,\n        requestTag,\n        token\n    ]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        draftModeEnabled && draftModePerspective ? (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setPerspective)(draftModePerspective) : (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setPerspective)(\"unknown\");\n    }, [\n        draftModeEnabled,\n        draftModePerspective\n    ]);\n    const [loadComlink, setLoadComlink] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(!1);\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        if (!(0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_9__.isMaybePresentation)()) {\n            if (draftModeEnabled && token) {\n                (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setEnvironment)(\"live\");\n                return;\n            }\n            if (draftModeEnabled) {\n                (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setEnvironment)(\"static\");\n                return;\n            }\n            (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setEnvironment)(\"unknown\");\n        }\n    }, [\n        draftModeEnabled,\n        token\n    ]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        if (!(0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_9__.isMaybePresentation)()) return;\n        const controller = new AbortController(), timeout = setTimeout(()=>(0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setEnvironment)(\"live\"), 3e3);\n        return window.addEventListener(\"message\", ({ data })=>{\n            data && typeof data == \"object\" && \"domain\" in data && data.domain === \"sanity/channels\" && \"from\" in data && data.from === \"presentation\" && (clearTimeout(timeout), (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_8__.setEnvironment)((0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_9__.isMaybePreviewWindow)() ? \"presentation-window\" : \"presentation-iframe\"), setLoadComlink(!0), controller.abort());\n        }, {\n            signal: controller.signal\n        }), ()=>{\n            clearTimeout(timeout), controller.abort();\n        };\n    }, []);\n    const draftModeEnabledWarnRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(void 0);\n    return (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        if (draftModeEnabled) return clearTimeout(draftModeEnabledWarnRef.current), ()=>{\n            draftModeEnabledWarnRef.current = setTimeout(()=>{\n                console.warn(\"Sanity Live: Draft mode was enabled, but is now being disabled\");\n            });\n        };\n    }, [\n        draftModeEnabled\n    ]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        if (!longPollingInterval) return;\n        const interval = setInterval(()=>router.refresh(), longPollingInterval);\n        return ()=>clearInterval(interval);\n    }, [\n        longPollingInterval,\n        router\n    ]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            draftModeEnabled && loadComlink && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PresentationComlink, {\n                projectId,\n                dataset,\n                draftModeEnabled,\n                draftModePerspective\n            }),\n            !draftModeEnabled && refreshOnMount && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RefreshOnMount, {}),\n            !draftModeEnabled && refreshOnFocus && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RefreshOnFocus, {}),\n            !draftModeEnabled && refreshOnReconnect && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RefreshOnReconnect, {})\n        ]\n    });\n}\nSanityLive.displayName = \"SanityLive\";\n //# sourceMappingURL=live.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9uZXh0LWxvYWRlci9kaXN0L2NsaWVudC1jb21wb25lbnRzL2xpdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JBLE1BQU1BLHNCQUFzQkMsd0RBQU9BLENBQUMsSUFBTSxpUEFBTzs7Ozs7O0lBQTJCQyxLQUFLO0lBQzNFQyxpQkFBaUJGLHdEQUFPQSxDQUFDLElBQU0sdU9BQU87Ozs7OztJQUFzQkMsS0FBSztJQUNqRUUsaUJBQWlCSCx3REFBT0EsQ0FBQyxJQUFNLHVPQUFPOzs7Ozs7SUFBc0JDLEtBQUs7SUFDakVHLHFCQUFxQkosd0RBQU9BLENBQUMsSUFBTSwrT0FBTzs7Ozs7O0lBQTBCQyxLQUFLOztBQWdDL0UsU0FBU0ksWUFBWUMsS0FBQTtJQUVmQyxrRkFBaUJBLENBQUNELFNBQ3BCRSxRQUFRQyxJQUFBLENBQ04sOEVBQThFQyxPQUFPQyxNQUFNLDBFQUMzRkwsTUFBTU0sWUFBQSxJQUFnQixnQkFDdEJOLE1BQU1NLFlBQUEsRUFBY0MsY0FHdEJMLFFBQVFGLEtBQUEsQ0FBTUE7QUFHbEI7QUFFQSxTQUFTUSxlQUFlQyxLQUFBLEVBQXdCQyxnQkFBQTtJQUUxQ0EsbUJBQ0ZSLFFBQVFDLElBQUEsQ0FDTixpRkFDQU8sbUJBQW1CLEtBQ25CLDRDQUNBRCxNQUFNRSxNQUFBLElBR1JULFFBQVFGLEtBQUEsQ0FDTixtR0FDQVMsTUFBTUUsTUFBQTtBQUlaO0FBS08sU0FBU0MsV0FBV0MsS0FBQTtJQUNuQixRQUNKQyxTQUFBLEVBQ0FDLE9BQUEsRUFDQUMsT0FBQSxFQUNBQyxVQUFBLEVBQ0FDLGtCQUFBLEVBQ0FDLEtBQUEsRUFDQUMsZ0JBQUE7SUFFQUMsZ0JBQUEsRUFDQUMsb0JBQUEsRUFDQUMsaUJBQWlCLElBQ2pCQyxpQkFBaUJILG1CQUNiLEtBQ0EsS0FBa0IsR0FDaEIsS0FDQWpCLENBQXVCLEVBQzdCdUIscUJBQXFCLElBQ3JCakIsbUJBQW1CLEtBQ25Ca0IsYUFBYSxvQkFDYkMsVUFBVTlCLFdBQUEsRUFDVitCLFdBQVd0QixjQUFBLEtBQ1RLLE9BRUVrQixTQUFTQyw4Q0FBT0EsQ0FDcEIsSUFDRUMsNERBQVlBLENBQUM7WUFDWG5CO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FnQiwyQkFBMkI7WUFDM0JmO1lBQ0FnQixRQUFRO1lBQ1JmO1FBQUEsSUFFSjtRQUFDSjtRQUFTQztRQUFZRjtRQUFTRDtRQUFXTTtRQUFrQkQ7UUFBT0Q7S0FBa0IsR0FFakYsQ0FBQ2tCLHFCQUFxQkMsdUJBQXNCLEdBQUlDLCtDQUFRQSxDQUFpQixLQUt6RUMsU0FBU0MsNkRBQVNBLElBQ2xCQyxrQkFBa0JDLGdFQUFjQSxDQUFDLENBQUNqQzthQUNULElBQWdCQSxNQUFNa0MsSUFBQSxLQUFTLFlBRTFEekMsQ0FBQUEsUUFBUTBDLElBQUEsQ0FDTix1QkFDQXpCLFFBQ0ksa0ZBQ0FFLG1CQUNFLHVKQUNBLGdEQUdSZ0IsdUJBQXVCLEdBQUssSUFDbkI1QixNQUFNa0MsSUFBQSxLQUFTLFlBQ3hCRSxzRkFBa0JBLENBQUNwQyxNQUFNcUMsSUFBSSxJQUNwQnJDLE1BQU1rQyxJQUFBLEtBQVMsYUFBYWxDLE1BQU1rQyxJQUFBLEtBQVMsY0FDcERKLE9BQU9RLE9BQUEsS0FDRXRDLE1BQU1rQyxJQUFBLEtBQVMsWUFDeEJiLENBQUFBLFNBQVNyQixPQUFPQyxtQkFDaEIyQix1QkFBdUIzQixpQkFBZ0I7SUFBQTtJQUczQ3NDLGdEQUFTQSxDQUFDO1FBQ1IsTUFBTUMsZUFBZWxCLE9BQU9tQixJQUFBLENBQUtDLE1BQUEsQ0FBTztZQUFDQyxlQUFlLENBQUMsQ0FBQ2pDO1lBQU9rQyxLQUFLekI7UUFBVyxHQUFFMEIsU0FBQSxDQUFVO1lBQzNGQyxNQUFNZDtZQUNOekMsT0FBTyxDQUFDd0Q7Z0JBRU4zQixRQUFRMkI7WUFBRztRQUNiO1FBRUssV0FBTVAsYUFBYVEsV0FBQTtJQUFZLEdBQ3JDO1FBQUMxQixPQUFPbUIsSUFBQTtRQUFNckI7UUFBU0Q7UUFBWVQ7S0FBTSxHQUs1QzZCLGdEQUFTQSxDQUFDO1FBQ0ozQixvQkFBb0JDLHVCQUN0Qm9DLHFFQUFjQSxDQUFDcEMsd0JBRWZvQyxxRUFBY0EsQ0FBQztJQUFTLEdBRXpCO1FBQUNyQztRQUFrQkM7S0FBcUI7SUFFM0MsTUFBTSxDQUFDcUMsYUFBYUMsZUFBYyxHQUFJdEIsK0NBQVFBLENBQUM7SUFJL0NVLGdEQUFTQSxDQUFDO1FBRVIsSUFBSSxDQUFBYSxpRkFBbUJBLElBSXZCO1lBQUEsSUFBSXhDLG9CQUFvQkYsT0FBTztnQkFDN0IyQyxxRUFBY0EsQ0FBQztnQkFDZjtZQUFBO1lBSUYsSUFBSXpDLGtCQUFrQjtnQkFDcEJ5QyxxRUFBY0EsQ0FBQztnQkFDZjtZQUFBO1lBSUZBLHFFQUFjQSxDQUFDO1FBQVM7SUFBQSxHQUV2QjtRQUFDekM7UUFBa0JGO0tBQU0sR0FLNUI2QixnREFBU0EsQ0FBQztRQUNKLEtBQUNhLGlGQUFtQkEsSUFBSTtRQUN0QixNQUFBRSxhQUFhLElBQUlDLG1CQUVqQkMsVUFBVUMsV0FBVyxJQUFNSixxRUFBY0EsQ0FBQyxTQUFTO1FBQ2xELE9BQUExRCxPQUFBK0QsZ0JBQUEsQ0FDTCxXQUNBLENBQUMsRUFBQ0MsSUFBQTtZQUVFQSxRQUNBLE9BQU9BLFFBQVMsWUFDaEIsWUFBWUEsUUFDWkEsS0FBS0MsTUFBQSxLQUFXLHFCQUNoQixVQUFVRCxRQUNWQSxLQUFLRSxJQUFBLEtBQVMsa0JBRWRDLENBQUFBLGFBQWFOLFVBQ2JILHFFQUFjQSxDQUFDVSxrRkFBb0JBLEtBQUssd0JBQXdCLHdCQUNoRVosZUFBZSxLQUNmRyxXQUFXVSxLQUFBLEVBQU07UUFFckIsR0FDQTtZQUFDQyxRQUFRWCxXQUFXVyxNQUFBO1FBQU0sSUFFckI7WUFDUUgsYUFBQU4sVUFDYkYsV0FBV1UsS0FBQTtRQUNiO0lBQ0YsR0FBRyxFQUFFO0lBTUMsTUFBQUUsMEJBQTBCQyw2Q0FBTUEsQ0FBNEM7SUFDbEYsT0FBQTVCLGdEQUFTQSxDQUFDO1FBQ0gsSUFBQTNCLGtCQUNRLE9BQUFrRCxhQUFBSSx3QkFBd0JFLE9BQU8sR0FDckM7WUFDbUJGLHdCQUFBRSxPQUFBLEdBQVVYLFdBQVc7Z0JBRTNDaEUsUUFBUUMsSUFBQSxDQUFLO1lBQWdFO1FBRWpGO0lBQUEsR0FDQztRQUFDa0I7S0FBaUIsR0FLckIyQixnREFBU0EsQ0FBQztRQUNSLElBQUksQ0FBQ1oscUJBQXFCO1FBQzFCLE1BQU0wQyxXQUFXQyxZQUFZLElBQU14QyxPQUFPUSxPQUFBLElBQVdYO1FBQzlDLFdBQU00QyxjQUFjRjtJQUFRLEdBQ2xDO1FBQUMxQztRQUFxQkc7S0FBTyxHQUkzQixnQkFBQTBDLHVEQUFBQSxDQUFBQyx1REFBQUEsRUFBQTtRQUFBQyxVQUFBO1lBQUE5RCxvQkFBb0JzQyxlQUNuQixnQkFBQXlCLHNEQUFBQSxDQUFDM0YscUJBQUE7Z0JBQ0NxQjtnQkFDQUM7Z0JBRUFNO2dCQUNBQztZQUFBO1lBR0gsQ0FBQ0Qsb0JBQW9CRSxrQkFBa0IsZ0JBQUE2RCxzREFBQUEsQ0FBQ3hGLGdCQUFlO1lBQ3ZELENBQUN5QixvQkFBb0JHLGtCQUFrQixnQkFBQTRELHNEQUFBQSxDQUFDdkYsZ0JBQWU7WUFDdkQsQ0FBQ3dCLG9CQUFvQk0sc0JBQXNCLGdCQUFBeUQsc0RBQUFBLENBQUN0RixvQkFBbUI7U0FBQTtJQUFBO0FBR3RFO0FBQ0FjLFdBQVd5RSxXQUFBLEdBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi4vLi4vc3JjL2NsaWVudC1jb21wb25lbnRzL2xpdmUvU2FuaXR5TGl2ZS50c3g/YmZhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjcmVhdGVDbGllbnQsXG4gIHR5cGUgQ2xpZW50UGVyc3BlY3RpdmUsXG4gIHR5cGUgSW5pdGlhbGl6ZWRDbGllbnRDb25maWcsXG4gIHR5cGUgTGl2ZUV2ZW50LFxuICB0eXBlIExpdmVFdmVudEdvQXdheSxcbn0gZnJvbSAnQHNhbml0eS9jbGllbnQnXG5pbXBvcnQge3JldmFsaWRhdGVTeW5jVGFnc30gZnJvbSAnQHNhbml0eS9uZXh0LWxvYWRlci9zZXJ2ZXItYWN0aW9ucydcbmltcG9ydCB7aXNNYXliZVByZXNlbnRhdGlvbiwgaXNNYXliZVByZXZpZXdXaW5kb3d9IGZyb20gJ0BzYW5pdHkvcHJlc2VudGF0aW9uLWNvbWxpbmsnXG5pbXBvcnQgZHluYW1pYyBmcm9tICduZXh0L2R5bmFtaWMnXG5pbXBvcnQge3VzZVJvdXRlcn0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uLmpzJ1xuaW1wb3J0IHt1c2VFZmZlY3QsIHVzZU1lbW8sIHVzZVJlZiwgdXNlU3RhdGV9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHt1c2VFZmZlY3RFdmVudH0gZnJvbSAndXNlLWVmZmVjdC1ldmVudCdcbmltcG9ydCB7c2V0RW52aXJvbm1lbnQsIHNldFBlcnNwZWN0aXZlfSBmcm9tICcuLi8uLi9ob29rcy9jb250ZXh0J1xuaW1wb3J0IHtpc0NvcnNPcmlnaW5FcnJvcn0gZnJvbSAnLi4vLi4vaXNDb3JzT3JpZ2luRXJyb3InXG5cbmNvbnN0IFByZXNlbnRhdGlvbkNvbWxpbmsgPSBkeW5hbWljKCgpID0+IGltcG9ydCgnLi9QcmVzZW50YXRpb25Db21saW5rJyksIHtzc3I6IGZhbHNlfSlcbmNvbnN0IFJlZnJlc2hPbk1vdW50ID0gZHluYW1pYygoKSA9PiBpbXBvcnQoJy4vUmVmcmVzaE9uTW91bnQnKSwge3NzcjogZmFsc2V9KVxuY29uc3QgUmVmcmVzaE9uRm9jdXMgPSBkeW5hbWljKCgpID0+IGltcG9ydCgnLi9SZWZyZXNoT25Gb2N1cycpLCB7c3NyOiBmYWxzZX0pXG5jb25zdCBSZWZyZXNoT25SZWNvbm5lY3QgPSBkeW5hbWljKCgpID0+IGltcG9ydCgnLi9SZWZyZXNoT25SZWNvbm5lY3QnKSwge3NzcjogZmFsc2V9KVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBTYW5pdHlMaXZlUHJvcHNcbiAgZXh0ZW5kcyBQaWNrPFxuICAgIEluaXRpYWxpemVkQ2xpZW50Q29uZmlnLFxuICAgIHwgJ3Byb2plY3RJZCdcbiAgICB8ICdkYXRhc2V0J1xuICAgIHwgJ2FwaUhvc3QnXG4gICAgfCAnYXBpVmVyc2lvbidcbiAgICB8ICd1c2VQcm9qZWN0SG9zdG5hbWUnXG4gICAgfCAndG9rZW4nXG4gICAgfCAncmVxdWVzdFRhZ1ByZWZpeCdcbiAgPiB7XG4gIC8vIGhhbmRsZURyYWZ0TW9kZUFjdGlvbjogKHNlY3JldDogc3RyaW5nKSA9PiBQcm9taXNlPHZvaWQgfCBzdHJpbmc+XG4gIGRyYWZ0TW9kZUVuYWJsZWQ6IGJvb2xlYW5cbiAgZHJhZnRNb2RlUGVyc3BlY3RpdmU/OiBDbGllbnRQZXJzcGVjdGl2ZVxuICByZWZyZXNoT25Nb3VudD86IGJvb2xlYW5cbiAgcmVmcmVzaE9uRm9jdXM/OiBib29sZWFuXG4gIHJlZnJlc2hPblJlY29ubmVjdD86IGJvb2xlYW5cbiAgcmVxdWVzdFRhZzogc3RyaW5nIHwgdW5kZWZpbmVkXG4gIC8qKlxuICAgKiBIYW5kbGUgZXJyb3JzIGZyb20gdGhlIExpdmUgRXZlbnRzIHN1YnNjcmlwdGlvbi5cbiAgICogQnkgZGVmYXVsdCBpdCdzIHJlcG9ydGVkIHVzaW5nIGBjb25zb2xlLmVycm9yYCwgeW91IGNhbiBvdmVycmlkZSB0aGlzIHByb3AgdG8gaGFuZGxlIGl0IGluIHlvdXIgb3duIHdheS5cbiAgICovXG4gIG9uRXJyb3I/OiAoZXJyb3I6IHVua25vd24pID0+IHZvaWRcbiAgaW50ZXJ2YWxPbkdvQXdheT86IG51bWJlciB8IGZhbHNlXG4gIG9uR29Bd2F5PzogKGV2ZW50OiBMaXZlRXZlbnRHb0F3YXksIGludGVydmFsT25Hb0F3YXk6IG51bWJlciB8IGZhbHNlKSA9PiB2b2lkXG59XG5cbmZ1bmN0aW9uIGhhbmRsZUVycm9yKGVycm9yOiB1bmtub3duKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgaWYgKGlzQ29yc09yaWdpbkVycm9yKGVycm9yKSkge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIGBTYW5pdHkgTGl2ZSBpcyB1bmFibGUgdG8gY29ubmVjdCB0byB0aGUgU2FuaXR5IEFQSSBhcyB0aGUgY3VycmVudCBvcmlnaW4gLSAke3dpbmRvdy5vcmlnaW59IC0gaXMgbm90IGluIHRoZSBsaXN0IG9mIGFsbG93ZWQgQ09SUyBvcmlnaW5zIGZvciB0aGlzIFNhbml0eSBQcm9qZWN0LmAsXG4gICAgICBlcnJvci5hZGRPcmlnaW5VcmwgJiYgYEFkZCBpdCBoZXJlOmAsXG4gICAgICBlcnJvci5hZGRPcmlnaW5Vcmw/LnRvU3RyaW5nKCksXG4gICAgKVxuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpXG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG59XG5cbmZ1bmN0aW9uIGhhbmRsZU9uR29Bd2F5KGV2ZW50OiBMaXZlRXZlbnRHb0F3YXksIGludGVydmFsT25Hb0F3YXk6IG51bWJlciB8IGZhbHNlKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgaWYgKGludGVydmFsT25Hb0F3YXkpIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICAnU2FuaXR5IExpdmUgY29ubmVjdGlvbiBjbG9zZWQsIHN3aXRjaGluZyB0byBsb25nIHBvbGxpbmcgc2V0IHRvIGEgaW50ZXJ2YWwgb2YnLFxuICAgICAgaW50ZXJ2YWxPbkdvQXdheSAvIDEwMDAsXG4gICAgICAnc2Vjb25kcyBhbmQgdGhlIHNlcnZlciBnYXZlIHRoaXMgcmVhc29uOicsXG4gICAgICBldmVudC5yZWFzb24sXG4gICAgKVxuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAnU2FuaXR5IExpdmUgY29ubmVjdGlvbiBjbG9zZWQsIGF1dG9tYXRpYyByZXZhbGlkYXRpb24gaXMgZGlzYWJsZWQsIHRoZSBzZXJ2ZXIgZ2F2ZSB0aGlzIHJlYXNvbjonLFxuICAgICAgZXZlbnQucmVhc29uLFxuICAgIClcbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbn1cblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBTYW5pdHlMaXZlKHByb3BzOiBTYW5pdHlMaXZlUHJvcHMpOiBSZWFjdC5KU1guRWxlbWVudCB8IG51bGwge1xuICBjb25zdCB7XG4gICAgcHJvamVjdElkLFxuICAgIGRhdGFzZXQsXG4gICAgYXBpSG9zdCxcbiAgICBhcGlWZXJzaW9uLFxuICAgIHVzZVByb2plY3RIb3N0bmFtZSxcbiAgICB0b2tlbixcbiAgICByZXF1ZXN0VGFnUHJlZml4LFxuICAgIC8vIGhhbmRsZURyYWZ0TW9kZUFjdGlvbixcbiAgICBkcmFmdE1vZGVFbmFibGVkLFxuICAgIGRyYWZ0TW9kZVBlcnNwZWN0aXZlLFxuICAgIHJlZnJlc2hPbk1vdW50ID0gZmFsc2UsXG4gICAgcmVmcmVzaE9uRm9jdXMgPSBkcmFmdE1vZGVFbmFibGVkXG4gICAgICA/IGZhbHNlXG4gICAgICA6IHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnXG4gICAgICAgID8gdHJ1ZVxuICAgICAgICA6IHdpbmRvdy5zZWxmID09PSB3aW5kb3cudG9wLFxuICAgIHJlZnJlc2hPblJlY29ubmVjdCA9IHRydWUsXG4gICAgaW50ZXJ2YWxPbkdvQXdheSA9IDMwXzAwMCxcbiAgICByZXF1ZXN0VGFnID0gJ25leHQtbG9hZGVyLmxpdmUnLFxuICAgIG9uRXJyb3IgPSBoYW5kbGVFcnJvcixcbiAgICBvbkdvQXdheSA9IGhhbmRsZU9uR29Bd2F5LFxuICB9ID0gcHJvcHNcblxuICBjb25zdCBjbGllbnQgPSB1c2VNZW1vKFxuICAgICgpID0+XG4gICAgICBjcmVhdGVDbGllbnQoe1xuICAgICAgICBwcm9qZWN0SWQsXG4gICAgICAgIGRhdGFzZXQsXG4gICAgICAgIGFwaUhvc3QsXG4gICAgICAgIGFwaVZlcnNpb24sXG4gICAgICAgIHVzZVByb2plY3RIb3N0bmFtZSxcbiAgICAgICAgaWdub3JlQnJvd3NlclRva2VuV2FybmluZzogdHJ1ZSxcbiAgICAgICAgdG9rZW4sXG4gICAgICAgIHVzZUNkbjogZmFsc2UsXG4gICAgICAgIHJlcXVlc3RUYWdQcmVmaXgsXG4gICAgICB9KSxcbiAgICBbYXBpSG9zdCwgYXBpVmVyc2lvbiwgZGF0YXNldCwgcHJvamVjdElkLCByZXF1ZXN0VGFnUHJlZml4LCB0b2tlbiwgdXNlUHJvamVjdEhvc3RuYW1lXSxcbiAgKVxuICBjb25zdCBbbG9uZ1BvbGxpbmdJbnRlcnZhbCwgc2V0TG9uZ1BvbGxpbmdJbnRlcnZhbF0gPSB1c2VTdGF0ZTxudW1iZXIgfCBmYWxzZT4oZmFsc2UpXG5cbiAgLyoqXG4gICAqIDEuIEhhbmRsZSBMaXZlIEV2ZW50cyBhbmQgY2FsbCByZXZhbGlkYXRlVGFnIG9yIHJvdXRlci5yZWZyZXNoIHdoZW4gbmVlZGVkXG4gICAqL1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuICBjb25zdCBoYW5kbGVMaXZlRXZlbnQgPSB1c2VFZmZlY3RFdmVudCgoZXZlbnQ6IExpdmVFdmVudCkgPT4ge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGV2ZW50LnR5cGUgPT09ICd3ZWxjb21lJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUuaW5mbyhcbiAgICAgICAgJ1Nhbml0eSBpcyBsaXZlIHdpdGgnLFxuICAgICAgICB0b2tlblxuICAgICAgICAgID8gJ2F1dG9tYXRpYyByZXZhbGlkYXRpb24gZm9yIGRyYWZ0IGNvbnRlbnQgY2hhbmdlcyBhcyB3ZWxsIGFzIHB1Ymxpc2hlZCBjb250ZW50J1xuICAgICAgICAgIDogZHJhZnRNb2RlRW5hYmxlZFxuICAgICAgICAgICAgPyAnYXV0b21hdGljIHJldmFsaWRhdGlvbiBmb3Igb25seSBwdWJsaXNoZWQgY29udGVudC4gUHJvdmlkZSBhIGBicm93c2VyVG9rZW5gIHRvIGBkZWZpbmVMaXZlYCB0byBzdXBwb3J0IGRyYWZ0IGNvbnRlbnQgb3V0c2lkZSBvZiBQcmVzZW50YXRpb24gVG9vbC4nXG4gICAgICAgICAgICA6ICdhdXRvbWF0aWMgcmV2YWxpZGF0aW9uIG9mIHB1Ymxpc2hlZCBjb250ZW50JyxcbiAgICAgIClcbiAgICAgIC8vIERpc2FibGUgbG9uZyBwb2xsaW5nIHdoZW4gd2VsY29tZSBldmVudCBpcyByZWNlaXZlZCwgdGhpcyBpcyBhIG5vLW9wIGlmIGxvbmcgcG9sbGluZyBpcyBhbHJlYWR5IGRpc2FibGVkXG4gICAgICBzZXRMb25nUG9sbGluZ0ludGVydmFsKGZhbHNlKVxuICAgIH0gZWxzZSBpZiAoZXZlbnQudHlwZSA9PT0gJ21lc3NhZ2UnKSB7XG4gICAgICByZXZhbGlkYXRlU3luY1RhZ3MoZXZlbnQudGFncylcbiAgICB9IGVsc2UgaWYgKGV2ZW50LnR5cGUgPT09ICdyZXN0YXJ0JyB8fCBldmVudC50eXBlID09PSAncmVjb25uZWN0Jykge1xuICAgICAgcm91dGVyLnJlZnJlc2goKVxuICAgIH0gZWxzZSBpZiAoZXZlbnQudHlwZSA9PT0gJ2dvYXdheScpIHtcbiAgICAgIG9uR29Bd2F5KGV2ZW50LCBpbnRlcnZhbE9uR29Bd2F5KVxuICAgICAgc2V0TG9uZ1BvbGxpbmdJbnRlcnZhbChpbnRlcnZhbE9uR29Bd2F5KVxuICAgIH1cbiAgfSlcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBjbGllbnQubGl2ZS5ldmVudHMoe2luY2x1ZGVEcmFmdHM6ICEhdG9rZW4sIHRhZzogcmVxdWVzdFRhZ30pLnN1YnNjcmliZSh7XG4gICAgICBuZXh0OiBoYW5kbGVMaXZlRXZlbnQsXG4gICAgICBlcnJvcjogKGVycjogdW5rbm93bikgPT4ge1xuICAgICAgICAvLyBjb25zb2xlLmVycm9yKCdXaGF0PycsIGVycilcbiAgICAgICAgb25FcnJvcihlcnIpXG4gICAgICB9LFxuICAgIH0pXG4gICAgcmV0dXJuICgpID0+IHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpXG4gIH0sIFtjbGllbnQubGl2ZSwgb25FcnJvciwgcmVxdWVzdFRhZywgdG9rZW5dKVxuXG4gIC8qKlxuICAgKiAyLiBOb3RpZnkgd2hhdCBwZXJzcGVjdGl2ZSB3ZSdyZSBpbiwgd2hlbiBpbiBEcmFmdCBNb2RlXG4gICAqL1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChkcmFmdE1vZGVFbmFibGVkICYmIGRyYWZ0TW9kZVBlcnNwZWN0aXZlKSB7XG4gICAgICBzZXRQZXJzcGVjdGl2ZShkcmFmdE1vZGVQZXJzcGVjdGl2ZSlcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0UGVyc3BlY3RpdmUoJ3Vua25vd24nKVxuICAgIH1cbiAgfSwgW2RyYWZ0TW9kZUVuYWJsZWQsIGRyYWZ0TW9kZVBlcnNwZWN0aXZlXSlcblxuICBjb25zdCBbbG9hZENvbWxpbmssIHNldExvYWRDb21saW5rXSA9IHVzZVN0YXRlKGZhbHNlKVxuICAvKipcbiAgICogMy4gTm90aWZ5IHdoYXQgZW52aXJvbm1lbnQgd2UncmUgaW4sIHdoZW4gaW4gRHJhZnQgTW9kZVxuICAgKi9cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBJZiB3ZSBtaWdodCBiZSBpbiBQcmVzZW50YXRpb24gVG9vbCwgdGhlbiBza2lwIGRldGVjdGluZyBoZXJlIGFzIGl0J3MgaGFuZGxlZCBsYXRlclxuICAgIGlmIChpc01heWJlUHJlc2VudGF0aW9uKCkpIHJldHVyblxuXG4gICAgLy8gSWYgd2UncmUgZGVmaW5pdGVseSBub3QgaW4gUHJlc2VudGF0aW9uIFRvb2wsIHRoZW4gd2UgY2FuIHNldCB0aGUgZW52aXJvbm1lbnQgYXMgc3RhbmQtYWxvbmUgbGl2ZSBwcmV2aWV3XG4gICAgLy8gaWYgd2UgaGF2ZSBib3RoIGEgYnJvd3NlciB0b2tlbiwgYW5kIGRyYWZ0IG1vZGUgaXMgZW5hYmxlZFxuICAgIGlmIChkcmFmdE1vZGVFbmFibGVkICYmIHRva2VuKSB7XG4gICAgICBzZXRFbnZpcm9ubWVudCgnbGl2ZScpXG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgLy8gSWYgd2UncmUgaW4gZHJhZnQgbW9kZSwgYnV0IGRvbid0IGhhdmUgYSBicm93c2VyIHRva2VuLCB0aGVuIHdlJ3JlIGluIHN0YXRpYyBtb2RlXG4gICAgLy8gd2hpY2ggbWVhbnMgdGhhdCBwdWJsaXNoZWQgY29udGVudCBpcyBzdGlsbCBsaXZlLCBidXQgZHJhZnQgY2hhbmdlcyBsaWtlbHkgbmVlZCBtYW51YWwgcmVmcmVzaFxuICAgIGlmIChkcmFmdE1vZGVFbmFibGVkKSB7XG4gICAgICBzZXRFbnZpcm9ubWVudCgnc3RhdGljJylcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIEZhbGxiYWNrIHRvIGB1bmtub3duYCBvdGhlcndpc2UsIGFzIHdlIHNpbXBseSBkb24ndCBrbm93IGhvdyBpdCdzIHNldHVwXG4gICAgc2V0RW52aXJvbm1lbnQoJ3Vua25vd24nKVxuICAgIHJldHVyblxuICB9LCBbZHJhZnRNb2RlRW5hYmxlZCwgdG9rZW5dKVxuXG4gIC8qKlxuICAgKiA0LiBJZiBQcmVzZW50YXRpb24gVG9vbCBpcyBkZXRlY3RlZCwgbG9hZCB1cCB0aGUgY29tbGluayBhbmQgaW50ZWdyYXRlIHdpdGggaXRcbiAgICovXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFpc01heWJlUHJlc2VudGF0aW9uKCkpIHJldHVyblxuICAgIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKClcbiAgICAvLyBXYWl0IGZvciBhIHdoaWxlIHRvIHNlZSBpZiBQcmVzZW50YXRpb24gVG9vbCBpcyBkZXRlY3RlZCwgYmVmb3JlIGFzc3VtaW5nIHRoZSBlbnYgdG8gYmUgc3RhbmQtYWxvbmUgbGl2ZSBwcmV2aWV3XG4gICAgY29uc3QgdGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4gc2V0RW52aXJvbm1lbnQoJ2xpdmUnKSwgM18wMDApXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAnbWVzc2FnZScsXG4gICAgICAoe2RhdGF9OiBNZXNzYWdlRXZlbnQ8dW5rbm93bj4pID0+IHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGRhdGEgJiZcbiAgICAgICAgICB0eXBlb2YgZGF0YSA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgICAnZG9tYWluJyBpbiBkYXRhICYmXG4gICAgICAgICAgZGF0YS5kb21haW4gPT09ICdzYW5pdHkvY2hhbm5lbHMnICYmXG4gICAgICAgICAgJ2Zyb20nIGluIGRhdGEgJiZcbiAgICAgICAgICBkYXRhLmZyb20gPT09ICdwcmVzZW50YXRpb24nXG4gICAgICAgICkge1xuICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KVxuICAgICAgICAgIHNldEVudmlyb25tZW50KGlzTWF5YmVQcmV2aWV3V2luZG93KCkgPyAncHJlc2VudGF0aW9uLXdpbmRvdycgOiAncHJlc2VudGF0aW9uLWlmcmFtZScpXG4gICAgICAgICAgc2V0TG9hZENvbWxpbmsodHJ1ZSlcbiAgICAgICAgICBjb250cm9sbGVyLmFib3J0KClcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHtzaWduYWw6IGNvbnRyb2xsZXIuc2lnbmFsfSxcbiAgICApXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KVxuICAgICAgY29udHJvbGxlci5hYm9ydCgpXG4gICAgfVxuICB9LCBbXSlcblxuICAvKipcbiAgICogNS4gV2FybiBpZiBkcmFmdCBtb2RlIGlzIGJlaW5nIGRpc2FibGVkXG4gICAqIEBUT0RPIG1vdmUgbG9naWMgaW50byBQcmVzZW50YXRpb25Db21saW5rLCBvciBtYXliZSBWaXN1YWxFZGl0aW5nP1xuICAgKi9cbiAgY29uc3QgZHJhZnRNb2RlRW5hYmxlZFdhcm5SZWYgPSB1c2VSZWY8UmV0dXJuVHlwZTx0eXBlb2Ygc2V0VGltZW91dD4gfCB1bmRlZmluZWQ+KHVuZGVmaW5lZClcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWRyYWZ0TW9kZUVuYWJsZWQpIHJldHVyblxuICAgIGNsZWFyVGltZW91dChkcmFmdE1vZGVFbmFibGVkV2FyblJlZi5jdXJyZW50KVxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBkcmFmdE1vZGVFbmFibGVkV2FyblJlZi5jdXJyZW50ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgIGNvbnNvbGUud2FybignU2FuaXR5IExpdmU6IERyYWZ0IG1vZGUgd2FzIGVuYWJsZWQsIGJ1dCBpcyBub3cgYmVpbmcgZGlzYWJsZWQnKVxuICAgICAgfSlcbiAgICB9XG4gIH0sIFtkcmFmdE1vZGVFbmFibGVkXSlcblxuICAvKipcbiAgICogNi4gSGFuZGxlIHN3aXRjaGluZyB0byBsb25nIHBvbGxpbmcgd2hlbiBuZWVkZWRcbiAgICovXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFsb25nUG9sbGluZ0ludGVydmFsKSByZXR1cm5cbiAgICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHJvdXRlci5yZWZyZXNoKCksIGxvbmdQb2xsaW5nSW50ZXJ2YWwpXG4gICAgcmV0dXJuICgpID0+IGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpXG4gIH0sIFtsb25nUG9sbGluZ0ludGVydmFsLCByb3V0ZXJdKVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHtkcmFmdE1vZGVFbmFibGVkICYmIGxvYWRDb21saW5rICYmIChcbiAgICAgICAgPFByZXNlbnRhdGlvbkNvbWxpbmtcbiAgICAgICAgICBwcm9qZWN0SWQ9e3Byb2plY3RJZCF9XG4gICAgICAgICAgZGF0YXNldD17ZGF0YXNldCF9XG4gICAgICAgICAgLy8gaGFuZGxlRHJhZnRNb2RlQWN0aW9uPXtoYW5kbGVEcmFmdE1vZGVBY3Rpb259XG4gICAgICAgICAgZHJhZnRNb2RlRW5hYmxlZD17ZHJhZnRNb2RlRW5hYmxlZH1cbiAgICAgICAgICBkcmFmdE1vZGVQZXJzcGVjdGl2ZT17ZHJhZnRNb2RlUGVyc3BlY3RpdmUhfVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHshZHJhZnRNb2RlRW5hYmxlZCAmJiByZWZyZXNoT25Nb3VudCAmJiA8UmVmcmVzaE9uTW91bnQgLz59XG4gICAgICB7IWRyYWZ0TW9kZUVuYWJsZWQgJiYgcmVmcmVzaE9uRm9jdXMgJiYgPFJlZnJlc2hPbkZvY3VzIC8+fVxuICAgICAgeyFkcmFmdE1vZGVFbmFibGVkICYmIHJlZnJlc2hPblJlY29ubmVjdCAmJiA8UmVmcmVzaE9uUmVjb25uZWN0IC8+fVxuICAgIDwvPlxuICApXG59XG5TYW5pdHlMaXZlLmRpc3BsYXlOYW1lID0gJ1Nhbml0eUxpdmUnXG4iXSwibmFtZXMiOlsiUHJlc2VudGF0aW9uQ29tbGluayIsImR5bmFtaWMiLCJzc3IiLCJSZWZyZXNoT25Nb3VudCIsIlJlZnJlc2hPbkZvY3VzIiwiUmVmcmVzaE9uUmVjb25uZWN0IiwiaGFuZGxlRXJyb3IiLCJlcnJvciIsImlzQ29yc09yaWdpbkVycm9yIiwiY29uc29sZSIsIndhcm4iLCJ3aW5kb3ciLCJvcmlnaW4iLCJhZGRPcmlnaW5VcmwiLCJ0b1N0cmluZyIsImhhbmRsZU9uR29Bd2F5IiwiZXZlbnQiLCJpbnRlcnZhbE9uR29Bd2F5IiwicmVhc29uIiwiU2FuaXR5TGl2ZSIsInByb3BzIiwicHJvamVjdElkIiwiZGF0YXNldCIsImFwaUhvc3QiLCJhcGlWZXJzaW9uIiwidXNlUHJvamVjdEhvc3RuYW1lIiwidG9rZW4iLCJyZXF1ZXN0VGFnUHJlZml4IiwiZHJhZnRNb2RlRW5hYmxlZCIsImRyYWZ0TW9kZVBlcnNwZWN0aXZlIiwicmVmcmVzaE9uTW91bnQiLCJyZWZyZXNoT25Gb2N1cyIsInNlbGYiLCJ0b3AiLCJyZWZyZXNoT25SZWNvbm5lY3QiLCJyZXF1ZXN0VGFnIiwib25FcnJvciIsIm9uR29Bd2F5IiwiY2xpZW50IiwidXNlTWVtbyIsImNyZWF0ZUNsaWVudCIsImlnbm9yZUJyb3dzZXJUb2tlbldhcm5pbmciLCJ1c2VDZG4iLCJsb25nUG9sbGluZ0ludGVydmFsIiwic2V0TG9uZ1BvbGxpbmdJbnRlcnZhbCIsInVzZVN0YXRlIiwicm91dGVyIiwidXNlUm91dGVyIiwiaGFuZGxlTGl2ZUV2ZW50IiwidXNlRWZmZWN0RXZlbnQiLCJ0eXBlIiwiaW5mbyIsInJldmFsaWRhdGVTeW5jVGFncyIsInRhZ3MiLCJyZWZyZXNoIiwidXNlRWZmZWN0Iiwic3Vic2NyaXB0aW9uIiwibGl2ZSIsImV2ZW50cyIsImluY2x1ZGVEcmFmdHMiLCJ0YWciLCJzdWJzY3JpYmUiLCJuZXh0IiwiZXJyIiwidW5zdWJzY3JpYmUiLCJzZXRQZXJzcGVjdGl2ZSIsImxvYWRDb21saW5rIiwic2V0TG9hZENvbWxpbmsiLCJpc01heWJlUHJlc2VudGF0aW9uIiwic2V0RW52aXJvbm1lbnQiLCJjb250cm9sbGVyIiwiQWJvcnRDb250cm9sbGVyIiwidGltZW91dCIsInNldFRpbWVvdXQiLCJhZGRFdmVudExpc3RlbmVyIiwiZGF0YSIsImRvbWFpbiIsImZyb20iLCJjbGVhclRpbWVvdXQiLCJpc01heWJlUHJldmlld1dpbmRvdyIsImFib3J0Iiwic2lnbmFsIiwiZHJhZnRNb2RlRW5hYmxlZFdhcm5SZWYiLCJ1c2VSZWYiLCJjdXJyZW50IiwiaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJqc3hzIiwiRnJhZ21lbnQiLCJjaGlsZHJlbiIsImpzeCIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/next-loader/dist/client-components/live.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/next-loader/dist/server-actions.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/server-actions.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   revalidateSyncTags: () => (/* binding */ revalidateSyncTags),
/* harmony export */   setPerspectiveCookie: () => (/* binding */ setPerspectiveCookie)
/* harmony export */ });
/* harmony import */ var next_dist_client_app_call_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/client/app-call-server */ "(ssr)/./node_modules/next/dist/client/app-call-server.js");
/* harmony import */ var private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-client-wrapper */ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js");



function __build_action__(action, args) {
  return (0,next_dist_client_app_call_server__WEBPACK_IMPORTED_MODULE_0__.callServer)(action.$$id, args)
}

/* __next_internal_action_entry_do_not_use__ {"9b57b19416ee7e1a29cee117cae807ecd1a3dd0b":"setPerspectiveCookie","a2e723d6fb0a2a7b85d4e6588651e359c7abe391":"revalidateSyncTags"} */ var setPerspectiveCookie = (0,private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_1__.createServerReference)("9b57b19416ee7e1a29cee117cae807ecd1a3dd0b");

var revalidateSyncTags = (0,private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_1__.createServerReference)("a2e723d6fb0a2a7b85d4e6588651e359c7abe391");
 //# sourceMappingURL=server-actions.js.map



/***/ }),

/***/ "(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/presentation-comlink/dist/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MSG_RESPONSE: () => (/* reexport safe */ _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_RESPONSE),\n/* harmony export */   createCompatibilityActors: () => (/* binding */ createCompatibilityActors),\n/* harmony export */   isMaybePresentation: () => (/* binding */ isMaybePresentation),\n/* harmony export */   isMaybePreviewIframe: () => (/* binding */ isMaybePreviewIframe),\n/* harmony export */   isMaybePreviewWindow: () => (/* binding */ isMaybePreviewWindow)\n/* harmony export */ });\n/* harmony import */ var _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanity/comlink */ \"(ssr)/./node_modules/@sanity/comlink/dist/index.js\");\n\n\nconst channelsToComlinkMap = {\n  \"handshake/syn\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_SYN,\n  \"handshake/syn-ack\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_SYN_ACK,\n  \"handshake/ack\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_ACK,\n  \"channel/response\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_RESPONSE,\n  \"channel/heartbeat\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HEARTBEAT,\n  \"channel/disconnect\": _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_DISCONNECT,\n  \"overlay/focus\": \"visual-editing/focus\",\n  \"overlay/navigate\": \"visual-editing/navigate\",\n  \"overlay/toggle\": \"visual-editing/toggle\",\n  \"presentation/toggleOverlay\": \"presentation/toggle-overlay\"\n}, comlinkToChannelsMap = {\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_SYN]: \"handshake/syn\",\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_SYN_ACK]: \"handshake/syn-ack\",\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HANDSHAKE_ACK]: \"handshake/ack\",\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_RESPONSE]: \"channel/response\",\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_HEARTBEAT]: \"channel/heartbeat\",\n  [_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.MSG_DISCONNECT]: \"channel/disconnect\",\n  \"visual-editing/focus\": \"overlay/focus\",\n  \"visual-editing/navigate\": \"overlay/navigate\",\n  \"visual-editing/toggle\": \"overlay/toggle\",\n  \"presentation/toggle-overlay\": \"presentation/toggleOverlay\"\n}, convertToComlinkEvent = (event) => {\n  const { data } = event;\n  return data && typeof data == \"object\" && \"domain\" in data && \"type\" in data && \"from\" in data && \"to\" in data && (data.domain === \"sanity/channels\" && (data.domain = _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.DOMAIN), data.to === \"overlays\" && (data.to = \"visual-editing\"), data.from === \"overlays\" && (data.from = \"visual-editing\"), data.channelId = data.connectionId, delete data.connectionId, data.type = channelsToComlinkMap[data.type] ?? data.type), event;\n}, convertToChannelsMessage = (comlinkMessage) => {\n  const { channelId, ...rest } = comlinkMessage, message = { ...rest, connectionId: channelId };\n  return message.domain === _sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.DOMAIN && (message.domain = \"sanity/channels\"), message.to === \"visual-editing\" && (message.to = \"overlays\"), message.from === \"visual-editing\" && (message.from = \"overlays\"), message.type = comlinkToChannelsMap[message.type] ?? message.type, message.type === \"channel/response\" && message.responseTo && !message.data && (message.data = { responseTo: message.responseTo }), (message.type === \"handshake/syn\" || message.type === \"handshake/syn-ack\" || message.type === \"handshake/ack\") && (message.data = { id: message.connectionId }), message;\n}, sendAsChannelsMessage = ({ context }, params) => {\n  const { sources, targetOrigin } = context, message = convertToChannelsMessage(params.message);\n  sources.forEach((source) => {\n    source.postMessage(message, { targetOrigin });\n  });\n}, createCompatibilityActors = () => ({\n  listen: (0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.createListenLogic)(convertToComlinkEvent),\n  requestMachine: (0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_0__.createRequestMachine)().provide({\n    actions: {\n      \"send message\": sendAsChannelsMessage\n    }\n  })\n});\nfunction isMaybePreviewIframe() {\n  return window.self !== window.top;\n}\nfunction isMaybePreviewWindow() {\n  return !!window.opener;\n}\nfunction isMaybePresentation() {\n  return isMaybePreviewIframe() || isMaybePreviewWindow();\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wcmVzZW50YXRpb24tY29tbGluay9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE0TDtBQUM1SDtBQUNoRTtBQUNBLG1CQUFtQiw4REFBaUI7QUFDcEMsdUJBQXVCLGtFQUFxQjtBQUM1QyxtQkFBbUIsOERBQWlCO0FBQ3BDLHNCQUFzQix5REFBWTtBQUNsQyx1QkFBdUIsMERBQWE7QUFDcEMsd0JBQXdCLDJEQUFjO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELEdBQUcsOERBQWlCO0FBQ3BCLEdBQUcsa0VBQXFCO0FBQ3hCLEdBQUcsOERBQWlCO0FBQ3BCLEdBQUcseURBQVk7QUFDZixHQUFHLDBEQUFhO0FBQ2hCLEdBQUcsMkRBQWM7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsVUFBVSxPQUFPO0FBQ2pCLHlLQUF5SyxtREFBTTtBQUMvSyxDQUFDO0FBQ0QsVUFBVSxxQkFBcUIsOEJBQThCO0FBQzdELDRCQUE0QixtREFBTSw2VUFBNlUsZ0NBQWdDLHVJQUF1SSwwQkFBMEI7QUFDaGpCLENBQUMsNkJBQTZCLFNBQVM7QUFDdkMsVUFBVSx3QkFBd0I7QUFDbEM7QUFDQSxrQ0FBa0MsY0FBYztBQUNoRCxHQUFHO0FBQ0gsQ0FBQztBQUNELFVBQVUsa0VBQWlCO0FBQzNCLGtCQUFrQixxRUFBb0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFudGVjLy4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvcHJlc2VudGF0aW9uLWNvbWxpbmsvZGlzdC9pbmRleC5qcz9jYTU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVJlcXVlc3RNYWNoaW5lLCBjcmVhdGVMaXN0ZW5Mb2dpYywgRE9NQUlOLCBNU0dfRElTQ09OTkVDVCwgTVNHX0hFQVJUQkVBVCwgTVNHX1JFU1BPTlNFLCBNU0dfSEFORFNIQUtFX0FDSywgTVNHX0hBTkRTSEFLRV9TWU5fQUNLLCBNU0dfSEFORFNIQUtFX1NZTiB9IGZyb20gXCJAc2FuaXR5L2NvbWxpbmtcIjtcbmltcG9ydCB7IE1TR19SRVNQT05TRSBhcyBNU0dfUkVTUE9OU0UyIH0gZnJvbSBcIkBzYW5pdHkvY29tbGlua1wiO1xuY29uc3QgY2hhbm5lbHNUb0NvbWxpbmtNYXAgPSB7XG4gIFwiaGFuZHNoYWtlL3N5blwiOiBNU0dfSEFORFNIQUtFX1NZTixcbiAgXCJoYW5kc2hha2Uvc3luLWFja1wiOiBNU0dfSEFORFNIQUtFX1NZTl9BQ0ssXG4gIFwiaGFuZHNoYWtlL2Fja1wiOiBNU0dfSEFORFNIQUtFX0FDSyxcbiAgXCJjaGFubmVsL3Jlc3BvbnNlXCI6IE1TR19SRVNQT05TRSxcbiAgXCJjaGFubmVsL2hlYXJ0YmVhdFwiOiBNU0dfSEVBUlRCRUFULFxuICBcImNoYW5uZWwvZGlzY29ubmVjdFwiOiBNU0dfRElTQ09OTkVDVCxcbiAgXCJvdmVybGF5L2ZvY3VzXCI6IFwidmlzdWFsLWVkaXRpbmcvZm9jdXNcIixcbiAgXCJvdmVybGF5L25hdmlnYXRlXCI6IFwidmlzdWFsLWVkaXRpbmcvbmF2aWdhdGVcIixcbiAgXCJvdmVybGF5L3RvZ2dsZVwiOiBcInZpc3VhbC1lZGl0aW5nL3RvZ2dsZVwiLFxuICBcInByZXNlbnRhdGlvbi90b2dnbGVPdmVybGF5XCI6IFwicHJlc2VudGF0aW9uL3RvZ2dsZS1vdmVybGF5XCJcbn0sIGNvbWxpbmtUb0NoYW5uZWxzTWFwID0ge1xuICBbTVNHX0hBTkRTSEFLRV9TWU5dOiBcImhhbmRzaGFrZS9zeW5cIixcbiAgW01TR19IQU5EU0hBS0VfU1lOX0FDS106IFwiaGFuZHNoYWtlL3N5bi1hY2tcIixcbiAgW01TR19IQU5EU0hBS0VfQUNLXTogXCJoYW5kc2hha2UvYWNrXCIsXG4gIFtNU0dfUkVTUE9OU0VdOiBcImNoYW5uZWwvcmVzcG9uc2VcIixcbiAgW01TR19IRUFSVEJFQVRdOiBcImNoYW5uZWwvaGVhcnRiZWF0XCIsXG4gIFtNU0dfRElTQ09OTkVDVF06IFwiY2hhbm5lbC9kaXNjb25uZWN0XCIsXG4gIFwidmlzdWFsLWVkaXRpbmcvZm9jdXNcIjogXCJvdmVybGF5L2ZvY3VzXCIsXG4gIFwidmlzdWFsLWVkaXRpbmcvbmF2aWdhdGVcIjogXCJvdmVybGF5L25hdmlnYXRlXCIsXG4gIFwidmlzdWFsLWVkaXRpbmcvdG9nZ2xlXCI6IFwib3ZlcmxheS90b2dnbGVcIixcbiAgXCJwcmVzZW50YXRpb24vdG9nZ2xlLW92ZXJsYXlcIjogXCJwcmVzZW50YXRpb24vdG9nZ2xlT3ZlcmxheVwiXG59LCBjb252ZXJ0VG9Db21saW5rRXZlbnQgPSAoZXZlbnQpID0+IHtcbiAgY29uc3QgeyBkYXRhIH0gPSBldmVudDtcbiAgcmV0dXJuIGRhdGEgJiYgdHlwZW9mIGRhdGEgPT0gXCJvYmplY3RcIiAmJiBcImRvbWFpblwiIGluIGRhdGEgJiYgXCJ0eXBlXCIgaW4gZGF0YSAmJiBcImZyb21cIiBpbiBkYXRhICYmIFwidG9cIiBpbiBkYXRhICYmIChkYXRhLmRvbWFpbiA9PT0gXCJzYW5pdHkvY2hhbm5lbHNcIiAmJiAoZGF0YS5kb21haW4gPSBET01BSU4pLCBkYXRhLnRvID09PSBcIm92ZXJsYXlzXCIgJiYgKGRhdGEudG8gPSBcInZpc3VhbC1lZGl0aW5nXCIpLCBkYXRhLmZyb20gPT09IFwib3ZlcmxheXNcIiAmJiAoZGF0YS5mcm9tID0gXCJ2aXN1YWwtZWRpdGluZ1wiKSwgZGF0YS5jaGFubmVsSWQgPSBkYXRhLmNvbm5lY3Rpb25JZCwgZGVsZXRlIGRhdGEuY29ubmVjdGlvbklkLCBkYXRhLnR5cGUgPSBjaGFubmVsc1RvQ29tbGlua01hcFtkYXRhLnR5cGVdID8/IGRhdGEudHlwZSksIGV2ZW50O1xufSwgY29udmVydFRvQ2hhbm5lbHNNZXNzYWdlID0gKGNvbWxpbmtNZXNzYWdlKSA9PiB7XG4gIGNvbnN0IHsgY2hhbm5lbElkLCAuLi5yZXN0IH0gPSBjb21saW5rTWVzc2FnZSwgbWVzc2FnZSA9IHsgLi4ucmVzdCwgY29ubmVjdGlvbklkOiBjaGFubmVsSWQgfTtcbiAgcmV0dXJuIG1lc3NhZ2UuZG9tYWluID09PSBET01BSU4gJiYgKG1lc3NhZ2UuZG9tYWluID0gXCJzYW5pdHkvY2hhbm5lbHNcIiksIG1lc3NhZ2UudG8gPT09IFwidmlzdWFsLWVkaXRpbmdcIiAmJiAobWVzc2FnZS50byA9IFwib3ZlcmxheXNcIiksIG1lc3NhZ2UuZnJvbSA9PT0gXCJ2aXN1YWwtZWRpdGluZ1wiICYmIChtZXNzYWdlLmZyb20gPSBcIm92ZXJsYXlzXCIpLCBtZXNzYWdlLnR5cGUgPSBjb21saW5rVG9DaGFubmVsc01hcFttZXNzYWdlLnR5cGVdID8/IG1lc3NhZ2UudHlwZSwgbWVzc2FnZS50eXBlID09PSBcImNoYW5uZWwvcmVzcG9uc2VcIiAmJiBtZXNzYWdlLnJlc3BvbnNlVG8gJiYgIW1lc3NhZ2UuZGF0YSAmJiAobWVzc2FnZS5kYXRhID0geyByZXNwb25zZVRvOiBtZXNzYWdlLnJlc3BvbnNlVG8gfSksIChtZXNzYWdlLnR5cGUgPT09IFwiaGFuZHNoYWtlL3N5blwiIHx8IG1lc3NhZ2UudHlwZSA9PT0gXCJoYW5kc2hha2Uvc3luLWFja1wiIHx8IG1lc3NhZ2UudHlwZSA9PT0gXCJoYW5kc2hha2UvYWNrXCIpICYmIChtZXNzYWdlLmRhdGEgPSB7IGlkOiBtZXNzYWdlLmNvbm5lY3Rpb25JZCB9KSwgbWVzc2FnZTtcbn0sIHNlbmRBc0NoYW5uZWxzTWVzc2FnZSA9ICh7IGNvbnRleHQgfSwgcGFyYW1zKSA9PiB7XG4gIGNvbnN0IHsgc291cmNlcywgdGFyZ2V0T3JpZ2luIH0gPSBjb250ZXh0LCBtZXNzYWdlID0gY29udmVydFRvQ2hhbm5lbHNNZXNzYWdlKHBhcmFtcy5tZXNzYWdlKTtcbiAgc291cmNlcy5mb3JFYWNoKChzb3VyY2UpID0+IHtcbiAgICBzb3VyY2UucG9zdE1lc3NhZ2UobWVzc2FnZSwgeyB0YXJnZXRPcmlnaW4gfSk7XG4gIH0pO1xufSwgY3JlYXRlQ29tcGF0aWJpbGl0eUFjdG9ycyA9ICgpID0+ICh7XG4gIGxpc3RlbjogY3JlYXRlTGlzdGVuTG9naWMoY29udmVydFRvQ29tbGlua0V2ZW50KSxcbiAgcmVxdWVzdE1hY2hpbmU6IGNyZWF0ZVJlcXVlc3RNYWNoaW5lKCkucHJvdmlkZSh7XG4gICAgYWN0aW9uczoge1xuICAgICAgXCJzZW5kIG1lc3NhZ2VcIjogc2VuZEFzQ2hhbm5lbHNNZXNzYWdlXG4gICAgfVxuICB9KVxufSk7XG5mdW5jdGlvbiBpc01heWJlUHJldmlld0lmcmFtZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5zZWxmICE9PSB3aW5kb3cudG9wO1xufVxuZnVuY3Rpb24gaXNNYXliZVByZXZpZXdXaW5kb3coKSB7XG4gIHJldHVybiAhIXdpbmRvdy5vcGVuZXI7XG59XG5mdW5jdGlvbiBpc01heWJlUHJlc2VudGF0aW9uKCkge1xuICByZXR1cm4gaXNNYXliZVByZXZpZXdJZnJhbWUoKSB8fCBpc01heWJlUHJldmlld1dpbmRvdygpO1xufVxuZXhwb3J0IHtcbiAgTVNHX1JFU1BPTlNFMiBhcyBNU0dfUkVTUE9OU0UsXG4gIGNyZWF0ZUNvbXBhdGliaWxpdHlBY3RvcnMsXG4gIGlzTWF5YmVQcmVzZW50YXRpb24sXG4gIGlzTWF5YmVQcmV2aWV3SWZyYW1lLFxuICBpc01heWJlUHJldmlld1dpbmRvd1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/_visual-editing.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@sanity/ui/dist/_chunks-es/_visual-editing.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Arrow: () => (/* binding */ Arrow),\n/* harmony export */   Avatar: () => (/* binding */ Avatar),\n/* harmony export */   AvatarCounter: () => (/* binding */ AvatarCounter),\n/* harmony export */   AvatarStack: () => (/* binding */ AvatarStack),\n/* harmony export */   Badge: () => (/* binding */ Badge),\n/* harmony export */   BoundaryElementProvider: () => (/* binding */ BoundaryElementProvider),\n/* harmony export */   Box: () => (/* binding */ Box),\n/* harmony export */   Button: () => (/* binding */ Button),\n/* harmony export */   Card: () => (/* binding */ Card),\n/* harmony export */   Checkbox: () => (/* binding */ Checkbox),\n/* harmony export */   Code: () => (/* binding */ Code),\n/* harmony export */   ConditionalWrapper: () => (/* binding */ ConditionalWrapper),\n/* harmony export */   Container: () => (/* binding */ Container),\n/* harmony export */   EMPTY_ARRAY: () => (/* binding */ EMPTY_ARRAY),\n/* harmony export */   EMPTY_RECORD: () => (/* binding */ EMPTY_RECORD),\n/* harmony export */   ElementQuery: () => (/* binding */ ElementQuery),\n/* harmony export */   Flex: () => (/* binding */ Flex),\n/* harmony export */   Grid: () => (/* binding */ Grid),\n/* harmony export */   Heading: () => (/* binding */ Heading),\n/* harmony export */   Hotkeys: () => (/* binding */ Hotkeys),\n/* harmony export */   Inline: () => (/* binding */ Inline),\n/* harmony export */   KBD: () => (/* binding */ KBD),\n/* harmony export */   Label: () => (/* binding */ Label),\n/* harmony export */   Layer: () => (/* binding */ Layer),\n/* harmony export */   LayerProvider: () => (/* binding */ LayerProvider),\n/* harmony export */   Menu: () => (/* binding */ Menu),\n/* harmony export */   MenuDivider: () => (/* binding */ MenuDivider),\n/* harmony export */   MenuGroup: () => (/* binding */ MenuGroup),\n/* harmony export */   MenuItem: () => (/* binding */ MenuItem),\n/* harmony export */   Popover: () => (/* binding */ Popover),\n/* harmony export */   Portal: () => (/* binding */ Portal),\n/* harmony export */   PortalProvider: () => (/* binding */ PortalProvider),\n/* harmony export */   Radio: () => (/* binding */ Radio),\n/* harmony export */   Select: () => (/* binding */ Select),\n/* harmony export */   Spinner: () => (/* binding */ Spinner),\n/* harmony export */   SrOnly: () => (/* binding */ SrOnly),\n/* harmony export */   Stack: () => (/* binding */ Stack),\n/* harmony export */   Switch: () => (/* binding */ Switch),\n/* harmony export */   Tab: () => (/* binding */ Tab),\n/* harmony export */   TabList: () => (/* binding */ TabList),\n/* harmony export */   Text: () => (/* binding */ Text),\n/* harmony export */   TextArea: () => (/* binding */ TextArea),\n/* harmony export */   TextInput: () => (/* binding */ TextInput),\n/* harmony export */   ThemeColorProvider: () => (/* binding */ ThemeColorProvider),\n/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider),\n/* harmony export */   Tooltip: () => (/* binding */ Tooltip),\n/* harmony export */   TooltipDelayGroupContext: () => (/* binding */ TooltipDelayGroupContext),\n/* harmony export */   TooltipDelayGroupProvider: () => (/* binding */ TooltipDelayGroupProvider),\n/* harmony export */   VirtualList: () => (/* binding */ VirtualList),\n/* harmony export */   _ResizeObserver: () => (/* binding */ _ResizeObserver),\n/* harmony export */   _cardColorStyle: () => (/* binding */ _cardColorStyle),\n/* harmony export */   _elementSizeObserver: () => (/* binding */ _elementSizeObserver),\n/* harmony export */   _fillCSSObject: () => (/* binding */ _fillCSSObject),\n/* harmony export */   _getArrayProp: () => (/* binding */ _getArrayProp),\n/* harmony export */   _getResponsiveSpace: () => (/* binding */ _getResponsiveSpace),\n/* harmony export */   _isEnterToClickElement: () => (/* binding */ _isEnterToClickElement),\n/* harmony export */   _isScrollable: () => (/* binding */ _isScrollable),\n/* harmony export */   _responsive: () => (/* binding */ _responsive),\n/* harmony export */   containsOrEqualsElement: () => (/* binding */ containsOrEqualsElement),\n/* harmony export */   createColorTheme: () => (/* binding */ createColorTheme),\n/* harmony export */   createGlobalScopedContext: () => (/* binding */ createGlobalScopedContext),\n/* harmony export */   hexToRgb: () => (/* binding */ hexToRgb),\n/* harmony export */   hslToRgb: () => (/* binding */ hslToRgb),\n/* harmony export */   isHTMLAnchorElement: () => (/* binding */ isHTMLAnchorElement),\n/* harmony export */   isHTMLButtonElement: () => (/* binding */ isHTMLButtonElement),\n/* harmony export */   isHTMLElement: () => (/* binding */ isHTMLElement),\n/* harmony export */   isHTMLInputElement: () => (/* binding */ isHTMLInputElement),\n/* harmony export */   isHTMLSelectElement: () => (/* binding */ isHTMLSelectElement),\n/* harmony export */   isHTMLTextAreaElement: () => (/* binding */ isHTMLTextAreaElement),\n/* harmony export */   isRecord: () => (/* binding */ isRecord),\n/* harmony export */   multiply: () => (/* binding */ multiply),\n/* harmony export */   parseColor: () => (/* binding */ parseColor),\n/* harmony export */   rem: () => (/* binding */ rem),\n/* harmony export */   responsiveCodeFontStyle: () => (/* binding */ responsiveCodeFontStyle),\n/* harmony export */   responsiveHeadingFont: () => (/* binding */ responsiveHeadingFont),\n/* harmony export */   responsiveLabelFont: () => (/* binding */ responsiveLabelFont),\n/* harmony export */   responsivePaddingStyle: () => (/* binding */ responsivePaddingStyle),\n/* harmony export */   responsiveRadiusStyle: () => (/* binding */ responsiveRadiusStyle),\n/* harmony export */   responsiveTextAlignStyle: () => (/* binding */ responsiveTextAlignStyle),\n/* harmony export */   responsiveTextFont: () => (/* binding */ responsiveTextFont),\n/* harmony export */   rgbToHex: () => (/* binding */ rgbToHex),\n/* harmony export */   rgbToHsl: () => (/* binding */ rgbToHsl),\n/* harmony export */   rgba: () => (/* binding */ rgba),\n/* harmony export */   screen: () => (/* binding */ screen),\n/* harmony export */   studioTheme: () => (/* binding */ studioTheme),\n/* harmony export */   useArrayProp: () => (/* binding */ useArrayProp),\n/* harmony export */   useBoundaryElement: () => (/* binding */ useBoundaryElement),\n/* harmony export */   useClickOutsideEvent: () => (/* binding */ useClickOutsideEvent),\n/* harmony export */   useCustomValidity: () => (/* binding */ useCustomValidity),\n/* harmony export */   useElementSize: () => (/* binding */ useElementSize),\n/* harmony export */   useGlobalKeyDown: () => (/* binding */ useGlobalKeyDown),\n/* harmony export */   useLayer: () => (/* binding */ useLayer),\n/* harmony export */   useMatchMedia: () => (/* binding */ useMatchMedia),\n/* harmony export */   useMediaIndex: () => (/* binding */ useMediaIndex),\n/* harmony export */   usePortal: () => (/* binding */ usePortal),\n/* harmony export */   usePrefersDark: () => (/* binding */ usePrefersDark),\n/* harmony export */   usePrefersReducedMotion: () => (/* binding */ usePrefersReducedMotion),\n/* harmony export */   useRootTheme: () => (/* binding */ useRootTheme),\n/* harmony export */   useTheme: () => (/* binding */ useTheme),\n/* harmony export */   useTheme_v2: () => (/* binding */ useTheme_v2),\n/* harmony export */   useTooltipDelayGroup: () => (/* binding */ useTooltipDelayGroup)\n/* harmony export */ });\n/* harmony import */ var _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sanity/ui/theme */ \"(ssr)/./node_modules/@sanity/ui/dist/theme.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-compiler-runtime */ \"(ssr)/./node_modules/react-compiler-runtime/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! styled-components */ \"(ssr)/./node_modules/styled-components/dist/styled-components.esm.js\");\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-is */ \"(ssr)/./node_modules/react-is/index.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sanity/icons */ \"(ssr)/./node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @floating-ui/react-dom */ \"(ssr)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\");\n/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @floating-ui/react-dom */ \"(ssr)/./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! framer-motion */ \"(ssr)/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! framer-motion */ \"(ssr)/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs\");\n/* harmony import */ var _juggle_resize_observer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @juggle/resize-observer */ \"(ssr)/./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var use_effect_event__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! use-effect-event */ \"(ssr)/./node_modules/use-effect-event/dist/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst createColorTheme = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.createColorTheme, hexToRgb = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.hexToRgb, hslToRgb = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.hslToRgb, multiply = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.multiply, parseColor = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.parseColor, rgbToHex = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.rgbToHex, rgbToHsl = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.rgbToHsl, rgba = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.rgba, screen = _sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.screen, studioTheme = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.buildTheme)(), EMPTY_ARRAY = [], EMPTY_RECORD = {}, POPOVER_MOTION_PROPS = {\n  card: {\n    initial: {\n      scale: 0.97,\n      willChange: \"transform\"\n    },\n    hidden: {\n      opacity: 0\n    },\n    visible: {\n      opacity: 1,\n      transition: {\n        when: \"beforeChildren\",\n        duration: 0.1\n      }\n    },\n    scaleIn: {\n      scale: 1\n    },\n    scaleOut: {\n      scale: 0.97\n    }\n  },\n  children: {\n    hidden: {\n      opacity: 0\n    },\n    visible: {\n      opacity: 1\n    }\n  },\n  transition: {\n    type: \"spring\",\n    visualDuration: 0.2,\n    bounce: 0.25\n  }\n};\nfunction _isEnterToClickElement(element) {\n  return isHTMLAnchorElement(element) || isHTMLButtonElement(element);\n}\nfunction isHTMLElement(node) {\n  return node instanceof Node && node.nodeType === Node.ELEMENT_NODE;\n}\nfunction isHTMLAnchorElement(element) {\n  return isHTMLElement(element) && element.nodeName === \"A\";\n}\nfunction isHTMLInputElement(element) {\n  return isHTMLElement(element) && element.nodeName === \"INPUT\";\n}\nfunction isHTMLButtonElement(element) {\n  return isHTMLElement(element) && element.nodeName === \"BUTTON\";\n}\nfunction isHTMLSelectElement(element) {\n  return isHTMLElement(element) && element.nodeName === \"SELECT\";\n}\nfunction isHTMLTextAreaElement(element) {\n  return isHTMLElement(element) && element.nodeName === \"TEXTAREA\";\n}\nfunction containsOrEqualsElement(element, node) {\n  return element.contains(node) || element === node;\n}\nfunction _isScrollable(el) {\n  if (!(el instanceof Element)) return !1;\n  const style = window.getComputedStyle(el);\n  return style.overflowX.includes(\"auto\") || style.overflowX.includes(\"scroll\") || style.overflowY.includes(\"auto\") || style.overflowY.includes(\"scroll\");\n}\nfunction _fillCSSObject(keys, value) {\n  return keys.reduce((style, key2) => (style[key2] = value, style), {});\n}\nfunction rem(pixelValue) {\n  return pixelValue === 0 ? 0 : `${pixelValue / 16}rem`;\n}\nfunction _responsive(media, values, callback) {\n  return (values?.map(callback) || []).map((statement, mediaIndex) => mediaIndex === 0 ? statement : {\n    [`@media screen and (min-width: ${media[mediaIndex - 1]}px)`]: statement\n  });\n}\nfunction _getArrayProp(val, defaultVal) {\n  return val === void 0 ? defaultVal || EMPTY_ARRAY : Array.isArray(val) ? val : [val];\n}\nfunction _getResponsiveSpace(theme, props, spaceIndexes = EMPTY_ARRAY) {\n  if (!Array.isArray(spaceIndexes))\n    throw new Error(\"the property must be array of numbers\");\n  if (spaceIndexes.length === 0)\n    return null;\n  const {\n    media,\n    space\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(theme);\n  return _responsive(media, spaceIndexes, (spaceIndex) => _fillCSSObject(props, rem(space[spaceIndex])));\n}\nfunction responsiveFont(fontKey, props) {\n  const {\n    $size,\n    $weight\n  } = props, {\n    font,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), {\n    family,\n    sizes,\n    weights\n  } = font[fontKey], fontWeight = $weight && weights[$weight] || weights.regular, defaultSize = sizes[2], base = {\n    position: \"relative\",\n    fontFamily: family,\n    fontWeight,\n    padding: \"1px 0\",\n    margin: 0,\n    \"&:before\": {\n      content: '\"\"',\n      display: \"block\",\n      height: 0\n    },\n    \"&:after\": {\n      content: '\"\"',\n      display: \"block\",\n      height: 0\n    },\n    \"& > code, & > span\": {\n      display: \"block\"\n    },\n    \"&:not([hidden])\": {\n      display: \"block\"\n    }\n  };\n  if (!$size)\n    return responsiveFont.warned || (console.warn(\"No size specified for responsive font\", {\n      fontKey,\n      $size,\n      props,\n      base\n    }), responsiveFont.warned = !0), [base];\n  const resp = _responsive(media, $size, (sizeIndex) => fontSize(sizes[sizeIndex] || defaultSize));\n  return [base, ...resp];\n}\nfunction fontSize(size2) {\n  const {\n    ascenderHeight,\n    descenderHeight,\n    fontSize: fontSize2,\n    iconSize,\n    letterSpacing,\n    lineHeight\n  } = size2, negHeight = ascenderHeight + descenderHeight, capHeight = lineHeight - negHeight, iconOffset = (capHeight - iconSize) / 2, customIconSize = Math.floor(fontSize2 * 1.125 / 2) * 2 + 1, customIconOffset = (capHeight - customIconSize) / 2;\n  return {\n    fontSize: rem(fontSize2),\n    lineHeight: `calc(${lineHeight} / ${fontSize2})`,\n    letterSpacing: rem(letterSpacing),\n    transform: `translateY(${rem(descenderHeight)})`,\n    \"&:before\": {\n      marginTop: `calc(${rem(0 - negHeight)} - 1px)`\n    },\n    \"&:after\": {\n      marginBottom: \"-1px\"\n    },\n    \"& svg:not([data-sanity-icon])\": {\n      fontSize: `calc(${customIconSize} / 16 * 1rem)`,\n      margin: rem(customIconOffset)\n    },\n    \"& [data-sanity-icon]\": {\n      fontSize: `calc(${iconSize} / 16 * 1rem)`,\n      margin: rem(iconOffset)\n    }\n  };\n}\nfunction responsiveCodeFontStyle(props) {\n  return responsiveFont(\"code\", props);\n}\nfunction responsiveHeadingFont(props) {\n  return responsiveFont(\"heading\", props);\n}\nfunction responsiveLabelFont(props) {\n  return responsiveFont(\"label\", props);\n}\nfunction responsiveTextAlignStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$align, (textAlign) => ({\n    textAlign\n  }));\n}\nfunction responsiveTextFont(props) {\n  return responsiveFont(\"text\", props);\n}\nfunction useArrayProp(val, defaultVal) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(3);\n  let t0;\n  $[0] !== defaultVal || $[1] !== val ? (t0 = () => [_getArrayProp(val, defaultVal), JSON.stringify(val ?? defaultVal)], $[0] = defaultVal, $[1] = val, $[2] = t0) : t0 = $[2];\n  const [t1, setCache] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(t0), [cachedVal, cachedHash] = t1, hash = JSON.stringify(val ?? defaultVal);\n  return hash !== cachedHash && setCache([_getArrayProp(val, defaultVal), hash]), cachedVal;\n}\nfunction useClickOutsideEvent(listener, t0, boundaryElement) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(9), elementsArg = t0 === void 0 ? _temp$9 : t0;\n  let t1;\n  $[0] !== boundaryElement || $[1] !== elementsArg || $[2] !== listener ? (t1 = (evt) => {\n    if (!listener)\n      return;\n    const target = evt.target;\n    if (!(target instanceof Node))\n      return;\n    const resolvedBoundaryElement = boundaryElement?.();\n    if (resolvedBoundaryElement && !resolvedBoundaryElement.contains(target))\n      return;\n    const elements = elementsArg().flat();\n    for (const el of elements)\n      if (el && (target === el || el.contains(target)))\n        return;\n    listener(evt);\n  }, $[0] = boundaryElement, $[1] = elementsArg, $[2] = listener, $[3] = t1) : t1 = $[3];\n  const onEvent = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_7__.useEffectEvent)(t1), hasListener = !!listener;\n  let t2;\n  $[4] !== hasListener || $[5] !== onEvent ? (t2 = () => {\n    if (!hasListener)\n      return;\n    const handleEvent = (evt_0) => onEvent(evt_0);\n    return document.addEventListener(\"mousedown\", handleEvent), () => {\n      document.removeEventListener(\"mousedown\", handleEvent);\n    };\n  }, $[4] = hasListener, $[5] = onEvent, $[6] = t2) : t2 = $[6];\n  let t3;\n  $[7] !== hasListener ? (t3 = [hasListener], $[7] = hasListener, $[8] = t3) : t3 = $[8], (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t2, t3), (0,react__WEBPACK_IMPORTED_MODULE_2__.useDebugValue)(listener ? \"MouseDown On\" : \"MouseDown Off\");\n}\nfunction _temp$9() {\n  return EMPTY_ARRAY;\n}\nfunction useCustomValidity(ref, customValidity) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(6);\n  let t0;\n  $[0] !== customValidity || $[1] !== ref.current ? (t0 = () => {\n    ref.current?.setCustomValidity(customValidity || \"\");\n  }, $[0] = customValidity, $[1] = ref.current, $[2] = t0) : t0 = $[2];\n  let t1;\n  $[3] !== customValidity || $[4] !== ref ? (t1 = [customValidity, ref], $[3] = customValidity, $[4] = ref, $[5] = t1) : t1 = $[5], (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t0, t1);\n}\nconst _ResizeObserver = typeof document < \"u\" && typeof window < \"u\" && window.ResizeObserver ? window.ResizeObserver : _juggle_resize_observer__WEBPACK_IMPORTED_MODULE_4__.ResizeObserver, _elementSizeObserver = _createElementSizeObserver();\nfunction _createElementRectValueListener() {\n  return {\n    subscribe(element, subscriber) {\n      const resizeObserver = new _ResizeObserver(([entry]) => {\n        subscriber({\n          _contentRect: entry.contentRect,\n          border: {\n            width: entry.borderBoxSize[0].inlineSize,\n            height: entry.borderBoxSize[0].blockSize\n          },\n          content: {\n            width: entry.contentRect.width,\n            height: entry.contentRect.height\n          }\n        });\n      });\n      return resizeObserver.observe(element), () => {\n        resizeObserver.unobserve(element), resizeObserver.disconnect();\n      };\n    }\n  };\n}\nfunction _createElementSizeObserver() {\n  const disposeCache = /* @__PURE__ */ new WeakMap(), subscribersCache = /* @__PURE__ */ new WeakMap();\n  return {\n    subscribe(element, subscriber) {\n      const subscribers = subscribersCache.get(element) || [];\n      let dispose = disposeCache.get(element);\n      return subscribersCache.has(element) || (subscribersCache.set(element, subscribers), dispose = _createElementRectValueListener().subscribe(element, (elementRect) => {\n        for (const sub of subscribers)\n          sub(elementRect);\n      })), subscribers.push(subscriber), () => {\n        const idx = subscribers.indexOf(subscriber);\n        idx > -1 && subscribers.splice(idx, 1), subscribers.length === 0 && dispose && dispose();\n      };\n    }\n  };\n}\nfunction useElementSize(element) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(3), [size2, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n  let t0, t1;\n  return $[0] !== element ? (t0 = () => {\n    if (element)\n      return _elementSizeObserver.subscribe(element, setSize);\n  }, t1 = [element], $[0] = element, $[1] = t0, $[2] = t1) : (t0 = $[1], t1 = $[2]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t0, t1), size2;\n}\nfunction useGlobalKeyDown(onKeyDown) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(5);\n  let t0;\n  $[0] !== onKeyDown ? (t0 = (event) => onKeyDown(event), $[0] = onKeyDown, $[1] = t0) : t0 = $[1];\n  const handleKeyDown = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_7__.useEffectEvent)(t0);\n  let t1;\n  $[2] !== handleKeyDown ? (t1 = () => {\n    const handler = (event_0) => handleKeyDown(event_0);\n    return window.addEventListener(\"keydown\", handler), () => window.removeEventListener(\"keydown\", handler);\n  }, $[2] = handleKeyDown, $[3] = t1) : t1 = $[3];\n  let t2;\n  $[4] === Symbol.for(\"react.memo_cache_sentinel\") ? (t2 = [], $[4] = t2) : t2 = $[4], (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t1, t2);\n}\nfunction useMatchMedia(mediaQueryString, getServerSnapshot2) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(4);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useDebugValue)(mediaQueryString);\n  let t0;\n  $[0] !== mediaQueryString ? (t0 = (onStoreChange) => {\n    const media = window.matchMedia(mediaQueryString);\n    return media.addEventListener(\"change\", onStoreChange), () => media.removeEventListener(\"change\", onStoreChange);\n  }, $[0] = mediaQueryString, $[1] = t0) : t0 = $[1];\n  let t1;\n  return $[2] !== mediaQueryString ? (t1 = () => window.matchMedia(mediaQueryString).matches, $[2] = mediaQueryString, $[3] = t1) : t1 = $[3], (0,react__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStore)(t0, t1, getServerSnapshot2);\n}\nfunction getGlobalScope() {\n  if (typeof globalThis < \"u\") return globalThis;\n  if (typeof window < \"u\") return window;\n  if (typeof self < \"u\") return self;\n  if (typeof global < \"u\") return global;\n  throw new Error(\"@sanity/ui: could not locate global scope\");\n}\nconst globalScope = getGlobalScope();\nfunction createGlobalScopedContext(key2, defaultValue) {\n  const symbol = Symbol.for(key2);\n  return typeof document > \"u\" ? (0,react__WEBPACK_IMPORTED_MODULE_2__.createContext)(defaultValue) : (globalScope[symbol] = globalScope[symbol] || (0,react__WEBPACK_IMPORTED_MODULE_2__.createContext)(defaultValue), globalScope[symbol]);\n}\nconst ThemeContext = createGlobalScopedContext(\"@sanity/ui/context/theme\", null);\nfunction ThemeProvider(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(15), parentTheme = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(ThemeContext), {\n    children\n  } = props, scheme = props.scheme ?? (parentTheme?.scheme || \"light\"), rootTheme = props.theme ?? (parentTheme?.theme || null), tone = props.tone ?? (parentTheme?.tone || \"default\");\n  let t0;\n  bb0: {\n    if (!rootTheme) {\n      t0 = null;\n      break bb0;\n    }\n    let t12;\n    $[0] !== rootTheme || $[1] !== scheme || $[2] !== tone ? (t12 = {\n      version: 0,\n      theme: rootTheme,\n      scheme,\n      tone\n    }, $[0] = rootTheme, $[1] = scheme, $[2] = tone, $[3] = t12) : t12 = $[3], t0 = t12;\n  }\n  const themeContext = t0;\n  let t1;\n  bb1: {\n    if (!rootTheme) {\n      t1 = null;\n      break bb1;\n    }\n    let t22;\n    $[4] !== rootTheme || $[5] !== scheme || $[6] !== tone ? (t22 = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getScopedTheme)(rootTheme, scheme, tone), $[4] = rootTheme, $[5] = scheme, $[6] = tone, $[7] = t22) : t22 = $[7], t1 = t22;\n  }\n  const theme = t1;\n  if (!theme) {\n    let t22;\n    return $[8] === Symbol.for(\"react.memo_cache_sentinel\") ? (t22 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pre\", { children: 'ThemeProvider: no \"theme\" property provided' }), $[8] = t22) : t22 = $[8], t22;\n  }\n  let t2;\n  $[9] !== children || $[10] !== theme ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(styled_components__WEBPACK_IMPORTED_MODULE_8__.ThemeProvider, { theme, children }), $[9] = children, $[10] = theme, $[11] = t2) : t2 = $[11];\n  let t3;\n  return $[12] !== t2 || $[13] !== themeContext ? (t3 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeContext.Provider, { value: themeContext, children: t2 }), $[12] = t2, $[13] = themeContext, $[14] = t3) : t3 = $[14], t3;\n}\nThemeProvider.displayName = \"ThemeProvider\";\nfunction useRootTheme() {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(ThemeContext);\n  if (!value)\n    throw new Error(\"useRootTheme(): missing context value\");\n  return value;\n}\nfunction ThemeColorProvider(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(5), {\n    children,\n    scheme,\n    tone\n  } = props, root = useRootTheme(), t0 = scheme || root.scheme;\n  let t1;\n  return $[0] !== children || $[1] !== root.theme || $[2] !== t0 || $[3] !== tone ? (t1 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeProvider, { scheme: t0, theme: root.theme, tone, children }), $[0] = children, $[1] = root.theme, $[2] = t0, $[3] = tone, $[4] = t1) : t1 = $[4], t1;\n}\nThemeColorProvider.displayName = \"ThemeColorProvider\";\nfunction useTheme() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.useTheme)();\n}\nfunction useTheme_v2() {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(2), t0 = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.useTheme)();\n  let t1;\n  return $[0] !== t0 ? (t1 = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(t0), $[0] = t0, $[1] = t1) : t1 = $[1], t1;\n}\nfunction _getMediaQuery(media, index) {\n  return index === 0 ? `screen and (max-width: ${media[index] - 1}px)` : index === media.length ? `screen and (min-width: ${media[index - 1]}px)` : `screen and (min-width: ${media[index - 1]}px) and (max-width: ${media[index] - 1}px)`;\n}\nfunction _createMediaStore(media) {\n  const mediaLen = media.length;\n  let sizes;\n  const getSizes = () => {\n    if (!sizes) {\n      sizes = [];\n      for (let index = mediaLen; index > -1; index -= 1) {\n        const mediaQuery = _getMediaQuery(media, index);\n        sizes.push({\n          index,\n          mq: window.matchMedia(mediaQuery)\n        });\n      }\n    }\n    return sizes;\n  };\n  return {\n    getSnapshot: () => {\n      for (const {\n        index,\n        mq\n      } of getSizes())\n        if (mq.matches) return index;\n      return 0;\n    },\n    subscribe: (onStoreChange) => {\n      const disposeFns = [];\n      for (const {\n        mq\n      } of getSizes()) {\n        const handleChange = () => {\n          mq.matches && onStoreChange();\n        };\n        mq.addEventListener(\"change\", handleChange), disposeFns.push(() => mq.removeEventListener(\"change\", handleChange));\n      }\n      return () => {\n        for (const disposeFn of disposeFns)\n          disposeFn();\n      };\n    }\n  };\n}\nfunction getServerSnapshot() {\n  return 0;\n}\nfunction useMediaIndex() {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(2), {\n    media\n  } = useTheme_v2();\n  let t0, t1;\n  $[0] !== media ? (t1 = _createMediaStore(media), $[0] = media, $[1] = t1) : t1 = $[1], t0 = t1;\n  const store = t0;\n  return (0,react__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStore)(store.subscribe, store.getSnapshot, getServerSnapshot);\n}\nfunction usePrefersDark(t0) {\n  return useMatchMedia(\"(prefers-color-scheme: dark)\", t0 === void 0 ? _temp$8 : t0);\n}\nfunction _temp$8() {\n  return !1;\n}\nfunction usePrefersReducedMotion(t0) {\n  return useMatchMedia(\"(prefers-reduced-motion: reduce)\", t0 === void 0 ? _temp$7 : t0);\n}\nfunction _temp$7() {\n  return !1;\n}\nfunction responsiveBorderStyle() {\n  return [border, borderTop, borderRight, borderBottom, borderLeft];\n}\nfunction border(props) {\n  const {\n    card,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), borderStyle = `${card.border?.width ?? 1}px solid var(--card-border-color)`;\n  return _responsive(media, props.$border, (value) => value ? {\n    \"&&\": {\n      border: borderStyle\n    }\n  } : {\n    \"&&\": {\n      border: 0\n    }\n  });\n}\nfunction borderTop(props) {\n  const {\n    card,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), borderStyle = `${card.border?.width ?? 1}px solid var(--card-border-color)`;\n  return _responsive(media, props.$borderTop, (value) => value ? {\n    \"&&\": {\n      borderTop: borderStyle\n    }\n  } : {\n    \"&&\": {\n      borderTop: 0\n    }\n  });\n}\nfunction borderRight(props) {\n  const {\n    card,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), borderStyle = `${card.border?.width ?? 1}px solid var(--card-border-color)`;\n  return _responsive(media, props.$borderRight, (value) => value ? {\n    \"&&\": {\n      borderRight: borderStyle\n    }\n  } : {\n    \"&&\": {\n      borderRight: 0\n    }\n  });\n}\nfunction borderBottom(props) {\n  const {\n    card,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), borderStyle = `${card.border?.width ?? 1}px solid var(--card-border-color)`;\n  return _responsive(media, props.$borderBottom, (value) => value ? {\n    \"&&\": {\n      borderBottom: borderStyle\n    }\n  } : {\n    \"&&\": {\n      borderBottom: 0\n    }\n  });\n}\nfunction borderLeft(props) {\n  const {\n    card,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), borderStyle = `${card.border?.width ?? 1}px solid var(--card-border-color)`;\n  return _responsive(media, props.$borderLeft, (value) => value ? {\n    \"&&\": {\n      borderLeft: borderStyle\n    }\n  } : {\n    \"&&\": {\n      borderLeft: 0\n    }\n  });\n}\nconst BASE_STYLE$4 = {\n  '&[data-as=\"ul\"],&[data-as=\"ol\"]': {\n    listStyle: \"none\"\n  }\n}, BOX_SIZING = {\n  content: \"content-box\",\n  border: \"border-box\"\n}, BOX_HEIGHT = {\n  stretch: \"stretch\",\n  fill: \"100%\"\n};\nfunction boxStyle() {\n  return BASE_STYLE$4;\n}\nfunction responsiveBoxStyle() {\n  return [responsiveBoxSizingStyle, responsiveBoxHeightStyle, responsiveBoxOverflowStyle, responsiveBoxDisplayStyle];\n}\nfunction responsiveBoxDisplayStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$display, (display) => ({\n    \"&:not([hidden])\": {\n      display\n    }\n  }));\n}\nfunction responsiveBoxSizingStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$sizing, (sizing) => ({\n    boxSizing: BOX_SIZING[sizing]\n  }));\n}\nfunction responsiveBoxHeightStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$height, (height) => ({\n    height: BOX_HEIGHT[height]\n  }));\n}\nfunction responsiveBoxOverflowStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$overflow, (overflow) => ({\n    overflow\n  }));\n}\nconst BASE_STYLE$3 = {\n  minWidth: 0,\n  minHeight: 0\n};\nfunction flexItemStyle() {\n  return [BASE_STYLE$3, responsiveFlexItemStyle];\n}\nfunction responsiveFlexItemStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return props.$flex ? _responsive(media, props.$flex, (flex) => ({\n    flex\n  })) : EMPTY_ARRAY;\n}\nconst BASE_STYLE$2 = {\n  \"&&:not([hidden])\": {\n    display: \"flex\"\n  }\n};\nfunction responsiveFlexStyle() {\n  return [BASE_STYLE$2, responsiveFlexAlignStyle, responsiveFlexGapStyle, responsiveFlexWrapStyle, responsiveFlexJustifyStyle, responsiveFlexDirectionStyle];\n}\nfunction responsiveFlexAlignStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$align, (align) => ({\n    alignItems: align\n  }));\n}\nfunction responsiveFlexGapStyle(props) {\n  const {\n    media,\n    space\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$gap, (gap) => ({\n    gap: gap ? rem(space[gap]) : void 0\n  }));\n}\nfunction responsiveFlexWrapStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$wrap, (wrap) => ({\n    flexWrap: wrap\n  }));\n}\nfunction responsiveFlexJustifyStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$justify, (justify) => ({\n    justifyContent: justify\n  }));\n}\nfunction responsiveFlexDirectionStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$direction, (direction) => ({\n    flexDirection: direction\n  }));\n}\nfunction focusRingBorderStyle(border2) {\n  return `inset 0 0 0 ${border2.width}px ${border2.color}`;\n}\nfunction focusRingStyle(opts) {\n  const {\n    base,\n    border: border2,\n    focusRing\n  } = opts, focusRingOutsetWidth = focusRing.offset + focusRing.width, focusRingInsetWidth = 0 - focusRing.offset, bgColor = base ? base.bg : \"var(--card-bg-color)\";\n  return [focusRingInsetWidth > 0 && `inset 0 0 0 ${focusRingInsetWidth}px var(--card-focus-ring-color)`, border2 && focusRingBorderStyle(border2), focusRingInsetWidth < 0 && `0 0 0 ${0 - focusRingInsetWidth}px ${bgColor}`, focusRingOutsetWidth > 0 && `0 0 0 ${focusRingOutsetWidth}px var(--card-focus-ring-color)`].filter(Boolean).join(\",\");\n}\nfunction responsiveGridItemStyle() {\n  return [responsiveGridItemRowStyle, responsiveGridItemRowStartStyle, responsiveGridItemRowEndStyle, responsiveGridItemColumnStyle, responsiveGridItemColumnStartStyle, responsiveGridItemColumnEndStyle];\n}\nconst GRID_ITEM_ROW = {\n  auto: \"auto\",\n  full: \"1 / -1\"\n}, GRID_ITEM_COLUMN = {\n  auto: \"auto\",\n  full: \"1 / -1\"\n};\nfunction responsiveGridItemRowStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$row, (row) => typeof row == \"number\" ? {\n    gridRow: `span ${row} / span ${row}`\n  } : {\n    gridRow: GRID_ITEM_ROW[row]\n  });\n}\nfunction responsiveGridItemRowStartStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$rowStart, (rowStart) => ({\n    gridRowStart: rowStart\n  }));\n}\nfunction responsiveGridItemRowEndStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$rowEnd, (rowEnd) => ({\n    gridRowEnd: rowEnd\n  }));\n}\nfunction responsiveGridItemColumnStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$column, (column) => typeof column == \"number\" ? {\n    gridColumn: `span ${column} / span ${column}`\n  } : {\n    gridColumn: GRID_ITEM_COLUMN[column]\n  });\n}\nfunction responsiveGridItemColumnStartStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$columnStart, (columnStart) => ({\n    gridColumnStart: columnStart\n  }));\n}\nfunction responsiveGridItemColumnEndStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$columnEnd, (columnEnd) => ({\n    gridColumnEnd: columnEnd\n  }));\n}\nconst GRID_CSS = {\n  \"&&:not([hidden])\": {\n    display: \"grid\"\n  },\n  '&[data-as=\"ul\"],&[data-as=\"ol\"]': {\n    listStyle: \"none\"\n  }\n}, GRID_AUTO_COLUMS = {\n  auto: \"auto\",\n  min: \"min-content\",\n  max: \"max-content\",\n  fr: \"minmax(0, 1fr)\"\n}, GRID_AUTO_ROWS = {\n  auto: \"auto\",\n  min: \"min-content\",\n  max: \"max-content\",\n  fr: \"minmax(0, 1fr)\"\n};\nfunction responsiveGridStyle() {\n  return [GRID_CSS, responsiveGridAutoFlowStyle, responsiveGridAutoRowsStyle, responsiveGridAutoColsStyle, responsiveGridColumnsStyle, responsiveGridRowsStyle, responsiveGridGapStyle, responsiveGridGapXStyle, responsiveGridGapYStyle];\n}\nfunction responsiveGridAutoFlowStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$autoFlow, (autoFlow) => ({\n    gridAutoFlow: autoFlow\n  }));\n}\nfunction responsiveGridAutoRowsStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$autoRows, (autoRows) => ({\n    gridAutoRows: autoRows && GRID_AUTO_ROWS[autoRows]\n  }));\n}\nfunction responsiveGridAutoColsStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$autoCols, (autoCols) => ({\n    gridAutoColumns: autoCols && GRID_AUTO_COLUMS[autoCols]\n  }));\n}\nfunction responsiveGridColumnsStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$columns, (columns) => ({\n    gridTemplateColumns: columns && `repeat(${columns},minmax(0,1fr));`\n  }));\n}\nfunction responsiveGridRowsStyle(props) {\n  const {\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$rows, (rows) => ({\n    gridTemplateRows: rows && `repeat(${rows},minmax(0,1fr));`\n  }));\n}\nfunction responsiveGridGapStyle(props) {\n  const {\n    media,\n    space\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$gap, (gap) => ({\n    gridGap: gap ? rem(space[gap]) : void 0\n  }));\n}\nfunction responsiveGridGapXStyle(props) {\n  const {\n    media,\n    space\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$gapX, (gapX) => ({\n    columnGap: gapX ? rem(space[gapX]) : void 0\n  }));\n}\nfunction responsiveGridGapYStyle(props) {\n  const {\n    media,\n    space\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$gapY, (gapY) => ({\n    rowGap: gapY ? rem(space[gapY]) : void 0\n  }));\n}\nfunction responsiveInputPaddingStyle(props) {\n  const {\n    $fontSize,\n    $iconLeft,\n    $iconRight,\n    $padding,\n    $space\n  } = props, {\n    font,\n    media,\n    space\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), len = Math.max($padding.length, $space.length, $fontSize.length), _padding = [], _space = [], _fontSize = [];\n  for (let i = 0; i < len; i += 1)\n    _fontSize[i] = $fontSize[i] === void 0 ? _fontSize[i - 1] : $fontSize[i], _padding[i] = $padding[i] === void 0 ? _padding[i - 1] : $padding[i], _space[i] = $space[i] === void 0 ? _space[i - 1] : $space[i];\n  return _responsive(media, _padding, (_, i) => {\n    const size2 = font.text.sizes[_fontSize[i]] || font.text.sizes[2], emSize = size2.lineHeight - size2.ascenderHeight - size2.descenderHeight, p = space[_padding[i]], s = space[_space[i]], styles = {\n      paddingTop: rem(p - size2.ascenderHeight),\n      paddingRight: rem(p),\n      paddingBottom: rem(p - size2.descenderHeight),\n      paddingLeft: rem(p)\n    };\n    return $iconRight && (styles.paddingRight = rem(p + emSize + s)), $iconLeft && (styles.paddingLeft = rem(p + emSize + s)), styles;\n  });\n}\nfunction responsiveInputPaddingIconRightStyle(props) {\n  return responsiveInputPaddingStyle({\n    ...props,\n    $iconRight: !0\n  });\n}\nconst ROOT_STYLE = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  align-items: center;\n`;\nfunction textInputRootStyle() {\n  return ROOT_STYLE;\n}\nfunction textInputBaseStyle(props) {\n  const {\n    $scheme,\n    $tone,\n    $weight\n  } = props, {\n    color,\n    font\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    appearance: none;\n    background: none;\n    border: 0;\n    border-radius: 0;\n    outline: none;\n    width: 100%;\n    box-sizing: border-box;\n    font-family: ${font.text.family};\n    font-weight: ${$weight && font.text.weights[$weight] || font.text.weights.regular};\n    margin: 0;\n    position: relative;\n    z-index: 1;\n    display: block;\n\n    /* NOTE: This is a hack to disable Chrome’s autofill styles */\n    &:-webkit-autofill,\n    &:-webkit-autofill:hover,\n    &:-webkit-autofill:focus,\n    &:-webkit-autofill:active {\n      -webkit-text-fill-color: var(--input-fg-color) !important;\n      transition: background-color 5000s;\n      transition-delay: 86400s /* 24h */;\n    }\n\n    /* &:is(textarea) */\n    &[data-as='textarea'] {\n      resize: none;\n    }\n\n    color: var(--input-fg-color);\n\n    &::placeholder {\n      color: var(--input-placeholder-color);\n    }\n\n    &[data-scheme='${$scheme}'][data-tone='${$tone}'] {\n      --input-fg-color: ${color.input.default.enabled.fg};\n      --input-placeholder-color: ${color.input.default.enabled.placeholder};\n\n      /* enabled */\n      &:not(:invalid):not(:disabled):not(:read-only) {\n        --input-fg-color: ${color.input.default.enabled.fg};\n        --input-placeholder-color: ${color.input.default.enabled.placeholder};\n      }\n\n      /* disabled */\n      &:not(:invalid):disabled {\n        --input-fg-color: ${color.input.default.disabled.fg};\n        --input-placeholder-color: ${color.input.default.disabled.placeholder};\n      }\n\n      /* invalid */\n      &:invalid {\n        --input-fg-color: ${color.input.invalid.enabled.fg};\n        --input-placeholder-color: ${color.input.invalid.enabled.placeholder};\n      }\n\n      /* readOnly */\n      &:read-only {\n        --input-fg-color: ${color.input.default.readOnly.fg};\n        --input-placeholder-color: ${color.input.default.readOnly.placeholder};\n      }\n    }\n  `;\n}\nfunction textInputFontSizeStyle(props) {\n  const {\n    font,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$fontSize, (sizeIndex) => {\n    const size2 = font.text.sizes[sizeIndex] || font.text.sizes[2];\n    return {\n      fontSize: rem(size2.fontSize),\n      lineHeight: size2.lineHeight / size2.fontSize\n    };\n  });\n}\nfunction textInputRepresentationStyle(props) {\n  const {\n    $hasPrefix,\n    $hasSuffix,\n    $scheme,\n    $tone,\n    $unstableDisableFocusRing\n  } = props, {\n    color,\n    input\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    --input-box-shadow: none;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: block;\n    pointer-events: none;\n    z-index: 0;\n\n    background-color: var(--card-bg-color);\n    box-shadow: var(--input-box-shadow);\n\n    border-top-left-radius: ${$hasPrefix ? 0 : void 0};\n    border-bottom-left-radius: ${$hasPrefix ? 0 : void 0};\n    border-top-right-radius: ${$hasSuffix ? 0 : void 0};\n    border-bottom-right-radius: ${$hasSuffix ? 0 : void 0};\n\n    &[data-scheme='${$scheme}'][data-tone='${$tone}'] {\n      --card-bg-color: ${color.input.default.enabled.bg};\n      --card-fg-color: ${color.input.default.enabled.fg};\n\n      /* enabled */\n      *:not(:disabled) + &[data-border] {\n        --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.border,\n    width: input.border.width\n  })};\n      }\n\n      /* invalid */\n      *:not(:disabled):invalid + & {\n        --card-bg-color: ${color.input.invalid.enabled.bg};\n        --card-fg-color: ${color.input.invalid.enabled.fg};\n\n        &[data-border] {\n          --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.invalid.enabled.border,\n    width: input.border.width\n  })};\n        }\n      }\n\n      /* focused */\n      *:not(:disabled):focus + & {\n        &[data-border] {\n          --input-box-shadow: ${$unstableDisableFocusRing ? void 0 : focusRingStyle({\n    border: {\n      color: color.input.default.enabled.border,\n      width: input.border.width\n    },\n    focusRing: input.text.focusRing\n  })};\n        }\n\n        &:not([data-border]) {\n          --input-box-shadow: ${$unstableDisableFocusRing ? void 0 : focusRingStyle({\n    focusRing: input.text.focusRing\n  })};\n        }\n      }\n\n      /* disabled */\n      *:not(:invalid):disabled + & {\n        --card-bg-color: ${color.input.default.disabled.bg} !important;\n        --card-fg-color: ${color.input.default.disabled.fg} !important;\n        --card-icon-color: ${color.input.default.disabled.fg} !important;\n\n        &[data-border] {\n          --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.disabled.border,\n    width: input.border.width\n  })};\n        }\n      }\n\n      *:invalid:disabled + & {\n        --card-bg-color: ${color.input.invalid.disabled.bg} !important;\n        --card-fg-color: ${color.input.invalid.disabled.fg} !important;\n        --card-icon-color: ${color.input.invalid.disabled.fg} !important;\n\n        &[data-border] {\n          --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.invalid.disabled.border,\n    width: input.border.width\n  })};\n        }\n      }\n\n      /* readOnly */\n      *:not(:invalid):read-only + & {\n        --card-bg-color: ${color.input.default.readOnly.bg} !important;\n        --card-fg-color: ${color.input.default.readOnly.fg} !important;\n      }\n\n      *:invalid:read-only + & {\n        --card-bg-color: ${color.input.invalid.readOnly.bg} !important;\n        --card-fg-color: ${color.input.invalid.readOnly.fg} !important;\n      }\n\n      /* hovered */\n      @media (hover: hover) {\n        *:not(:disabled):not(:read-only):not(:invalid):hover + & {\n          --card-bg-color: ${color.input.default.hovered.bg};\n          --card-fg-color: ${color.input.default.hovered.fg};\n        }\n\n        *:invalid:not(:disabled):not(:read-only):hover + & {\n          --card-bg-color: ${color.input.invalid.hovered.bg};\n          --card-fg-color: ${color.input.invalid.hovered.fg};\n        }\n\n        *:not(:disabled):not(:read-only):not(:invalid):not(:focus):hover + &[data-border] {\n          --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.hovered.border,\n    width: input.border.width\n  })};\n        }\n\n        *:invalid:not(:disabled):not(:read-only):not(:focus):hover + &[data-border] {\n          --input-box-shadow: ${focusRingBorderStyle({\n    color: color.input.invalid.hovered.border,\n    width: input.border.width\n  })};\n        }\n      }\n    }\n  `;\n}\nfunction responsiveMarginStyle(props) {\n  const {\n    theme\n  } = props;\n  return [_getResponsiveSpace(theme, [\"margin\"], props.$margin), _getResponsiveSpace(theme, [\"marginLeft\", \"marginRight\"], props.$marginX), _getResponsiveSpace(theme, [\"marginTop\", \"marginBottom\"], props.$marginY), _getResponsiveSpace(theme, [\"marginTop\"], props.$marginTop), _getResponsiveSpace(theme, [\"marginRight\"], props.$marginRight), _getResponsiveSpace(theme, [\"marginBottom\"], props.$marginBottom), _getResponsiveSpace(theme, [\"marginLeft\"], props.$marginLeft)].filter(Boolean);\n}\nfunction responsivePaddingStyle(props) {\n  const {\n    theme\n  } = props;\n  return [_getResponsiveSpace(theme, [\"padding\"], props.$padding), _getResponsiveSpace(theme, [\"paddingLeft\", \"paddingRight\"], props.$paddingX), _getResponsiveSpace(theme, [\"paddingTop\", \"paddingBottom\"], props.$paddingY), _getResponsiveSpace(theme, [\"paddingTop\"], props.$paddingTop), _getResponsiveSpace(theme, [\"paddingRight\"], props.$paddingRight), _getResponsiveSpace(theme, [\"paddingBottom\"], props.$paddingBottom), _getResponsiveSpace(theme, [\"paddingLeft\"], props.$paddingLeft)].filter(Boolean);\n}\nfunction responsiveRadiusStyle(props) {\n  const {\n    media,\n    radius\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$radius, (value) => {\n    let borderRadius = 0;\n    return typeof value == \"number\" && (borderRadius = rem(radius[value])), value === \"full\" && (borderRadius = \"9999px\"), {\n      borderRadius\n    };\n  });\n}\nfunction toBoxShadow(shadow, color) {\n  return `${shadow.map(rem).join(\" \")} ${color}`;\n}\nfunction shadowStyle(shadow, outlineWidth = 1) {\n  if (!shadow) return EMPTY_RECORD;\n  const outline = `0 0 0 ${rem(outlineWidth)} var(--card-shadow-outline-color)`, umbra = toBoxShadow(shadow.umbra, \"var(--card-shadow-umbra-color)\"), penumbra = toBoxShadow(shadow.penumbra, \"var(--card-shadow-penumbra-color)\"), ambient = toBoxShadow(shadow.ambient, \"var(--card-shadow-ambient-color)\");\n  return {\n    boxShadow: `${outline}, ${umbra}, ${penumbra}, ${ambient}`\n  };\n}\nfunction responsiveShadowStyle(props) {\n  const {\n    card,\n    media,\n    shadow\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$shadow, (index) => shadowStyle(shadow[index], card.shadow.outline));\n}\nconst SpanWithTextOverflow = styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.span.withConfig({\n  displayName: \"SpanWithTextOverflow\",\n  componentId: \"sc-ol2i3b-0\"\n})`display:block;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;overflow:clip;`;\nfunction labelBaseStyle(props) {\n  const {\n    $accent,\n    $muted\n  } = props, {\n    font\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    text-transform: uppercase;\n\n    ${$accent && (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${$muted && (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${font.code.family};\n      border-radius: 1px;\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `;\n}\nconst StyledLabel = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledLabel\",\n  componentId: \"sc-1luap7z-0\"\n})(responsiveLabelFont, responsiveTextAlignStyle, labelBaseStyle), Label = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(22);\n  let accent, align, childrenProp, restProps, t0, t1, textOverflow, weight;\n  $[0] !== props ? ({\n    accent,\n    align,\n    children: childrenProp,\n    muted: t0,\n    size: t1,\n    textOverflow,\n    weight,\n    ...restProps\n  } = props, $[0] = props, $[1] = accent, $[2] = align, $[3] = childrenProp, $[4] = restProps, $[5] = t0, $[6] = t1, $[7] = textOverflow, $[8] = weight) : (accent = $[1], align = $[2], childrenProp = $[3], restProps = $[4], t0 = $[5], t1 = $[6], textOverflow = $[7], weight = $[8]);\n  const muted = t0 === void 0 ? !1 : t0, size2 = t1 === void 0 ? 2 : t1;\n  let children = childrenProp;\n  if (textOverflow === \"ellipsis\") {\n    let t22;\n    $[9] !== children ? (t22 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SpanWithTextOverflow, { children }), $[9] = children, $[10] = t22) : t22 = $[10], children = t22;\n  } else {\n    let t22;\n    $[11] !== children ? (t22 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children }), $[11] = children, $[12] = t22) : t22 = $[12], children = t22;\n  }\n  const t2 = useArrayProp(align), t3 = useArrayProp(size2);\n  let t4;\n  return $[13] !== accent || $[14] !== children || $[15] !== muted || $[16] !== ref || $[17] !== restProps || $[18] !== t2 || $[19] !== t3 || $[20] !== weight ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledLabel, { \"data-ui\": \"Label\", ...restProps, $accent: accent, $align: t2, $muted: muted, $size: t3, $weight: weight, ref, children }), $[13] = accent, $[14] = children, $[15] = muted, $[16] = ref, $[17] = restProps, $[18] = t2, $[19] = t3, $[20] = weight, $[21] = t4) : t4 = $[21], t4;\n});\nLabel.displayName = \"ForwardRef(Label)\";\nconst avatarStyle = {\n  root: avatarRootStyle,\n  arrow: avatarArrowStyle,\n  bgStroke: avatarBgStrokeStyle,\n  stroke: avatarStrokeStyle,\n  initials: avatarInitialsStyle,\n  image: avatarImageStyle\n};\nfunction avatarArrowStyle() {\n  return {\n    position: \"absolute\",\n    boxSizing: \"border-box\",\n    zIndex: 0,\n    opacity: 0,\n    transition: \"all 0.2s linear\",\n    transform: \"rotate(-90deg) translate3d(0, 6px, 0)\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    \"& > svg\": {\n      width: \"11px\",\n      height: \"7px\",\n      position: \"absolute\",\n      top: \"-5px\",\n      left: \"50%\",\n      transform: \"translateX(-6px)\",\n      \"&:not([hidden])\": {\n        display: \"block\"\n      }\n    },\n    \"[data-arrow-position='inside'] > &\": {\n      transform: \"rotate(-90deg) translate3d(0, 6px, 0)\",\n      opacity: 0\n    },\n    \"[data-arrow-position='top'] > &\": {\n      opacity: 1,\n      transform: \"rotate(0deg)\"\n    },\n    \"[data-arrow-position='bottom'] > &\": {\n      opacity: 1,\n      transform: \"rotate(-180deg)\"\n    }\n  };\n}\nfunction avatarRootStyle(props) {\n  const {\n    $color\n  } = props, {\n    avatar\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return {\n    \"--avatar-bg-color\": `var(--card-avatar-${$color}-bg-color)`,\n    \"--avatar-fg-color\": `var(--card-avatar-${$color}-fg-color)`,\n    backgroundColor: \"var(--avatar-bg-color)\",\n    position: \"relative\",\n    boxSizing: \"border-box\",\n    userSelect: \"none\",\n    boxShadow: \"0 0 0 1px var(--card-bg-color)\",\n    '&[data-status=\"inactive\"]': {\n      opacity: 0.5\n    },\n    \"&>svg\": {\n      \"&:not([hidden])\": {\n        display: \"block\"\n      }\n    },\n    /* &:is(button) */\n    '&[data-as=\"button\"]': {\n      WebkitFontSmoothing: \"inherit\",\n      appearance: \"none\",\n      margin: 0,\n      padding: 0,\n      border: 0,\n      font: \"inherit\",\n      color: \"inherit\",\n      outline: \"none\",\n      \"&:focus\": {\n        boxShadow: focusRingStyle({\n          focusRing: avatar.focusRing\n        })\n      },\n      \"&:focus:not(:focus-visible)\": {\n        boxShadow: \"none\"\n      }\n    }\n  };\n}\nfunction responsiveAvatarSizeStyle(props) {\n  const {\n    avatar,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$size, (size2) => {\n    const avatarSize = avatar.sizes[size2] || avatar.sizes[0];\n    return {\n      width: rem(avatarSize.size),\n      height: rem(avatarSize.size),\n      borderRadius: rem(avatarSize.size / 2),\n      \"&>svg\": {\n        width: rem(avatarSize.size),\n        height: rem(avatarSize.size),\n        borderRadius: rem(avatarSize.size / 2)\n      }\n    };\n  });\n}\nfunction avatarImageStyle() {\n  return {\n    position: \"relative\"\n  };\n}\nfunction avatarInitialsStyle() {\n  return {\n    width: \"100%\",\n    height: \"100%\",\n    color: \"var(--avatar-fg-color)\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n    textAlign: \"center\",\n    borderRadius: \"50%\",\n    \"&:not([hidden])\": {\n      display: \"flex\"\n    }\n  };\n}\nfunction avatarBgStrokeStyle() {\n  return {\n    strokeWidth: \"4px\",\n    stroke: \"var(--card-bg-color)\"\n  };\n}\nfunction avatarStrokeStyle() {\n  return {\n    strokeWidth: \"2px\",\n    stroke: \"var(--avatar-bg-color)\",\n    '[data-status=\"editing\"] &': {\n      strokeDasharray: \"2 4\",\n      strokeLinecap: \"round\"\n    }\n  };\n}\nconst StyledAvatar = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledAvatar\",\n  componentId: \"sc-1rj7kl0-0\"\n})(responsiveAvatarSizeStyle, avatarStyle.root), Arrow$1 = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"Arrow\",\n  componentId: \"sc-1rj7kl0-1\"\n})(avatarStyle.arrow), BgStroke = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.ellipse.withConfig({\n  displayName: \"BgStroke\",\n  componentId: \"sc-1rj7kl0-2\"\n})(avatarStyle.bgStroke), Stroke = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.ellipse.withConfig({\n  displayName: \"Stroke\",\n  componentId: \"sc-1rj7kl0-3\"\n})(avatarStyle.stroke), Initials = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"Initials\",\n  componentId: \"sc-1rj7kl0-4\"\n})(avatarStyle.initials), InitialsLabel = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Label).withConfig({\n  displayName: \"InitialsLabel\",\n  componentId: \"sc-1rj7kl0-5\"\n})({\n  color: \"inherit\"\n}), AvatarImage = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.svg.withConfig({\n  displayName: \"AvatarImage\",\n  componentId: \"sc-1rj7kl0-6\"\n})(avatarStyle.image), Avatar = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(52);\n  let __unstable_hideInnerStroke, animateArrowFrom, arrowPositionProp, asProp, initials, onImageLoadError, restProps, src, t0, t1, t2, title;\n  $[0] !== props ? ({\n    __unstable_hideInnerStroke,\n    as: asProp,\n    color: t0,\n    src,\n    title,\n    initials,\n    onImageLoadError,\n    arrowPosition: arrowPositionProp,\n    animateArrowFrom,\n    status: t1,\n    size: t2,\n    ...restProps\n  } = props, $[0] = props, $[1] = __unstable_hideInnerStroke, $[2] = animateArrowFrom, $[3] = arrowPositionProp, $[4] = asProp, $[5] = initials, $[6] = onImageLoadError, $[7] = restProps, $[8] = src, $[9] = t0, $[10] = t1, $[11] = t2, $[12] = title) : (__unstable_hideInnerStroke = $[1], animateArrowFrom = $[2], arrowPositionProp = $[3], asProp = $[4], initials = $[5], onImageLoadError = $[6], restProps = $[7], src = $[8], t0 = $[9], t1 = $[10], t2 = $[11], title = $[12]);\n  const color = t0 === void 0 ? \"gray\" : t0, status = t1 === void 0 ? \"online\" : t1, sizeProp = t2 === void 0 ? 1 : t2, {\n    avatar\n  } = useTheme_v2(), as = react_is__WEBPACK_IMPORTED_MODULE_3__.isValidElementType(asProp) ? asProp : \"div\", size2 = useArrayProp(sizeProp), _sizeRem = (avatar.sizes[size2[0]] || avatar.sizes[0]).size, _radius = _sizeRem / 2, elementId = (0,react__WEBPACK_IMPORTED_MODULE_2__.useId)(), [arrowPosition, setArrowPosition] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(animateArrowFrom || arrowPositionProp || \"inside\"), [imageFailed, setImageFailed] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1), imageId = `avatar-image-${elementId}`;\n  let t3, t4;\n  $[13] !== arrowPosition || $[14] !== arrowPositionProp ? (t3 = () => {\n    if (arrowPosition === arrowPositionProp)\n      return;\n    const raf = requestAnimationFrame(() => setArrowPosition(arrowPositionProp));\n    return () => cancelAnimationFrame(raf);\n  }, t4 = [arrowPosition, arrowPositionProp], $[13] = arrowPosition, $[14] = arrowPositionProp, $[15] = t3, $[16] = t4) : (t3 = $[15], t4 = $[16]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t3, t4);\n  let t5, t6;\n  $[17] !== src ? (t5 = () => {\n    src && setImageFailed(!1);\n  }, t6 = [src], $[17] = src, $[18] = t5, $[19] = t6) : (t5 = $[18], t6 = $[19]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t5, t6);\n  let t7;\n  $[20] !== onImageLoadError ? (t7 = () => {\n    setImageFailed(!0), onImageLoadError && onImageLoadError(new Error(\"Avatar: the image failed to load\"));\n  }, $[20] = onImageLoadError, $[21] = t7) : t7 = $[21];\n  const handleImageError = t7;\n  let t8, t9;\n  $[22] !== size2 ? (t9 = size2.map(_temp$6), $[22] = size2, $[23] = t9) : t9 = $[23], t8 = t9;\n  const initialsSize = t8, t10 = typeof as == \"string\" ? as : void 0;\n  let t11;\n  $[24] !== color ? (t11 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Arrow$1, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\", { width: \"11\", height: \"7\", viewBox: \"0 0 11 7\", fill: \"none\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M6.67948 1.50115L11 7L0 7L4.32052 1.50115C4.92109 0.736796 6.07891 0.736795 6.67948 1.50115Z\", fill: color }) }) }), $[24] = color, $[25] = t11) : t11 = $[25];\n  let t12;\n  $[26] !== __unstable_hideInnerStroke || $[27] !== _radius || $[28] !== _sizeRem || $[29] !== handleImageError || $[30] !== imageFailed || $[31] !== imageId || $[32] !== src ? (t12 = !imageFailed && src && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(AvatarImage, { viewBox: `0 0 ${_sizeRem} ${_sizeRem}`, fill: \"none\", children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"defs\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pattern\", { id: imageId, patternContentUnits: \"objectBoundingBox\", width: \"1\", height: \"1\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"image\", { href: src, width: \"1\", height: \"1\", onError: handleImageError }) }) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\", { cx: _radius, cy: _radius, r: _radius, fill: `url(#${imageId})` }),\n    !__unstable_hideInnerStroke && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BgStroke, { cx: _radius, cy: _radius, rx: _radius, ry: _radius, vectorEffect: \"non-scaling-stroke\" }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Stroke, { cx: _radius, cy: _radius, rx: _radius, ry: _radius, vectorEffect: \"non-scaling-stroke\" })\n  ] }), $[26] = __unstable_hideInnerStroke, $[27] = _radius, $[28] = _sizeRem, $[29] = handleImageError, $[30] = imageFailed, $[31] = imageId, $[32] = src, $[33] = t12) : t12 = $[33];\n  let t13;\n  $[34] !== imageFailed || $[35] !== initials || $[36] !== initialsSize || $[37] !== src ? (t13 = (imageFailed || !src) && initials && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Initials, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InitialsLabel, { forwardedAs: \"span\", size: initialsSize, weight: \"medium\", children: initials }) }) }), $[34] = imageFailed, $[35] = initials, $[36] = initialsSize, $[37] = src, $[38] = t13) : t13 = $[38];\n  let t14;\n  return $[39] !== arrowPosition || $[40] !== as || $[41] !== color || $[42] !== ref || $[43] !== restProps || $[44] !== size2 || $[45] !== status || $[46] !== t10 || $[47] !== t11 || $[48] !== t12 || $[49] !== t13 || $[50] !== title ? (t14 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledAvatar, { as, \"data-as\": t10, \"data-ui\": \"Avatar\", ...restProps, $color: color, $size: size2, \"aria-label\": title, \"data-arrow-position\": arrowPosition, \"data-status\": status, ref, title, children: [\n    t11,\n    t12,\n    t13\n  ] }), $[39] = arrowPosition, $[40] = as, $[41] = color, $[42] = ref, $[43] = restProps, $[44] = size2, $[45] = status, $[46] = t10, $[47] = t11, $[48] = t12, $[49] = t13, $[50] = title, $[51] = t14) : t14 = $[51], t14;\n});\nAvatar.displayName = \"ForwardRef(Avatar)\";\nfunction _temp$6(s) {\n  return s === 1 ? 1 : s === 2 ? 3 : s === 3 ? 5 : 0;\n}\nfunction _responsiveAvatarCounterSizeStyle(props) {\n  const {\n    avatar,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$size, (size2) => {\n    const avatarSize = avatar.sizes[size2];\n    return avatarSize ? {\n      borderRadius: rem(avatarSize.size / 2),\n      minWidth: rem(avatarSize.size),\n      height: rem(avatarSize.size)\n    } : EMPTY_RECORD;\n  });\n}\nfunction _avatarCounterBaseStyle(props) {\n  const {\n    space\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    user-select: none;\n    color: inherit;\n    color: var(--card-fg-color);\n    background: var(--card-bg-color);\n    box-shadow:\n      0 0 0 1px var(--card-bg-color),\n      inset 0 0 0 1px var(--card-hairline-hard-color);\n    padding: 0 ${rem(space[2])};\n\n    &:not([hidden]) {\n      display: flex;\n    }\n  `;\n}\nconst StyledAvatarCounter = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledAvatarCounter\",\n  componentId: \"sc-1ydx86y-0\"\n})(_responsiveAvatarCounterSizeStyle, _avatarCounterBaseStyle), AvatarCounter = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(9), {\n    count,\n    size: t0\n  } = props, size2 = useArrayProp(t0 === void 0 ? 1 : t0);\n  let t1, t2;\n  $[0] !== size2 ? (t2 = size2.map(_temp$5), $[0] = size2, $[1] = t2) : t2 = $[1], t1 = t2;\n  const fontSize2 = t1;\n  let t3;\n  $[2] !== count || $[3] !== fontSize2 ? (t3 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Label, { as: \"span\", size: fontSize2, weight: \"medium\", children: count }), $[2] = count, $[3] = fontSize2, $[4] = t3) : t3 = $[4];\n  let t4;\n  return $[5] !== ref || $[6] !== size2 || $[7] !== t3 ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledAvatarCounter, { $size: size2, \"data-ui\": \"AvatarCounter\", ref, children: t3 }), $[5] = ref, $[6] = size2, $[7] = t3, $[8] = t4) : t4 = $[8], t4;\n});\nAvatarCounter.displayName = \"ForwardRef(AvatarCounter)\";\nfunction _temp$5(s) {\n  return s === 1 ? 1 : s === 2 ? 3 : s === 3 ? 5 : 0;\n}\nconst BASE_STYLES = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n  white-space: nowrap;\n\n  & > div {\n    vertical-align: top;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  }\n`;\nfunction avatarStackStyle() {\n  return BASE_STYLES;\n}\nfunction responsiveAvatarStackSizeStyle(props) {\n  const {\n    avatar,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$size, (size2) => {\n    const avatarSize = avatar.sizes[size2];\n    return avatarSize ? {\n      \"& > div + div\": {\n        marginLeft: rem(avatarSize.distance)\n      }\n    } : EMPTY_RECORD;\n  });\n}\nconst StyledAvatarStack = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledAvatarStack\",\n  componentId: \"sc-cysmbb-0\"\n})(responsiveAvatarStackSizeStyle, avatarStackStyle), AvatarStack = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(15);\n  let childrenProp, restProps, t0, t1;\n  $[0] !== props ? ({\n    children: childrenProp,\n    maxLength: t0,\n    size: t1,\n    ...restProps\n  } = props, $[0] = props, $[1] = childrenProp, $[2] = restProps, $[3] = t0, $[4] = t1) : (childrenProp = $[1], restProps = $[2], t0 = $[3], t1 = $[4]);\n  const maxLengthProp = t0 === void 0 ? 4 : t0, sizeProp = t1 === void 0 ? 1 : t1, children = react__WEBPACK_IMPORTED_MODULE_2__.Children.toArray(childrenProp).filter(react__WEBPACK_IMPORTED_MODULE_2__.isValidElement), maxLength = Math.max(maxLengthProp, 0), size2 = useArrayProp(sizeProp), len = children.length, visibleCount = maxLength - 1, extraCount = len - visibleCount, visibleChildren = extraCount > 1 ? children.slice(extraCount, len) : children, T0 = StyledAvatarStack, t2 = \"AvatarStack\", t3 = len === 0 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AvatarCounter, { count: len, size: size2 }) }), t4 = len !== 0 && extraCount > 1 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AvatarCounter, { count: extraCount, size: size2 }) });\n  let t5;\n  $[5] !== size2 ? (t5 = (child, childIndex) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { children: (0,react__WEBPACK_IMPORTED_MODULE_2__.cloneElement)(child, {\n    size: size2\n  }) }, String(childIndex)), $[5] = size2, $[6] = t5) : t5 = $[6];\n  const t6 = visibleChildren.map(t5);\n  let t7;\n  return $[7] !== T0 || $[8] !== ref || $[9] !== restProps || $[10] !== size2 || $[11] !== t3 || $[12] !== t4 || $[13] !== t6 ? (t7 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(T0, { \"data-ui\": t2, ...restProps, ref, $size: size2, children: [\n    t3,\n    t4,\n    t6\n  ] }), $[7] = T0, $[8] = ref, $[9] = restProps, $[10] = size2, $[11] = t3, $[12] = t4, $[13] = t6, $[14] = t7) : t7 = $[14], t7;\n});\nAvatarStack.displayName = \"ForwardRef(AvatarStack)\";\nconst StyledBox = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledBox\",\n  componentId: \"sc-1hhky9f-0\"\n})(boxStyle, flexItemStyle, responsiveBoxStyle, responsiveGridItemStyle, responsiveMarginStyle, responsivePaddingStyle), Box = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(59);\n  let column, columnEnd, columnStart, flex, height, marginBottom, marginLeft, marginRight, marginTop, marginX, marginY, overflow, paddingBottom, paddingLeft, paddingRight, paddingTop, paddingX, paddingY, restProps, row, rowEnd, rowStart, sizing, t0, t1, t2, t3;\n  $[0] !== props ? ({\n    as: t0,\n    column,\n    columnStart,\n    columnEnd,\n    display: t1,\n    flex,\n    height,\n    margin: t2,\n    marginX,\n    marginY,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    overflow,\n    padding: t3,\n    paddingX,\n    paddingY,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    row,\n    rowStart,\n    rowEnd,\n    sizing,\n    ...restProps\n  } = props, $[0] = props, $[1] = column, $[2] = columnEnd, $[3] = columnStart, $[4] = flex, $[5] = height, $[6] = marginBottom, $[7] = marginLeft, $[8] = marginRight, $[9] = marginTop, $[10] = marginX, $[11] = marginY, $[12] = overflow, $[13] = paddingBottom, $[14] = paddingLeft, $[15] = paddingRight, $[16] = paddingTop, $[17] = paddingX, $[18] = paddingY, $[19] = restProps, $[20] = row, $[21] = rowEnd, $[22] = rowStart, $[23] = sizing, $[24] = t0, $[25] = t1, $[26] = t2, $[27] = t3) : (column = $[1], columnEnd = $[2], columnStart = $[3], flex = $[4], height = $[5], marginBottom = $[6], marginLeft = $[7], marginRight = $[8], marginTop = $[9], marginX = $[10], marginY = $[11], overflow = $[12], paddingBottom = $[13], paddingLeft = $[14], paddingRight = $[15], paddingTop = $[16], paddingX = $[17], paddingY = $[18], restProps = $[19], row = $[20], rowEnd = $[21], rowStart = $[22], sizing = $[23], t0 = $[24], t1 = $[25], t2 = $[26], t3 = $[27]);\n  const asProp = t0 === void 0 ? \"div\" : t0, display = t1 === void 0 ? \"block\" : t1, margin = t2 === void 0 ? 0 : t2, padding = t3 === void 0 ? 0 : t3, t4 = typeof asProp == \"string\" ? asProp : void 0, t5 = useArrayProp(column), t6 = useArrayProp(columnStart), t7 = useArrayProp(columnEnd), t8 = useArrayProp(display), t9 = useArrayProp(flex), t10 = useArrayProp(height), t11 = useArrayProp(margin), t12 = useArrayProp(marginX), t13 = useArrayProp(marginY), t14 = useArrayProp(marginTop), t15 = useArrayProp(marginRight), t16 = useArrayProp(marginBottom), t17 = useArrayProp(marginLeft), t18 = useArrayProp(overflow), t19 = useArrayProp(padding), t20 = useArrayProp(paddingX), t21 = useArrayProp(paddingY), t22 = useArrayProp(paddingTop), t23 = useArrayProp(paddingRight), t24 = useArrayProp(paddingBottom), t25 = useArrayProp(paddingLeft), t26 = useArrayProp(row), t27 = useArrayProp(rowStart), t28 = useArrayProp(rowEnd), t29 = useArrayProp(sizing);\n  let t30;\n  return $[28] !== asProp || $[29] !== props.children || $[30] !== ref || $[31] !== restProps || $[32] !== t10 || $[33] !== t11 || $[34] !== t12 || $[35] !== t13 || $[36] !== t14 || $[37] !== t15 || $[38] !== t16 || $[39] !== t17 || $[40] !== t18 || $[41] !== t19 || $[42] !== t20 || $[43] !== t21 || $[44] !== t22 || $[45] !== t23 || $[46] !== t24 || $[47] !== t25 || $[48] !== t26 || $[49] !== t27 || $[50] !== t28 || $[51] !== t29 || $[52] !== t4 || $[53] !== t5 || $[54] !== t6 || $[55] !== t7 || $[56] !== t8 || $[57] !== t9 ? (t30 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledBox, { \"data-as\": t4, \"data-ui\": \"Box\", ...restProps, $column: t5, $columnStart: t6, $columnEnd: t7, $display: t8, $flex: t9, $height: t10, $margin: t11, $marginX: t12, $marginY: t13, $marginTop: t14, $marginRight: t15, $marginBottom: t16, $marginLeft: t17, $overflow: t18, $padding: t19, $paddingX: t20, $paddingY: t21, $paddingTop: t22, $paddingRight: t23, $paddingBottom: t24, $paddingLeft: t25, $row: t26, $rowStart: t27, $rowEnd: t28, $sizing: t29, as: asProp, ref, children: props.children }), $[28] = asProp, $[29] = props.children, $[30] = ref, $[31] = restProps, $[32] = t10, $[33] = t11, $[34] = t12, $[35] = t13, $[36] = t14, $[37] = t15, $[38] = t16, $[39] = t17, $[40] = t18, $[41] = t19, $[42] = t20, $[43] = t21, $[44] = t22, $[45] = t23, $[46] = t24, $[47] = t25, $[48] = t26, $[49] = t27, $[50] = t28, $[51] = t29, $[52] = t4, $[53] = t5, $[54] = t6, $[55] = t7, $[56] = t8, $[57] = t9, $[58] = t30) : t30 = $[58], t30;\n});\nBox.displayName = \"ForwardRef(Box)\";\nfunction textBaseStyle(props) {\n  const {\n    $accent,\n    $muted\n  } = props, {\n    font\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    color: var(--card-fg-color);\n\n    ${$accent && (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${$muted && (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${font.code.family};\n      border-radius: 1px;\n      background-color: var(--card-code-bg-color);\n      color: var(--card-code-fg-color);\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n      color: var(--card-link-color);\n      outline: none;\n\n      @media (hover: hover) {\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n\n      &:focus {\n        box-shadow:\n          0 0 0 1px var(--card-bg-color),\n          0 0 0 3px var(--card-focus-ring-color);\n      }\n\n      &:focus:not(:focus-visible) {\n        box-shadow: none;\n      }\n    }\n\n    & strong {\n      font-weight: ${font.text.weights.bold};\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n      color: var(--card-icon-color);\n\n      & path {\n        vector-effect: non-scaling-stroke !important;\n      }\n    }\n  `;\n}\nconst StyledText = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledText\",\n  componentId: \"sc-11ov82j-0\"\n})(responsiveTextFont, responsiveTextAlignStyle, textBaseStyle), Text = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(22);\n  let align, childrenProp, restProps, t0, t1, t2, textOverflow, weight;\n  $[0] !== props ? ({\n    accent: t0,\n    align,\n    children: childrenProp,\n    muted: t1,\n    size: t2,\n    textOverflow,\n    weight,\n    ...restProps\n  } = props, $[0] = props, $[1] = align, $[2] = childrenProp, $[3] = restProps, $[4] = t0, $[5] = t1, $[6] = t2, $[7] = textOverflow, $[8] = weight) : (align = $[1], childrenProp = $[2], restProps = $[3], t0 = $[4], t1 = $[5], t2 = $[6], textOverflow = $[7], weight = $[8]);\n  const accent = t0 === void 0 ? !1 : t0, muted = t1 === void 0 ? !1 : t1, size2 = t2 === void 0 ? 2 : t2;\n  let children = childrenProp;\n  if (textOverflow === \"ellipsis\") {\n    let t32;\n    $[9] !== children ? (t32 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SpanWithTextOverflow, { children }), $[9] = children, $[10] = t32) : t32 = $[10], children = t32;\n  }\n  const t3 = useArrayProp(align), t4 = useArrayProp(size2);\n  let t5;\n  $[11] !== children ? (t5 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children }), $[11] = children, $[12] = t5) : t5 = $[12];\n  let t6;\n  return $[13] !== accent || $[14] !== muted || $[15] !== ref || $[16] !== restProps || $[17] !== t3 || $[18] !== t4 || $[19] !== t5 || $[20] !== weight ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledText, { \"data-ui\": \"Text\", ...restProps, $accent: accent, $align: t3, $muted: muted, ref, $size: t4, $weight: weight, children: t5 }), $[13] = accent, $[14] = muted, $[15] = ref, $[16] = restProps, $[17] = t3, $[18] = t4, $[19] = t5, $[20] = weight, $[21] = t6) : t6 = $[21], t6;\n});\nText.displayName = \"ForwardRef(Text)\";\nfunction badgeStyle(props) {\n  const {\n    $tone\n  } = props;\n  return {\n    \"--card-bg-color\": `var(--card-badge-${$tone}-bg-color)`,\n    \"--card-fg-color\": `var(--card-badge-${$tone}-fg-color)`,\n    backgroundColor: \"var(--card-bg-color)\",\n    cursor: \"default\",\n    \"&:not([hidden])\": {\n      display: \"inline-block\",\n      verticalAlign: \"top\"\n    }\n  };\n}\nconst StyledBadge = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"StyledBadge\",\n  componentId: \"sc-5u140l-0\"\n})(responsiveRadiusStyle, badgeStyle), Badge = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(17);\n  let children, restProps, t0, t1, t2, t3;\n  if ($[0] !== props) {\n    const {\n      children: t42,\n      fontSize: t52,\n      mode: _deprecated_mode,\n      padding: t62,\n      radius: t72,\n      tone: t8,\n      ...t9\n    } = props;\n    children = t42, t0 = t52, t1 = t62, t2 = t72, t3 = t8, restProps = t9, $[0] = props, $[1] = children, $[2] = restProps, $[3] = t0, $[4] = t1, $[5] = t2, $[6] = t3;\n  } else\n    children = $[1], restProps = $[2], t0 = $[3], t1 = $[4], t2 = $[5], t3 = $[6];\n  const fontSize2 = t0 === void 0 ? 1 : t0, padding = t1 === void 0 ? 1 : t1, radius = t2 === void 0 ? \"full\" : t2, tone = t3 === void 0 ? \"default\" : t3, t4 = useArrayProp(radius), t5 = useArrayProp(padding);\n  let t6;\n  $[7] !== children || $[8] !== fontSize2 ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: fontSize2, children }), $[7] = children, $[8] = fontSize2, $[9] = t6) : t6 = $[9];\n  let t7;\n  return $[10] !== ref || $[11] !== restProps || $[12] !== t4 || $[13] !== t5 || $[14] !== t6 || $[15] !== tone ? (t7 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledBadge, { \"data-ui\": \"Badge\", ...restProps, $tone: tone, $radius: t4, padding: t5, ref, children: t6 }), $[10] = ref, $[11] = restProps, $[12] = t4, $[13] = t5, $[14] = t6, $[15] = tone, $[16] = t7) : t7 = $[16], t7;\n});\nBadge.displayName = \"ForwardRef(Badge)\";\nconst StyledFlex = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"StyledFlex\",\n  componentId: \"sc-oxesg3-0\"\n})(flexItemStyle, responsiveFlexStyle), Flex = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(17);\n  let align, as, gap, justify, restProps, t0, wrap;\n  $[0] !== props ? ({\n    align,\n    as,\n    direction: t0,\n    gap,\n    justify,\n    wrap,\n    ...restProps\n  } = props, $[0] = props, $[1] = align, $[2] = as, $[3] = gap, $[4] = justify, $[5] = restProps, $[6] = t0, $[7] = wrap) : (align = $[1], as = $[2], gap = $[3], justify = $[4], restProps = $[5], t0 = $[6], wrap = $[7]);\n  const direction = t0 === void 0 ? \"row\" : t0, t1 = useArrayProp(align), t2 = useArrayProp(direction), t3 = useArrayProp(gap), t4 = useArrayProp(justify), t5 = useArrayProp(wrap);\n  let t6;\n  return $[8] !== as || $[9] !== ref || $[10] !== restProps || $[11] !== t1 || $[12] !== t2 || $[13] !== t3 || $[14] !== t4 || $[15] !== t5 ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledFlex, { \"data-ui\": \"Flex\", ...restProps, $align: t1, $direction: t2, $gap: t3, $justify: t4, $wrap: t5, forwardedAs: as, ref }), $[8] = as, $[9] = ref, $[10] = restProps, $[11] = t1, $[12] = t2, $[13] = t3, $[14] = t4, $[15] = t5, $[16] = t6) : t6 = $[16], t6;\n});\nFlex.displayName = \"ForwardRef(Flex)\";\nconst rotate = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.keyframes)`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`, StyledSpinner = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Text).withConfig({\n  displayName: \"StyledSpinner\",\n  componentId: \"sc-124hnd0-0\"\n})`& > span > svg{animation:${rotate} 500ms linear infinite;}`, Spinner = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(4);\n  let t0;\n  $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_9__.SpinnerIcon, {}), $[0] = t0) : t0 = $[0];\n  let t1;\n  return $[1] !== props || $[2] !== ref ? (t1 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledSpinner, { \"data-ui\": \"Spinner\", ...props, ref, children: t0 }), $[1] = props, $[2] = ref, $[3] = t1) : t1 = $[3], t1;\n});\nSpinner.displayName = \"ForwardRef(Spinner)\";\nfunction _cardColorStyle(base, color, checkered = !1) {\n  return {\n    // from base\n    \"--card-backdrop-color\": base.backdrop,\n    \"--card-focus-ring-color\": base.focusRing,\n    \"--card-shadow-outline-color\": base.shadow.outline,\n    \"--card-shadow-umbra-color\": base.shadow.umbra,\n    \"--card-shadow-penumbra-color\": base.shadow.penumbra,\n    \"--card-shadow-ambient-color\": base.shadow.ambient,\n    // from state\n    \"--card-accent-fg-color\": color.accent.fg,\n    \"--card-avatar-gray-bg-color\": color.avatar.gray.bg,\n    \"--card-avatar-gray-fg-color\": color.avatar.gray.fg,\n    \"--card-avatar-blue-bg-color\": color.avatar.blue.bg,\n    \"--card-avatar-blue-fg-color\": color.avatar.blue.fg,\n    \"--card-avatar-purple-bg-color\": color.avatar.purple.bg,\n    \"--card-avatar-purple-fg-color\": color.avatar.purple.fg,\n    \"--card-avatar-magenta-bg-color\": color.avatar.magenta.bg,\n    \"--card-avatar-magenta-fg-color\": color.avatar.magenta.fg,\n    \"--card-avatar-red-bg-color\": color.avatar.red.bg,\n    \"--card-avatar-red-fg-color\": color.avatar.red.fg,\n    \"--card-avatar-orange-bg-color\": color.avatar.orange.bg,\n    \"--card-avatar-orange-fg-color\": color.avatar.orange.fg,\n    \"--card-avatar-yellow-bg-color\": color.avatar.yellow.bg,\n    \"--card-avatar-yellow-fg-color\": color.avatar.yellow.fg,\n    \"--card-avatar-green-bg-color\": color.avatar.green.bg,\n    \"--card-avatar-green-fg-color\": color.avatar.green.fg,\n    \"--card-avatar-cyan-bg-color\": color.avatar.cyan.bg,\n    \"--card-avatar-cyan-fg-color\": color.avatar.cyan.fg,\n    \"--card-bg-color\": color.bg,\n    \"--card-bg-image\": checkered ? `repeating-conic-gradient(${color.bg} 0% 25%, ${color.muted.bg} 0% 50%)` : void 0,\n    \"--card-border-color\": color.border,\n    \"--card-badge-default-bg-color\": color.badge.default.bg,\n    \"--card-badge-default-dot-color\": color.badge.default.dot,\n    \"--card-badge-default-fg-color\": color.badge.default.fg,\n    \"--card-badge-default-icon-color\": color.badge.default.icon,\n    \"--card-badge-neutral-bg-color\": color.badge.neutral?.bg,\n    \"--card-badge-neutral-dot-color\": color.badge.neutral?.dot,\n    \"--card-badge-neutral-fg-color\": color.badge.neutral?.fg,\n    \"--card-badge-neutral-icon-color\": color.badge.neutral?.icon,\n    \"--card-badge-primary-bg-color\": color.badge.primary.bg,\n    \"--card-badge-primary-dot-color\": color.badge.primary.dot,\n    \"--card-badge-primary-fg-color\": color.badge.primary.fg,\n    \"--card-badge-primary-icon-color\": color.badge.primary.icon,\n    \"--card-badge-suggest-bg-color\": color.badge.suggest?.bg,\n    \"--card-badge-suggest-dot-color\": color.badge.suggest?.dot,\n    \"--card-badge-suggest-fg-color\": color.badge.suggest?.fg,\n    \"--card-badge-suggest-icon-color\": color.badge.suggest?.icon,\n    \"--card-badge-positive-bg-color\": color.badge.positive.bg,\n    \"--card-badge-positive-dot-color\": color.badge.positive.dot,\n    \"--card-badge-positive-fg-color\": color.badge.positive.fg,\n    \"--card-badge-positive-icon-color\": color.badge.positive.icon,\n    \"--card-badge-caution-bg-color\": color.badge.caution.bg,\n    \"--card-badge-caution-dot-color\": color.badge.caution.dot,\n    \"--card-badge-caution-fg-color\": color.badge.caution.fg,\n    \"--card-badge-caution-icon-color\": color.badge.caution.icon,\n    \"--card-badge-critical-bg-color\": color.badge.critical.bg,\n    \"--card-badge-critical-dot-color\": color.badge.critical.dot,\n    \"--card-badge-critical-fg-color\": color.badge.critical.fg,\n    \"--card-badge-critical-icon-color\": color.badge.critical.icon,\n    \"--card-code-bg-color\": color.code.bg,\n    \"--card-code-fg-color\": color.code.fg,\n    \"--card-fg-color\": color.fg,\n    \"--card-icon-color\": color.icon,\n    \"--card-kbd-bg-color\": color.kbd.bg,\n    \"--card-kbd-border-color\": color.kbd.border,\n    \"--card-kbd-fg-color\": color.kbd.fg,\n    \"--card-link-fg-color\": color.link.fg,\n    \"--card-muted-bg-color\": color.muted.bg,\n    \"--card-muted-fg-color\": color.muted.fg,\n    \"--card-skeleton-color-from\": color.skeleton.from,\n    \"--card-skeleton-color-to\": color.skeleton.to,\n    // deprecated variables (kept for legacy)\n    \"--card-bg2-color\": color.muted.bg,\n    \"--card-link-color\": color.link.fg,\n    \"--card-hairline-soft-color\": color.border,\n    \"--card-hairline-hard-color\": color.border\n  };\n}\nfunction buttonBaseStyles(props) {\n  const {\n    $width\n  } = props, {\n    style\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    ${style?.button};\n\n    -webkit-font-smoothing: inherit;\n    appearance: none;\n    display: inline-flex;\n    align-items: center;\n    font: inherit;\n    border: 0;\n    outline: none;\n    user-select: none;\n    text-decoration: none;\n    border: 0;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    white-space: nowrap;\n    text-align: left;\n    position: relative;\n    vertical-align: top;\n\n    ${$width === \"fill\" && (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    `}\n\n    & > span {\n      display: block;\n      flex: 1;\n      min-width: 0;\n      border-radius: inherit;\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n      padding: 0;\n    }\n  `;\n}\nfunction combineBoxShadow(...boxShadows) {\n  return boxShadows.filter(Boolean).join(\",\");\n}\nfunction buttonColorStyles(props) {\n  const {\n    $mode\n  } = props, {\n    button,\n    color: baseColor,\n    style\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), shadow = props.$mode === \"ghost\", mode = baseColor.button[$mode] || baseColor.button.default, color = mode[props.$tone] || mode.default, border2 = {\n    width: button.border.width,\n    color: \"var(--card-border-color)\"\n  }, defaultBoxShadow = void 0;\n  return [_cardColorStyle(baseColor, color.enabled), {\n    backgroundColor: \"var(--card-bg-color)\",\n    color: \"var(--card-fg-color)\",\n    boxShadow: focusRingBorderStyle(border2),\n    '&:disabled, &[data-disabled=\"true\"]': _cardColorStyle(baseColor, color.disabled),\n    \"&:not([data-disabled='true'])\": {\n      boxShadow: combineBoxShadow(focusRingBorderStyle(border2), shadow ? defaultBoxShadow : void 0),\n      \"&:focus\": {\n        boxShadow: focusRingStyle({\n          base: baseColor,\n          border: {\n            width: 2,\n            color: baseColor.bg\n          },\n          focusRing: button.focusRing\n        })\n      },\n      \"&:focus:not(:focus-visible)\": {\n        boxShadow: combineBoxShadow(focusRingBorderStyle(border2), shadow ? defaultBoxShadow : void 0)\n      },\n      \"@media (hover: hover)\": {\n        \"&:hover\": _cardColorStyle(baseColor, color.hovered),\n        \"&:active\": _cardColorStyle(baseColor, color.pressed),\n        \"&[data-hovered]\": _cardColorStyle(baseColor, color.hovered)\n      },\n      \"&[data-selected]\": _cardColorStyle(baseColor, color.pressed)\n    }\n  }, style?.button?.root].filter(Boolean);\n}\nconst StyledButton = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.button.withConfig({\n  displayName: \"StyledButton\",\n  componentId: \"sc-aaekt4-0\"\n})(responsiveRadiusStyle, buttonBaseStyles, buttonColorStyles), LoadingBox = styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"LoadingBox\",\n  componentId: \"sc-aaekt4-1\"\n})`position:absolute;top:0;left:0;right:0;bottom:0;display:flex;align-items:center;justify-content:center;background-color:var(--card-bg-color);border-radius:inherit;z-index:1;box-shadow:inherit;`, Button = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(66);\n  let IconComponent, IconRightComponent, children, disabled, loading, paddingBottomProp, paddingLeftProp, paddingRightProp, paddingTopProp, paddingXProp, paddingYProp, restProps, selected, t0, t1, t2, t3, t4, t5, t6, t7, t8, text, textAlign, textWeight, width;\n  $[0] !== props ? ({\n    children,\n    disabled,\n    fontSize: t0,\n    icon: IconComponent,\n    iconRight: IconRightComponent,\n    justify: t1,\n    loading,\n    mode: t2,\n    padding: t3,\n    paddingX: paddingXProp,\n    paddingY: paddingYProp,\n    paddingTop: paddingTopProp,\n    paddingBottom: paddingBottomProp,\n    paddingLeft: paddingLeftProp,\n    paddingRight: paddingRightProp,\n    radius: t4,\n    selected,\n    space: t5,\n    text,\n    textAlign,\n    textWeight,\n    tone: t6,\n    type: t7,\n    muted: t8,\n    width,\n    ...restProps\n  } = props, $[0] = props, $[1] = IconComponent, $[2] = IconRightComponent, $[3] = children, $[4] = disabled, $[5] = loading, $[6] = paddingBottomProp, $[7] = paddingLeftProp, $[8] = paddingRightProp, $[9] = paddingTopProp, $[10] = paddingXProp, $[11] = paddingYProp, $[12] = restProps, $[13] = selected, $[14] = t0, $[15] = t1, $[16] = t2, $[17] = t3, $[18] = t4, $[19] = t5, $[20] = t6, $[21] = t7, $[22] = t8, $[23] = text, $[24] = textAlign, $[25] = textWeight, $[26] = width) : (IconComponent = $[1], IconRightComponent = $[2], children = $[3], disabled = $[4], loading = $[5], paddingBottomProp = $[6], paddingLeftProp = $[7], paddingRightProp = $[8], paddingTopProp = $[9], paddingXProp = $[10], paddingYProp = $[11], restProps = $[12], selected = $[13], t0 = $[14], t1 = $[15], t2 = $[16], t3 = $[17], t4 = $[18], t5 = $[19], t6 = $[20], t7 = $[21], t8 = $[22], text = $[23], textAlign = $[24], textWeight = $[25], width = $[26]);\n  const fontSize2 = t0 === void 0 ? 1 : t0, justifyProp = t1 === void 0 ? \"center\" : t1, mode = t2 === void 0 ? \"default\" : t2, paddingProp = t3 === void 0 ? 3 : t3, radiusProp = t4 === void 0 ? 2 : t4, spaceProp = t5 === void 0 ? 3 : t5, tone = t6 === void 0 ? \"default\" : t6, type = t7 === void 0 ? \"button\" : t7, muted = t8 === void 0 ? !1 : t8, {\n    button\n  } = useTheme_v2(), justify = useArrayProp(justifyProp), padding = useArrayProp(paddingProp), paddingX = useArrayProp(paddingXProp), paddingY = useArrayProp(paddingYProp), paddingTop = useArrayProp(paddingTopProp), paddingBottom = useArrayProp(paddingBottomProp), paddingLeft = useArrayProp(paddingLeftProp), paddingRight = useArrayProp(paddingRightProp), radius = useArrayProp(radiusProp), space = useArrayProp(spaceProp);\n  let t9, t10;\n  $[27] !== padding || $[28] !== paddingBottom || $[29] !== paddingLeft || $[30] !== paddingRight || $[31] !== paddingTop || $[32] !== paddingX || $[33] !== paddingY ? (t10 = {\n    padding,\n    paddingX,\n    paddingY,\n    paddingTop,\n    paddingBottom,\n    paddingLeft,\n    paddingRight\n  }, $[27] = padding, $[28] = paddingBottom, $[29] = paddingLeft, $[30] = paddingRight, $[31] = paddingTop, $[32] = paddingX, $[33] = paddingY, $[34] = t10) : t10 = $[34], t9 = t10;\n  const boxProps = t9, t11 = !!(loading || disabled), t12 = selected ? \"\" : void 0, t13 = !!(loading || disabled);\n  let t14;\n  $[35] !== loading ? (t14 = !!loading && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LoadingBox, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Spinner, {}) }), $[35] = loading, $[36] = t14) : t14 = $[36];\n  let t15;\n  $[37] !== IconComponent || $[38] !== IconRightComponent || $[39] !== boxProps || $[40] !== button || $[41] !== fontSize2 || $[42] !== justify || $[43] !== muted || $[44] !== space || $[45] !== text || $[46] !== textAlign || $[47] !== textWeight ? (t15 = (IconComponent || text || IconRightComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { as: \"span\", ...boxProps, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Flex, { as: \"span\", justify, gap: space, children: [\n    IconComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n      (0,react__WEBPACK_IMPORTED_MODULE_2__.isValidElement)(IconComponent) && IconComponent,\n      (0,react_is__WEBPACK_IMPORTED_MODULE_3__.isValidElementType)(IconComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent, {})\n    ] }),\n    text && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { muted, align: textAlign, size: fontSize2, textOverflow: \"ellipsis\", weight: textWeight ?? button.textWeight, children: text }) }),\n    IconRightComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n      (0,react__WEBPACK_IMPORTED_MODULE_2__.isValidElement)(IconRightComponent) && IconRightComponent,\n      (0,react_is__WEBPACK_IMPORTED_MODULE_3__.isValidElementType)(IconRightComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconRightComponent, {})\n    ] })\n  ] }) }), $[37] = IconComponent, $[38] = IconRightComponent, $[39] = boxProps, $[40] = button, $[41] = fontSize2, $[42] = justify, $[43] = muted, $[44] = space, $[45] = text, $[46] = textAlign, $[47] = textWeight, $[48] = t15) : t15 = $[48];\n  let t16;\n  $[49] !== boxProps || $[50] !== children ? (t16 = children && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { as: \"span\", ...boxProps, children }), $[49] = boxProps, $[50] = children, $[51] = t16) : t16 = $[51];\n  let t17;\n  return $[52] !== mode || $[53] !== radius || $[54] !== ref || $[55] !== restProps || $[56] !== t11 || $[57] !== t12 || $[58] !== t13 || $[59] !== t14 || $[60] !== t15 || $[61] !== t16 || $[62] !== tone || $[63] !== type || $[64] !== width ? (t17 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledButton, { \"data-ui\": \"Button\", ...restProps, $mode: mode, $radius: radius, $tone: tone, \"data-disabled\": t11, \"data-selected\": t12, disabled: t13, ref, type, $width: width, children: [\n    t14,\n    t15,\n    t16\n  ] }), $[52] = mode, $[53] = radius, $[54] = ref, $[55] = restProps, $[56] = t11, $[57] = t12, $[58] = t13, $[59] = t14, $[60] = t15, $[61] = t16, $[62] = tone, $[63] = type, $[64] = width, $[65] = t17) : t17 = $[65], t17;\n});\nButton.displayName = \"ForwardRef(Button)\";\nfunction cardStyle(props) {\n  return [cardBaseStyle(props), cardColorStyle(props)];\n}\nfunction cardBaseStyle(props) {\n  const {\n    $checkered\n  } = props, {\n    space\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    ${$checkered && (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n      background-size: ${space[3]}px ${space[3]}px;\n      background-position: 50% 50%;\n      background-image: var(--card-bg-image);\n    `}\n\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      outline: none;\n      text-decoration: none;\n    }\n\n    /* &:is(pre) */\n    &[data-as='pre'] {\n      font: inherit;\n    }\n  `;\n}\nfunction cardColorStyle(props) {\n  const {\n    $checkered,\n    $focusRing,\n    $muted\n  } = props, {\n    card,\n    color,\n    style\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), border2 = {\n    width: card.border.width,\n    color: \"var(--card-border-color)\"\n  };\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    color-scheme: ${color._dark ? \"dark\" : \"light\"};\n\n    ${_cardColorStyle(color, color, $checkered)}\n\n    background-color: ${$muted ? \"var(--card-muted-bg-color)\" : \"var(--card-bg-color)\"};\n    color: var(--card-fg-color);\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      --card-focus-ring-box-shadow: none;\n\n      cursor: default;\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &:disabled {\n        ${_cardColorStyle(color, color.selectable.default.disabled, $checkered)}\n      }\n\n      &:not(:disabled) {\n        &[data-pressed] {\n          ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}\n        }\n\n        &[data-selected] {\n          ${_cardColorStyle(color, color.selectable.default.selected, $checkered)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${_cardColorStyle(color, color.selectable.default.hovered, $checkered)}\n            }\n\n            &:active {\n              ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}\n            }\n          }\n        }\n\n        &:focus-visible {\n          --card-focus-ring-box-shadow: ${$focusRing ? focusRingStyle({\n    base: color,\n    border: border2,\n    focusRing: card.focusRing\n  }) : void 0};\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      cursor: pointer;\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &[data-disabled] {\n        ${_cardColorStyle(color, color.selectable.default.disabled, $checkered)}\n      }\n\n      &:not([data-disabled]) {\n        &[data-pressed] {\n          ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}\n        }\n\n        &[data-selected] {\n          ${_cardColorStyle(color, color.selectable.default.selected, $checkered)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${_cardColorStyle(color, color.selectable.default.hovered, $checkered)}\n            }\n\n            &:active {\n              ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}\n            }\n          }\n        }\n\n        &:focus-visible {\n          --card-focus-ring-box-shadow: ${$focusRing ? focusRingStyle({\n    base: color,\n    border: border2,\n    focusRing: card.focusRing\n  }) : void 0};\n        }\n      }\n    }\n\n    ${style?.card?.root}\n  `;\n}\nconst StyledCard = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"StyledCard\",\n  componentId: \"sc-osnro2-0\"\n})(responsiveBorderStyle, responsiveRadiusStyle, responsiveShadowStyle, cardStyle), Card = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(42);\n  let asProp, border2, borderBottom2, borderLeft2, borderRight2, borderTop2, muted, pressed, restProps, scheme, selected, shadow, t0, t1, t2, t3;\n  $[0] !== props ? ({\n    __unstable_checkered: t0,\n    __unstable_focusRing: t1,\n    as: asProp,\n    border: border2,\n    borderTop: borderTop2,\n    borderRight: borderRight2,\n    borderBottom: borderBottom2,\n    borderLeft: borderLeft2,\n    muted,\n    pressed,\n    radius: t2,\n    scheme,\n    selected,\n    shadow,\n    tone: t3,\n    ...restProps\n  } = props, $[0] = props, $[1] = asProp, $[2] = border2, $[3] = borderBottom2, $[4] = borderLeft2, $[5] = borderRight2, $[6] = borderTop2, $[7] = muted, $[8] = pressed, $[9] = restProps, $[10] = scheme, $[11] = selected, $[12] = shadow, $[13] = t0, $[14] = t1, $[15] = t2, $[16] = t3) : (asProp = $[1], border2 = $[2], borderBottom2 = $[3], borderLeft2 = $[4], borderRight2 = $[5], borderTop2 = $[6], muted = $[7], pressed = $[8], restProps = $[9], scheme = $[10], selected = $[11], shadow = $[12], t0 = $[13], t1 = $[14], t2 = $[15], t3 = $[16]);\n  const checkered = t0 === void 0 ? !1 : t0, focusRing = t1 === void 0 ? !1 : t1, radius = t2 === void 0 ? 0 : t2, toneProp = t3 === void 0 ? \"default\" : t3, as = (0,react_is__WEBPACK_IMPORTED_MODULE_3__.isValidElementType)(asProp) ? asProp : \"div\", rootTheme = useRootTheme(), tone = toneProp === \"inherit\" ? rootTheme.tone : toneProp, t4 = typeof as == \"string\" ? as : void 0, t5 = rootTheme.scheme, t6 = useArrayProp(border2), t7 = useArrayProp(borderTop2), t8 = useArrayProp(borderRight2), t9 = useArrayProp(borderBottom2), t10 = useArrayProp(borderLeft2), t11 = useArrayProp(radius), t12 = useArrayProp(shadow), t13 = checkered ? \"\" : void 0, t14 = pressed ? \"\" : void 0, t15 = selected ? \"\" : void 0;\n  let t16;\n  $[17] !== as || $[18] !== checkered || $[19] !== focusRing || $[20] !== muted || $[21] !== ref || $[22] !== restProps || $[23] !== rootTheme.scheme || $[24] !== selected || $[25] !== t10 || $[26] !== t11 || $[27] !== t12 || $[28] !== t13 || $[29] !== t14 || $[30] !== t15 || $[31] !== t4 || $[32] !== t6 || $[33] !== t7 || $[34] !== t8 || $[35] !== t9 || $[36] !== tone ? (t16 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledCard, { \"data-as\": t4, \"data-scheme\": t5, \"data-ui\": \"Card\", \"data-tone\": tone, ...restProps, $border: t6, $borderTop: t7, $borderRight: t8, $borderBottom: t9, $borderLeft: t10, $checkered: checkered, $focusRing: focusRing, $muted: muted, $radius: t11, $shadow: t12, $tone: tone, \"data-checkered\": t13, \"data-pressed\": t14, \"data-selected\": t15, forwardedAs: as, ref, selected }), $[17] = as, $[18] = checkered, $[19] = focusRing, $[20] = muted, $[21] = ref, $[22] = restProps, $[23] = rootTheme.scheme, $[24] = selected, $[25] = t10, $[26] = t11, $[27] = t12, $[28] = t13, $[29] = t14, $[30] = t15, $[31] = t4, $[32] = t6, $[33] = t7, $[34] = t8, $[35] = t9, $[36] = tone, $[37] = t16) : t16 = $[37];\n  let t17;\n  return $[38] !== scheme || $[39] !== t16 || $[40] !== tone ? (t17 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeColorProvider, { scheme, tone, children: t16 }), $[38] = scheme, $[39] = t16, $[40] = tone, $[41] = t17) : t17 = $[41], t17;\n});\nCard.displayName = \"ForwardRef(Card)\";\nfunction checkboxBaseStyles() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    position: relative;\n    display: inline-block;\n  `;\n}\nfunction inputElementStyles(props) {\n  const {\n    color,\n    input,\n    radius\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), {\n    focusRing\n  } = input.checkbox;\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    opacity: 0;\n    z-index: 1;\n    padding: 0;\n    margin: 0;\n\n    & + span {\n      position: relative;\n      display: block;\n      height: ${rem(input.checkbox.size)};\n      width: ${rem(input.checkbox.size)};\n      box-sizing: border-box;\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.border,\n    width: input.border.width\n  })};\n      border-radius: ${rem(radius[2])};\n      line-height: 1;\n      background-color: ${color.input.default.enabled.bg};\n\n      & > svg {\n        display: block;\n        position: absolute;\n        opacity: 0;\n        height: 100%;\n        width: 100%;\n\n        & > path {\n          vector-effect: non-scaling-stroke;\n          stroke-width: 1.5px !important;\n        }\n      }\n    }\n\n    &:checked + span {\n      background: ${color.input.default.enabled.fg};\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.fg,\n    width: input.border.width\n  })};\n      color: ${color.input.default.enabled.bg};\n    }\n\n    /* focus */\n    &:not(:disabled):focus:focus-visible + span {\n      box-shadow: ${focusRingStyle({\n    focusRing\n  })};\n    }\n\n    /* focus when checked - uses a different offset */\n    &:not(:disabled):focus:focus-visible&:checked + span {\n      box-shadow: ${focusRingStyle({\n    focusRing: {\n      width: 1,\n      offset: 1\n    }\n  })};\n    }\n\n    &[data-error] + span {\n      background-color: ${color.input.invalid.enabled.border};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.input.invalid.enabled.muted.bg\n  })};\n      color: ${color.input.default.disabled.fg};\n    }\n    &[data-error]&:checked + span {\n      background-color: ${color.input.invalid.enabled.muted.bg};\n      color: ${color.input.default.enabled.bg};\n    }\n    &[data-error]&:checked&:not(:disabled):focus:focus-visible + span {\n      box-shadow: ${focusRingStyle({\n    border: {\n      width: input.border.width,\n      color: color.input.invalid.readOnly.muted.bg\n    },\n    focusRing: {\n      width: 1,\n      offset: 1\n    }\n  })};\n    }\n\n    &:disabled + span {\n      background-color: ${color.input.default.disabled.bg};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.input.default.disabled.border\n  })};\n      color: ${color.input.default.disabled.fg};\n    }\n    &:disabled&:checked + span {\n      background-color: ${color.input.default.disabled.muted.bg};\n    }\n\n    &[data-read-only] + span {\n      background-color: ${color.input.default.readOnly.bg};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.input.default.readOnly.border\n  })};\n      color: ${color.input.default.readOnly.fg};\n    }\n\n    &[data-read-only]&:checked + span {\n      background-color: ${color.input.default.readOnly.muted.bg};\n    }\n\n    &:checked + span > svg:first-child {\n      opacity: 1;\n    }\n    &:indeterminate + span > svg:last-child {\n      opacity: 1;\n    }\n  `;\n}\nconst StyledCheckbox = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledCheckbox\",\n  componentId: \"sc-1l5mt2l-0\"\n})(checkboxBaseStyles), Input$5 = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.input.withConfig({\n  displayName: \"Input\",\n  componentId: \"sc-1l5mt2l-1\"\n})(inputElementStyles), Checkbox = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(25);\n  let checked, className, customValidity, disabled, indeterminate, readOnly, restProps, style;\n  $[0] !== props ? ({\n    checked,\n    className,\n    disabled,\n    indeterminate,\n    customValidity,\n    readOnly,\n    style,\n    ...restProps\n  } = props, $[0] = props, $[1] = checked, $[2] = className, $[3] = customValidity, $[4] = disabled, $[5] = indeterminate, $[6] = readOnly, $[7] = restProps, $[8] = style) : (checked = $[1], className = $[2], customValidity = $[3], disabled = $[4], indeterminate = $[5], readOnly = $[6], restProps = $[7], style = $[8]);\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n  let t0;\n  $[9] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = () => ref.current, $[9] = t0) : t0 = $[9], (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t0);\n  let t1, t2;\n  $[10] !== indeterminate ? (t1 = () => {\n    ref.current && (ref.current.indeterminate = indeterminate || !1);\n  }, t2 = [indeterminate], $[10] = indeterminate, $[11] = t1, $[12] = t2) : (t1 = $[11], t2 = $[12]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t1, t2), useCustomValidity(ref, customValidity);\n  const t3 = !disabled && readOnly ? \"\" : void 0, t4 = customValidity ? \"\" : void 0, t5 = disabled || readOnly;\n  let t6;\n  $[13] !== checked || $[14] !== readOnly || $[15] !== restProps || $[16] !== t3 || $[17] !== t4 || $[18] !== t5 ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Input$5, { \"data-read-only\": t3, \"data-error\": t4, ...restProps, checked, disabled: t5, type: \"checkbox\", readOnly, ref }), $[13] = checked, $[14] = readOnly, $[15] = restProps, $[16] = t3, $[17] = t4, $[18] = t5, $[19] = t6) : t6 = $[19];\n  let t7;\n  $[20] === Symbol.for(\"react.memo_cache_sentinel\") ? (t7 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_9__.CheckmarkIcon, {}),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_9__.RemoveIcon, {})\n  ] }), $[20] = t7) : t7 = $[20];\n  let t8;\n  return $[21] !== className || $[22] !== style || $[23] !== t6 ? (t8 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledCheckbox, { className, \"data-ui\": \"Checkbox\", style, children: [\n    t6,\n    t7\n  ] }), $[21] = className, $[22] = style, $[23] = t6, $[24] = t8) : t8 = $[24], t8;\n});\nCheckbox.displayName = \"ForwardRef(Checkbox)\";\nfunction codeSyntaxHighlightingStyle({\n  theme\n}) {\n  const {\n    color: {\n      syntax: color\n    }\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(theme);\n  return {\n    \"&.atrule\": {\n      color: color.atrule\n    },\n    \"&.attr-name\": {\n      color: color.attrName\n    },\n    \"&.attr-value\": {\n      color: color.attrValue\n    },\n    \"&.attribute\": {\n      color: color.attribute\n    },\n    \"&.boolean\": {\n      color: color.boolean\n    },\n    \"&.builtin\": {\n      color: color.builtin\n    },\n    \"&.cdata\": {\n      color: color.cdata\n    },\n    \"&.char\": {\n      color: color.char\n    },\n    \"&.class\": {\n      color: color.class\n    },\n    \"&.class-name\": {\n      color: color.className\n    },\n    \"&.comment\": {\n      color: color.comment\n    },\n    \"&.constant\": {\n      color: color.constant\n    },\n    \"&.deleted\": {\n      color: color.deleted\n    },\n    \"&.doctype\": {\n      color: color.doctype\n    },\n    \"&.entity\": {\n      color: color.entity\n    },\n    \"&.function\": {\n      color: color.function\n    },\n    \"&.hexcode\": {\n      color: color.hexcode\n    },\n    \"&.id\": {\n      color: color.id\n    },\n    \"&.important\": {\n      color: color.important\n    },\n    \"&.inserted\": {\n      color: color.inserted\n    },\n    \"&.keyword\": {\n      color: color.keyword\n    },\n    \"&.number\": {\n      color: color.number\n    },\n    \"&.operator\": {\n      color: color.operator\n    },\n    \"&.prolog\": {\n      color: color.prolog\n    },\n    \"&.property\": {\n      color: color.property\n    },\n    \"&.pseudo-class\": {\n      color: color.pseudoClass\n    },\n    \"&.pseudo-element\": {\n      color: color.pseudoElement\n    },\n    \"&.punctuation\": {\n      color: color.punctuation\n    },\n    \"&.regex\": {\n      color: color.regex\n    },\n    \"&.selector\": {\n      color: color.selector\n    },\n    \"&.string\": {\n      color: color.string\n    },\n    \"&.symbol\": {\n      color: color.symbol\n    },\n    \"&.tag\": {\n      color: color.tag\n    },\n    \"&.unit\": {\n      color: color.unit\n    },\n    \"&.url\": {\n      color: color.url\n    },\n    \"&.variable\": {\n      color: color.variable\n    }\n  };\n}\nfunction codeBaseStyle() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    color: var(--card-code-fg-color);\n\n    & code {\n      font-family: inherit;\n\n      &.refractor .token {\n        ${codeSyntaxHighlightingStyle}\n      }\n    }\n\n    & a {\n      color: inherit;\n      text-decoration: underline;\n      border-radius: 1px;\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `;\n}\nconst LazyRefractor = (0,react__WEBPACK_IMPORTED_MODULE_2__.lazy)(() => Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/property-information\"), __webpack_require__.e(\"vendor-chunks/refractor\"), __webpack_require__.e(\"vendor-chunks/react-refractor\"), __webpack_require__.e(\"vendor-chunks/hastscript\"), __webpack_require__.e(\"vendor-chunks/unist-util-visit-parents\"), __webpack_require__.e(\"vendor-chunks/parse-entities\"), __webpack_require__.e(\"vendor-chunks/character-reference-invalid\"), __webpack_require__.e(\"vendor-chunks/character-entities\"), __webpack_require__.e(\"vendor-chunks/character-entities-legacy\"), __webpack_require__.e(\"vendor-chunks/xtend\"), __webpack_require__.e(\"vendor-chunks/unist-util-is\"), __webpack_require__.e(\"vendor-chunks/unist-util-filter\"), __webpack_require__.e(\"vendor-chunks/space-separated-tokens\"), __webpack_require__.e(\"vendor-chunks/prismjs\"), __webpack_require__.e(\"vendor-chunks/is-hexadecimal\"), __webpack_require__.e(\"vendor-chunks/is-decimal\"), __webpack_require__.e(\"vendor-chunks/is-alphanumerical\"), __webpack_require__.e(\"vendor-chunks/is-alphabetical\"), __webpack_require__.e(\"vendor-chunks/hast-util-parse-selector\"), __webpack_require__.e(\"vendor-chunks/comma-separated-tokens\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./refractor.mjs */ \"(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/refractor.mjs\"))), StyledCode = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.pre.withConfig({\n  displayName: \"StyledCode\",\n  componentId: \"sc-4dymyn-0\"\n})(codeBaseStyle, responsiveCodeFontStyle), Code = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(20);\n  let children, language, restProps, t0, weight;\n  $[0] !== props ? ({\n    children,\n    language,\n    size: t0,\n    weight,\n    ...restProps\n  } = props, $[0] = props, $[1] = children, $[2] = language, $[3] = restProps, $[4] = t0, $[5] = weight) : (children = $[1], language = $[2], restProps = $[3], t0 = $[4], weight = $[5]);\n  const t1 = useArrayProp(t0 === void 0 ? 2 : t0);\n  let t2;\n  $[6] !== children ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\", { children }), $[6] = children, $[7] = t2) : t2 = $[7];\n  let t3;\n  $[8] !== children || $[9] !== language ? (t3 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LazyRefractor, { language, value: children }), $[8] = children, $[9] = language, $[10] = t3) : t3 = $[10];\n  let t4;\n  $[11] !== t2 || $[12] !== t3 ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_2__.Suspense, { fallback: t2, children: t3 }), $[11] = t2, $[12] = t3, $[13] = t4) : t4 = $[13];\n  let t5;\n  return $[14] !== ref || $[15] !== restProps || $[16] !== t1 || $[17] !== t4 || $[18] !== weight ? (t5 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledCode, { \"data-ui\": \"Code\", ...restProps, $size: t1, $weight: weight, ref, children: t4 }), $[14] = ref, $[15] = restProps, $[16] = t1, $[17] = t4, $[18] = weight, $[19] = t5) : t5 = $[19], t5;\n});\nCode.displayName = \"ForwardRef(Code)\";\nconst BASE_STYLE$1 = {\n  width: \"100%\",\n  margin: \"0 auto\"\n};\nfunction containerBaseStyle() {\n  return BASE_STYLE$1;\n}\nfunction responsiveContainerWidthStyle(props) {\n  const {\n    container,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$width, (val) => ({\n    maxWidth: val === \"auto\" ? \"none\" : rem(container[val])\n  }));\n}\nconst StyledContainer = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"StyledContainer\",\n  componentId: \"sc-wyroop-0\"\n})(containerBaseStyle, responsiveContainerWidthStyle), Container = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(9);\n  let as, restProps, t0;\n  $[0] !== props ? ({\n    as,\n    width: t0,\n    ...restProps\n  } = props, $[0] = props, $[1] = as, $[2] = restProps, $[3] = t0) : (as = $[1], restProps = $[2], t0 = $[3]);\n  const t1 = useArrayProp(t0 === void 0 ? 2 : t0);\n  let t2;\n  return $[4] !== as || $[5] !== ref || $[6] !== restProps || $[7] !== t1 ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledContainer, { \"data-ui\": \"Container\", ...restProps, $width: t1, forwardedAs: as, ref }), $[4] = as, $[5] = ref, $[6] = restProps, $[7] = t1, $[8] = t2) : t2 = $[8], t2;\n});\nContainer.displayName = \"ForwardRef(Container)\";\nconst StyledGrid = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"StyledGrid\",\n  componentId: \"sc-v8t8oz-0\"\n})(responsiveGridStyle), Grid = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(26);\n  let as, autoCols, autoFlow, autoRows, children, columns, gap, gapX, gapY, restProps, rows;\n  $[0] !== props ? ({\n    as,\n    autoRows,\n    autoCols,\n    autoFlow,\n    columns,\n    gap,\n    gapX,\n    gapY,\n    rows,\n    children,\n    ...restProps\n  } = props, $[0] = props, $[1] = as, $[2] = autoCols, $[3] = autoFlow, $[4] = autoRows, $[5] = children, $[6] = columns, $[7] = gap, $[8] = gapX, $[9] = gapY, $[10] = restProps, $[11] = rows) : (as = $[1], autoCols = $[2], autoFlow = $[3], autoRows = $[4], children = $[5], columns = $[6], gap = $[7], gapX = $[8], gapY = $[9], restProps = $[10], rows = $[11]);\n  const t0 = typeof as == \"string\" ? as : void 0, t1 = useArrayProp(autoRows), t2 = useArrayProp(autoCols), t3 = useArrayProp(autoFlow), t4 = useArrayProp(columns), t5 = useArrayProp(gap), t6 = useArrayProp(gapX), t7 = useArrayProp(gapY), t8 = useArrayProp(rows);\n  let t9;\n  return $[12] !== as || $[13] !== children || $[14] !== ref || $[15] !== restProps || $[16] !== t0 || $[17] !== t1 || $[18] !== t2 || $[19] !== t3 || $[20] !== t4 || $[21] !== t5 || $[22] !== t6 || $[23] !== t7 || $[24] !== t8 ? (t9 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledGrid, { \"data-as\": t0, \"data-ui\": \"Grid\", ...restProps, $autoRows: t1, $autoCols: t2, $autoFlow: t3, $columns: t4, $gap: t5, $gapX: t6, $gapY: t7, $rows: t8, forwardedAs: as, ref, children }), $[12] = as, $[13] = children, $[14] = ref, $[15] = restProps, $[16] = t0, $[17] = t1, $[18] = t2, $[19] = t3, $[20] = t4, $[21] = t5, $[22] = t6, $[23] = t7, $[24] = t8, $[25] = t9) : t9 = $[25], t9;\n});\nGrid.displayName = \"ForwardRef(Grid)\";\nfunction headingBaseStyle(props) {\n  const {\n    $accent,\n    $muted\n  } = props, {\n    font\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    ${$accent && (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${$muted && (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${font.code.family};\n      border-radius: 1px;\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n      color: var(--card-link-color);\n      outline: none;\n\n      @media (hover: hover) {\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n\n      &:focus {\n        box-shadow:\n          0 0 0 1px var(--card-bg-color),\n          0 0 0 3px var(--card-focus-ring-color);\n      }\n\n      &:focus:not(:focus-visible) {\n        box-shadow: none;\n      }\n    }\n\n    & strong {\n      font-weight: ${font.heading.weights.bold};\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `;\n}\nconst StyledHeading = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledHeading\",\n  componentId: \"sc-137lwim-0\"\n})(headingBaseStyle, responsiveTextAlignStyle, responsiveHeadingFont), Heading = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(22);\n  let align, childrenProp, restProps, t0, t1, t2, textOverflow, weight;\n  $[0] !== props ? ({\n    accent: t0,\n    align,\n    children: childrenProp,\n    muted: t1,\n    size: t2,\n    textOverflow,\n    weight,\n    ...restProps\n  } = props, $[0] = props, $[1] = align, $[2] = childrenProp, $[3] = restProps, $[4] = t0, $[5] = t1, $[6] = t2, $[7] = textOverflow, $[8] = weight) : (align = $[1], childrenProp = $[2], restProps = $[3], t0 = $[4], t1 = $[5], t2 = $[6], textOverflow = $[7], weight = $[8]);\n  const accent = t0 === void 0 ? !1 : t0, muted = t1 === void 0 ? !1 : t1, size2 = t2 === void 0 ? 2 : t2;\n  let children = childrenProp;\n  if (textOverflow === \"ellipsis\") {\n    let t32;\n    $[9] !== children ? (t32 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SpanWithTextOverflow, { children }), $[9] = children, $[10] = t32) : t32 = $[10], children = t32;\n  }\n  const t3 = useArrayProp(align), t4 = useArrayProp(size2);\n  let t5;\n  $[11] !== children ? (t5 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children }), $[11] = children, $[12] = t5) : t5 = $[12];\n  let t6;\n  return $[13] !== accent || $[14] !== muted || $[15] !== ref || $[16] !== restProps || $[17] !== t3 || $[18] !== t4 || $[19] !== t5 || $[20] !== weight ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledHeading, { \"data-ui\": \"Heading\", ...restProps, $accent: accent, $align: t3, $muted: muted, $size: t4, $weight: weight, ref, children: t5 }), $[13] = accent, $[14] = muted, $[15] = ref, $[16] = restProps, $[17] = t3, $[18] = t4, $[19] = t5, $[20] = weight, $[21] = t6) : t6 = $[21], t6;\n});\nHeading.displayName = \"ForwardRef(Heading)\";\nfunction inlineBaseStyle() {\n  return {\n    lineHeight: 0,\n    \"&&:not([hidden])\": {\n      display: \"block\"\n    },\n    \"& > div\": {\n      display: \"inline-block\",\n      verticalAlign: \"middle\"\n    }\n  };\n}\nfunction inlineSpaceStyle(props) {\n  const {\n    media,\n    space\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$space, (spaceIndex) => {\n    const _space = rem(spaceIndex === 0.5 ? space[1] / 2 : space[spaceIndex]);\n    return {\n      margin: `-${_space} 0 0 -${_space}`,\n      \"& > div\": {\n        padding: `${_space} 0 0 ${_space}`\n      }\n    };\n  });\n}\nconst StyledInline = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"StyledInline\",\n  componentId: \"sc-1pkiy6j-0\"\n})(inlineBaseStyle, inlineSpaceStyle), Inline = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(12);\n  let as, childrenProp, restProps, space;\n  $[0] !== props ? ({\n    as,\n    children: childrenProp,\n    space,\n    ...restProps\n  } = props, $[0] = props, $[1] = as, $[2] = childrenProp, $[3] = restProps, $[4] = space) : (as = $[1], childrenProp = $[2], restProps = $[3], space = $[4]);\n  let t0, t1;\n  $[5] !== childrenProp ? (t1 = react__WEBPACK_IMPORTED_MODULE_2__.Children.map(childrenProp, _temp$4), $[5] = childrenProp, $[6] = t1) : t1 = $[6], t0 = t1;\n  const children = t0, t2 = useArrayProp(space);\n  let t3;\n  return $[7] !== as || $[8] !== children || $[9] !== restProps || $[10] !== t2 ? (t3 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledInline, { \"data-ui\": \"Inline\", ...restProps, $space: t2, forwardedAs: as, ref, children }), $[7] = as, $[8] = children, $[9] = restProps, $[10] = t2, $[11] = t3) : t3 = $[11], t3;\n});\nInline.displayName = \"ForwardRef(Inline)\";\nfunction _temp$4(child) {\n  return child && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { children: child });\n}\nfunction kbdStyle() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    --card-bg-color: var(--card-kbd-bg-color);\n    --card-border-color: var(--card-kbd-border-color);\n    --card-fg-color: var(--card-kbd-fg-color);\n\n    box-shadow: inset 0 0 0 1px var(--card-border-color);\n    background: var(--card-bg-color);\n    font: inherit;\n\n    vertical-align: top;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `;\n}\nconst StyledKBD = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.kbd.withConfig({\n  displayName: \"StyledKBD\",\n  componentId: \"sc-1w7yd8w-0\"\n})(responsiveRadiusStyle, kbdStyle), KBD = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(17);\n  let children, restProps, t0, t1, t2;\n  $[0] !== props ? ({\n    children,\n    fontSize: t0,\n    padding: t1,\n    radius: t2,\n    ...restProps\n  } = props, $[0] = props, $[1] = children, $[2] = restProps, $[3] = t0, $[4] = t1, $[5] = t2) : (children = $[1], restProps = $[2], t0 = $[3], t1 = $[4], t2 = $[5]);\n  const fontSize2 = t0 === void 0 ? 0 : t0, padding = t1 === void 0 ? 1 : t1, t3 = useArrayProp(t2 === void 0 ? 2 : t2);\n  let t4;\n  $[6] !== children || $[7] !== fontSize2 ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { as: \"span\", size: fontSize2, weight: \"semibold\", children }), $[6] = children, $[7] = fontSize2, $[8] = t4) : t4 = $[8];\n  let t5;\n  $[9] !== padding || $[10] !== t4 ? (t5 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { as: \"span\", padding, children: t4 }), $[9] = padding, $[10] = t4, $[11] = t5) : t5 = $[11];\n  let t6;\n  return $[12] !== ref || $[13] !== restProps || $[14] !== t3 || $[15] !== t5 ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledKBD, { \"data-ui\": \"KBD\", ...restProps, $radius: t3, ref, children: t5 }), $[12] = ref, $[13] = restProps, $[14] = t3, $[15] = t5, $[16] = t6) : t6 = $[16], t6;\n});\nKBD.displayName = \"ForwardRef(KBD)\";\nconst origin = {\n  name: \"@sanity/ui/origin\",\n  fn({\n    middlewareData,\n    placement,\n    rects\n  }) {\n    const [side] = placement.split(\"-\"), floatingWidth = rects.floating.width, floatingHeight = rects.floating.height, shiftX = middlewareData.shift?.x || 0, shiftY = middlewareData.shift?.y || 0;\n    if (floatingWidth <= 0 || floatingHeight <= 0)\n      return {};\n    const isVerticalPlacement = [\"bottom\", \"top\"].includes(side), {\n      originX,\n      originY\n    } = isVerticalPlacement ? {\n      originX: clamp(0.5 - shiftX / floatingWidth, 0, 1),\n      originY: side === \"bottom\" ? 0 : 1\n    } : {\n      originX: side === \"left\" ? 1 : 0,\n      originY: clamp(0.5 - shiftY / floatingHeight, 0, 1)\n    };\n    return {\n      data: {\n        originX,\n        originY\n      }\n    };\n  }\n};\nfunction clamp(num, min, max) {\n  return Math.min(Math.max(num, min), max);\n}\nfunction moveTowardsLength(movingPoint, targetPoint, amount) {\n  const width = targetPoint.x - movingPoint.x, height = targetPoint.y - movingPoint.y, distance = Math.sqrt(width * width + height * height);\n  return moveTowardsFractional(movingPoint, targetPoint, Math.min(1, amount / distance));\n}\nfunction moveTowardsFractional(movingPoint, targetPoint, fraction) {\n  return {\n    x: movingPoint.x + (targetPoint.x - movingPoint.x) * fraction,\n    y: movingPoint.y + (targetPoint.y - movingPoint.y) * fraction\n  };\n}\nfunction getRoundedCommands(points) {\n  const len = points.length, cmds = [];\n  for (let i = 0; i < len; i += 1) {\n    const point = points[i], prevPoint = points[i - 1], nextPoint = points[i + 1];\n    if (prevPoint && point.radius) {\n      const curveStart = moveTowardsLength(point, prevPoint, point.radius), curveEnd = moveTowardsLength(point, nextPoint, point.radius), startControl = moveTowardsFractional(curveStart, point, 0.5), endControl = moveTowardsFractional(point, curveEnd, 0.5);\n      cmds.push({\n        type: \"point\",\n        ...curveStart\n      }), cmds.push({\n        type: \"curve\",\n        curveEnd,\n        startControl,\n        endControl\n      });\n    } else\n      cmds.push({\n        type: \"point\",\n        ...point\n      });\n  }\n  return cmds;\n}\nfunction compileCommands(cmds) {\n  return cmds.map((n, idx) => n.type === \"point\" ? `${idx === 0 ? \"M\" : \"L\"} ${n.x} ${n.y}` : n.type === \"curve\" ? `C ${n.startControl.x} ${n.startControl.y} ${n.endControl.x} ${n.endControl.y} ${n.curveEnd.x} ${n.curveEnd.y}` : \"\").join(\" \");\n}\nconst StyledArrow = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledArrow\",\n  componentId: \"sc-12vzy6c-0\"\n})(({\n  $w: w\n}) => (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    position: absolute;\n    width: ${w}px;\n    height: ${w}px;\n\n    :empty + & {\n      display: none;\n    }\n\n    & > svg {\n      display: block;\n      line-height: 0;\n      transform-origin: ${w / 2}px ${w / 2}px;\n    }\n\n    [data-placement^='top'] > & {\n      bottom: -${w}px;\n\n      & > svg {\n        transform: rotate(0);\n      }\n    }\n\n    [data-placement^='right'] > & {\n      left: -${w}px;\n\n      & > svg {\n        transform: rotate(90deg);\n      }\n    }\n\n    [data-placement^='left'] > & {\n      right: -${w}px;\n\n      & > svg {\n        transform: rotate(-90deg);\n      }\n    }\n\n    [data-placement^='bottom'] > & {\n      top: -${w}px;\n\n      & > svg {\n        transform: rotate(180deg);\n      }\n    }\n  `), StrokePath = styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.path.withConfig({\n  displayName: \"StrokePath\",\n  componentId: \"sc-12vzy6c-1\"\n})`stroke:var(--card-shadow-outline-color);`, ShapePath = styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.path.withConfig({\n  displayName: \"ShapePath\",\n  componentId: \"sc-12vzy6c-2\"\n})`fill:var(--card-bg-color);`, Arrow = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(24);\n  let h, restProps, t0, w;\n  $[0] !== props ? ({\n    width: w,\n    height: h,\n    radius: t0,\n    ...restProps\n  } = props, $[0] = props, $[1] = h, $[2] = restProps, $[3] = t0, $[4] = w) : (h = $[1], restProps = $[2], t0 = $[3], w = $[4]);\n  const radius = t0 === void 0 ? 0 : t0, {\n    card\n  } = useTheme_v2(), strokeWidth = card.shadow.outline, center = w / 2, points = [{\n    x: 0,\n    y: 0\n  }, {\n    x: radius,\n    y: 0,\n    radius\n  }, {\n    x: center,\n    y: h - 1,\n    radius\n  }, {\n    x: w - radius,\n    y: 0,\n    radius\n  }, {\n    x: w,\n    y: 0\n  }], cmds = getRoundedCommands(points), path = compileCommands(cmds), strokePath = `${path}`, fillPath = `${path} M ${w} -1 M 0 -1 Z`, t1 = `0 0 ${w} ${w}`;\n  let t2;\n  $[5] !== strokeWidth || $[6] !== w ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"mask\", { id: \"stroke-mask\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\", { x: 0, y: strokeWidth, width: w, height: w, fill: \"white\" }) }), $[5] = strokeWidth, $[6] = w, $[7] = t2) : t2 = $[7];\n  const t3 = strokeWidth * 2;\n  let t4;\n  $[8] !== strokePath || $[9] !== t3 ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StrokePath, { d: strokePath, mask: \"url(#stroke-mask)\", strokeWidth: t3 }), $[8] = strokePath, $[9] = t3, $[10] = t4) : t4 = $[10];\n  let t5;\n  $[11] !== fillPath ? (t5 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ShapePath, { d: fillPath }), $[11] = fillPath, $[12] = t5) : t5 = $[12];\n  let t6;\n  $[13] !== t1 || $[14] !== t2 || $[15] !== t4 || $[16] !== t5 || $[17] !== w ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\", { width: w, height: w, viewBox: t1, children: [\n    t2,\n    t4,\n    t5\n  ] }), $[13] = t1, $[14] = t2, $[15] = t4, $[16] = t5, $[17] = w, $[18] = t6) : t6 = $[18];\n  let t7;\n  return $[19] !== ref || $[20] !== restProps || $[21] !== t6 || $[22] !== w ? (t7 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledArrow, { ...restProps, $w: w, ref, children: t6 }), $[19] = ref, $[20] = restProps, $[21] = t6, $[22] = w, $[23] = t7) : t7 = $[23], t7;\n});\nArrow.displayName = \"ForwardRef(Arrow)\";\nconst BoundaryElementContext = createGlobalScopedContext(\"@sanity/ui/context/boundaryElement\", null);\nfunction BoundaryElementProvider(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(5), {\n    children,\n    element\n  } = props;\n  let t0, t1;\n  $[0] !== element ? (t1 = {\n    version: 0,\n    element\n  }, $[0] = element, $[1] = t1) : t1 = $[1], t0 = t1;\n  const value = t0;\n  let t2;\n  return $[2] !== children || $[3] !== value ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BoundaryElementContext.Provider, { value, children }), $[2] = children, $[3] = value, $[4] = t2) : t2 = $[4], t2;\n}\nBoundaryElementProvider.displayName = \"BoundaryElementProvider\";\nfunction isRecord(value) {\n  return !!(value && typeof value == \"object\" && !Array.isArray(value));\n}\nconst DEFAULT_VALUE = {\n  version: 0,\n  element: null\n};\nfunction useBoundaryElement() {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(BoundaryElementContext);\n  if (value && (!isRecord(value) || value.version !== 0))\n    throw new Error(\"useBoundaryElement(): the context value is not compatible\");\n  return value || DEFAULT_VALUE;\n}\nfunction ConditionalWrapper({\n  children,\n  condition,\n  wrapper\n}) {\n  return condition ? wrapper(children) : children;\n}\nConditionalWrapper.displayName = \"ConditionalWrapper\";\nfunction findMaxBreakpoints(media, width) {\n  const ret = [];\n  for (let i = 0; i < media.length; i += 1)\n    media[i] > width && ret.push(i);\n  return ret;\n}\nfunction findMinBreakpoints(media, width) {\n  const ret = [];\n  for (let i = 0; i < media.length; i += 1)\n    media[i] <= width && ret.push(i);\n  return ret;\n}\nconst ElementQuery = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(18), theme = useTheme_v2();\n  let _media, children, restProps;\n  $[0] !== props ? ({\n    children,\n    media: _media,\n    ...restProps\n  } = props, $[0] = props, $[1] = _media, $[2] = children, $[3] = restProps) : (_media = $[1], children = $[2], restProps = $[3]);\n  const media = _media ?? theme.media, [element, setElement] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null), elementSize = useElementSize(element);\n  let t0;\n  t0 = elementSize?.border.width ?? window.innerWidth;\n  const width = t0;\n  let t1, t2;\n  if ($[4] !== media || $[5] !== width) {\n    const eq = findMaxBreakpoints(media, width);\n    t2 = eq.length ? eq.join(\" \") : void 0, $[4] = media, $[5] = width, $[6] = t2;\n  } else\n    t2 = $[6];\n  t1 = t2;\n  const max = t1;\n  let t3, t4;\n  if ($[7] !== media || $[8] !== width) {\n    const eq_0 = findMinBreakpoints(media, width);\n    t4 = eq_0.length ? eq_0.join(\" \") : void 0, $[7] = media, $[8] = width, $[9] = t4;\n  } else\n    t4 = $[9];\n  t3 = t4;\n  const min = t3;\n  let t5, t6;\n  $[10] !== element ? (t5 = () => element, t6 = [element], $[10] = element, $[11] = t5, $[12] = t6) : (t5 = $[11], t6 = $[12]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t5, t6);\n  let t7;\n  return $[13] !== children || $[14] !== max || $[15] !== min || $[16] !== restProps ? (t7 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { \"data-ui\": \"ElementQuery\", ...restProps, \"data-eq-max\": max, \"data-eq-min\": min, ref: setElement, children }), $[13] = children, $[14] = max, $[15] = min, $[16] = restProps, $[17] = t7) : t7 = $[17], t7;\n});\nElementQuery.displayName = \"ForwardRef(ElementQuery)\";\nfunction getLayerContext(contextValue) {\n  if (!isRecord(contextValue) || contextValue.version !== 0)\n    throw new Error(\"the context value is not compatible\");\n  if (!contextValue)\n    throw new Error(\"components using `useLayer()` should be wrapped in a <LayerProvider>.\");\n  if (contextValue.version === 0)\n    return contextValue;\n  throw new Error(\"could not get layer context\");\n}\nconst LayerContext = createGlobalScopedContext(\"@sanity/ui/context/layer\", null);\nfunction LayerProvider(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(19), {\n    children,\n    zOffset: t0\n  } = props, zOffsetProp = t0 === void 0 ? 0 : t0, parentContextValue = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(LayerContext);\n  let t1;\n  $[0] !== parentContextValue ? (t1 = parentContextValue && getLayerContext(parentContextValue), $[0] = parentContextValue, $[1] = t1) : t1 = $[1];\n  const parent = t1, parentRegisterChild = parent?.registerChild, level = (parent?.level ?? 0) + 1, zOffset = useArrayProp(zOffsetProp), maxMediaIndex = zOffset.length - 1, mediaIndex = Math.min(useMediaIndex(), maxMediaIndex), zIndex = parent ? parent.zIndex + zOffset[mediaIndex] : zOffset[mediaIndex];\n  let t2;\n  $[2] === Symbol.for(\"react.memo_cache_sentinel\") ? (t2 = {}, $[2] = t2) : t2 = $[2];\n  const [, setChildLayers] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(t2), [size2, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0), isTopLayer = size2 === 0;\n  let t3;\n  $[3] !== parentRegisterChild || $[4] !== setChildLayers ? (t3 = (childLevel) => {\n    const parentDispose = parentRegisterChild?.(childLevel);\n    return childLevel !== void 0 ? setChildLayers((state) => {\n      const prevLen = state[childLevel] ?? 0, nextState = {\n        ...state,\n        [childLevel]: prevLen + 1\n      };\n      return setSize(Object.keys(nextState).length), nextState;\n    }) : setSize(_temp$3), () => {\n      childLevel !== void 0 ? setChildLayers((state_0) => {\n        const nextState_0 = {\n          ...state_0\n        };\n        return nextState_0[childLevel] === 1 ? (delete nextState_0[childLevel], setSize(Object.keys(nextState_0).length)) : nextState_0[childLevel] = nextState_0[childLevel] - 1, nextState_0;\n      }) : setSize(_temp2$2), parentDispose?.();\n    };\n  }, $[3] = parentRegisterChild, $[4] = setChildLayers, $[5] = t3) : t3 = $[5];\n  const registerChild = t3;\n  let t4, t5;\n  $[6] !== level || $[7] !== parentRegisterChild ? (t4 = () => parentRegisterChild?.(level), t5 = [level, parentRegisterChild], $[6] = level, $[7] = parentRegisterChild, $[8] = t4, $[9] = t5) : (t4 = $[8], t5 = $[9]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t4, t5);\n  let t6, t7;\n  $[10] !== isTopLayer || $[11] !== level || $[12] !== registerChild || $[13] !== size2 || $[14] !== zIndex ? (t7 = {\n    version: 0,\n    isTopLayer,\n    level,\n    registerChild,\n    size: size2,\n    zIndex\n  }, $[10] = isTopLayer, $[11] = level, $[12] = registerChild, $[13] = size2, $[14] = zIndex, $[15] = t7) : t7 = $[15], t6 = t7;\n  const value = t6;\n  let t8;\n  return $[16] !== children || $[17] !== value ? (t8 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LayerContext.Provider, { value, children }), $[16] = children, $[17] = value, $[18] = t8) : t8 = $[18], t8;\n}\nfunction _temp2$2(v_0) {\n  return v_0 - 1;\n}\nfunction _temp$3(v) {\n  return v + 1;\n}\nLayerProvider.displayName = \"LayerProvider\";\nfunction useLayer() {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(2), value = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(LayerContext);\n  if (!value)\n    throw new Error(\"useLayer(): missing context value\");\n  try {\n    let t1;\n    return $[0] !== value ? (t1 = getLayerContext(value), $[0] = value, $[1] = t1) : t1 = $[1], t1;\n  } catch (t0) {\n    const err = t0;\n    throw err instanceof Error ? new Error(`useLayer(): ${err.message}`) : new Error(`useLayer(): ${err}`);\n  }\n}\nconst StyledLayer = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledLayer\",\n  componentId: \"sc-16kojrv-0\"\n})({\n  position: \"relative\"\n}), LayerChildren = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(22);\n  let children, onActivate, onFocus, restProps, t0;\n  $[0] !== props ? ({\n    children,\n    onActivate,\n    onFocus,\n    style: t0,\n    ...restProps\n  } = props, $[0] = props, $[1] = children, $[2] = onActivate, $[3] = onFocus, $[4] = restProps, $[5] = t0) : (children = $[1], onActivate = $[2], onFocus = $[3], restProps = $[4], t0 = $[5]);\n  const style = t0 === void 0 ? EMPTY_RECORD : t0, {\n    zIndex,\n    isTopLayer\n  } = useLayer(), lastFocusedRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), isTopLayerRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(isTopLayer);\n  let t1;\n  $[6] === Symbol.for(\"react.memo_cache_sentinel\") ? (t1 = () => ref.current, $[6] = t1) : t1 = $[6], (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t1);\n  let t2, t3;\n  $[7] !== isTopLayer || $[8] !== onActivate ? (t2 = () => {\n    isTopLayerRef.current !== isTopLayer && isTopLayer && onActivate?.({\n      activeElement: lastFocusedRef.current\n    }), isTopLayerRef.current = isTopLayer;\n  }, t3 = [isTopLayer, onActivate], $[7] = isTopLayer, $[8] = onActivate, $[9] = t2, $[10] = t3) : (t2 = $[9], t3 = $[10]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t2, t3);\n  let t4;\n  $[11] !== isTopLayer || $[12] !== onFocus ? (t4 = (event) => {\n    onFocus?.(event);\n    const rootElement = ref.current, target = document.activeElement;\n    !isTopLayer || !rootElement || !target || isHTMLElement(target) && containsOrEqualsElement(rootElement, target) && (lastFocusedRef.current = target);\n  }, $[11] = isTopLayer, $[12] = onFocus, $[13] = t4) : t4 = $[13];\n  const handleFocus = t4;\n  let t5;\n  $[14] !== style || $[15] !== zIndex ? (t5 = {\n    ...style,\n    zIndex\n  }, $[14] = style, $[15] = zIndex, $[16] = t5) : t5 = $[16];\n  let t6;\n  return $[17] !== children || $[18] !== handleFocus || $[19] !== restProps || $[20] !== t5 ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledLayer, { ...restProps, \"data-ui\": \"Layer\", onFocus: handleFocus, ref, style: t5, children }), $[17] = children, $[18] = handleFocus, $[19] = restProps, $[20] = t5, $[21] = t6) : t6 = $[21], t6;\n}), Layer = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(11);\n  let children, restProps, t0;\n  $[0] !== props ? ({\n    children,\n    zOffset: t0,\n    ...restProps\n  } = props, $[0] = props, $[1] = children, $[2] = restProps, $[3] = t0) : (children = $[1], restProps = $[2], t0 = $[3]);\n  const zOffset = t0 === void 0 ? 1 : t0;\n  let t1;\n  $[4] !== children || $[5] !== ref || $[6] !== restProps ? (t1 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LayerChildren, { ...restProps, ref, children }), $[4] = children, $[5] = ref, $[6] = restProps, $[7] = t1) : t1 = $[7];\n  let t2;\n  return $[8] !== t1 || $[9] !== zOffset ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LayerProvider, { zOffset, children: t1 }), $[8] = t1, $[9] = zOffset, $[10] = t2) : t2 = $[10], t2;\n});\nLayer.displayName = \"ForwardRef(Layer)\";\nconst key = \"@sanity/ui/context/portal\", elementKey = Symbol.for(`${key}/element`);\nglobalScope[elementKey] = null;\nconst defaultContextValue = {\n  version: 0,\n  boundaryElement: null,\n  get element() {\n    return typeof document > \"u\" ? null : (globalScope[elementKey] || (globalScope[elementKey] = document.createElement(\"div\"), globalScope[elementKey].setAttribute(\"data-portal\", \"\"), document.body.appendChild(globalScope[elementKey])), globalScope[elementKey]);\n  }\n}, PortalContext = createGlobalScopedContext(key, defaultContextValue);\nfunction usePortal() {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(PortalContext);\n  if (!value)\n    throw new Error(\"usePortal(): missing context value\");\n  if (!isRecord(value) || value.version !== 0)\n    throw new Error(\"usePortal(): the context value is not compatible\");\n  return value;\n}\nfunction Portal(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(3), {\n    children,\n    __unstable_name: name\n  } = props, portal = usePortal(), portalElement = (name ? portal.elements && portal.elements[name] : portal.element) || portal.elements?.default;\n  if (!portalElement)\n    return null;\n  let t0;\n  return $[0] !== children || $[1] !== portalElement ? (t0 = (0,react_dom__WEBPACK_IMPORTED_MODULE_5__.createPortal)(children, portalElement), $[0] = children, $[1] = portalElement, $[2] = t0) : t0 = $[2], t0;\n}\nPortal.displayName = \"Portal\";\nfunction PortalProvider(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(7), {\n    boundaryElement,\n    children,\n    element,\n    __unstable_elements: elementsProp\n  } = props, elements = useUnique(elementsProp), fallbackElement = (0,react__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStore)(emptySubscribe, _temp$2, _temp2$1);\n  let t0;\n  const t1 = boundaryElement || null, t2 = element || fallbackElement;\n  let t3;\n  $[0] !== elements || $[1] !== t1 || $[2] !== t2 ? (t3 = {\n    version: 0,\n    boundaryElement: t1,\n    element: t2,\n    elements\n  }, $[0] = elements, $[1] = t1, $[2] = t2, $[3] = t3) : t3 = $[3], t0 = t3;\n  const value = t0;\n  let t4;\n  return $[4] !== children || $[5] !== value ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PortalContext.Provider, { value, children }), $[4] = children, $[5] = value, $[6] = t4) : t4 = $[6], t4;\n}\nfunction _temp2$1() {\n  return null;\n}\nfunction _temp$2() {\n  return document.body;\n}\nPortalProvider.displayName = \"PortalProvider\";\nconst emptySubscribe = () => () => {\n};\nfunction useUnique(value) {\n  const valueRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(value);\n  return _isEqual(valueRef.current, value) || (valueRef.current = value), valueRef.current;\n}\nfunction _isEqual(objA, objB) {\n  if (!objA || !objB)\n    return objA === objB;\n  const keysA = Object.keys(objA), keysB = Object.keys(objB);\n  return keysA.length !== keysB.length ? !1 : keysA.every((key2) => objA[key2] === objB[key2]);\n}\nconst StyledSrOnly = styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledSrOnly\",\n  componentId: \"sc-mubr0c-0\"\n})`display:block;width:0;height:0;position:absolute;overflow:hidden;overflow:clip;`, SrOnly = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(4), {\n    as,\n    children\n  } = props;\n  let t0;\n  return $[0] !== as || $[1] !== children || $[2] !== ref ? (t0 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledSrOnly, { \"aria-hidden\": !0, as, \"data-ui\": \"SrOnly\", ref, children }), $[0] = as, $[1] = children, $[2] = ref, $[3] = t0) : t0 = $[3], t0;\n});\nSrOnly.displayName = \"ForwardRef(SrOnly)\";\nconst StyledVirtualList = styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledVirtualList\",\n  componentId: \"sc-dlqsj4-0\"\n})`position:relative;`, ItemWrapper = styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"ItemWrapper\",\n  componentId: \"sc-dlqsj4-1\"\n})`position:absolute;left:0;right:0;`, VirtualList = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(56);\n  let getItemKey, onChange, renderItem, restProps, t0, t1, t2;\n  $[0] !== props ? ({\n    as: t0,\n    gap: t1,\n    getItemKey,\n    items: t2,\n    onChange,\n    renderItem,\n    ...restProps\n  } = props, $[0] = props, $[1] = getItemKey, $[2] = onChange, $[3] = renderItem, $[4] = restProps, $[5] = t0, $[6] = t1, $[7] = t2) : (getItemKey = $[1], onChange = $[2], renderItem = $[3], restProps = $[4], t0 = $[5], t1 = $[6], t2 = $[7]);\n  const as = t0 === void 0 ? \"div\" : t0, gap = t1 === void 0 ? 0 : t1;\n  let t3;\n  $[8] !== t2 ? (t3 = t2 === void 0 ? [] : t2, $[8] = t2, $[9] = t3) : t3 = $[9];\n  const items = t3, {\n    space\n  } = useTheme_v2(), ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), [scrollTop, setScrollTop] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0), [scrollHeight, setScrollHeight] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0), [itemHeight, setItemHeight] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(-1);\n  let t4;\n  $[10] === Symbol.for(\"react.memo_cache_sentinel\") ? (t4 = () => ref.current, $[10] = t4) : t4 = $[10], (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t4);\n  let t5;\n  $[11] === Symbol.for(\"react.memo_cache_sentinel\") ? (t5 = () => {\n    if (!wrapperRef.current)\n      return;\n    const firstElement = wrapperRef.current.firstChild;\n    firstElement instanceof HTMLElement && setItemHeight(firstElement.offsetHeight);\n  }, $[11] = t5) : t5 = $[11];\n  let t6;\n  $[12] !== renderItem ? (t6 = [renderItem], $[12] = renderItem, $[13] = t6) : t6 = $[13], (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t5, t6);\n  let t7, t8;\n  $[14] === Symbol.for(\"react.memo_cache_sentinel\") ? (t7 = () => {\n    if (!ref.current)\n      return;\n    const scrollEl = findScrollable(ref.current.parentNode);\n    if (scrollEl) {\n      if (!(scrollEl instanceof HTMLElement))\n        return;\n      const handleScroll = () => {\n        setScrollTop(scrollEl.scrollTop);\n      };\n      scrollEl.addEventListener(\"scroll\", handleScroll, {\n        passive: !0\n      });\n      const ro = new _ResizeObserver((entries) => {\n        setScrollHeight(entries[0].contentRect.height);\n      });\n      return ro.observe(scrollEl), handleScroll(), () => {\n        scrollEl.removeEventListener(\"scroll\", handleScroll), ro.unobserve(scrollEl), ro.disconnect();\n      };\n    }\n    const handleScroll_0 = () => {\n      setScrollTop(window.scrollY);\n    }, handleResize = () => {\n      setScrollHeight(window.innerHeight);\n    };\n    return window.addEventListener(\"scroll\", handleScroll_0, {\n      passive: !0\n    }), window.addEventListener(\"resize\", handleResize), setScrollHeight(window.innerHeight), handleScroll_0(), () => {\n      window.removeEventListener(\"scroll\", handleScroll_0), window.removeEventListener(\"resize\", handleResize);\n    };\n  }, t8 = [], $[14] = t7, $[15] = t8) : (t7 = $[14], t8 = $[15]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t7, t8);\n  const len = items.length, height = itemHeight ? len * (itemHeight + space[gap]) - space[gap] : 0, fromIndex = height ? Math.max(Math.floor(scrollTop / height * len) - 2, 0) : 0, toIndex = height ? Math.ceil((scrollTop + scrollHeight) / height * len) + 1 : 0;\n  let t10, t9;\n  $[16] !== fromIndex || $[17] !== gap || $[18] !== itemHeight || $[19] !== onChange || $[20] !== scrollHeight || $[21] !== scrollTop || $[22] !== space || $[23] !== toIndex ? (t9 = () => {\n    onChange && onChange({\n      fromIndex,\n      gap: space[gap],\n      itemHeight,\n      scrollHeight,\n      scrollTop,\n      toIndex\n    });\n  }, t10 = [fromIndex, gap, itemHeight, onChange, scrollHeight, scrollTop, space, toIndex], $[16] = fromIndex, $[17] = gap, $[18] = itemHeight, $[19] = onChange, $[20] = scrollHeight, $[21] = scrollTop, $[22] = space, $[23] = toIndex, $[24] = t10, $[25] = t9) : (t10 = $[24], t9 = $[25]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t9, t10);\n  let t11;\n  bb0: {\n    if (!renderItem || items.length === 0) {\n      t11 = null;\n      break bb0;\n    }\n    if (itemHeight === -1) {\n      let t123;\n      $[26] !== items[0] || $[27] !== renderItem ? (t123 = renderItem(items[0]), $[26] = items[0], $[27] = renderItem, $[28] = t123) : t123 = $[28];\n      let t132;\n      $[29] !== t123 ? (t132 = [/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ItemWrapper, { children: t123 }, 0)], $[29] = t123, $[30] = t132) : t132 = $[30], t11 = t132;\n      break bb0;\n    }\n    let t122;\n    if ($[31] !== fromIndex || $[32] !== gap || $[33] !== getItemKey || $[34] !== itemHeight || $[35] !== items || $[36] !== renderItem || $[37] !== space || $[38] !== toIndex) {\n      let t132;\n      $[40] !== fromIndex || $[41] !== gap || $[42] !== getItemKey || $[43] !== itemHeight || $[44] !== renderItem || $[45] !== space ? (t132 = (item, _itemIndex) => {\n        const itemIndex = fromIndex + _itemIndex, node = renderItem(item), key2 = getItemKey ? getItemKey(item, itemIndex) : itemIndex;\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ItemWrapper, { style: {\n          top: itemIndex * (itemHeight + space[gap])\n        }, children: node }, key2);\n      }, $[40] = fromIndex, $[41] = gap, $[42] = getItemKey, $[43] = itemHeight, $[44] = renderItem, $[45] = space, $[46] = t132) : t132 = $[46], t122 = items.slice(fromIndex, toIndex).map(t132), $[31] = fromIndex, $[32] = gap, $[33] = getItemKey, $[34] = itemHeight, $[35] = items, $[36] = renderItem, $[37] = space, $[38] = toIndex, $[39] = t122;\n    } else\n      t122 = $[39];\n    t11 = t122;\n  }\n  const children = t11;\n  let t12, t13;\n  $[47] !== height ? (t13 = {\n    height\n  }, $[47] = height, $[48] = t13) : t13 = $[48], t12 = t13;\n  const wrapperStyle = t12;\n  let t14;\n  $[49] !== children || $[50] !== wrapperStyle ? (t14 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { ref: wrapperRef, style: wrapperStyle, children }), $[49] = children, $[50] = wrapperStyle, $[51] = t14) : t14 = $[51];\n  let t15;\n  return $[52] !== as || $[53] !== restProps || $[54] !== t14 ? (t15 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledVirtualList, { as, \"data-ui\": \"VirtualList\", ...restProps, ref, children: t14 }), $[52] = as, $[53] = restProps, $[54] = t14, $[55] = t15) : t15 = $[55], t15;\n});\nVirtualList.displayName = \"ForwardRef(VirtualList)\";\nfunction findScrollable(parentNode) {\n  let _scrollEl = parentNode;\n  for (; _scrollEl && !_isScrollable(_scrollEl); )\n    _scrollEl = _scrollEl.parentNode;\n  return _scrollEl;\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get, mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  return mayWarn ? element.ref : (getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get, mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning, mayWarn ? element.props.ref : element.props.ref || element.ref);\n}\nconst DEFAULT_POPOVER_DISTANCE = 4, DEFAULT_POPOVER_PADDING = 4, DEFAULT_POPOVER_ARROW_WIDTH = 19, DEFAULT_POPOVER_ARROW_HEIGHT = 8, DEFAULT_POPOVER_ARROW_RADIUS = 2, DEFAULT_POPOVER_MARGINS = [0, 0, 0, 0], DEFAULT_FALLBACK_PLACEMENTS$1 = {\n  top: [\"bottom\", \"left\", \"right\"],\n  \"top-start\": [\"bottom-start\", \"left-start\", \"right-start\"],\n  \"top-end\": [\"bottom-end\", \"left-end\", \"right-end\"],\n  bottom: [\"top\", \"left\", \"right\"],\n  \"bottom-start\": [\"top-start\", \"left-start\", \"right-start\"],\n  \"bottom-end\": [\"top-end\", \"left-end\", \"right-end\"],\n  left: [\"right\", \"top\", \"bottom\"],\n  \"left-start\": [\"right-start\", \"top-start\", \"bottom-start\"],\n  \"left-end\": [\"right-end\", \"top-end\", \"bottom-end\"],\n  right: [\"left\", \"top\", \"bottom\"],\n  \"right-start\": [\"left-start\", \"top-start\", \"bottom-start\"],\n  \"right-end\": [\"left-end\", \"top-end\", \"bottom-end\"]\n};\nfunction size(options) {\n  const {\n    apply,\n    margins,\n    padding = 0\n  } = options;\n  return {\n    name: \"@sanity/ui/size\",\n    async fn(args) {\n      const {\n        elements,\n        placement,\n        platform,\n        rects\n      } = args, {\n        floating,\n        reference\n      } = rects, overflow = await (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_10__.detectOverflow)(args, {\n        altBoundary: !0,\n        boundary: options.boundaryElement || void 0,\n        elementContext: \"floating\",\n        padding,\n        rootBoundary: \"viewport\"\n      });\n      let maxWidth = 1 / 0, maxHeight = 1 / 0;\n      const floatingW = floating.width, floatingH = floating.height;\n      placement.includes(\"top\") && (maxWidth = floatingW - (overflow.left + overflow.right), maxHeight = floatingH - overflow.top), placement.includes(\"right\") && (maxWidth = floatingW - overflow.right, maxHeight = floatingH - (overflow.top + overflow.bottom)), placement.includes(\"bottom\") && (maxWidth = floatingW - (overflow.left + overflow.right), maxHeight = floatingH - overflow.bottom), placement.includes(\"left\") && (maxWidth = floatingW - overflow.left, maxHeight = floatingH - (overflow.top + overflow.bottom)), apply({\n        availableWidth: maxWidth - margins[1] - margins[3],\n        availableHeight: maxHeight - margins[0] - margins[2],\n        elements,\n        referenceWidth: reference.width - margins[1] - margins[3]\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating), targetH = nextDimensions.height, targetW = nextDimensions.width;\n      return floatingW !== targetW || floatingH !== targetH ? {\n        reset: {\n          rects: !0\n        }\n      } : {};\n    }\n  };\n}\nfunction calcCurrentWidth(params) {\n  const {\n    container,\n    mediaIndex,\n    width\n  } = params, w = width[mediaIndex], currentWidth = w === void 0 ? width[width.length - 1] : w;\n  return typeof currentWidth == \"number\" ? container[currentWidth] : void 0;\n}\nfunction calcMaxWidth(params) {\n  const {\n    boundaryWidth,\n    currentWidth\n  } = params;\n  if (!(currentWidth === void 0 && boundaryWidth === void 0))\n    return Math.min(currentWidth ?? 1 / 0, (boundaryWidth || 1 / 0) - DEFAULT_POPOVER_PADDING * 2);\n}\nconst MotionCard$1 = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(framer_motion__WEBPACK_IMPORTED_MODULE_11__.motion.create(Card)).withConfig({\n  displayName: \"MotionCard\",\n  componentId: \"sc-ihg31s-0\"\n})`&:not([hidden]){display:flex;}flex-direction:column;width:max-content;min-width:min-content;will-change:transform;`, MotionFlex = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(framer_motion__WEBPACK_IMPORTED_MODULE_11__.motion.create(Flex)).withConfig({\n  displayName: \"MotionFlex\",\n  componentId: \"sc-ihg31s-1\"\n})`will-change:opacity;`, PopoverCard = (0,react__WEBPACK_IMPORTED_MODULE_2__.memo)((0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(66);\n  let animate, arrow2, arrowRef, arrowX, arrowY, children, marginsProp, originX, originY, overflow, padding, placement, radius, restProps, scheme, shadow, strategy, style, tone, width, xProp, yProp;\n  $[0] !== props ? ({\n    __unstable_margins: marginsProp,\n    animate,\n    arrow: arrow2,\n    arrowRef,\n    arrowX,\n    arrowY,\n    children,\n    padding,\n    placement,\n    originX,\n    originY,\n    overflow,\n    radius,\n    scheme,\n    shadow,\n    strategy,\n    style,\n    tone,\n    width,\n    x: xProp,\n    y: yProp,\n    ...restProps\n  } = props, $[0] = props, $[1] = animate, $[2] = arrow2, $[3] = arrowRef, $[4] = arrowX, $[5] = arrowY, $[6] = children, $[7] = marginsProp, $[8] = originX, $[9] = originY, $[10] = overflow, $[11] = padding, $[12] = placement, $[13] = radius, $[14] = restProps, $[15] = scheme, $[16] = shadow, $[17] = strategy, $[18] = style, $[19] = tone, $[20] = width, $[21] = xProp, $[22] = yProp) : (animate = $[1], arrow2 = $[2], arrowRef = $[3], arrowX = $[4], arrowY = $[5], children = $[6], marginsProp = $[7], originX = $[8], originY = $[9], overflow = $[10], padding = $[11], placement = $[12], radius = $[13], restProps = $[14], scheme = $[15], shadow = $[16], strategy = $[17], style = $[18], tone = $[19], width = $[20], xProp = $[21], yProp = $[22]);\n  const {\n    zIndex\n  } = useLayer();\n  let t0;\n  t0 = marginsProp || DEFAULT_POPOVER_MARGINS;\n  const margins = t0, x = (xProp ?? 0) + margins[3], y = (yProp ?? 0) + margins[0];\n  let t1;\n  const t2 = animate ? \"transform\" : void 0;\n  let t3;\n  $[23] !== originX || $[24] !== originY || $[25] !== strategy || $[26] !== style || $[27] !== t2 || $[28] !== width || $[29] !== x || $[30] !== y || $[31] !== zIndex ? (t3 = {\n    left: x,\n    originX,\n    originY,\n    position: strategy,\n    top: y,\n    width,\n    zIndex,\n    willChange: t2,\n    ...style\n  }, $[23] = originX, $[24] = originY, $[25] = strategy, $[26] = style, $[27] = t2, $[28] = width, $[29] = x, $[30] = y, $[31] = zIndex, $[32] = t3) : t3 = $[32], t1 = t3;\n  const rootStyle2 = t1;\n  let t4;\n  const t5 = arrowX !== null ? arrowX : void 0, t6 = arrowY !== null ? arrowY : void 0;\n  let t7;\n  $[33] !== t5 || $[34] !== t6 ? (t7 = {\n    left: t5,\n    top: t6,\n    right: void 0,\n    bottom: void 0\n  }, $[33] = t5, $[34] = t6, $[35] = t7) : t7 = $[35], t4 = t7;\n  const arrowStyle = t4, t8 = restProps;\n  let t9;\n  $[36] !== animate ? (t9 = animate ? [\"hidden\", \"initial\"] : void 0, $[36] = animate, $[37] = t9) : t9 = $[37];\n  let t10;\n  $[38] !== animate ? (t10 = animate ? [\"visible\", \"scaleIn\"] : void 0, $[38] = animate, $[39] = t10) : t10 = $[39];\n  let t11;\n  $[40] !== animate ? (t11 = animate ? [\"hidden\", \"scaleOut\"] : void 0, $[40] = animate, $[41] = t11) : t11 = $[41];\n  let t12;\n  $[42] !== children || $[43] !== padding ? (t12 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Flex, { direction: \"column\", flex: 1, padding, children }), $[42] = children, $[43] = padding, $[44] = t12) : t12 = $[44];\n  let t13;\n  $[45] !== overflow || $[46] !== t12 ? (t13 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MotionFlex, { \"data-ui\": \"Popover__wrapper\", direction: \"column\", flex: 1, overflow, variants: POPOVER_MOTION_PROPS.children, transition: POPOVER_MOTION_PROPS.transition, children: t12 }), $[45] = overflow, $[46] = t12, $[47] = t13) : t13 = $[47];\n  let t14;\n  $[48] !== arrow2 || $[49] !== arrowRef || $[50] !== arrowStyle ? (t14 = arrow2 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Arrow, { ref: arrowRef, style: arrowStyle, width: DEFAULT_POPOVER_ARROW_WIDTH, height: DEFAULT_POPOVER_ARROW_HEIGHT, radius: DEFAULT_POPOVER_ARROW_RADIUS }), $[48] = arrow2, $[49] = arrowRef, $[50] = arrowStyle, $[51] = t14) : t14 = $[51];\n  let t15;\n  return $[52] !== placement || $[53] !== radius || $[54] !== ref || $[55] !== rootStyle2 || $[56] !== scheme || $[57] !== shadow || $[58] !== t10 || $[59] !== t11 || $[60] !== t13 || $[61] !== t14 || $[62] !== t8 || $[63] !== t9 || $[64] !== tone ? (t15 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(MotionCard$1, { \"data-ui\": \"Popover\", ...t8, \"data-placement\": placement, radius, ref, scheme, shadow, sizing: \"border\", style: rootStyle2, tone, variants: POPOVER_MOTION_PROPS.card, transition: POPOVER_MOTION_PROPS.transition, initial: t9, animate: t10, exit: t11, children: [\n    t13,\n    t14\n  ] }), $[52] = placement, $[53] = radius, $[54] = ref, $[55] = rootStyle2, $[56] = scheme, $[57] = shadow, $[58] = t10, $[59] = t11, $[60] = t13, $[61] = t14, $[62] = t8, $[63] = t9, $[64] = tone, $[65] = t15) : t15 = $[65], t15;\n}));\nPopoverCard.displayName = \"Memo(ForwardRef(PopoverCard))\";\nconst ViewportOverlay = () => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(2), {\n    zIndex\n  } = useLayer();\n  let t0;\n  return $[0] !== zIndex ? (t0 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { style: {\n    height: \"100vh\",\n    inset: 0,\n    position: \"fixed\",\n    width: \"100vw\",\n    zIndex\n  } }), $[0] = zIndex, $[1] = t0) : t0 = $[1], t0;\n}, Popover = (0,react__WEBPACK_IMPORTED_MODULE_2__.memo)((0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const {\n    container,\n    layer\n  } = useTheme_v2(), boundaryElementContext = useBoundaryElement(), {\n    __unstable_margins: margins = DEFAULT_POPOVER_MARGINS,\n    animate: _animate = !1,\n    arrow: arrowProp = !1,\n    boundaryElement = boundaryElementContext.element,\n    children: childProp,\n    constrainSize = !1,\n    content,\n    disabled,\n    fallbackPlacements = props.fallbackPlacements ?? DEFAULT_FALLBACK_PLACEMENTS$1[props.placement ?? \"bottom\"],\n    matchReferenceWidth,\n    floatingBoundary = props.boundaryElement ?? boundaryElementContext.element,\n    modal,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onActivate,\n    open,\n    overflow = \"hidden\",\n    padding: paddingProp,\n    placement: placementProp = \"bottom\",\n    portal,\n    preventOverflow = !0,\n    radius: radiusProp = 3,\n    referenceBoundary = props.boundaryElement ?? boundaryElementContext.element,\n    referenceElement,\n    scheme,\n    shadow: shadowProp = 3,\n    tone = \"inherit\",\n    width: widthProp = \"auto\",\n    zOffset: zOffsetProp = layer.popover.zOffset,\n    updateRef,\n    ...restProps\n  } = props, animate = usePrefersReducedMotion() ? !1 : _animate, boundarySize = useElementSize(boundaryElement)?.border, padding = useArrayProp(paddingProp), radius = useArrayProp(radiusProp), shadow = useArrayProp(shadowProp), widthArrayProp = useArrayProp(widthProp), zOffset = useArrayProp(zOffsetProp), ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), arrowRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), rootBoundary = \"viewport\";\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, () => ref.current);\n  const mediaIndex = useMediaIndex(), boundaryWidth = constrainSize || preventOverflow ? boundarySize?.width : void 0, width = calcCurrentWidth({\n    container,\n    mediaIndex,\n    width: widthArrayProp\n  }), widthRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(width);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    widthRef.current = width;\n  }, [width]);\n  const maxWidth = calcMaxWidth({\n    boundaryWidth,\n    currentWidth: width\n  }), maxWidthRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(maxWidth);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    maxWidthRef.current = maxWidth;\n  }, [maxWidth]);\n  const referenceWidthRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(void 0);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    const floatingElement = ref.current;\n    if (!open || !floatingElement) return;\n    const referenceWidth = referenceWidthRef.current;\n    matchReferenceWidth ? referenceWidth !== void 0 && (floatingElement.style.width = `${referenceWidth}px`) : width !== void 0 && (floatingElement.style.width = `${width}px`), typeof maxWidth == \"number\" && (floatingElement.style.maxWidth = `${maxWidth}px`);\n  }, [width, matchReferenceWidth, maxWidth, open]);\n  const middleware = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => {\n    const ret = [];\n    return (constrainSize || preventOverflow) && ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__.flip)({\n      boundary: floatingBoundary || void 0,\n      fallbackPlacements,\n      padding: DEFAULT_POPOVER_PADDING,\n      rootBoundary\n    })), ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__.offset)({\n      mainAxis: DEFAULT_POPOVER_DISTANCE\n    })), (constrainSize || matchReferenceWidth) && ret.push(size({\n      apply({\n        availableWidth,\n        availableHeight,\n        elements,\n        referenceWidth: referenceWidth_0\n      }) {\n        referenceWidthRef.current = referenceWidth_0;\n        const _currentWidth = widthRef.current, _maxWidth = maxWidthRef.current;\n        matchReferenceWidth ? elements.floating.style.width = `${referenceWidth_0}px` : _currentWidth !== void 0 && (elements.floating.style.width = `${_currentWidth}px`), constrainSize && (elements.floating.style.maxWidth = `${Math.min(availableWidth, _maxWidth ?? 1 / 0)}px`, elements.floating.style.maxHeight = `${availableHeight}px`);\n      },\n      boundaryElement: floatingBoundary || void 0,\n      margins,\n      padding: DEFAULT_POPOVER_PADDING\n    })), preventOverflow && ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__.shift)({\n      boundary: floatingBoundary || void 0,\n      rootBoundary,\n      padding: DEFAULT_POPOVER_PADDING\n    })), arrowProp && ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__.arrow)({\n      element: arrowRef,\n      padding: DEFAULT_POPOVER_PADDING\n    })), animate && ret.push(origin), ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__.hide)({\n      boundary: referenceBoundary || void 0,\n      padding: DEFAULT_POPOVER_PADDING,\n      strategy: \"referenceHidden\"\n    })), ret;\n  }, [animate, arrowProp, constrainSize, fallbackPlacements, floatingBoundary, margins, matchReferenceWidth, preventOverflow, referenceBoundary]), {\n    x,\n    y,\n    middlewareData,\n    placement,\n    refs,\n    strategy,\n    update\n  } = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__.useFloating)({\n    middleware,\n    placement: placementProp,\n    whileElementsMounted: _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_10__.autoUpdate,\n    elements: referenceElement ? {\n      reference: referenceElement\n    } : void 0\n  }), referenceHidden = middlewareData.hide?.referenceHidden, arrowX = middlewareData.arrow?.x, arrowY = middlewareData.arrow?.y, originX = middlewareData[\"@sanity/ui/origin\"]?.originX, originY = middlewareData[\"@sanity/ui/origin\"]?.originY, setArrow = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((arrowEl) => {\n    arrowRef.current = arrowEl;\n  }, []), setFloating = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((node) => {\n    ref.current = node, refs.setFloating(node);\n  }, [refs]), setReference = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((node_0) => {\n    refs.setReference(node_0);\n    const childRef = getElementRef(childProp);\n    typeof childRef == \"function\" ? childRef(node_0) : childRef && (childRef.current = node_0);\n  }, [childProp, refs]), child = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => referenceElement ? childProp : childProp ? (0,react__WEBPACK_IMPORTED_MODULE_2__.cloneElement)(childProp, {\n    ref: setReference\n  }) : null, [childProp, referenceElement, setReference]);\n  if ((0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    updateRef && (typeof updateRef == \"function\" ? updateRef(update) : updateRef && (updateRef.current = update));\n  }, [update, updateRef]), disabled)\n    return childProp || /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {});\n  const popover = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(LayerProvider, { zOffset, children: [\n    modal && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ViewportOverlay, {}),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PopoverCard, { ...restProps, __unstable_margins: margins, animate, arrow: arrowProp, arrowRef: setArrow, arrowX, arrowY, hidden: referenceHidden, overflow, padding, placement, radius, ref: setFloating, scheme, shadow, originX, originY, strategy, tone, width: matchReferenceWidth ? referenceWidthRef.current : width, x, y, children: content })\n  ] }), children = open && (portal ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Portal, { __unstable_name: typeof portal == \"string\" ? portal : void 0, children: popover }) : popover);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    animate ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(framer_motion__WEBPACK_IMPORTED_MODULE_13__.AnimatePresence, { children }) : children,\n    child\n  ] });\n}));\nPopover.displayName = \"Memo(ForwardRef(Popover))\";\nfunction radioBaseStyle() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    position: relative;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n\n    &[data-read-only] {\n      outline: 1px solid red;\n    }\n  `;\n}\nfunction inputElementStyle(props) {\n  const {\n    color,\n    input\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), dist = (input.radio.size - input.radio.markSize) / 2;\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    appearance: none;\n    position: absolute;\n    top: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    z-index: 1;\n    padding: 0;\n    margin: 0;\n    border-radius: ${rem(input.radio.size / 2)};\n    border: none;\n\n    /* enabled */\n    & + span {\n      display: block;\n      position: relative;\n      height: ${rem(input.radio.size)};\n      width: ${rem(input.radio.size)};\n      border-radius: ${rem(input.radio.size / 2)};\n      background: ${color.input.default.enabled.bg};\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.border,\n    width: input.border.width\n  })};\n\n      &::after {\n        content: '';\n        position: absolute;\n        top: ${rem(dist)};\n        left: ${rem(dist)};\n        height: ${rem(input.radio.markSize)};\n        width: ${rem(input.radio.markSize)};\n        border-radius: ${rem(input.radio.markSize / 2)};\n        background: ${color.input.default.enabled.fg};\n        opacity: 0;\n      }\n    }\n\n    /* focused */\n    &:not(:disabled):focus + span {\n      box-shadow: ${focusRingStyle({\n    border: {\n      width: input.border.width,\n      color: color.input.default.enabled.border\n    },\n    focusRing: input.radio.focusRing\n  })};\n    }\n\n    &:not(:disabled):focus:not(:focus-visible) + span {\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.border,\n    width: input.border.width\n  })};\n    }\n\n    &:checked + span::after {\n      opacity: 1;\n    }\n\n    /* customValidity */\n    &[data-error] + span {\n      background-color: ${color.input.invalid.enabled.border};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.input.invalid.enabled.muted.bg\n  })};\n      &::after {\n        background: ${color.input.invalid.enabled.muted.bg};\n      }\n    }\n\n    /* read only */\n    &[data-read-only] + span {\n      box-shadow: 0 0 0 1px ${color.input.default.readOnly.border};\n      background: ${color.input.default.readOnly.bg};\n\n      &::after {\n        background: ${color.input.default.readOnly.border};\n      }\n    }\n\n    /* disabled */\n    &:not([data-read-only]):disabled + span {\n      box-shadow: 0 0 0 1px ${color.input.default.disabled.border};\n      background: ${color.input.default.disabled.bg};\n\n      &::after {\n        background: ${color.input.default.disabled.border};\n      }\n    }\n  `;\n}\nconst StyledRadio = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledRadio\",\n  componentId: \"sc-ccrwkf-0\"\n})(radioBaseStyle), Input$4 = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.input.withConfig({\n  displayName: \"Input\",\n  componentId: \"sc-ccrwkf-1\"\n})(inputElementStyle), Radio = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(19);\n  let className, customValidity, disabled, readOnly, restProps, style;\n  $[0] !== props ? ({\n    className,\n    disabled,\n    style,\n    customValidity,\n    readOnly,\n    ...restProps\n  } = props, $[0] = props, $[1] = className, $[2] = customValidity, $[3] = disabled, $[4] = readOnly, $[5] = restProps, $[6] = style) : (className = $[1], customValidity = $[2], disabled = $[3], readOnly = $[4], restProps = $[5], style = $[6]);\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n  let t0;\n  $[7] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = () => ref.current, $[7] = t0) : t0 = $[7], (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t0), useCustomValidity(ref, customValidity);\n  const t1 = !disabled && readOnly ? \"\" : void 0, t2 = customValidity ? \"\" : void 0, t3 = disabled || readOnly;\n  let t4;\n  $[8] !== readOnly || $[9] !== restProps || $[10] !== t1 || $[11] !== t2 || $[12] !== t3 ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Input$4, { \"data-read-only\": t1, \"data-error\": t2, ...restProps, disabled: t3, readOnly, ref, type: \"radio\" }), $[8] = readOnly, $[9] = restProps, $[10] = t1, $[11] = t2, $[12] = t3, $[13] = t4) : t4 = $[13];\n  let t5;\n  $[14] === Symbol.for(\"react.memo_cache_sentinel\") ? (t5 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {}), $[14] = t5) : t5 = $[14];\n  let t6;\n  return $[15] !== className || $[16] !== style || $[17] !== t4 ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledRadio, { className, \"data-ui\": \"Radio\", style, children: [\n    t4,\n    t5\n  ] }), $[15] = className, $[16] = style, $[17] = t4, $[18] = t6) : t6 = $[18], t6;\n});\nRadio.displayName = \"ForwardRef(Radio)\";\nfunction rootStyle() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    position: relative;\n    width: -moz-available;\n    width: -webkit-fill-available;\n    width: stretch;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `;\n}\nfunction inputBaseStyle(props) {\n  const {\n    font\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    -webkit-font-smoothing: antialiased;\n    appearance: none;\n    border: 0;\n    font-family: ${font.text.family};\n    color: inherit;\n    width: 100%;\n    outline: none;\n    margin: 0;\n\n    &:disabled {\n      opacity: 1;\n    }\n  `;\n}\nfunction inputColorStyle(props) {\n  const {\n    color,\n    input\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    /* enabled */\n    background-color: ${color.input.default.enabled.bg};\n    color: ${color.input.default.enabled.fg};\n    box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.enabled.border,\n    width: input.border.width\n  })};\n\n    /* hovered */\n    @media (hover: hover) {\n      &:not(:disabled):hover {\n        background-color: ${color.input.default.hovered.bg};\n        color: ${color.input.default.hovered.fg};\n        box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.hovered.border,\n    width: input.border.width\n  })};\n      }\n    }\n\n    /* focused */\n    &:not(:disabled):focus {\n      box-shadow: ${focusRingStyle({\n    border: {\n      width: input.border.width,\n      color: color.input.default.enabled.border\n    },\n    focusRing: input.select.focusRing\n  })};\n    }\n\n    /* read-only */\n    &[data-read-only] {\n      background-color: ${color.input.default.readOnly.bg};\n      color: ${color.input.default.readOnly.fg};\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.readOnly.border,\n    width: input.border.width\n  })};\n    }\n\n    /* disabled */\n    &:not([data-read-only]):disabled {\n      background-color: ${color.input.default.disabled.bg};\n      color: ${color.input.default.disabled.fg};\n      box-shadow: ${focusRingBorderStyle({\n    color: color.input.default.disabled.border,\n    width: input.border.width\n  })};\n    }\n  `;\n}\nfunction textSize(size2) {\n  return {\n    fontSize: rem(size2.fontSize),\n    lineHeight: rem(size2.lineHeight)\n  };\n}\nfunction inputTextSizeStyle(props) {\n  const {\n    $fontSize\n  } = props, {\n    font,\n    media\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, $fontSize, (sizeIndex) => textSize(font.text.sizes[sizeIndex] || font.text.sizes[2]));\n}\nfunction inputStyle() {\n  return [responsiveRadiusStyle, inputBaseStyle, inputColorStyle, inputTextSizeStyle, responsiveInputPaddingIconRightStyle];\n}\nfunction iconBoxStyle(props) {\n  const {\n    color\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    right: 0;\n\n    /* enabled */\n    --card-fg-color: ${color.input.default.enabled.fg};\n\n    /* hover */\n    @media (hover: hover) {\n      select:not(disabled):not(:read-only):hover + && {\n        --card-fg-color: ${color.input.default.hovered.fg};\n      }\n    }\n\n    /* disabled */\n    select:disabled + && {\n      --card-fg-color: ${color.input.default.disabled.fg};\n    }\n\n    /* read-only */\n    select[data-read-only] + && {\n      --card-fg-color: ${color.input.default.readOnly.fg};\n    }\n  `;\n}\nconst selectStyle = {\n  root: rootStyle,\n  input: inputStyle,\n  iconBox: iconBoxStyle\n}, StyledSelect = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"StyledSelect\",\n  componentId: \"sc-5mxno7-0\"\n})(selectStyle.root), Input$3 = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.select.withConfig({\n  displayName: \"Input\",\n  componentId: \"sc-5mxno7-1\"\n})(selectStyle.input), IconBox = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"IconBox\",\n  componentId: \"sc-5mxno7-2\"\n})(selectStyle.iconBox), Select = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(29);\n  let children, customValidity, disabled, readOnly, restProps, t0, t1, t2, t3;\n  $[0] !== props ? ({\n    children,\n    customValidity,\n    disabled,\n    fontSize: t0,\n    padding: t1,\n    radius: t2,\n    readOnly,\n    space: t3,\n    ...restProps\n  } = props, $[0] = props, $[1] = children, $[2] = customValidity, $[3] = disabled, $[4] = readOnly, $[5] = restProps, $[6] = t0, $[7] = t1, $[8] = t2, $[9] = t3) : (children = $[1], customValidity = $[2], disabled = $[3], readOnly = $[4], restProps = $[5], t0 = $[6], t1 = $[7], t2 = $[8], t3 = $[9]);\n  const fontSize2 = t0 === void 0 ? 2 : t0, padding = t1 === void 0 ? 3 : t1, radius = t2 === void 0 ? 2 : t2, space = t3 === void 0 ? 3 : t3, ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n  let t4;\n  $[10] === Symbol.for(\"react.memo_cache_sentinel\") ? (t4 = () => ref.current, $[10] = t4) : t4 = $[10], (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t4), useCustomValidity(ref, customValidity);\n  const t5 = !disabled && readOnly ? \"\" : void 0, t6 = useArrayProp(fontSize2), t7 = useArrayProp(padding), t8 = useArrayProp(radius), t9 = useArrayProp(space), t10 = disabled || readOnly;\n  let t11;\n  $[11] !== children || $[12] !== restProps || $[13] !== t10 || $[14] !== t5 || $[15] !== t6 || $[16] !== t7 || $[17] !== t8 || $[18] !== t9 ? (t11 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Input$3, { \"data-read-only\": t5, \"data-ui\": \"Select\", ...restProps, $fontSize: t6, $padding: t7, $radius: t8, $space: t9, disabled: t10, ref, children }), $[11] = children, $[12] = restProps, $[13] = t10, $[14] = t5, $[15] = t6, $[16] = t7, $[17] = t8, $[18] = t9, $[19] = t11) : t11 = $[19];\n  let t12;\n  $[20] === Symbol.for(\"react.memo_cache_sentinel\") ? (t12 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_9__.ChevronDownIcon, {}), $[20] = t12) : t12 = $[20];\n  let t13;\n  $[21] !== fontSize2 ? (t13 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: fontSize2, children: t12 }), $[21] = fontSize2, $[22] = t13) : t13 = $[22];\n  let t14;\n  $[23] !== padding || $[24] !== t13 ? (t14 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconBox, { padding, children: t13 }), $[23] = padding, $[24] = t13, $[25] = t14) : t14 = $[25];\n  let t15;\n  return $[26] !== t11 || $[27] !== t14 ? (t15 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledSelect, { \"data-ui\": \"Select\", children: [\n    t11,\n    t14\n  ] }), $[26] = t11, $[27] = t14, $[28] = t15) : t15 = $[28], t15;\n});\nSelect.displayName = \"ForwardRef(Select)\";\nconst BASE_STYLE = {\n  \"&&:not([hidden])\": {\n    display: \"grid\"\n  },\n  '&[data-as=\"ul\"],&[data-as=\"ol\"]': {\n    listStyle: \"none\"\n  },\n  gridTemplateColumns: \"minmax(0, 1fr)\",\n  gridAutoRows: \"min-content\"\n};\nfunction stackBaseStyle() {\n  return BASE_STYLE;\n}\nfunction responsiveStackSpaceStyle(props) {\n  const {\n    media,\n    space\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return _responsive(media, props.$space, (spaceIndex) => ({\n    gridGap: rem(space[spaceIndex])\n  }));\n}\nconst StyledStack = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"StyledStack\",\n  componentId: \"sc-8dpfq2-0\"\n})(stackBaseStyle, responsiveStackSpaceStyle), Stack = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(10);\n  let as, restProps, space;\n  $[0] !== props ? ({\n    as,\n    space,\n    ...restProps\n  } = props, $[0] = props, $[1] = as, $[2] = restProps, $[3] = space) : (as = $[1], restProps = $[2], space = $[3]);\n  const t0 = typeof as == \"string\" ? as : void 0, t1 = useArrayProp(space);\n  let t2;\n  return $[4] !== as || $[5] !== ref || $[6] !== restProps || $[7] !== t0 || $[8] !== t1 ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledStack, { \"data-as\": t0, \"data-ui\": \"Stack\", ...restProps, $space: t1, forwardedAs: as, ref }), $[4] = as, $[5] = ref, $[6] = restProps, $[7] = t0, $[8] = t1, $[9] = t2) : t2 = $[9], t2;\n});\nStack.displayName = \"ForwardRef(Stack)\";\nfunction switchBaseStyles() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    position: relative;\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `;\n}\nfunction switchInputStyles() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    padding: 0;\n    margin: 0;\n\n    /* Place the input element above the representation element */\n    z-index: 1;\n  `;\n}\nfunction switchRepresentationStyles(props) {\n  const {\n    color,\n    input\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    --switch-bg-color: ${color.input.default.enabled.border};\n    --switch-fg-color: ${color.input.default.enabled.bg};\n    --switch-box-shadow: none;\n\n    &:not([hidden]) {\n      display: block;\n    }\n    position: relative;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n\n    /* Make sure it’s not possible to interact with the wrapper element */\n    pointer-events: none;\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n      box-shadow: var(--switch-box-shadow);\n      border-radius: inherit;\n    }\n\n    /* Focus styles */\n    input:focus + && {\n      --switch-box-shadow: ${focusRingStyle({\n    focusRing: input.switch.focusRing\n  })};\n    }\n\n    input:focus:not(:focus-visible) + && {\n      --switch-box-shadow: none;\n    }\n\n    input:checked + && {\n      --switch-bg-color: ${color.input.default.enabled.fg};\n      --switch-fg-color: ${color.input.default.enabled.bg};\n    }\n\n    @media (hover: hover) {\n      input:not(:disabled):hover + && {\n        --switch-bg-color: ${color.input.default.hovered.border};\n        --switch-fg-color: ${color.input.default.hovered.bg};\n      }\n\n      input:not(:disabled):checked:hover + && {\n        --switch-bg-color: ${color.input.default.enabled.fg};\n        --switch-fg-color: ${color.input.default.enabled.bg};\n      }\n    }\n\n    input:not([data-read-only]):disabled + && {\n      --switch-bg-color: ${color.input.default.disabled.border};\n      --switch-fg-color: ${color.input.default.disabled.bg};\n    }\n\n    input[data-read-only]:disabled + && {\n      --switch-bg-color: ${color.input.default.readOnly.border};\n      --switch-fg-color: ${color.input.default.readOnly.bg};\n    }\n\n    input:checked[data-read-only]:disabled + && {\n      --switch-bg-color: ${color.input.default.readOnly.fg};\n      --switch-fg-color: ${color.input.default.readOnly.bg};\n    }\n  `;\n}\nfunction switchTrackStyles(props) {\n  const {\n    input\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme);\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    &:not([hidden]) {\n      display: block;\n    }\n    background-color: var(--switch-bg-color);\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n  `;\n}\nfunction switchThumbStyles(props) {\n  const {\n    $indeterminate\n  } = props, {\n    input\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), trackWidth = input.switch.width, trackHeight = input.switch.height, trackPadding = input.switch.padding, size2 = trackHeight - input.switch.padding * 2, checkedOffset = trackWidth - trackPadding * 2 - size2, indeterminateOffset = trackWidth / 2 - size2 / 2 - trackPadding, checked = $indeterminate !== !0 && props.$checked === !0;\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    &:not([hidden]) {\n      display: block;\n    }\n    position: absolute;\n    left: ${rem(trackPadding)};\n    top: ${rem(trackPadding)};\n    height: ${rem(size2)};\n    width: ${rem(size2)};\n    border-radius: ${rem(size2 / 2)};\n    transition-property: transform;\n    transition-duration: ${input.switch.transitionDurationMs}ms;\n    transition-timing-function: ${input.switch.transitionTimingFunction};\n    background: var(--switch-fg-color);\n    transform: translate3d(0, 0, 0);\n    box-shadow: 0px 1px 0px 0px rgba(0, 0, 0, 0.05);\n\n    ${checked && (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n      transform: translate3d(${checkedOffset}px, 0, 0);\n    `}\n\n    ${$indeterminate && (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n      transform: translate3d(${indeterminateOffset}px, 0, 0);\n    `}\n  `;\n}\nconst StyledSwitch = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.span.withConfig({\n  displayName: \"StyledSwitch\",\n  componentId: \"sc-dw1foe-0\"\n})(switchBaseStyles), Input$2 = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.input.withConfig({\n  displayName: \"Input\",\n  componentId: \"sc-dw1foe-1\"\n})(switchInputStyles), Representation = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.span.withConfig({\n  displayName: \"Representation\",\n  componentId: \"sc-dw1foe-2\"\n})(switchRepresentationStyles), Track = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.span.withConfig({\n  displayName: \"Track\",\n  componentId: \"sc-dw1foe-3\"\n})(switchTrackStyles), Thumb = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.span.withConfig({\n  displayName: \"Thumb\",\n  componentId: \"sc-dw1foe-4\"\n})(switchThumbStyles), Switch = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(26);\n  let checked, className, disabled, indeterminate, readOnly, restProps, style;\n  $[0] !== props ? ({\n    checked,\n    className,\n    disabled,\n    indeterminate,\n    readOnly,\n    style,\n    ...restProps\n  } = props, $[0] = props, $[1] = checked, $[2] = className, $[3] = disabled, $[4] = indeterminate, $[5] = readOnly, $[6] = restProps, $[7] = style) : (checked = $[1], className = $[2], disabled = $[3], indeterminate = $[4], readOnly = $[5], restProps = $[6], style = $[7]);\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n  let t0;\n  $[8] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = () => ref.current, $[8] = t0) : t0 = $[8], (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t0);\n  let t1, t2;\n  $[9] !== indeterminate ? (t1 = () => {\n    ref.current && (ref.current.indeterminate = indeterminate || !1);\n  }, t2 = [indeterminate], $[9] = indeterminate, $[10] = t1, $[11] = t2) : (t1 = $[10], t2 = $[11]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t1, t2);\n  const t3 = !disabled && readOnly ? \"\" : void 0, t4 = indeterminate !== !0 && checked, t5 = disabled || readOnly;\n  let t6;\n  $[12] !== restProps || $[13] !== t3 || $[14] !== t4 || $[15] !== t5 ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Input$2, { \"data-read-only\": t3, ...restProps, checked: t4, disabled: t5, type: \"checkbox\", ref }), $[12] = restProps, $[13] = t3, $[14] = t4, $[15] = t5, $[16] = t6) : t6 = $[16];\n  let t7;\n  $[17] === Symbol.for(\"react.memo_cache_sentinel\") ? (t7 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Track, {}), $[17] = t7) : t7 = $[17];\n  let t8;\n  $[18] !== checked || $[19] !== indeterminate ? (t8 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Representation, { \"aria-hidden\": !0, \"data-name\": \"representation\", children: [\n    t7,\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Thumb, { $checked: checked, $indeterminate: indeterminate })\n  ] }), $[18] = checked, $[19] = indeterminate, $[20] = t8) : t8 = $[20];\n  let t9;\n  return $[21] !== className || $[22] !== style || $[23] !== t6 || $[24] !== t8 ? (t9 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledSwitch, { className, \"data-ui\": \"Switch\", style, children: [\n    t6,\n    t8\n  ] }), $[21] = className, $[22] = style, $[23] = t6, $[24] = t8, $[25] = t9) : t9 = $[25], t9;\n});\nSwitch.displayName = \"ForwardRef(Switch)\";\nconst StyledTextArea = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.span.withConfig({\n  displayName: \"StyledTextArea\",\n  componentId: \"sc-1d6h1o8-0\"\n})(textInputRootStyle), InputRoot$1 = styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.span.withConfig({\n  displayName: \"InputRoot\",\n  componentId: \"sc-1d6h1o8-1\"\n})`flex:1;min-width:0;display:block;position:relative;`, Input$1 = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.textarea.withConfig({\n  displayName: \"Input\",\n  componentId: \"sc-1d6h1o8-2\"\n})(responsiveInputPaddingStyle, textInputBaseStyle, textInputFontSizeStyle), Presentation$1 = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.div.withConfig({\n  displayName: \"Presentation\",\n  componentId: \"sc-1d6h1o8-3\"\n})(responsiveRadiusStyle, textInputRepresentationStyle), TextArea = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(29);\n  let __unstable_disableFocusRing, customValidity, restProps, t0, t1, t2, t3, t4, weight;\n  $[0] !== props ? ({\n    border: t0,\n    customValidity,\n    disabled: t1,\n    fontSize: t2,\n    padding: t3,\n    radius: t4,\n    weight,\n    __unstable_disableFocusRing,\n    ...restProps\n  } = props, $[0] = props, $[1] = __unstable_disableFocusRing, $[2] = customValidity, $[3] = restProps, $[4] = t0, $[5] = t1, $[6] = t2, $[7] = t3, $[8] = t4, $[9] = weight) : (__unstable_disableFocusRing = $[1], customValidity = $[2], restProps = $[3], t0 = $[4], t1 = $[5], t2 = $[6], t3 = $[7], t4 = $[8], weight = $[9]);\n  const border2 = t0 === void 0 ? !0 : t0, disabled = t1 === void 0 ? !1 : t1, fontSize2 = t2 === void 0 ? 2 : t2, padding = t3 === void 0 ? 3 : t3, radius = t4 === void 0 ? 2 : t4, ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), rootTheme = useRootTheme();\n  let t5;\n  $[10] === Symbol.for(\"react.memo_cache_sentinel\") ? (t5 = () => ref.current, $[10] = t5) : t5 = $[10], (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t5), useCustomValidity(ref, customValidity);\n  const t6 = rootTheme.scheme, t7 = rootTheme.tone, t8 = useArrayProp(fontSize2), t9 = useArrayProp(padding), t10 = rootTheme.scheme, t11 = useArrayProp(0);\n  let t12;\n  $[11] !== disabled || $[12] !== restProps || $[13] !== rootTheme.scheme || $[14] !== rootTheme.tone || $[15] !== t11 || $[16] !== t8 || $[17] !== t9 || $[18] !== weight ? (t12 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Input$1, { \"data-as\": \"textarea\", \"data-scheme\": t6, \"data-tone\": t7, ...restProps, $fontSize: t8, $padding: t9, $scheme: t10, $space: t11, $tone: rootTheme.tone, $weight: weight, disabled, ref }), $[11] = disabled, $[12] = restProps, $[13] = rootTheme.scheme, $[14] = rootTheme.tone, $[15] = t11, $[16] = t8, $[17] = t9, $[18] = weight, $[19] = t12) : t12 = $[19];\n  const t13 = useArrayProp(radius), t14 = border2 ? \"\" : void 0;\n  let t15;\n  $[20] !== __unstable_disableFocusRing || $[21] !== rootTheme.scheme || $[22] !== rootTheme.tone || $[23] !== t13 || $[24] !== t14 ? (t15 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Presentation$1, { $radius: t13, $unstableDisableFocusRing: __unstable_disableFocusRing, $scheme: rootTheme.scheme, $tone: rootTheme.tone, \"data-border\": t14, \"data-scheme\": rootTheme.scheme, \"data-tone\": rootTheme.tone }), $[20] = __unstable_disableFocusRing, $[21] = rootTheme.scheme, $[22] = rootTheme.tone, $[23] = t13, $[24] = t14, $[25] = t15) : t15 = $[25];\n  let t16;\n  return $[26] !== t12 || $[27] !== t15 ? (t16 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledTextArea, { \"data-ui\": \"TextArea\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(InputRoot$1, { children: [\n    t12,\n    t15\n  ] }) }), $[26] = t12, $[27] = t15, $[28] = t16) : t16 = $[28], t16;\n});\nTextArea.displayName = \"ForwardRef(TextArea)\";\nconst CLEAR_BUTTON_BOX_STYLE = {\n  zIndex: 2\n}, StyledTextInput = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Card).attrs({\n  forwardedAs: \"span\"\n}).withConfig({\n  displayName: \"StyledTextInput\",\n  componentId: \"sc-h62wco-0\"\n})(textInputRootStyle), InputRoot = styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.span.withConfig({\n  displayName: \"InputRoot\",\n  componentId: \"sc-h62wco-1\"\n})`flex:1;min-width:0;display:block;position:relative;`, Prefix = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Card).attrs({\n  forwardedAs: \"span\"\n}).withConfig({\n  displayName: \"Prefix\",\n  componentId: \"sc-h62wco-2\"\n})`border-top-right-radius:0;border-bottom-right-radius:0;& > span{display:block;margin:-1px;}`, Suffix = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Card).attrs({\n  forwardedAs: \"span\"\n}).withConfig({\n  displayName: \"Suffix\",\n  componentId: \"sc-h62wco-3\"\n})`border-top-left-radius:0;border-bottom-left-radius:0;& > span{display:block;margin:-1px;}`, Input = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.input.withConfig({\n  displayName: \"Input\",\n  componentId: \"sc-h62wco-4\"\n})(responsiveInputPaddingStyle, textInputBaseStyle, textInputFontSizeStyle), Presentation = /* @__PURE__ */ styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.span.withConfig({\n  displayName: \"Presentation\",\n  componentId: \"sc-h62wco-5\"\n})(responsiveRadiusStyle, textInputRepresentationStyle), LeftBox = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"LeftBox\",\n  componentId: \"sc-h62wco-6\"\n})`position:absolute;top:0;left:0;`, RightBox = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"RightBox\",\n  componentId: \"sc-h62wco-7\"\n})`position:absolute;top:0;right:0;`, RightCard = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Card).withConfig({\n  displayName: \"RightCard\",\n  componentId: \"sc-h62wco-8\"\n})`background-color:transparent;position:absolute;top:0;right:0;`, TextInputClearButton = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Button).withConfig({\n  displayName: \"TextInputClearButton\",\n  componentId: \"sc-h62wco-9\"\n})({\n  \"&:not([hidden])\": {\n    display: \"block\"\n  }\n}), TextInput = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(84);\n  let IconComponent, IconRightComponent, __unstable_disableFocusRing, clearButton, customValidity, onClear, prefix, readOnly, restProps, suffix, t0, t1, t2, t3, t4, t5, t6, weight;\n  $[0] !== props ? ({\n    __unstable_disableFocusRing,\n    border: t0,\n    clearButton,\n    disabled: t1,\n    fontSize: t2,\n    icon: IconComponent,\n    iconRight: IconRightComponent,\n    onClear,\n    padding: t3,\n    prefix,\n    radius: t4,\n    readOnly,\n    space: t5,\n    suffix,\n    customValidity,\n    type: t6,\n    weight,\n    ...restProps\n  } = props, $[0] = props, $[1] = IconComponent, $[2] = IconRightComponent, $[3] = __unstable_disableFocusRing, $[4] = clearButton, $[5] = customValidity, $[6] = onClear, $[7] = prefix, $[8] = readOnly, $[9] = restProps, $[10] = suffix, $[11] = t0, $[12] = t1, $[13] = t2, $[14] = t3, $[15] = t4, $[16] = t5, $[17] = t6, $[18] = weight) : (IconComponent = $[1], IconRightComponent = $[2], __unstable_disableFocusRing = $[3], clearButton = $[4], customValidity = $[5], onClear = $[6], prefix = $[7], readOnly = $[8], restProps = $[9], suffix = $[10], t0 = $[11], t1 = $[12], t2 = $[13], t3 = $[14], t4 = $[15], t5 = $[16], t6 = $[17], weight = $[18]);\n  const border2 = t0 === void 0 ? !0 : t0, disabled = t1 === void 0 ? !1 : t1, fontSizeProp = t2 === void 0 ? 2 : t2, paddingProp = t3 === void 0 ? 3 : t3, radiusProp = t4 === void 0 ? 2 : t4, spaceProp = t5 === void 0 ? 3 : t5, type = t6 === void 0 ? \"text\" : t6, ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), rootTheme = useRootTheme(), fontSize2 = useArrayProp(fontSizeProp), padding = useArrayProp(paddingProp), radius = useArrayProp(radiusProp), space = useArrayProp(spaceProp), $hasClearButton = !!clearButton, $hasIcon = !!IconComponent, $hasIconRight = !!IconRightComponent, $hasSuffix = !!suffix, $hasPrefix = !!prefix;\n  let t7;\n  $[19] === Symbol.for(\"react.memo_cache_sentinel\") ? (t7 = () => ref.current, $[19] = t7) : t7 = $[19], (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t7), useCustomValidity(ref, customValidity);\n  const handleClearMouseDown = _temp$1;\n  let t8;\n  $[20] !== onClear ? (t8 = (event_0) => {\n    event_0.preventDefault(), event_0.stopPropagation(), onClear && onClear(), ref.current?.focus();\n  }, $[20] = onClear, $[21] = t8) : t8 = $[21];\n  const handleClearClick = t8;\n  let t9, t10;\n  $[22] !== prefix || $[23] !== radius ? (t10 = prefix && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Prefix, { borderTop: !0, borderLeft: !0, borderBottom: !0, radius, sizing: \"border\", tone: \"inherit\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: prefix }) }), $[22] = prefix, $[23] = radius, $[24] = t10) : t10 = $[24], t9 = t10;\n  const prefixNode = t9;\n  let t11;\n  const t12 = border2 ? \"\" : void 0;\n  let t13;\n  $[25] !== IconComponent || $[26] !== fontSize2 || $[27] !== padding ? (t13 = IconComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LeftBox, { padding, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.isValidElement)(IconComponent) && IconComponent,\n    (0,react_is__WEBPACK_IMPORTED_MODULE_3__.isValidElementType)(IconComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent, {})\n  ] }) }), $[25] = IconComponent, $[26] = fontSize2, $[27] = padding, $[28] = t13) : t13 = $[28];\n  let t14;\n  $[29] !== $hasClearButton || $[30] !== IconRightComponent || $[31] !== fontSize2 || $[32] !== padding ? (t14 = !$hasClearButton && IconRightComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RightBox, { padding, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.isValidElement)(IconRightComponent) && IconRightComponent,\n    (0,react_is__WEBPACK_IMPORTED_MODULE_3__.isValidElementType)(IconRightComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconRightComponent, {})\n  ] }) }), $[29] = $hasClearButton, $[30] = IconRightComponent, $[31] = fontSize2, $[32] = padding, $[33] = t14) : t14 = $[33];\n  let t15;\n  $[34] !== $hasPrefix || $[35] !== $hasSuffix || $[36] !== __unstable_disableFocusRing || $[37] !== radius || $[38] !== rootTheme.scheme || $[39] !== rootTheme.tone || $[40] !== t12 || $[41] !== t13 || $[42] !== t14 ? (t15 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Presentation, { $hasPrefix, $unstableDisableFocusRing: __unstable_disableFocusRing, $hasSuffix, $radius: radius, $scheme: rootTheme.scheme, $tone: rootTheme.tone, \"data-border\": t12, \"data-scheme\": rootTheme.scheme, \"data-tone\": rootTheme.tone, children: [\n    t13,\n    t14\n  ] }), $[34] = $hasPrefix, $[35] = $hasSuffix, $[36] = __unstable_disableFocusRing, $[37] = radius, $[38] = rootTheme.scheme, $[39] = rootTheme.tone, $[40] = t12, $[41] = t13, $[42] = t14, $[43] = t15) : t15 = $[43], t11 = t15;\n  const presentationNode = t11;\n  let t16, t17;\n  $[44] !== padding ? (t17 = padding.map(_temp2), $[44] = padding, $[45] = t17) : t17 = $[45], t16 = t17;\n  const clearButtonBoxPadding = t16;\n  let t18, t19;\n  $[46] !== padding ? (t19 = padding.map(_temp3), $[46] = padding, $[47] = t19) : t19 = $[47], t18 = t19;\n  const clearButtonPadding = t18;\n  let t20;\n  t20 = typeof clearButton == \"object\" ? clearButton : EMPTY_RECORD;\n  const clearButtonProps = t20;\n  let t21, t22;\n  $[48] !== clearButton || $[49] !== clearButtonBoxPadding || $[50] !== clearButtonPadding || $[51] !== clearButtonProps || $[52] !== customValidity || $[53] !== disabled || $[54] !== fontSize2 || $[55] !== handleClearClick || $[56] !== radius || $[57] !== readOnly ? (t22 = !disabled && !readOnly && clearButton && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RightCard, { forwardedAs: \"span\", padding: clearButtonBoxPadding, style: CLEAR_BUTTON_BOX_STYLE, tone: customValidity ? \"critical\" : \"inherit\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TextInputClearButton, { \"aria-label\": \"Clear\", \"data-qa\": \"clear-button\", fontSize: fontSize2, icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_9__.CloseIcon, mode: \"bleed\", padding: clearButtonPadding, radius, ...clearButtonProps, onClick: handleClearClick, onMouseDown: handleClearMouseDown }) }), $[48] = clearButton, $[49] = clearButtonBoxPadding, $[50] = clearButtonPadding, $[51] = clearButtonProps, $[52] = customValidity, $[53] = disabled, $[54] = fontSize2, $[55] = handleClearClick, $[56] = radius, $[57] = readOnly, $[58] = t22) : t22 = $[58], t21 = t22;\n  const clearButtonNode = t21;\n  let t23, t24;\n  $[59] !== radius || $[60] !== suffix ? (t24 = suffix && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Suffix, { borderTop: !0, borderRight: !0, borderBottom: !0, radius, sizing: \"border\", tone: \"inherit\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: suffix }) }), $[59] = radius, $[60] = suffix, $[61] = t24) : t24 = $[61], t23 = t24;\n  const suffixNode = t23, t25 = $hasIconRight || $hasClearButton;\n  let t26;\n  $[62] !== $hasIcon || $[63] !== disabled || $[64] !== fontSize2 || $[65] !== padding || $[66] !== readOnly || $[67] !== restProps || $[68] !== rootTheme.scheme || $[69] !== rootTheme.tone || $[70] !== space || $[71] !== t25 || $[72] !== type || $[73] !== weight ? (t26 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Input, { \"data-as\": \"input\", \"data-scheme\": rootTheme.scheme, \"data-tone\": rootTheme.tone, ...restProps, $fontSize: fontSize2, $iconLeft: $hasIcon, $iconRight: t25, $padding: padding, $scheme: rootTheme.scheme, $space: space, $tone: rootTheme.tone, $weight: weight, disabled, readOnly, ref, type }), $[62] = $hasIcon, $[63] = disabled, $[64] = fontSize2, $[65] = padding, $[66] = readOnly, $[67] = restProps, $[68] = rootTheme.scheme, $[69] = rootTheme.tone, $[70] = space, $[71] = t25, $[72] = type, $[73] = weight, $[74] = t26) : t26 = $[74];\n  let t27;\n  $[75] !== clearButtonNode || $[76] !== presentationNode || $[77] !== t26 ? (t27 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(InputRoot, { children: [\n    t26,\n    presentationNode,\n    clearButtonNode\n  ] }), $[75] = clearButtonNode, $[76] = presentationNode, $[77] = t26, $[78] = t27) : t27 = $[78];\n  let t28;\n  return $[79] !== prefixNode || $[80] !== rootTheme.tone || $[81] !== suffixNode || $[82] !== t27 ? (t28 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledTextInput, { \"data-ui\": \"TextInput\", tone: rootTheme.tone, children: [\n    prefixNode,\n    t27,\n    suffixNode\n  ] }), $[79] = prefixNode, $[80] = rootTheme.tone, $[81] = suffixNode, $[82] = t27, $[83] = t28) : t28 = $[83], t28;\n});\nTextInput.displayName = \"ForwardRef(TextInput)\";\nfunction _temp$1(event) {\n  event.preventDefault(), event.stopPropagation();\n}\nfunction _temp2(v) {\n  return v === 0 ? 0 : v === 1 || v === 2 ? 1 : v - 2;\n}\nfunction _temp3(v_0) {\n  return v_0 === 0 || v_0 === 1 ? 0 : v_0 === 2 ? 1 : v_0 - 1;\n}\nfunction useDelayedState(initialState) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(3), [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(initialState), delayedAction = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(void 0);\n  let t0;\n  $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = (nextState, delay) => {\n    const action = () => {\n      setState(nextState);\n    };\n    if (delayedAction.current && (clearTimeout(delayedAction.current), delayedAction.current = void 0), !delay)\n      return action();\n    delayedAction.current = setTimeout(action, delay);\n  }, $[0] = t0) : t0 = $[0];\n  const onStateChange = t0;\n  let t1;\n  return $[1] !== state ? (t1 = [state, onStateChange], $[1] = state, $[2] = t1) : t1 = $[2], t1;\n}\nconst DEFAULT_TOOLTIP_ARROW_WIDTH = 15, DEFAULT_TOOLTIP_ARROW_HEIGHT = 6, DEFAULT_TOOLTIP_ARROW_RADIUS = 2, DEFAULT_TOOLTIP_DISTANCE = 4, DEFAULT_TOOLTIP_PADDING = 4, DEFAULT_FALLBACK_PLACEMENTS = {\n  top: [\"top-end\", \"top-start\", \"bottom\", \"left\", \"right\"],\n  \"top-start\": [\"top\", \"top-end\", \"bottom-start\", \"left-start\", \"right-start\"],\n  \"top-end\": [\"top\", \"top-start\", \"bottom-end\", \"left-end\", \"right-end\"],\n  bottom: [\"bottom-end\", \"bottom-start\", \"top\", \"left\", \"right\"],\n  \"bottom-start\": [\"bottom\", \"bottom-end\", \"top-start\", \"left-start\", \"right-start\"],\n  \"bottom-end\": [\"bottom\", \"bottom-start\", \"top-end\", \"left-end\", \"right-end\"],\n  left: [\"left-end\", \"left-start\", \"right\", \"top\", \"bottom\"],\n  \"left-start\": [\"left\", \"left-end\", \"right-start\", \"top-start\", \"bottom-start\"],\n  \"left-end\": [\"left\", \"left-start\", \"right-end\", \"top-end\", \"bottom-end\"],\n  right: [\"right-end\", \"right-start\", \"left\", \"top\", \"bottom\"],\n  \"right-start\": [\"right\", \"right-end\", \"left-start\", \"top-start\", \"bottom-start\"],\n  \"right-end\": [\"right\", \"right-start\", \"left-end\", \"top-end\", \"bottom-end\"]\n}, MotionCard = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(framer_motion__WEBPACK_IMPORTED_MODULE_11__.motion.create(Card)).withConfig({\n  displayName: \"MotionCard\",\n  componentId: \"sc-1xn138w-0\"\n})`will-change:transform;`, TooltipCard = (0,react__WEBPACK_IMPORTED_MODULE_2__.memo)((0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(48);\n  let animate, arrow2, arrowRef, arrowX, arrowY, children, originX, originY, padding, placement, radius, restProps, scheme, shadow, style;\n  $[0] !== props ? ({\n    animate,\n    arrow: arrow2,\n    arrowRef,\n    arrowX,\n    arrowY,\n    children,\n    originX,\n    originY,\n    padding,\n    placement,\n    radius,\n    scheme,\n    shadow,\n    style,\n    ...restProps\n  } = props, $[0] = props, $[1] = animate, $[2] = arrow2, $[3] = arrowRef, $[4] = arrowX, $[5] = arrowY, $[6] = children, $[7] = originX, $[8] = originY, $[9] = padding, $[10] = placement, $[11] = radius, $[12] = restProps, $[13] = scheme, $[14] = shadow, $[15] = style) : (animate = $[1], arrow2 = $[2], arrowRef = $[3], arrowX = $[4], arrowY = $[5], children = $[6], originX = $[7], originY = $[8], padding = $[9], placement = $[10], radius = $[11], restProps = $[12], scheme = $[13], shadow = $[14], style = $[15]);\n  let t0;\n  const t1 = animate ? \"transform\" : void 0;\n  let t2;\n  $[16] !== originX || $[17] !== originY || $[18] !== style || $[19] !== t1 ? (t2 = {\n    originX,\n    originY,\n    willChange: t1,\n    ...style\n  }, $[16] = originX, $[17] = originY, $[18] = style, $[19] = t1, $[20] = t2) : t2 = $[20], t0 = t2;\n  const rootStyle2 = t0;\n  let t3;\n  const t4 = arrowX !== null ? arrowX : void 0, t5 = arrowY !== null ? arrowY : void 0;\n  let t6;\n  $[21] !== t4 || $[22] !== t5 ? (t6 = {\n    left: t4,\n    top: t5,\n    right: void 0,\n    bottom: void 0\n  }, $[21] = t4, $[22] = t5, $[23] = t6) : t6 = $[23], t3 = t6;\n  const arrowStyle = t3, t7 = restProps;\n  let t8;\n  $[24] !== animate ? (t8 = animate ? [\"hidden\", \"initial\"] : void 0, $[24] = animate, $[25] = t8) : t8 = $[25];\n  let t9;\n  $[26] !== animate ? (t9 = animate ? [\"visible\", \"scaleIn\"] : void 0, $[26] = animate, $[27] = t9) : t9 = $[27];\n  let t10;\n  $[28] !== animate ? (t10 = animate ? [\"hidden\", \"scaleOut\"] : void 0, $[28] = animate, $[29] = t10) : t10 = $[29];\n  let t11;\n  $[30] !== arrow2 || $[31] !== arrowRef || $[32] !== arrowStyle ? (t11 = arrow2 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Arrow, { ref: arrowRef, style: arrowStyle, width: DEFAULT_TOOLTIP_ARROW_WIDTH, height: DEFAULT_TOOLTIP_ARROW_HEIGHT, radius: DEFAULT_TOOLTIP_ARROW_RADIUS }), $[30] = arrow2, $[31] = arrowRef, $[32] = arrowStyle, $[33] = t11) : t11 = $[33];\n  let t12;\n  return $[34] !== children || $[35] !== padding || $[36] !== placement || $[37] !== radius || $[38] !== ref || $[39] !== rootStyle2 || $[40] !== scheme || $[41] !== shadow || $[42] !== t10 || $[43] !== t11 || $[44] !== t7 || $[45] !== t8 || $[46] !== t9 ? (t12 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(MotionCard, { \"data-ui\": \"Tooltip__card\", ...t7, \"data-placement\": placement, padding, radius, ref, scheme, shadow, style: rootStyle2, variants: POPOVER_MOTION_PROPS.card, transition: POPOVER_MOTION_PROPS.transition, initial: t8, animate: t9, exit: t10, children: [\n    children,\n    t11\n  ] }), $[34] = children, $[35] = padding, $[36] = placement, $[37] = radius, $[38] = ref, $[39] = rootStyle2, $[40] = scheme, $[41] = shadow, $[42] = t10, $[43] = t11, $[44] = t7, $[45] = t8, $[46] = t9, $[47] = t12) : t12 = $[47], t12;\n}));\nTooltipCard.displayName = \"Memo(ForwardRef(TooltipCard))\";\nconst TooltipDelayGroupContext = createGlobalScopedContext(\"@sanity/ui/context/tooltipDelayGroup\", null);\nfunction TooltipDelayGroupProvider(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(9), {\n    children,\n    delay\n  } = props, [isGroupActive, setIsGroupActive] = useDelayedState(!1), [openTooltipId, setOpenTooltipId] = useDelayedState(null), openDelay = typeof delay == \"number\" ? delay : delay?.open || 0, closeDelay = typeof delay == \"number\" ? delay : delay?.close || 0;\n  let t0;\n  const t1 = isGroupActive ? 1 : openDelay;\n  let t2;\n  $[0] !== closeDelay || $[1] !== openTooltipId || $[2] !== setIsGroupActive || $[3] !== setOpenTooltipId || $[4] !== t1 ? (t2 = {\n    setIsGroupActive,\n    openTooltipId,\n    setOpenTooltipId,\n    openDelay: t1,\n    closeDelay\n  }, $[0] = closeDelay, $[1] = openTooltipId, $[2] = setIsGroupActive, $[3] = setOpenTooltipId, $[4] = t1, $[5] = t2) : t2 = $[5], t0 = t2;\n  const value = t0;\n  let t3;\n  return $[6] !== children || $[7] !== value ? (t3 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TooltipDelayGroupContext.Provider, { value, children }), $[6] = children, $[7] = value, $[8] = t3) : t3 = $[8], t3;\n}\nTooltipDelayGroupProvider.displayName = \"TooltipDelayGroupProvider\";\nfunction useTooltipDelayGroup() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(TooltipDelayGroupContext);\n}\nconst StyledTooltip = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Layer).withConfig({\n  displayName: \"StyledTooltip\",\n  componentId: \"sc-13f2zvh-0\"\n})`pointer-events:none;`, Tooltip = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const boundaryElementContext = useBoundaryElement(), {\n    layer\n  } = useTheme_v2(), {\n    animate: _animate = !1,\n    arrow: arrowProp = !1,\n    boundaryElement = boundaryElementContext?.element,\n    children: childProp,\n    content,\n    disabled,\n    fallbackPlacements: fallbackPlacementsProp = props.fallbackPlacements ?? DEFAULT_FALLBACK_PLACEMENTS[props.placement ?? \"bottom\"],\n    padding = 2,\n    placement: placementProp = \"bottom\",\n    portal: portalProp,\n    radius = 2,\n    scheme,\n    shadow = 2,\n    zOffset = layer.tooltip.zOffset,\n    delay,\n    ...restProps\n  } = props, animate = usePrefersReducedMotion() ? !1 : _animate, fallbackPlacements = useArrayProp(fallbackPlacementsProp), ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), [referenceElement, setReferenceElement] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null), arrowRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), rootBoundary = \"viewport\", [tooltipMaxWidth, setTooltipMaxWidth] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, () => ref.current);\n  const portal = usePortal(), portalElement = typeof portalProp == \"string\" ? portal.elements?.[portalProp] || null : portal.element, middleware = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => {\n    const ret = [];\n    return ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__.flip)({\n      boundary: boundaryElement || void 0,\n      fallbackPlacements,\n      padding: DEFAULT_TOOLTIP_PADDING,\n      rootBoundary\n    })), ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__.offset)({\n      mainAxis: DEFAULT_TOOLTIP_DISTANCE\n    })), ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__.shift)({\n      boundary: boundaryElement || void 0,\n      rootBoundary,\n      padding: DEFAULT_TOOLTIP_PADDING\n    })), arrowProp && ret.push((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__.arrow)({\n      element: arrowRef,\n      padding: DEFAULT_TOOLTIP_PADDING\n    })), animate && ret.push(origin), ret;\n  }, [animate, arrowProp, boundaryElement, fallbackPlacements]), {\n    floatingStyles,\n    placement,\n    middlewareData,\n    refs,\n    update\n  } = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_12__.useFloating)({\n    middleware,\n    placement: placementProp,\n    whileElementsMounted: _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_10__.autoUpdate,\n    elements: {\n      reference: referenceElement\n    }\n  }), arrowX = middlewareData.arrow?.x, arrowY = middlewareData.arrow?.y, originX = middlewareData[\"@sanity/ui/origin\"]?.originX, originY = middlewareData[\"@sanity/ui/origin\"]?.originY, tooltipId = (0,react__WEBPACK_IMPORTED_MODULE_2__.useId)(), [isOpen, setIsOpen] = useDelayedState(!1), delayGroupContext = useTooltipDelayGroup(), {\n    setIsGroupActive,\n    setOpenTooltipId\n  } = delayGroupContext || {}, showTooltip = isOpen || delayGroupContext?.openTooltipId === tooltipId, isInsideGroup = delayGroupContext !== null, openDelayProp = typeof delay == \"number\" ? delay : delay?.open || 0, closeDelayProp = typeof delay == \"number\" ? delay : delay?.close || 0, openDelay = isInsideGroup ? delayGroupContext.openDelay : openDelayProp, closeDelay = isInsideGroup ? delayGroupContext.closeDelay : closeDelayProp, handleIsOpenChange = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((open, immediate) => {\n    if (isInsideGroup)\n      if (open) {\n        const groupedOpenDelay = immediate ? 0 : openDelay;\n        setIsGroupActive?.(open, groupedOpenDelay), setOpenTooltipId?.(tooltipId, groupedOpenDelay);\n      } else {\n        const groupDeactivateDelay = closeDelay > 200 ? closeDelay : 200;\n        setIsGroupActive?.(open, groupDeactivateDelay), setOpenTooltipId?.(null, immediate ? 0 : closeDelay);\n      }\n    else\n      setIsOpen(open, immediate ? 0 : open ? openDelay : closeDelay);\n  }, [isInsideGroup, openDelay, setIsGroupActive, setOpenTooltipId, tooltipId, closeDelay, setIsOpen]), handleBlur = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e) => {\n    handleIsOpenChange(!1), childProp?.props?.onBlur?.(e);\n  }, [childProp?.props, handleIsOpenChange]), handleClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e_0) => {\n    handleIsOpenChange(!1, !0), childProp?.props.onClick?.(e_0);\n  }, [childProp?.props, handleIsOpenChange]), handleContextMenu = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e_1) => {\n    handleIsOpenChange(!1, !0), childProp?.props.onContextMenu?.(e_1);\n  }, [childProp?.props, handleIsOpenChange]), handleFocus = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e_2) => {\n    handleIsOpenChange(!0), childProp?.props?.onFocus?.(e_2);\n  }, [childProp?.props, handleIsOpenChange]), handleMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e_3) => {\n    handleIsOpenChange(!0), childProp?.props?.onMouseEnter?.(e_3);\n  }, [childProp?.props, handleIsOpenChange]), handleMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e_4) => {\n    handleIsOpenChange(!1), childProp?.props?.onMouseLeave?.(e_4);\n  }, [childProp?.props, handleIsOpenChange]);\n  useCloseOnMouseLeave({\n    handleIsOpenChange,\n    referenceElement,\n    showTooltip,\n    isInsideGroup\n  }), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    disabled && showTooltip && handleIsOpenChange(!1);\n  }, [disabled, handleIsOpenChange, showTooltip]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    !content && showTooltip && handleIsOpenChange(!1);\n  }, [content, handleIsOpenChange, showTooltip]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    if (!showTooltip) return;\n    function handleWindowKeyDown(event) {\n      event.key === \"Escape\" && handleIsOpenChange(!1, !0);\n    }\n    return window.addEventListener(\"keydown\", handleWindowKeyDown), () => {\n      window.removeEventListener(\"keydown\", handleWindowKeyDown);\n    };\n  }, [handleIsOpenChange, showTooltip]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect)(() => {\n    const availableWidths = [...boundaryElement ? [boundaryElement.offsetWidth] : [], portalElement?.offsetWidth || document.body.offsetWidth];\n    setTooltipMaxWidth(Math.min(...availableWidths) - DEFAULT_TOOLTIP_PADDING * 2);\n  }, [boundaryElement, portalElement]);\n  const setArrow = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((arrowEl) => {\n    arrowRef.current = arrowEl, update();\n  }, [update]), setFloating = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((node) => {\n    ref.current = node, refs.setFloating(node);\n  }, [refs]), child = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => childProp ? (0,react__WEBPACK_IMPORTED_MODULE_2__.cloneElement)(childProp, {\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleClick,\n    onContextMenu: handleContextMenu,\n    ref: setReferenceElement\n  }) : null, [childProp, handleBlur, handleClick, handleContextMenu, handleFocus, handleMouseEnter, handleMouseLeave]);\n  if ((0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(childProp ? getElementRef(childProp) : null, () => referenceElement, [referenceElement]), !child) return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {});\n  if (disabled) return child;\n  const tooltip = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledTooltip, { \"data-ui\": \"Tooltip\", ...restProps, ref: setFloating, style: {\n    ...floatingStyles,\n    maxWidth: tooltipMaxWidth > 0 ? `${tooltipMaxWidth}px` : void 0\n  }, zOffset, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TooltipCard, { ...restProps, animate, arrow: arrowProp, arrowRef: setArrow, arrowX, arrowY, originX, originY, padding, placement, radius, ref: setFloating, scheme, shadow, children: content }) }), children = showTooltip && (portalProp ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Portal, { __unstable_name: typeof portalProp == \"string\" ? portalProp : void 0, children: tooltip }) : tooltip);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    animate ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(framer_motion__WEBPACK_IMPORTED_MODULE_13__.AnimatePresence, { children }) : children,\n    child\n  ] });\n});\nTooltip.displayName = \"ForwardRef(Tooltip)\";\nfunction useCloseOnMouseLeave(t0) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(10), {\n    handleIsOpenChange,\n    referenceElement,\n    showTooltip,\n    isInsideGroup\n  } = t0;\n  let t1;\n  $[0] !== handleIsOpenChange || $[1] !== referenceElement ? (t1 = (target, teardown) => {\n    referenceElement && (referenceElement === target || target instanceof Node && referenceElement.contains(target) || (handleIsOpenChange(!1), teardown()));\n  }, $[0] = handleIsOpenChange, $[1] = referenceElement, $[2] = t1) : t1 = $[2];\n  const onMouseMove = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_7__.useEffectEvent)(t1);\n  let t2;\n  $[3] !== isInsideGroup || $[4] !== onMouseMove || $[5] !== showTooltip ? (t2 = () => {\n    if (!showTooltip || isInsideGroup)\n      return;\n    const handleMouseMove = (event) => {\n      onMouseMove(event.target, () => window.removeEventListener(\"mousemove\", handleMouseMove));\n    };\n    return window.addEventListener(\"mousemove\", handleMouseMove), () => window.removeEventListener(\"mousemove\", handleMouseMove);\n  }, $[3] = isInsideGroup, $[4] = onMouseMove, $[5] = showTooltip, $[6] = t2) : t2 = $[6];\n  let t3;\n  $[7] !== isInsideGroup || $[8] !== showTooltip ? (t3 = [isInsideGroup, showTooltip], $[7] = isInsideGroup, $[8] = showTooltip, $[9] = t3) : t3 = $[9], (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t2, t3);\n}\nconst StyledHotkeys = styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.kbd.withConfig({\n  displayName: \"StyledHotkeys\",\n  componentId: \"sc-b37mge-0\"\n})`font:inherit;padding:1px;&:not([hidden]){display:block;}`, Key = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(KBD).withConfig({\n  displayName: \"Key\",\n  componentId: \"sc-b37mge-1\"\n})`&:not([hidden]){display:block;}`, Hotkeys = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(24);\n  let fontSize2, keys, padding, radius, restProps, t0;\n  $[0] !== props ? ({\n    fontSize: fontSize2,\n    keys,\n    padding,\n    radius,\n    space: t0,\n    ...restProps\n  } = props, $[0] = props, $[1] = fontSize2, $[2] = keys, $[3] = padding, $[4] = radius, $[5] = restProps, $[6] = t0) : (fontSize2 = $[1], keys = $[2], padding = $[3], radius = $[4], restProps = $[5], t0 = $[6]);\n  const space = useArrayProp(t0 === void 0 ? 0.5 : t0);\n  if (!keys || keys.length === 0) {\n    let t12;\n    return $[7] === Symbol.for(\"react.memo_cache_sentinel\") ? (t12 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}), $[7] = t12) : t12 = $[7], t12;\n  }\n  let t1;\n  if ($[8] !== fontSize2 || $[9] !== keys || $[10] !== padding || $[11] !== radius) {\n    let t22;\n    $[13] !== fontSize2 || $[14] !== padding || $[15] !== radius ? (t22 = (key2, i) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Key, { fontSize: fontSize2, padding, radius, children: key2 }, i), $[13] = fontSize2, $[14] = padding, $[15] = radius, $[16] = t22) : t22 = $[16], t1 = keys.map(t22), $[8] = fontSize2, $[9] = keys, $[10] = padding, $[11] = radius, $[12] = t1;\n  } else\n    t1 = $[12];\n  let t2;\n  $[17] !== space || $[18] !== t1 ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Inline, { as: \"span\", space, children: t1 }), $[17] = space, $[18] = t1, $[19] = t2) : t2 = $[19];\n  let t3;\n  return $[20] !== ref || $[21] !== restProps || $[22] !== t2 ? (t3 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledHotkeys, { \"data-ui\": \"Hotkeys\", ...restProps, ref, children: t2 }), $[20] = ref, $[21] = restProps, $[22] = t2, $[23] = t3) : t3 = $[23], t3;\n});\nHotkeys.displayName = \"ForwardRef(Hotkeys)\";\nconst MenuContext = createGlobalScopedContext(\"@sanity/ui/context/menu\", null);\nfunction _isFocusable(element) {\n  return isHTMLAnchorElement(element) && element.getAttribute(\"data-disabled\") !== \"true\" || isHTMLButtonElement(element) && !element.disabled;\n}\nfunction _getFocusableElements(elements) {\n  return elements.filter(_isFocusable);\n}\nfunction _getDOMPath(rootElement, el) {\n  const path = [];\n  let e = el;\n  for (; e !== rootElement; ) {\n    const parentElement = e.parentElement;\n    if (!parentElement) return path;\n    const index = Array.from(parentElement.childNodes).indexOf(e);\n    if (path.unshift(index), parentElement === rootElement)\n      return path;\n    e = parentElement;\n  }\n  return path;\n}\nconst EMPTY_PATH = [];\nfunction _sortElements(rootElement, elements) {\n  if (!rootElement) return;\n  const map = /* @__PURE__ */ new WeakMap();\n  for (const el of elements)\n    map.set(el, _getDOMPath(rootElement, el));\n  const _sort = (a, b) => {\n    const _a = map.get(a) || EMPTY_PATH, _b = map.get(b) || EMPTY_PATH, len = Math.max(_a.length, _b.length);\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1, bIndex = _b[i] || -1;\n      if (aIndex !== bIndex)\n        return aIndex - bIndex;\n    }\n    return 0;\n  };\n  elements.sort(_sort);\n}\nfunction useMenuController(props) {\n  const {\n    onKeyDown,\n    originElement,\n    shouldFocus,\n    rootElementRef\n  } = props, elementsRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)([]), [activeIndex, _setActiveIndex] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(-1), activeIndexRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(activeIndex), activeElement = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => elementsRef.current[activeIndex] || null, [activeIndex]), mounted = !!rootElementRef.current, setActiveIndex = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((nextActiveIndex) => {\n    _setActiveIndex(nextActiveIndex), activeIndexRef.current = nextActiveIndex;\n  }, []), mount = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((element, selected) => {\n    if (!element) return () => {\n    };\n    if (elementsRef.current.indexOf(element) === -1 && (elementsRef.current.push(element), _sortElements(rootElementRef.current, elementsRef.current)), selected) {\n      const selectedIndex = elementsRef.current.indexOf(element);\n      setActiveIndex(selectedIndex);\n    }\n    return () => {\n      const idx = elementsRef.current.indexOf(element);\n      idx > -1 && elementsRef.current.splice(idx, 1);\n    };\n  }, [rootElementRef, setActiveIndex]), handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((event) => {\n    if (event.key === \"Tab\") {\n      originElement && originElement.focus();\n      return;\n    }\n    if (event.key === \"Home\") {\n      event.preventDefault(), event.stopPropagation();\n      const el = _getFocusableElements(elementsRef.current)[0];\n      if (!el) return;\n      const currentIndex = elementsRef.current.indexOf(el);\n      setActiveIndex(currentIndex);\n      return;\n    }\n    if (event.key === \"End\") {\n      event.preventDefault(), event.stopPropagation();\n      const focusableElements_0 = _getFocusableElements(elementsRef.current), el_0 = focusableElements_0[focusableElements_0.length - 1];\n      if (!el_0) return;\n      const currentIndex_0 = elementsRef.current.indexOf(el_0);\n      setActiveIndex(currentIndex_0);\n      return;\n    }\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault(), event.stopPropagation();\n      const focusableElements_1 = _getFocusableElements(elementsRef.current), focusableLen = focusableElements_1.length;\n      if (focusableLen === 0) return;\n      const focusedElement = elementsRef.current[activeIndexRef.current];\n      let focusedIndex = focusableElements_1.indexOf(focusedElement);\n      focusedIndex = (focusedIndex - 1 + focusableLen) % focusableLen;\n      const el_1 = focusableElements_1[focusedIndex], currentIndex_1 = elementsRef.current.indexOf(el_1);\n      setActiveIndex(currentIndex_1);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      event.preventDefault(), event.stopPropagation();\n      const focusableElements_2 = _getFocusableElements(elementsRef.current), focusableLen_0 = focusableElements_2.length;\n      if (focusableLen_0 === 0) return;\n      const focusedElement_0 = elementsRef.current[activeIndexRef.current];\n      let focusedIndex_0 = focusableElements_2.indexOf(focusedElement_0);\n      focusedIndex_0 = (focusedIndex_0 + 1) % focusableLen_0;\n      const el_2 = focusableElements_2[focusedIndex_0], currentIndex_2 = elementsRef.current.indexOf(el_2);\n      setActiveIndex(currentIndex_2);\n      return;\n    }\n    onKeyDown && onKeyDown(event);\n  }, [onKeyDown, originElement, setActiveIndex]), handleItemMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((event_0) => {\n    const element_0 = event_0.currentTarget, currentIndex_3 = elementsRef.current.indexOf(element_0);\n    setActiveIndex(currentIndex_3);\n  }, [setActiveIndex]), handleItemMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {\n    setActiveIndex(-2), rootElementRef.current?.focus();\n  }, [rootElementRef, setActiveIndex]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    if (!mounted) return;\n    const rafId = requestAnimationFrame(() => {\n      if (activeIndex === -1) {\n        if (shouldFocus === \"first\") {\n          const el_3 = _getFocusableElements(elementsRef.current)[0];\n          if (el_3) {\n            const currentIndex_4 = elementsRef.current.indexOf(el_3);\n            setActiveIndex(currentIndex_4);\n          }\n        }\n        if (shouldFocus === \"last\") {\n          const focusableElements_4 = _getFocusableElements(elementsRef.current), el_4 = focusableElements_4[focusableElements_4.length - 1];\n          if (el_4) {\n            const currentIndex_5 = elementsRef.current.indexOf(el_4);\n            setActiveIndex(currentIndex_5);\n          }\n        }\n        return;\n      }\n      (elementsRef.current[activeIndex] || null)?.focus();\n    });\n    return () => cancelAnimationFrame(rafId);\n  }, [activeIndex, mounted, setActiveIndex, shouldFocus]), {\n    activeElement,\n    activeIndex,\n    handleItemMouseEnter,\n    handleItemMouseLeave,\n    handleKeyDown,\n    mount\n  };\n}\nconst StyledMenu = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"StyledMenu\",\n  componentId: \"sc-xt0tnv-0\"\n})`outline:none;overflow:auto;`, Menu = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(50);\n  let _shouldFocus, children, onClickOutside, onEscape, onItemClick, onItemSelect, onKeyDown, originElement, registerElement, restProps, t0, t1;\n  if ($[0] !== props) {\n    const {\n      children: t22,\n      focusFirst,\n      focusLast,\n      onClickOutside: t32,\n      onEscape: t42,\n      onItemClick: t52,\n      onItemSelect: t62,\n      onKeyDown: t72,\n      originElement: t82,\n      padding: t92,\n      registerElement: t102,\n      shouldFocus: t112,\n      space: t122,\n      ...t132\n    } = props;\n    children = t22, onClickOutside = t32, onEscape = t42, onItemClick = t52, onItemSelect = t62, onKeyDown = t72, originElement = t82, t0 = t92, registerElement = t102, _shouldFocus = t112, t1 = t122, restProps = t132, $[0] = props, $[1] = _shouldFocus, $[2] = children, $[3] = onClickOutside, $[4] = onEscape, $[5] = onItemClick, $[6] = onItemSelect, $[7] = onKeyDown, $[8] = originElement, $[9] = registerElement, $[10] = restProps, $[11] = t0, $[12] = t1;\n  } else\n    _shouldFocus = $[1], children = $[2], onClickOutside = $[3], onEscape = $[4], onItemClick = $[5], onItemSelect = $[6], onKeyDown = $[7], originElement = $[8], registerElement = $[9], restProps = $[10], t0 = $[11], t1 = $[12];\n  const padding = t0 === void 0 ? 1 : t0, space = t1 === void 0 ? 1 : t1, shouldFocus = _shouldFocus ?? (props.focusFirst && \"first\" || props.focusLast && \"last\" || null), ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n  let t2;\n  $[13] === Symbol.for(\"react.memo_cache_sentinel\") ? (t2 = () => ref.current, $[13] = t2) : t2 = $[13], (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t2);\n  const {\n    isTopLayer\n  } = useLayer();\n  let t3;\n  $[14] !== onKeyDown || $[15] !== originElement || $[16] !== shouldFocus ? (t3 = {\n    onKeyDown,\n    originElement,\n    shouldFocus,\n    rootElementRef: ref\n  }, $[14] = onKeyDown, $[15] = originElement, $[16] = shouldFocus, $[17] = t3) : t3 = $[17];\n  const {\n    activeElement,\n    activeIndex,\n    handleItemMouseEnter,\n    handleItemMouseLeave,\n    handleKeyDown,\n    mount\n  } = useMenuController(t3), unregisterElementRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n  let t4;\n  $[18] !== registerElement ? (t4 = (el) => {\n    unregisterElementRef.current && (unregisterElementRef.current(), unregisterElementRef.current = null), ref.current = el, ref.current && registerElement && (unregisterElementRef.current = registerElement(ref.current));\n  }, $[18] = registerElement, $[19] = t4) : t4 = $[19];\n  const handleRefChange = t4;\n  let t5, t6;\n  $[20] !== activeIndex || $[21] !== onItemSelect ? (t5 = () => {\n    onItemSelect && onItemSelect(activeIndex);\n  }, t6 = [activeIndex, onItemSelect], $[20] = activeIndex, $[21] = onItemSelect, $[22] = t5, $[23] = t6) : (t5 = $[22], t6 = $[23]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t5, t6);\n  let t7;\n  $[24] === Symbol.for(\"react.memo_cache_sentinel\") ? (t7 = () => [ref.current], $[24] = t7) : t7 = $[24], useClickOutsideEvent(isTopLayer && onClickOutside, t7);\n  let t8;\n  $[25] !== isTopLayer || $[26] !== onEscape ? (t8 = (event) => {\n    isTopLayer && event.key === \"Escape\" && (event.stopPropagation(), onEscape && onEscape());\n  }, $[25] = isTopLayer, $[26] = onEscape, $[27] = t8) : t8 = $[27], useGlobalKeyDown(t8);\n  let t9, t10;\n  $[28] !== activeElement || $[29] !== activeIndex || $[30] !== handleItemMouseEnter || $[31] !== handleItemMouseLeave || $[32] !== mount || $[33] !== onClickOutside || $[34] !== onEscape || $[35] !== onItemClick || $[36] !== registerElement ? (t10 = {\n    version: 0,\n    activeElement,\n    activeIndex,\n    mount,\n    onClickOutside,\n    onEscape,\n    onItemClick,\n    onItemMouseEnter: handleItemMouseEnter,\n    onItemMouseLeave: handleItemMouseLeave,\n    registerElement,\n    onMouseEnter: handleItemMouseEnter,\n    onMouseLeave: handleItemMouseLeave\n  }, $[28] = activeElement, $[29] = activeIndex, $[30] = handleItemMouseEnter, $[31] = handleItemMouseLeave, $[32] = mount, $[33] = onClickOutside, $[34] = onEscape, $[35] = onItemClick, $[36] = registerElement, $[37] = t10) : t10 = $[37], t9 = t10;\n  const value = t9;\n  let t11;\n  $[38] !== children || $[39] !== space ? (t11 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Stack, { space, children }), $[38] = children, $[39] = space, $[40] = t11) : t11 = $[40];\n  let t12;\n  $[41] !== handleKeyDown || $[42] !== handleRefChange || $[43] !== padding || $[44] !== restProps || $[45] !== t11 ? (t12 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledMenu, { \"data-ui\": \"Menu\", ...restProps, onKeyDown: handleKeyDown, padding, ref: handleRefChange, role: \"menu\", tabIndex: -1, children: t11 }), $[41] = handleKeyDown, $[42] = handleRefChange, $[43] = padding, $[44] = restProps, $[45] = t11, $[46] = t12) : t12 = $[46];\n  let t13;\n  return $[47] !== t12 || $[48] !== value ? (t13 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MenuContext.Provider, { value, children: t12 }), $[47] = t12, $[48] = value, $[49] = t13) : t13 = $[49], t13;\n});\nMenu.displayName = \"ForwardRef(Menu)\";\nconst MenuDivider = styled_components__WEBPACK_IMPORTED_MODULE_8__.styled.hr.withConfig({\n  displayName: \"MenuDivider\",\n  componentId: \"sc-uhoxwu-0\"\n})`height:1px;border:0;background:var(--card-hairline-soft-color);margin:0;`;\nMenuDivider.displayName = \"MenuDivider\";\nfunction selectableBaseStyle() {\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    background-color: inherit;\n    color: inherit;\n\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `;\n}\nfunction selectableColorStyle(props) {\n  const {\n    $tone\n  } = props, {\n    color,\n    style\n  } = (0,_sanity_ui_theme__WEBPACK_IMPORTED_MODULE_6__.getTheme_v2)(props.theme), tone = color.selectable[$tone];\n  return (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.css)`\n    ${_cardColorStyle(color, tone.enabled)}\n\n    background-color: var(--card-bg-color);\n    color: var(--card-fg-color);\n    outline: none;\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      &:disabled {\n        ${_cardColorStyle(color, tone.disabled)}\n      }\n\n      &:not(:disabled) {\n        &[aria-pressed='true'] {\n          ${_cardColorStyle(color, tone.pressed)}\n        }\n\n        &[data-selected],\n        &[aria-selected='true'] > & {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${_cardColorStyle(color, tone.hovered)}\n            }\n\n            &:active {\n              ${_cardColorStyle(color, tone.pressed)}\n            }\n          }\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      &[data-disabled] {\n        ${_cardColorStyle(color, tone.disabled)}\n      }\n\n      &:not([data-disabled]) {\n        &[data-pressed] {\n          ${_cardColorStyle(color, tone.pressed)}\n        }\n\n        &[data-selected] {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${_cardColorStyle(color, tone.hovered)}\n            }\n            &:active {\n              ${_cardColorStyle(color, tone.pressed)}\n            }\n          }\n        }\n      }\n    }\n\n    ${style?.card?.root}\n  `;\n}\nconst Selectable = /* @__PURE__ */ (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Box).withConfig({\n  displayName: \"Selectable\",\n  componentId: \"sc-1w01ang-0\"\n})(responsiveRadiusStyle, selectableBaseStyle, selectableColorStyle);\nSelectable.displayName = \"Selectable\";\nfunction useMenu() {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(MenuContext);\n  if (!value)\n    throw new Error(\"useMenu(): missing context value\");\n  if (!isRecord(value) || value.version !== 0)\n    throw new Error(\"useMenu(): the context value is not compatible\");\n  return value;\n}\nfunction MenuGroup(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(79);\n  let IconComponent, children, menuProps, onClick, popover, restProps, t0, t1, t2, t3, t4, t5, text;\n  $[0] !== props ? ({\n    as: t0,\n    children,\n    fontSize: t1,\n    icon: IconComponent,\n    menu: menuProps,\n    onClick,\n    padding: t2,\n    popover,\n    radius: t3,\n    space: t4,\n    text,\n    tone: t5,\n    ...restProps\n  } = props, $[0] = props, $[1] = IconComponent, $[2] = children, $[3] = menuProps, $[4] = onClick, $[5] = popover, $[6] = restProps, $[7] = t0, $[8] = t1, $[9] = t2, $[10] = t3, $[11] = t4, $[12] = t5, $[13] = text) : (IconComponent = $[1], children = $[2], menuProps = $[3], onClick = $[4], popover = $[5], restProps = $[6], t0 = $[7], t1 = $[8], t2 = $[9], t3 = $[10], t4 = $[11], t5 = $[12], text = $[13]);\n  const as = t0 === void 0 ? \"button\" : t0, fontSize2 = t1 === void 0 ? 1 : t1, padding = t2 === void 0 ? 3 : t2, radius = t3 === void 0 ? 2 : t3, space = t4 === void 0 ? 3 : t4, tone = t5 === void 0 ? \"default\" : t5, menu = useMenu(), {\n    scheme\n  } = useRootTheme(), {\n    activeElement,\n    mount,\n    onClickOutside,\n    onEscape,\n    onItemClick,\n    onItemMouseEnter: _onItemMouseEnter,\n    registerElement\n  } = menu, onItemMouseEnter = _onItemMouseEnter ?? menu.onMouseEnter, [rootElement, setRootElement] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null), [open, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1), [shouldFocus, setShouldFocus] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null), active = !!activeElement && activeElement === rootElement, [withinMenu, setWithinMenu] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1);\n  let t6;\n  $[14] !== onItemMouseEnter ? (t6 = (event) => {\n    setWithinMenu(!1), onItemMouseEnter(event), setOpen(!0);\n  }, $[14] = onItemMouseEnter, $[15] = t6) : t6 = $[15];\n  const handleMouseEnter = t6;\n  let t7;\n  $[16] !== rootElement ? (t7 = (event_0) => {\n    event_0.key === \"ArrowLeft\" && (event_0.stopPropagation(), setOpen(!1), requestAnimationFrame(() => {\n      rootElement?.focus();\n    }));\n  }, $[16] = rootElement, $[17] = t7) : t7 = $[17];\n  const handleMenuKeyDown = t7;\n  let t8;\n  $[18] !== onClick ? (t8 = (event_1) => {\n    onClick?.(event_1), setShouldFocus(\"first\"), setOpen(!0);\n  }, $[18] = onClick, $[19] = t8) : t8 = $[19];\n  const handleClick = t8;\n  let t9;\n  $[20] !== onItemClick ? (t9 = () => {\n    setOpen(!1), onItemClick?.();\n  }, $[20] = onItemClick, $[21] = t9) : t9 = $[21];\n  const handleChildItemClick = t9;\n  let t10;\n  $[22] === Symbol.for(\"react.memo_cache_sentinel\") ? (t10 = () => setWithinMenu(!0), $[22] = t10) : t10 = $[22];\n  const handleMenuMouseEnter = t10;\n  let t11, t12;\n  $[23] !== mount || $[24] !== rootElement ? (t11 = () => mount(rootElement), t12 = [mount, rootElement], $[23] = mount, $[24] = rootElement, $[25] = t11, $[26] = t12) : (t11 = $[25], t12 = $[26]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t11, t12);\n  let t13, t14;\n  $[27] !== active ? (t13 = () => {\n    active || setOpen(!1);\n  }, t14 = [active], $[27] = active, $[28] = t13, $[29] = t14) : (t13 = $[28], t14 = $[29]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t13, t14);\n  let t15, t16;\n  $[30] !== open ? (t15 = () => {\n    open || setWithinMenu(!1);\n  }, t16 = [open], $[30] = open, $[31] = t15, $[32] = t16) : (t15 = $[31], t16 = $[32]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t15, t16);\n  let t17, t18;\n  $[33] !== shouldFocus ? (t17 = () => {\n    if (!shouldFocus)\n      return;\n    const rafId = requestAnimationFrame(() => setShouldFocus(null));\n    return () => cancelAnimationFrame(rafId);\n  }, t18 = [shouldFocus], $[33] = shouldFocus, $[34] = t17, $[35] = t18) : (t17 = $[34], t18 = $[35]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t17, t18);\n  let t19;\n  $[36] !== children || $[37] !== handleChildItemClick || $[38] !== handleMenuKeyDown || $[39] !== menuProps || $[40] !== onClickOutside || $[41] !== onEscape || $[42] !== registerElement || $[43] !== shouldFocus ? (t19 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Menu, { ...menuProps, onClickOutside, onEscape, onItemClick: handleChildItemClick, onKeyDown: handleMenuKeyDown, onMouseEnter: handleMenuMouseEnter, registerElement, shouldFocus, children }), $[36] = children, $[37] = handleChildItemClick, $[38] = handleMenuKeyDown, $[39] = menuProps, $[40] = onClickOutside, $[41] = onEscape, $[42] = registerElement, $[43] = shouldFocus, $[44] = t19) : t19 = $[44];\n  const childMenu = t19;\n  let t20;\n  $[45] === Symbol.for(\"react.memo_cache_sentinel\") ? (t20 = (event_2) => {\n    const target = event_2.currentTarget;\n    if (document.activeElement === target && event_2.key === \"ArrowRight\") {\n      setShouldFocus(\"first\"), setOpen(!0), setWithinMenu(!0);\n      return;\n    }\n  }, $[45] = t20) : t20 = $[45];\n  const handleKeyDown = t20, t21 = as === \"button\" ? withinMenu : void 0, t22 = as !== \"button\" ? withinMenu : void 0, t23 = !withinMenu && active ? \"\" : void 0, t24 = useArrayProp(radius), t25 = as === \"button\" ? \"button\" : void 0;\n  let t26;\n  $[46] !== IconComponent || $[47] !== fontSize2 ? (t26 = IconComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.isValidElement)(IconComponent) && IconComponent,\n    (0,react_is__WEBPACK_IMPORTED_MODULE_3__.isValidElementType)(IconComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent, {})\n  ] }), $[46] = IconComponent, $[47] = fontSize2, $[48] = t26) : t26 = $[48];\n  let t27;\n  $[49] !== fontSize2 || $[50] !== text ? (t27 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { flex: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: fontSize2, textOverflow: \"ellipsis\", weight: \"medium\", children: text }) }), $[49] = fontSize2, $[50] = text, $[51] = t27) : t27 = $[51];\n  let t28;\n  $[52] === Symbol.for(\"react.memo_cache_sentinel\") ? (t28 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_9__.ChevronRightIcon, {}), $[52] = t28) : t28 = $[52];\n  let t29;\n  $[53] !== fontSize2 ? (t29 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: fontSize2, children: t28 }), $[53] = fontSize2, $[54] = t29) : t29 = $[54];\n  let t30;\n  $[55] !== padding || $[56] !== space || $[57] !== t26 || $[58] !== t27 || $[59] !== t29 ? (t30 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Flex, { gap: space, padding, children: [\n    t26,\n    t27,\n    t29\n  ] }), $[55] = padding, $[56] = space, $[57] = t26, $[58] = t27, $[59] = t29, $[60] = t30) : t30 = $[60];\n  let t31;\n  $[61] !== as || $[62] !== handleClick || $[63] !== handleMouseEnter || $[64] !== restProps || $[65] !== scheme || $[66] !== t21 || $[67] !== t22 || $[68] !== t23 || $[69] !== t24 || $[70] !== t25 || $[71] !== t30 || $[72] !== tone ? (t31 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Selectable, { \"data-as\": as, \"data-ui\": \"MenuGroup\", forwardedAs: as, ...restProps, \"aria-pressed\": t21, \"data-pressed\": t22, \"data-selected\": t23, $radius: t24, $tone: tone, $scheme: scheme, onClick: handleClick, onKeyDown: handleKeyDown, onMouseEnter: handleMouseEnter, ref: setRootElement, tabIndex: -1, type: t25, children: t30 }), $[61] = as, $[62] = handleClick, $[63] = handleMouseEnter, $[64] = restProps, $[65] = scheme, $[66] = t21, $[67] = t22, $[68] = t23, $[69] = t24, $[70] = t25, $[71] = t30, $[72] = tone, $[73] = t31) : t31 = $[73];\n  let t32;\n  return $[74] !== childMenu || $[75] !== open || $[76] !== popover || $[77] !== t31 ? (t32 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Popover, { ...popover, content: childMenu, \"data-ui\": \"MenuGroup__popover\", open, children: t31 }), $[74] = childMenu, $[75] = open, $[76] = popover, $[77] = t31, $[78] = t32) : t32 = $[78], t32;\n}\nMenuGroup.displayName = \"MenuGroup\";\nconst MenuItem = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(73);\n  let IconComponent, IconRightComponent, children, disabled, hotkeys, onClick, paddingBottom, paddingLeft, paddingRight, paddingTop, paddingX, paddingY, pressed, restProps, selectedProp, t0, t1, t2, t3, t4, t5, text;\n  $[0] !== props ? ({\n    as: t0,\n    children,\n    disabled,\n    fontSize: t1,\n    hotkeys,\n    icon: IconComponent,\n    iconRight: IconRightComponent,\n    onClick,\n    padding: t2,\n    paddingX,\n    paddingY,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    pressed,\n    radius: t3,\n    selected: selectedProp,\n    space: t4,\n    text,\n    tone: t5,\n    ...restProps\n  } = props, $[0] = props, $[1] = IconComponent, $[2] = IconRightComponent, $[3] = children, $[4] = disabled, $[5] = hotkeys, $[6] = onClick, $[7] = paddingBottom, $[8] = paddingLeft, $[9] = paddingRight, $[10] = paddingTop, $[11] = paddingX, $[12] = paddingY, $[13] = pressed, $[14] = restProps, $[15] = selectedProp, $[16] = t0, $[17] = t1, $[18] = t2, $[19] = t3, $[20] = t4, $[21] = t5, $[22] = text) : (IconComponent = $[1], IconRightComponent = $[2], children = $[3], disabled = $[4], hotkeys = $[5], onClick = $[6], paddingBottom = $[7], paddingLeft = $[8], paddingRight = $[9], paddingTop = $[10], paddingX = $[11], paddingY = $[12], pressed = $[13], restProps = $[14], selectedProp = $[15], t0 = $[16], t1 = $[17], t2 = $[18], t3 = $[19], t4 = $[20], t5 = $[21], text = $[22]);\n  const as = t0 === void 0 ? \"button\" : t0, fontSize2 = t1 === void 0 ? 1 : t1, padding = t2 === void 0 ? 3 : t2, radius = t3 === void 0 ? 2 : t3, space = t4 === void 0 ? 3 : t4, tone = t5 === void 0 ? \"default\" : t5, {\n    scheme\n  } = useRootTheme(), menu = useMenu(), {\n    activeElement,\n    mount,\n    onItemClick,\n    onItemMouseEnter: _onItemMouseEnter,\n    onItemMouseLeave: _onItemMouseLeave\n  } = menu, onItemMouseEnter = _onItemMouseEnter ?? menu.onMouseEnter, onItemMouseLeave = _onItemMouseLeave ?? menu.onMouseLeave, [rootElement, setRootElement] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null), active = !!activeElement && activeElement === rootElement, ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n  let t6;\n  $[23] === Symbol.for(\"react.memo_cache_sentinel\") ? (t6 = () => ref.current, $[23] = t6) : t6 = $[23], (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t6);\n  let t7, t8;\n  $[24] !== mount || $[25] !== rootElement || $[26] !== selectedProp ? (t7 = () => mount(rootElement, selectedProp), t8 = [mount, rootElement, selectedProp], $[24] = mount, $[25] = rootElement, $[26] = selectedProp, $[27] = t7, $[28] = t8) : (t7 = $[27], t8 = $[28]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t7, t8);\n  let t9;\n  $[29] !== disabled || $[30] !== onClick || $[31] !== onItemClick ? (t9 = (event) => {\n    disabled || (onClick && onClick(event), onItemClick && onItemClick());\n  }, $[29] = disabled, $[30] = onClick, $[31] = onItemClick, $[32] = t9) : t9 = $[32];\n  const handleClick = t9;\n  let t10, t11;\n  $[33] !== padding || $[34] !== paddingBottom || $[35] !== paddingLeft || $[36] !== paddingRight || $[37] !== paddingTop || $[38] !== paddingX || $[39] !== paddingY ? (t11 = {\n    padding,\n    paddingX,\n    paddingY,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft\n  }, $[33] = padding, $[34] = paddingBottom, $[35] = paddingLeft, $[36] = paddingRight, $[37] = paddingTop, $[38] = paddingX, $[39] = paddingY, $[40] = t11) : t11 = $[40], t10 = t11;\n  const paddingProps = t10, t12 = useArrayProp(fontSize2);\n  let t13;\n  $[41] !== t12 ? (t13 = t12.map(_temp), $[41] = t12, $[42] = t13) : t13 = $[42];\n  const hotkeysFontSize = t13;\n  let t14;\n  $[43] === Symbol.for(\"react.memo_cache_sentinel\") ? (t14 = (el) => {\n    ref.current = el, setRootElement(el);\n  }, $[43] = t14) : t14 = $[43];\n  const setRef = t14, t15 = as !== \"button\" && pressed ? \"\" : void 0, t16 = active ? \"\" : void 0, t17 = disabled ? \"\" : void 0, t18 = useArrayProp(radius), t19 = useArrayProp(0), t20 = disabled ? \"default\" : tone, t21 = as === \"button\" ? \"button\" : void 0;\n  let t22;\n  $[44] !== IconComponent || $[45] !== IconRightComponent || $[46] !== fontSize2 || $[47] !== hotkeys || $[48] !== hotkeysFontSize || $[49] !== paddingProps || $[50] !== space || $[51] !== text ? (t22 = (IconComponent || text || IconRightComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Flex, { as: \"span\", gap: space, align: \"center\", ...paddingProps, children: [\n    IconComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n      (0,react__WEBPACK_IMPORTED_MODULE_2__.isValidElement)(IconComponent) && IconComponent,\n      (0,react_is__WEBPACK_IMPORTED_MODULE_3__.isValidElementType)(IconComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent, {})\n    ] }),\n    text && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { flex: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Text, { size: fontSize2, textOverflow: \"ellipsis\", weight: \"medium\", children: text }) }),\n    hotkeys && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Hotkeys, { fontSize: hotkeysFontSize, keys: hotkeys, style: {\n      marginTop: -4,\n      marginBottom: -4\n    } }),\n    IconRightComponent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Text, { size: fontSize2, children: [\n      (0,react__WEBPACK_IMPORTED_MODULE_2__.isValidElement)(IconRightComponent) && IconRightComponent,\n      (0,react_is__WEBPACK_IMPORTED_MODULE_3__.isValidElementType)(IconRightComponent) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconRightComponent, {})\n    ] })\n  ] }), $[44] = IconComponent, $[45] = IconRightComponent, $[46] = fontSize2, $[47] = hotkeys, $[48] = hotkeysFontSize, $[49] = paddingProps, $[50] = space, $[51] = text, $[52] = t22) : t22 = $[52];\n  let t23;\n  $[53] !== children || $[54] !== paddingProps ? (t23 = children && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Box, { as: \"span\", ...paddingProps, children }), $[53] = children, $[54] = paddingProps, $[55] = t23) : t23 = $[55];\n  let t24;\n  return $[56] !== as || $[57] !== disabled || $[58] !== handleClick || $[59] !== onItemMouseEnter || $[60] !== onItemMouseLeave || $[61] !== restProps || $[62] !== scheme || $[63] !== t15 || $[64] !== t16 || $[65] !== t17 || $[66] !== t18 || $[67] !== t19 || $[68] !== t20 || $[69] !== t21 || $[70] !== t22 || $[71] !== t23 ? (t24 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Selectable, { \"data-ui\": \"MenuItem\", role: \"menuitem\", ...restProps, \"data-pressed\": t15, \"data-selected\": t16, \"data-disabled\": t17, forwardedAs: as, $radius: t18, $padding: t19, $tone: t20, $scheme: scheme, disabled, onClick: handleClick, onMouseEnter: onItemMouseEnter, onMouseLeave: onItemMouseLeave, ref: setRef, tabIndex: -1, type: t21, children: [\n    t22,\n    t23\n  ] }), $[56] = as, $[57] = disabled, $[58] = handleClick, $[59] = onItemMouseEnter, $[60] = onItemMouseLeave, $[61] = restProps, $[62] = scheme, $[63] = t15, $[64] = t16, $[65] = t17, $[66] = t18, $[67] = t19, $[68] = t20, $[69] = t21, $[70] = t22, $[71] = t23, $[72] = t24) : t24 = $[72], t24;\n});\nMenuItem.displayName = \"ForwardRef(MenuItem)\";\nfunction _temp(s) {\n  return s - 1;\n}\nconst CustomButton = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Button).withConfig({\n  displayName: \"CustomButton\",\n  componentId: \"sc-1kns779-0\"\n})`max-width:100%;`, Tab = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, forwardedRef) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(30);\n  let focused, icon, id, label, onClick, onFocus, restProps, selected, t0, t1;\n  $[0] !== props ? ({\n    icon,\n    id,\n    focused,\n    fontSize: t0,\n    label,\n    onClick,\n    onFocus,\n    padding: t1,\n    selected,\n    ...restProps\n  } = props, $[0] = props, $[1] = focused, $[2] = icon, $[3] = id, $[4] = label, $[5] = onClick, $[6] = onFocus, $[7] = restProps, $[8] = selected, $[9] = t0, $[10] = t1) : (focused = $[1], icon = $[2], id = $[3], label = $[4], onClick = $[5], onFocus = $[6], restProps = $[7], selected = $[8], t0 = $[9], t1 = $[10]);\n  const fontSize2 = t0 === void 0 ? 1 : t0, padding = t1 === void 0 ? 2 : t1, ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), focusedRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(!1);\n  let t2;\n  $[11] === Symbol.for(\"react.memo_cache_sentinel\") ? (t2 = () => ref.current, $[11] = t2) : t2 = $[11], (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(forwardedRef, t2);\n  let t3;\n  $[12] === Symbol.for(\"react.memo_cache_sentinel\") ? (t3 = () => {\n    focusedRef.current = !1;\n  }, $[12] = t3) : t3 = $[12];\n  const handleBlur = t3;\n  let t4;\n  $[13] !== onFocus ? (t4 = (event) => {\n    focusedRef.current = !0, onFocus && onFocus(event);\n  }, $[13] = onFocus, $[14] = t4) : t4 = $[14];\n  const handleFocus = t4;\n  let t5, t6;\n  $[15] !== focused ? (t5 = () => {\n    focused && !focusedRef.current && (ref.current && ref.current.focus(), focusedRef.current = !0);\n  }, t6 = [focused], $[15] = focused, $[16] = t5, $[17] = t6) : (t5 = $[16], t6 = $[17]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t5, t6);\n  const t7 = selected ? \"true\" : \"false\", t8 = selected ? 0 : -1;\n  let t9;\n  return $[18] !== fontSize2 || $[19] !== handleFocus || $[20] !== icon || $[21] !== id || $[22] !== label || $[23] !== onClick || $[24] !== padding || $[25] !== restProps || $[26] !== selected || $[27] !== t7 || $[28] !== t8 ? (t9 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CustomButton, { \"data-ui\": \"Tab\", ...restProps, \"aria-selected\": t7, fontSize: fontSize2, icon, id, mode: \"bleed\", onClick, onBlur: handleBlur, onFocus: handleFocus, padding, ref, role: \"tab\", selected, tabIndex: t8, text: label, type: \"button\" }), $[18] = fontSize2, $[19] = handleFocus, $[20] = icon, $[21] = id, $[22] = label, $[23] = onClick, $[24] = padding, $[25] = restProps, $[26] = selected, $[27] = t7, $[28] = t8, $[29] = t9) : t9 = $[29], t9;\n});\nTab.displayName = \"ForwardRef(Tab)\";\nconst CustomInline = (0,styled_components__WEBPACK_IMPORTED_MODULE_8__.styled)(Inline).withConfig({\n  displayName: \"CustomInline\",\n  componentId: \"sc-5cm04m-0\"\n})`& > div{display:inline-block;vertical-align:middle;max-width:100%;box-sizing:border-box;}`, TabList = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function(props, ref) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(15);\n  let childrenProp, restProps;\n  $[0] !== props ? ({\n    children: childrenProp,\n    ...restProps\n  } = props, $[0] = props, $[1] = childrenProp, $[2] = restProps) : (childrenProp = $[1], restProps = $[2]);\n  const [focusedIndex, setFocusedIndex] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(-1);\n  let t0;\n  if ($[3] !== childrenProp || $[4] !== focusedIndex) {\n    const children = react__WEBPACK_IMPORTED_MODULE_2__.Children.toArray(childrenProp).filter(react__WEBPACK_IMPORTED_MODULE_2__.isValidElement);\n    let t12;\n    $[6] !== focusedIndex ? (t12 = (child, childIndex) => (0,react__WEBPACK_IMPORTED_MODULE_2__.cloneElement)(child, {\n      focused: focusedIndex === childIndex,\n      key: childIndex,\n      onFocus: () => setFocusedIndex(childIndex)\n    }), $[6] = focusedIndex, $[7] = t12) : t12 = $[7], t0 = children.map(t12), $[3] = childrenProp, $[4] = focusedIndex, $[5] = t0;\n  } else\n    t0 = $[5];\n  const tabs = t0, numTabs = tabs.length;\n  let t1;\n  $[8] !== numTabs ? (t1 = (event) => {\n    event.key === \"ArrowLeft\" && setFocusedIndex((prevIndex) => (prevIndex + numTabs - 1) % numTabs), event.key === \"ArrowRight\" && setFocusedIndex((prevIndex_0) => (prevIndex_0 + 1) % numTabs);\n  }, $[8] = numTabs, $[9] = t1) : t1 = $[9];\n  const handleKeyDown = t1;\n  let t2;\n  return $[10] !== handleKeyDown || $[11] !== ref || $[12] !== restProps || $[13] !== tabs ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CustomInline, { \"data-ui\": \"TabList\", ...restProps, onKeyDown: handleKeyDown, ref, role: \"tablist\", children: tabs }), $[10] = handleKeyDown, $[11] = ref, $[12] = restProps, $[13] = tabs, $[14] = t2) : t2 = $[14], t2;\n});\nTabList.displayName = \"ForwardRef(TabList)\";\n\n//# sourceMappingURL=_visual-editing.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/_visual-editing.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/refractor.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@sanity/ui/dist/_chunks-es/refractor.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LazyRefractor)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-compiler-runtime */ \"(ssr)/./node_modules/react-compiler-runtime/dist/index.js\");\n/* harmony import */ var react_refractor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-refractor */ \"(ssr)/./node_modules/react-refractor/lib/Refractor.js\");\n\n\n\nfunction LazyRefractor(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(13), {\n    language: languageProp,\n    value\n  } = props, language = typeof languageProp == \"string\" ? languageProp : void 0;\n  let t0;\n  $[0] !== language ? (t0 = language ? react_refractor__WEBPACK_IMPORTED_MODULE_2__.hasLanguage(language) : !1, $[0] = language, $[1] = t0) : t0 = $[1];\n  const registered = t0;\n  let t1;\n  $[2] !== language || $[3] !== registered || $[4] !== value ? (t1 = !(language && registered) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\", { children: value }), $[2] = language, $[3] = registered, $[4] = value, $[5] = t1) : t1 = $[5];\n  let t2;\n  $[6] !== language || $[7] !== registered || $[8] !== value ? (t2 = language && registered && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_refractor__WEBPACK_IMPORTED_MODULE_2__, { inline: !0, language, value: String(value) }), $[6] = language, $[7] = registered, $[8] = value, $[9] = t2) : t2 = $[9];\n  let t3;\n  return $[10] !== t1 || $[11] !== t2 ? (t3 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    t1,\n    t2\n  ] }), $[10] = t1, $[11] = t2, $[12] = t3) : t3 = $[12], t3;\n}\nLazyRefractor.displayName = \"LazyRefractor\";\n\n//# sourceMappingURL=refractor.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS91aS9kaXN0L19jaHVua3MtZXMvcmVmcmFjdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXdEO0FBQ2I7QUFDSDtBQUN4QztBQUNBLFlBQVkseURBQUM7QUFDYjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsdUNBQXVDLHdEQUFxQjtBQUM1RDtBQUNBO0FBQ0Esa0hBQWtILHNEQUFHLFdBQVcsaUJBQWlCO0FBQ2pKO0FBQ0EsK0dBQStHLHNEQUFHLENBQUMsNENBQVMsSUFBSSw0Q0FBNEM7QUFDNUs7QUFDQSw4REFBOEQsdURBQUksQ0FBQyx1REFBUSxJQUFJO0FBQy9FO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi9ub2RlX21vZHVsZXMvQHNhbml0eS91aS9kaXN0L19jaHVua3MtZXMvcmVmcmFjdG9yLm1qcz8xZjJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeHMsIEZyYWdtZW50LCBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IGMgfSBmcm9tIFwicmVhY3QtY29tcGlsZXItcnVudGltZVwiO1xuaW1wb3J0IFJlZnJhY3RvciBmcm9tIFwicmVhY3QtcmVmcmFjdG9yXCI7XG5mdW5jdGlvbiBMYXp5UmVmcmFjdG9yKHByb3BzKSB7XG4gIGNvbnN0ICQgPSBjKDEzKSwge1xuICAgIGxhbmd1YWdlOiBsYW5ndWFnZVByb3AsXG4gICAgdmFsdWVcbiAgfSA9IHByb3BzLCBsYW5ndWFnZSA9IHR5cGVvZiBsYW5ndWFnZVByb3AgPT0gXCJzdHJpbmdcIiA/IGxhbmd1YWdlUHJvcCA6IHZvaWQgMDtcbiAgbGV0IHQwO1xuICAkWzBdICE9PSBsYW5ndWFnZSA/ICh0MCA9IGxhbmd1YWdlID8gUmVmcmFjdG9yLmhhc0xhbmd1YWdlKGxhbmd1YWdlKSA6ICExLCAkWzBdID0gbGFuZ3VhZ2UsICRbMV0gPSB0MCkgOiB0MCA9ICRbMV07XG4gIGNvbnN0IHJlZ2lzdGVyZWQgPSB0MDtcbiAgbGV0IHQxO1xuICAkWzJdICE9PSBsYW5ndWFnZSB8fCAkWzNdICE9PSByZWdpc3RlcmVkIHx8ICRbNF0gIT09IHZhbHVlID8gKHQxID0gIShsYW5ndWFnZSAmJiByZWdpc3RlcmVkKSAmJiAvKiBAX19QVVJFX18gKi8ganN4KFwiY29kZVwiLCB7IGNoaWxkcmVuOiB2YWx1ZSB9KSwgJFsyXSA9IGxhbmd1YWdlLCAkWzNdID0gcmVnaXN0ZXJlZCwgJFs0XSA9IHZhbHVlLCAkWzVdID0gdDEpIDogdDEgPSAkWzVdO1xuICBsZXQgdDI7XG4gICRbNl0gIT09IGxhbmd1YWdlIHx8ICRbN10gIT09IHJlZ2lzdGVyZWQgfHwgJFs4XSAhPT0gdmFsdWUgPyAodDIgPSBsYW5ndWFnZSAmJiByZWdpc3RlcmVkICYmIC8qIEBfX1BVUkVfXyAqLyBqc3goUmVmcmFjdG9yLCB7IGlubGluZTogITAsIGxhbmd1YWdlLCB2YWx1ZTogU3RyaW5nKHZhbHVlKSB9KSwgJFs2XSA9IGxhbmd1YWdlLCAkWzddID0gcmVnaXN0ZXJlZCwgJFs4XSA9IHZhbHVlLCAkWzldID0gdDIpIDogdDIgPSAkWzldO1xuICBsZXQgdDM7XG4gIHJldHVybiAkWzEwXSAhPT0gdDEgfHwgJFsxMV0gIT09IHQyID8gKHQzID0gLyogQF9fUFVSRV9fICovIGpzeHMoRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtcbiAgICB0MSxcbiAgICB0MlxuICBdIH0pLCAkWzEwXSA9IHQxLCAkWzExXSA9IHQyLCAkWzEyXSA9IHQzKSA6IHQzID0gJFsxMl0sIHQzO1xufVxuTGF6eVJlZnJhY3Rvci5kaXNwbGF5TmFtZSA9IFwiTGF6eVJlZnJhY3RvclwiO1xuZXhwb3J0IHtcbiAgTGF6eVJlZnJhY3RvciBhcyBkZWZhdWx0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVmcmFjdG9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/refractor.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/ui/dist/theme.mjs":
/*!************************************************!*\
  !*** ./node_modules/@sanity/ui/dist/theme.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COLOR_CONFIG_AVATAR_COLORS: () => (/* binding */ COLOR_CONFIG_AVATAR_COLORS),\n/* harmony export */   COLOR_CONFIG_BLEND_KEYS: () => (/* binding */ COLOR_CONFIG_BLEND_KEYS),\n/* harmony export */   COLOR_CONFIG_CARD_KEYS: () => (/* binding */ COLOR_CONFIG_CARD_KEYS),\n/* harmony export */   COLOR_CONFIG_CARD_TONES: () => (/* binding */ COLOR_CONFIG_CARD_TONES),\n/* harmony export */   COLOR_CONFIG_INPUT_MODES: () => (/* binding */ COLOR_CONFIG_INPUT_MODES),\n/* harmony export */   COLOR_CONFIG_INPUT_STATES: () => (/* binding */ COLOR_CONFIG_INPUT_STATES),\n/* harmony export */   COLOR_CONFIG_STATES: () => (/* binding */ COLOR_CONFIG_STATES),\n/* harmony export */   COLOR_CONFIG_STATE_KEYS: () => (/* binding */ COLOR_CONFIG_STATE_KEYS),\n/* harmony export */   COLOR_CONFIG_STATE_TONES: () => (/* binding */ COLOR_CONFIG_STATE_TONES),\n/* harmony export */   THEME_COLOR_AVATAR_COLORS: () => (/* binding */ THEME_COLOR_AVATAR_COLORS),\n/* harmony export */   THEME_COLOR_BLEND_MODES: () => (/* binding */ THEME_COLOR_BLEND_MODES),\n/* harmony export */   THEME_COLOR_BUTTON_MODES: () => (/* binding */ THEME_COLOR_BUTTON_MODES),\n/* harmony export */   THEME_COLOR_CARD_TONES: () => (/* binding */ THEME_COLOR_CARD_TONES),\n/* harmony export */   THEME_COLOR_INPUT_MODES: () => (/* binding */ THEME_COLOR_INPUT_MODES),\n/* harmony export */   THEME_COLOR_INPUT_STATES: () => (/* binding */ THEME_COLOR_INPUT_STATES),\n/* harmony export */   THEME_COLOR_SCHEMES: () => (/* binding */ THEME_COLOR_SCHEMES),\n/* harmony export */   THEME_COLOR_STATES: () => (/* binding */ THEME_COLOR_STATES),\n/* harmony export */   THEME_COLOR_STATE_TONES: () => (/* binding */ THEME_COLOR_STATE_TONES),\n/* harmony export */   buildTheme: () => (/* binding */ buildTheme),\n/* harmony export */   createColorTheme: () => (/* binding */ createColorTheme),\n/* harmony export */   getContrastRatio: () => (/* binding */ getContrastRatio),\n/* harmony export */   getScopedTheme: () => (/* binding */ getScopedTheme),\n/* harmony export */   getTheme_v2: () => (/* binding */ getTheme_v2),\n/* harmony export */   hexToRgb: () => (/* binding */ hexToRgb),\n/* harmony export */   hslToRgb: () => (/* binding */ hslToRgb),\n/* harmony export */   isColorBlendModeValue: () => (/* binding */ isColorBlendModeValue),\n/* harmony export */   isColorButtonMode: () => (/* binding */ isColorButtonMode),\n/* harmony export */   isColorConfigBaseKey: () => (/* binding */ isColorConfigBaseKey),\n/* harmony export */   isColorConfigBaseTone: () => (/* binding */ isColorConfigBaseTone),\n/* harmony export */   isColorConfigBlendKey: () => (/* binding */ isColorConfigBlendKey),\n/* harmony export */   isColorConfigStateKey: () => (/* binding */ isColorConfigStateKey),\n/* harmony export */   isColorConfigStateTone: () => (/* binding */ isColorConfigStateTone),\n/* harmony export */   isColorHueKey: () => (/* binding */ isColorHueKey),\n/* harmony export */   isColorOpacityValue: () => (/* binding */ isColorOpacityValue),\n/* harmony export */   isColorTintKey: () => (/* binding */ isColorTintKey),\n/* harmony export */   isColorTokenValue: () => (/* binding */ isColorTokenValue),\n/* harmony export */   isColorValue: () => (/* binding */ isColorValue),\n/* harmony export */   is_v0: () => (/* binding */ is_v0),\n/* harmony export */   is_v2: () => (/* binding */ is_v2),\n/* harmony export */   mix: () => (/* binding */ mix),\n/* harmony export */   multiply: () => (/* binding */ multiply),\n/* harmony export */   parseColor: () => (/* binding */ parseColor),\n/* harmony export */   parseTokenKey: () => (/* binding */ parseTokenKey),\n/* harmony export */   parseTokenValue: () => (/* binding */ parseTokenValue),\n/* harmony export */   rgbToHex: () => (/* binding */ rgbToHex),\n/* harmony export */   rgbToHsl: () => (/* binding */ rgbToHsl),\n/* harmony export */   rgba: () => (/* binding */ rgba),\n/* harmony export */   rgbaToRGBA: () => (/* binding */ rgbaToRGBA),\n/* harmony export */   screen: () => (/* binding */ screen),\n/* harmony export */   v0_v2: () => (/* binding */ v0_v2),\n/* harmony export */   v2_v0: () => (/* binding */ v2_v0)\n/* harmony export */ });\n/* harmony import */ var _sanity_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanity/color */ \"(ssr)/./node_modules/@sanity/color/dist/index.js\");\n\nfunction createSelectableTones(opts, base, dark, solid, muted) {\n  return {\n    default: _createSelectableStates(opts, base, dark, solid, muted, \"default\"),\n    primary: _createSelectableStates(opts, base, dark, solid, muted, \"primary\"),\n    positive: _createSelectableStates(opts, base, dark, solid, muted, \"positive\"),\n    caution: _createSelectableStates(opts, base, dark, solid, muted, \"caution\"),\n    critical: _createSelectableStates(opts, base, dark, solid, muted, \"critical\")\n  };\n}\nfunction _createSelectableStates(opts, base, dark, solid, muted, tone) {\n  return {\n    enabled: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: \"enabled\",\n      tone\n    }),\n    hovered: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: \"hovered\",\n      tone\n    }),\n    pressed: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: \"pressed\",\n      tone\n    }),\n    selected: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: \"selected\",\n      tone\n    }),\n    disabled: opts.selectable({\n      base,\n      dark,\n      solid,\n      muted,\n      state: \"disabled\",\n      tone\n    })\n  };\n}\nfunction createSolidTones(opts, base, dark, name) {\n  return {\n    default: {\n      enabled: opts.solid({\n        base,\n        dark,\n        tone: \"default\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.solid({\n        base,\n        dark,\n        tone: \"default\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.solid({\n        base,\n        dark,\n        tone: \"default\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.solid({\n        base,\n        dark,\n        tone: \"default\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.solid({\n        base,\n        dark,\n        tone: \"default\",\n        name,\n        state: \"selected\"\n      })\n    },\n    transparent: {\n      enabled: opts.solid({\n        base,\n        dark,\n        tone: \"transparent\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.solid({\n        base,\n        dark,\n        tone: \"transparent\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.solid({\n        base,\n        dark,\n        tone: \"transparent\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.solid({\n        base,\n        dark,\n        tone: \"transparent\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.solid({\n        base,\n        dark,\n        tone: \"transparent\",\n        name,\n        state: \"selected\"\n      })\n    },\n    primary: {\n      enabled: opts.solid({\n        base,\n        dark,\n        tone: \"primary\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.solid({\n        base,\n        dark,\n        tone: \"primary\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.solid({\n        base,\n        dark,\n        tone: \"primary\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.solid({\n        base,\n        dark,\n        tone: \"primary\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.solid({\n        base,\n        dark,\n        tone: \"primary\",\n        name,\n        state: \"selected\"\n      })\n    },\n    positive: {\n      enabled: opts.solid({\n        base,\n        dark,\n        tone: \"positive\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.solid({\n        base,\n        dark,\n        tone: \"positive\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.solid({\n        base,\n        dark,\n        tone: \"positive\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.solid({\n        base,\n        dark,\n        tone: \"positive\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.solid({\n        base,\n        dark,\n        tone: \"positive\",\n        name,\n        state: \"selected\"\n      })\n    },\n    caution: {\n      enabled: opts.solid({\n        base,\n        dark,\n        tone: \"caution\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.solid({\n        base,\n        dark,\n        tone: \"caution\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.solid({\n        base,\n        dark,\n        tone: \"caution\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.solid({\n        base,\n        dark,\n        tone: \"caution\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.solid({\n        base,\n        dark,\n        tone: \"caution\",\n        name,\n        state: \"selected\"\n      })\n    },\n    critical: {\n      enabled: opts.solid({\n        base,\n        dark,\n        tone: \"critical\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.solid({\n        base,\n        dark,\n        tone: \"critical\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.solid({\n        base,\n        dark,\n        tone: \"critical\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.solid({\n        base,\n        dark,\n        tone: \"critical\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.solid({\n        base,\n        dark,\n        tone: \"critical\",\n        name,\n        state: \"selected\"\n      })\n    }\n  };\n}\nfunction createButtonTones(opts, base, dark, solid, muted, mode) {\n  return {\n    default: opts.button({\n      base,\n      dark,\n      solid: solid.default,\n      muted: muted.default,\n      mode\n    }),\n    primary: opts.button({\n      base,\n      dark,\n      solid: solid.primary,\n      muted: muted.primary,\n      mode\n    }),\n    positive: opts.button({\n      base,\n      dark,\n      solid: solid.positive,\n      muted: muted.positive,\n      mode\n    }),\n    caution: opts.button({\n      base,\n      dark,\n      solid: solid.caution,\n      muted: muted.caution,\n      mode\n    }),\n    critical: opts.button({\n      base,\n      dark,\n      solid: solid.critical,\n      muted: muted.critical,\n      mode\n    })\n  };\n}\nfunction createButtonModes(opts, base, dark, solid, muted) {\n  return {\n    default: createButtonTones(opts, base, dark, solid, muted, \"default\"),\n    ghost: createButtonTones(opts, base, dark, solid, muted, \"ghost\"),\n    bleed: createButtonTones(opts, base, dark, solid, muted, \"bleed\")\n  };\n}\nfunction createCardStates(opts, base, dark, name, solid, muted) {\n  return {\n    enabled: opts.card({\n      base,\n      dark,\n      name,\n      state: \"enabled\",\n      solid,\n      muted\n    }),\n    disabled: opts.card({\n      base,\n      dark,\n      name,\n      state: \"disabled\",\n      solid,\n      muted\n    }),\n    hovered: opts.card({\n      base,\n      dark,\n      name,\n      state: \"hovered\",\n      solid,\n      muted\n    }),\n    pressed: opts.card({\n      base,\n      dark,\n      name,\n      state: \"pressed\",\n      solid,\n      muted\n    }),\n    selected: opts.card({\n      base,\n      dark,\n      name,\n      state: \"selected\",\n      solid,\n      muted\n    })\n  };\n}\nconst black = \"hsl(0, 0%, 0%)\", white = \"hsl(0, 0%, 100%)\", colors = {\n  default: {\n    lightest: \"hsl(0, 0%, 95%)\",\n    lighter: \"hsl(0, 0%, 70%)\",\n    light: \"hsl(0, 0%, 65%)\",\n    base: \"hsl(0, 0%, 50%)\",\n    dark: \"hsl(0, 0%, 35%)\",\n    darker: \"hsl(0, 0%, 20%)\",\n    darkest: \"hsl(0, 0%, 5%)\"\n  },\n  transparent: {\n    lightest: \"hsl(240, 100%, 95%)\",\n    lighter: \"hsl(240, 100%, 70%)\",\n    light: \"hsl(240, 100%, 65%)\",\n    base: \"hsl(240, 100%, 50%)\",\n    dark: \"hsl(240, 100%, 35%)\",\n    darker: \"hsl(240, 100%, 20%)\",\n    darkest: \"hsl(240, 100%, 5%)\"\n  },\n  primary: {\n    lightest: \"hsl(240, 100%, 95%)\",\n    lighter: \"hsl(240, 100%, 70%)\",\n    light: \"hsl(240, 100%, 65%)\",\n    base: \"hsl(240, 100%, 50%)\",\n    dark: \"hsl(240, 100%, 35%)\",\n    darker: \"hsl(240, 100%, 20%)\",\n    darkest: \"hsl(240, 100%, 5%)\"\n  },\n  positive: {\n    lightest: \"hsl(120, 100%, 95%)\",\n    lighter: \"hsl(120, 100%, 70%)\",\n    light: \"hsl(120, 100%, 65%)\",\n    base: \"hsl(120, 100%, 50%)\",\n    dark: \"hsl(120, 100%, 35%)\",\n    darker: \"hsl(120, 100%, 20%)\",\n    darkest: \"hsl(120, 100%, 5%)\"\n  },\n  caution: {\n    lightest: \"hsl(60, 100%, 95%)\",\n    lighter: \"hsl(60, 100%, 70%)\",\n    light: \"hsl(60, 100%, 65%)\",\n    base: \"hsl(60, 100%, 50%)\",\n    dark: \"hsl(60, 100%, 35%)\",\n    darker: \"hsl(60, 100%, 20%)\",\n    darkest: \"hsl(60, 100%, 5%)\"\n  },\n  critical: {\n    lightest: \"hsl(0, 100%, 95%)\",\n    lighter: \"hsl(0, 100%, 70%)\",\n    light: \"hsl(0, 100%, 65%)\",\n    base: \"hsl(0, 100%, 50%)\",\n    dark: \"hsl(0, 100%, 35%)\",\n    darker: \"hsl(0, 100%, 20%)\",\n    darkest: \"hsl(0, 100%, 5%)\"\n  }\n}, spots = {\n  gray: \"hsl(0, 0%, 50%)\",\n  red: \"hsl(0, 100%, 50%)\",\n  orange: \"hsl(30, 100%, 50%)\",\n  yellow: \"hsl(60, 100%, 50%)\",\n  green: \"hsl(120, 100%, 50%)\",\n  cyan: \"hsl(180, 100%, 50%)\",\n  blue: \"hsl(240, 100%, 50%)\",\n  purple: \"hsl(270, 100%, 50%)\",\n  magenta: \"hsl(300, 100%, 50%)\"\n}, tones = {\n  transparent: {\n    bg: [colors.transparent.darkest, colors.transparent.lightest],\n    fg: [colors.transparent.lightest, colors.transparent.darkest],\n    border: [colors.transparent.darker, colors.transparent.lighter],\n    focusRing: [colors.transparent.base, colors.transparent.base]\n  },\n  primary: {\n    bg: [colors.primary.darkest, colors.primary.lightest],\n    fg: [colors.primary.lightest, colors.primary.darkest],\n    border: [colors.primary.darker, colors.primary.lighter],\n    focusRing: [colors.primary.base, colors.primary.base]\n  },\n  positive: {\n    bg: [colors.positive.darkest, colors.positive.lightest],\n    fg: [colors.positive.lightest, colors.positive.darkest],\n    border: [colors.positive.darker, colors.positive.lighter],\n    focusRing: [colors.positive.base, colors.positive.base]\n  },\n  caution: {\n    bg: [colors.caution.darkest, colors.caution.lightest],\n    fg: [colors.caution.lightest, colors.caution.darkest],\n    border: [colors.caution.darker, colors.caution.lighter],\n    focusRing: [colors.caution.base, colors.caution.base]\n  },\n  critical: {\n    bg: [colors.critical.darkest, colors.critical.lightest],\n    fg: [colors.critical.lightest, colors.critical.darkest],\n    border: [colors.critical.darker, colors.critical.lighter],\n    focusRing: [colors.critical.base, colors.critical.base]\n  }\n}, defaultOpts = {\n  base: ({\n    dark,\n    name\n  }) => name === \"default\" ? {\n    bg: dark ? black : white,\n    fg: dark ? white : black,\n    border: dark ? colors.default.darkest : colors.default.lightest,\n    focusRing: colors.primary.base,\n    shadow: {\n      outline: black,\n      umbra: black,\n      penumbra: black,\n      ambient: black\n    },\n    skeleton: {\n      from: dark ? white : black,\n      to: dark ? white : black\n    }\n  } : {\n    bg: tones[name].bg[dark ? 0 : 1],\n    fg: tones[name].fg[dark ? 0 : 1],\n    border: tones[name].border[dark ? 0 : 1],\n    focusRing: tones[name].focusRing[dark ? 0 : 1],\n    shadow: {\n      outline: black,\n      umbra: black,\n      penumbra: black,\n      ambient: black\n    },\n    skeleton: {\n      from: dark ? white : black,\n      to: dark ? white : black\n    }\n  },\n  solid: ({\n    base,\n    dark,\n    state,\n    tone\n  }) => {\n    const color2 = colors[tone];\n    return state === \"hovered\" ? {\n      bg: dark ? color2.light : color2.dark,\n      bg2: dark ? color2.light : color2.dark,\n      border: dark ? color2.lighter : color2.darker,\n      fg: dark ? color2.darkest : color2.lightest,\n      icon: dark ? color2.darkest : color2.lightest,\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    } : {\n      bg: color2.base,\n      bg2: color2.base,\n      border: dark ? color2.light : color2.dark,\n      fg: dark ? color2.darkest : color2.lightest,\n      icon: dark ? color2.darkest : color2.lightest,\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    };\n  },\n  muted: ({\n    base,\n    dark,\n    state,\n    tone\n  }) => {\n    const color2 = colors[tone];\n    return state === \"hovered\" ? {\n      bg: dark ? color2.darker : color2.lighter,\n      bg2: dark ? color2.darker : color2.lighter,\n      border: dark ? color2.lighter : color2.darker,\n      fg: dark ? color2.lightest : color2.darkest,\n      icon: dark ? color2.lightest : color2.darkest,\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    } : {\n      bg: dark ? color2.darkest : color2.lightest,\n      bg2: dark ? color2.darkest : color2.lightest,\n      border: dark ? color2.darker : color2.lighter,\n      fg: dark ? color2.lighter : color2.darker,\n      icon: dark ? color2.lighter : color2.darker,\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    };\n  },\n  button: ({\n    base,\n    mode,\n    muted,\n    solid\n  }) => mode === \"bleed\" ? {\n    ...muted,\n    enabled: {\n      bg: \"transparent\",\n      bg2: \"transparent\",\n      fg: muted.enabled.fg,\n      icon: muted.enabled.fg,\n      border: \"transparent\",\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    },\n    hovered: {\n      bg: muted.enabled.bg,\n      bg2: muted.enabled.bg,\n      fg: muted.hovered.fg,\n      icon: muted.hovered.fg,\n      border: \"transparent\",\n      muted: {\n        fg: black\n      },\n      accent: {\n        fg: black\n      },\n      link: {\n        fg: black\n      },\n      code: {\n        bg: black,\n        fg: black\n      },\n      skeleton: base.skeleton\n    }\n  } : mode === \"ghost\" ? {\n    ...solid,\n    enabled: muted.enabled\n  } : solid,\n  card: ({\n    base\n  }) => ({\n    bg: black,\n    bg2: black,\n    fg: black,\n    icon: black,\n    border: black,\n    muted: {\n      fg: black\n    },\n    accent: {\n      fg: black\n    },\n    link: {\n      fg: black\n    },\n    code: {\n      bg: black,\n      fg: black\n    },\n    skeleton: base.skeleton\n  }),\n  input: () => ({\n    bg: black,\n    bg2: black,\n    fg: black,\n    border: black,\n    placeholder: black\n  }),\n  selectable: ({\n    muted,\n    state,\n    tone\n  }) => muted[tone][state],\n  spot: ({\n    key\n  }) => spots[key],\n  syntax: () => ({\n    atrule: black,\n    attrName: black,\n    attrValue: black,\n    attribute: black,\n    boolean: black,\n    builtin: black,\n    cdata: black,\n    char: black,\n    class: black,\n    className: black,\n    comment: black,\n    constant: black,\n    deleted: black,\n    doctype: black,\n    entity: black,\n    function: black,\n    hexcode: black,\n    id: black,\n    important: black,\n    inserted: black,\n    keyword: black,\n    number: black,\n    operator: black,\n    prolog: black,\n    property: black,\n    pseudoClass: black,\n    pseudoElement: black,\n    punctuation: black,\n    regex: black,\n    selector: black,\n    string: black,\n    symbol: black,\n    tag: black,\n    unit: black,\n    url: black,\n    variable: black\n  })\n};\nfunction createInputModes(opts, base, dark, solid, muted) {\n  return {\n    default: {\n      enabled: opts.input({\n        base,\n        dark,\n        mode: \"default\",\n        state: \"enabled\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      disabled: opts.input({\n        base,\n        dark,\n        mode: \"default\",\n        state: \"disabled\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      hovered: opts.input({\n        base,\n        dark,\n        mode: \"default\",\n        state: \"hovered\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      readOnly: opts.input({\n        base,\n        dark,\n        mode: \"default\",\n        state: \"readOnly\",\n        solid: solid.default,\n        muted: muted.default\n      })\n    },\n    invalid: {\n      enabled: opts.input({\n        base,\n        dark,\n        mode: \"invalid\",\n        state: \"enabled\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      disabled: opts.input({\n        base,\n        dark,\n        mode: \"invalid\",\n        state: \"disabled\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      hovered: opts.input({\n        base,\n        dark,\n        mode: \"invalid\",\n        state: \"hovered\",\n        solid: solid.default,\n        muted: muted.default\n      }),\n      readOnly: opts.input({\n        base,\n        dark,\n        mode: \"invalid\",\n        state: \"readOnly\",\n        solid: solid.default,\n        muted: muted.default\n      })\n    }\n  };\n}\nfunction createMutedTones(opts, base, dark, name) {\n  return {\n    default: {\n      enabled: opts.muted({\n        base,\n        dark,\n        tone: \"default\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.muted({\n        base,\n        dark,\n        tone: \"default\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.muted({\n        base,\n        dark,\n        tone: \"default\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.muted({\n        base,\n        dark,\n        tone: \"default\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.muted({\n        base,\n        dark,\n        tone: \"default\",\n        name,\n        state: \"selected\"\n      })\n    },\n    transparent: {\n      enabled: opts.muted({\n        base,\n        dark,\n        tone: \"transparent\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.muted({\n        base,\n        dark,\n        tone: \"transparent\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.muted({\n        base,\n        dark,\n        tone: \"transparent\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.muted({\n        base,\n        dark,\n        tone: \"transparent\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.muted({\n        base,\n        dark,\n        tone: \"transparent\",\n        name,\n        state: \"selected\"\n      })\n    },\n    primary: {\n      enabled: opts.muted({\n        base,\n        dark,\n        tone: \"primary\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.muted({\n        base,\n        dark,\n        tone: \"primary\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.muted({\n        base,\n        dark,\n        tone: \"primary\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.muted({\n        base,\n        dark,\n        tone: \"primary\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.muted({\n        base,\n        dark,\n        tone: \"primary\",\n        name,\n        state: \"selected\"\n      })\n    },\n    positive: {\n      enabled: opts.muted({\n        base,\n        dark,\n        tone: \"positive\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.muted({\n        base,\n        dark,\n        tone: \"positive\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.muted({\n        base,\n        dark,\n        tone: \"positive\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.muted({\n        base,\n        dark,\n        tone: \"positive\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.muted({\n        base,\n        dark,\n        tone: \"positive\",\n        name,\n        state: \"selected\"\n      })\n    },\n    caution: {\n      enabled: opts.muted({\n        base,\n        dark,\n        tone: \"caution\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.muted({\n        base,\n        dark,\n        tone: \"caution\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.muted({\n        base,\n        dark,\n        tone: \"caution\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.muted({\n        base,\n        dark,\n        tone: \"caution\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.muted({\n        base,\n        dark,\n        tone: \"caution\",\n        name,\n        state: \"selected\"\n      })\n    },\n    critical: {\n      enabled: opts.muted({\n        base,\n        dark,\n        tone: \"critical\",\n        name,\n        state: \"enabled\"\n      }),\n      disabled: opts.muted({\n        base,\n        dark,\n        tone: \"critical\",\n        name,\n        state: \"disabled\"\n      }),\n      hovered: opts.muted({\n        base,\n        dark,\n        tone: \"critical\",\n        name,\n        state: \"hovered\"\n      }),\n      pressed: opts.muted({\n        base,\n        dark,\n        tone: \"critical\",\n        name,\n        state: \"pressed\"\n      }),\n      selected: opts.muted({\n        base,\n        dark,\n        tone: \"critical\",\n        name,\n        state: \"selected\"\n      })\n    }\n  };\n}\nfunction createSpot(opts, base, dark) {\n  return {\n    gray: opts.spot({\n      base,\n      dark,\n      key: \"gray\"\n    }),\n    blue: opts.spot({\n      base,\n      dark,\n      key: \"blue\"\n    }),\n    purple: opts.spot({\n      base,\n      dark,\n      key: \"purple\"\n    }),\n    magenta: opts.spot({\n      base,\n      dark,\n      key: \"magenta\"\n    }),\n    red: opts.spot({\n      base,\n      dark,\n      key: \"red\"\n    }),\n    orange: opts.spot({\n      base,\n      dark,\n      key: \"orange\"\n    }),\n    yellow: opts.spot({\n      base,\n      dark,\n      key: \"yellow\"\n    }),\n    green: opts.spot({\n      base,\n      dark,\n      key: \"green\"\n    }),\n    cyan: opts.spot({\n      base,\n      dark,\n      key: \"cyan\"\n    })\n  };\n}\nfunction createColorTheme(partialOpts = {}) {\n  const builders = {\n    ...defaultOpts,\n    ...partialOpts\n  };\n  return {\n    light: _createColorScheme(builders, !1),\n    dark: _createColorScheme(builders, !0)\n  };\n}\nfunction _createColorScheme(opts, dark) {\n  return {\n    default: _createColor(opts, dark, \"default\"),\n    transparent: _createColor(opts, dark, \"transparent\"),\n    primary: _createColor(opts, dark, \"primary\"),\n    positive: _createColor(opts, dark, \"positive\"),\n    caution: _createColor(opts, dark, \"caution\"),\n    critical: _createColor(opts, dark, \"critical\")\n  };\n}\nfunction _createColor(opts, dark, name) {\n  const base = opts.base({\n    dark,\n    name\n  }), solid = createSolidTones(opts, base, dark, name), muted = createMutedTones(opts, base, dark, name);\n  return {\n    base,\n    button: createButtonModes(opts, base, dark, solid, muted),\n    card: createCardStates(opts, base, dark, name, solid, muted),\n    dark,\n    input: createInputModes(opts, base, dark, solid, muted),\n    selectable: createSelectableTones(opts, base, dark, solid, muted),\n    spot: createSpot(opts, base, dark),\n    syntax: opts.syntax({\n      base,\n      dark\n    }),\n    solid,\n    muted\n  };\n}\nconst defaultThemeConfig = {\n  avatar: {\n    sizes: [{\n      distance: -4,\n      size: 19\n    }, {\n      distance: -4,\n      size: 25\n    }, {\n      distance: -8,\n      size: 33\n    }, {\n      distance: -12,\n      size: 49\n    }],\n    focusRing: {\n      offset: 1,\n      width: 1\n    }\n  },\n  button: {\n    textWeight: \"medium\",\n    border: {\n      width: 1\n    },\n    focusRing: {\n      offset: -1,\n      width: 1\n    }\n  },\n  card: {\n    border: {\n      width: 1\n    },\n    focusRing: {\n      offset: -1,\n      width: 1\n    },\n    shadow: {\n      outline: 0.5\n    }\n  },\n  container: [320, 640, 960, 1280, 1600, 1920],\n  media: [360, 600, 900, 1200, 1800, 2400],\n  layer: {\n    dialog: {\n      zOffset: 600\n    },\n    popover: {\n      zOffset: 400\n    },\n    tooltip: {\n      zOffset: 200\n    }\n  },\n  radius: [0, 1, 3, 6, 9, 12, 21],\n  shadow: [null, {\n    umbra: [0, 0, 0, 0],\n    penumbra: [0, 0, 0, 0],\n    ambient: [0, 0, 0, 0]\n  }, {\n    umbra: [0, 3, 5, -2],\n    penumbra: [0, 6, 10, 0],\n    ambient: [0, 1, 18, 1]\n  }, {\n    umbra: [0, 7, 8, -4],\n    penumbra: [0, 12, 17, 2],\n    ambient: [0, 5, 22, 4]\n  }, {\n    umbra: [0, 9, 11, -5],\n    penumbra: [0, 18, 28, 2],\n    ambient: [0, 7, 34, 6]\n  }, {\n    umbra: [0, 11, 15, -7],\n    penumbra: [0, 24, 38, 3],\n    ambient: [0, 9, 46, 8]\n  }],\n  space: [0, 4, 8, 12, 20, 32, 52, 84, 136, 220],\n  input: {\n    border: {\n      width: 1\n    },\n    checkbox: {\n      size: 17,\n      focusRing: {\n        offset: -1,\n        width: 1\n      }\n    },\n    radio: {\n      size: 17,\n      markSize: 9,\n      focusRing: {\n        offset: -1,\n        width: 1\n      }\n    },\n    switch: {\n      width: 25,\n      height: 17,\n      padding: 5,\n      transitionDurationMs: 150,\n      transitionTimingFunction: \"ease-out\",\n      focusRing: {\n        offset: 1,\n        width: 1\n      }\n    },\n    select: {\n      focusRing: {\n        offset: -1,\n        width: 1\n      }\n    },\n    text: {\n      focusRing: {\n        offset: -1,\n        width: 1\n      }\n    }\n  },\n  style: {\n    button: {\n      root: {\n        transition: \"background-color 100ms,border-color 100ms,color 100ms\"\n      }\n    }\n    // card: {\n    //   root: {\n    //     transition: 'background-color 100ms,border-color 100ms,color 100ms',\n    //   },\n    // },\n  }\n}, defaultThemeFonts = {\n  code: {\n    family: \"ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace\",\n    weights: {\n      regular: 400,\n      medium: 500,\n      semibold: 600,\n      bold: 700\n    },\n    sizes: [{\n      ascenderHeight: 4,\n      descenderHeight: 4,\n      fontSize: 10,\n      iconSize: 17,\n      lineHeight: 15,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 5,\n      descenderHeight: 5,\n      fontSize: 13,\n      iconSize: 21,\n      lineHeight: 19,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 6,\n      descenderHeight: 6,\n      fontSize: 16,\n      iconSize: 25,\n      lineHeight: 23,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 7,\n      descenderHeight: 7,\n      fontSize: 19,\n      iconSize: 29,\n      lineHeight: 27,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 8,\n      descenderHeight: 8,\n      fontSize: 22,\n      iconSize: 33,\n      lineHeight: 31,\n      letterSpacing: 0\n    }]\n  },\n  heading: {\n    family: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',\n    weights: {\n      regular: 700,\n      medium: 800,\n      semibold: 900,\n      bold: 900\n    },\n    sizes: [{\n      ascenderHeight: 5,\n      descenderHeight: 5,\n      fontSize: 13,\n      iconSize: 17,\n      lineHeight: 19,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 6,\n      descenderHeight: 6,\n      fontSize: 16,\n      iconSize: 25,\n      lineHeight: 23,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 7,\n      descenderHeight: 7,\n      fontSize: 21,\n      iconSize: 33,\n      lineHeight: 29,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 8,\n      descenderHeight: 8,\n      fontSize: 27,\n      iconSize: 41,\n      lineHeight: 35,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 9.5,\n      descenderHeight: 8.5,\n      fontSize: 33,\n      iconSize: 49,\n      lineHeight: 41,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 10.5,\n      descenderHeight: 9.5,\n      fontSize: 38,\n      iconSize: 53,\n      lineHeight: 47,\n      letterSpacing: 0\n    }]\n  },\n  label: {\n    family: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", system-ui, sans-serif',\n    weights: {\n      regular: 600,\n      medium: 700,\n      semibold: 800,\n      bold: 900\n    },\n    sizes: [{\n      ascenderHeight: 2,\n      descenderHeight: 2,\n      fontSize: 8.1,\n      iconSize: 13,\n      lineHeight: 10,\n      letterSpacing: 0.5\n    }, {\n      ascenderHeight: 2,\n      descenderHeight: 2,\n      fontSize: 9.5,\n      iconSize: 15,\n      lineHeight: 11,\n      letterSpacing: 0.5\n    }, {\n      ascenderHeight: 2,\n      descenderHeight: 2,\n      fontSize: 10.8,\n      iconSize: 17,\n      lineHeight: 12,\n      letterSpacing: 0.5\n    }, {\n      ascenderHeight: 2,\n      descenderHeight: 2,\n      fontSize: 12.25,\n      iconSize: 19,\n      lineHeight: 13,\n      letterSpacing: 0.5\n    }, {\n      ascenderHeight: 2,\n      descenderHeight: 2,\n      fontSize: 13.6,\n      iconSize: 21,\n      lineHeight: 14,\n      letterSpacing: 0.5\n    }, {\n      ascenderHeight: 2,\n      descenderHeight: 2,\n      fontSize: 15,\n      iconSize: 23,\n      lineHeight: 15,\n      letterSpacing: 0.5\n    }]\n  },\n  text: {\n    family: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',\n    weights: {\n      regular: 400,\n      medium: 500,\n      semibold: 600,\n      bold: 700\n    },\n    sizes: [{\n      ascenderHeight: 4,\n      descenderHeight: 4,\n      fontSize: 10,\n      iconSize: 17,\n      lineHeight: 15,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 5,\n      descenderHeight: 5,\n      fontSize: 13,\n      iconSize: 21,\n      lineHeight: 19,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 6,\n      descenderHeight: 6,\n      fontSize: 15,\n      iconSize: 25,\n      lineHeight: 23,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 7,\n      descenderHeight: 7,\n      fontSize: 18,\n      iconSize: 29,\n      lineHeight: 27,\n      letterSpacing: 0\n    }, {\n      ascenderHeight: 8,\n      descenderHeight: 8,\n      fontSize: 21,\n      iconSize: 33,\n      lineHeight: 31,\n      letterSpacing: 0\n    }]\n  }\n}, cache$4 = /* @__PURE__ */ new WeakMap();\nfunction themeColor_v0_v2(color_v0) {\n  const cached_v2 = cache$4.get(color_v0);\n  if (cached_v2) return cached_v2;\n  const base = stateThemeColor_v0_v2(color_v0, color_v0.card.enabled), color_v2 = {\n    _blend: color_v0._blend || (color_v0.dark ? \"screen\" : \"multiply\"),\n    _dark: color_v0.dark,\n    accent: base.accent,\n    avatar: base.avatar,\n    backdrop: color_v0.base.shadow.ambient,\n    badge: base.badge,\n    bg: color_v0.base.bg,\n    border: color_v0.base.border,\n    button: {\n      default: stateTonesThemeColor_v0_v2(color_v0, color_v0.button.default),\n      ghost: stateTonesThemeColor_v0_v2(color_v0, color_v0.button.ghost),\n      bleed: stateTonesThemeColor_v0_v2(color_v0, color_v0.button.bleed)\n    },\n    code: base.code,\n    fg: color_v0.base.fg,\n    focusRing: color_v0.base.focusRing,\n    icon: base.muted.fg,\n    input: {\n      default: inputStatesThemeColor_v0_v2(color_v0.input.default),\n      invalid: inputStatesThemeColor_v0_v2(color_v0.input.invalid)\n    },\n    kbd: base.kbd,\n    link: base.link,\n    muted: {\n      ...base.muted,\n      bg: color_v0.selectable?.default.enabled.bg2 || color_v0.base.bg\n    },\n    selectable: stateTonesThemeColor_v0_v2(color_v0, color_v0.selectable || color_v0.muted),\n    shadow: color_v0.base.shadow,\n    skeleton: {\n      from: color_v0.skeleton?.from || color_v0.base.border,\n      to: color_v0.skeleton?.to || color_v0.base.border\n    },\n    syntax: color_v0.syntax\n  };\n  return cache$4.set(color_v0, color_v2), color_v2;\n}\nfunction stateTonesThemeColor_v0_v2(v0, t) {\n  return {\n    default: {\n      enabled: stateThemeColor_v0_v2(v0, t.default.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.default.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.default.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.default.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.default.disabled)\n    },\n    neutral: {\n      enabled: stateThemeColor_v0_v2(v0, t.default.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.default.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.default.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.default.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.default.disabled)\n    },\n    primary: {\n      enabled: stateThemeColor_v0_v2(v0, t.primary.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.primary.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.primary.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.primary.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.primary.disabled)\n    },\n    suggest: {\n      enabled: stateThemeColor_v0_v2(v0, t.primary.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.primary.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.primary.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.primary.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.primary.disabled)\n    },\n    positive: {\n      enabled: stateThemeColor_v0_v2(v0, t.positive.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.positive.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.positive.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.positive.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.positive.disabled)\n    },\n    caution: {\n      enabled: stateThemeColor_v0_v2(v0, t.caution.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.caution.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.caution.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.caution.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.caution.disabled)\n    },\n    critical: {\n      enabled: stateThemeColor_v0_v2(v0, t.critical.enabled),\n      hovered: stateThemeColor_v0_v2(v0, t.critical.hovered),\n      pressed: stateThemeColor_v0_v2(v0, t.critical.pressed),\n      selected: stateThemeColor_v0_v2(v0, t.critical.selected),\n      disabled: stateThemeColor_v0_v2(v0, t.critical.disabled)\n    }\n  };\n}\nfunction stateThemeColor_v0_v2(v0, state) {\n  return {\n    ...state,\n    avatar: {\n      gray: {\n        bg: v0.spot.gray,\n        fg: v0.base.bg\n      },\n      blue: {\n        bg: v0.spot.blue,\n        fg: v0.base.bg\n      },\n      purple: {\n        bg: v0.spot.purple,\n        fg: v0.base.bg\n      },\n      magenta: {\n        bg: v0.spot.magenta,\n        fg: v0.base.bg\n      },\n      red: {\n        bg: v0.spot.red,\n        fg: v0.base.bg\n      },\n      orange: {\n        bg: v0.spot.orange,\n        fg: v0.base.bg\n      },\n      yellow: {\n        bg: v0.spot.yellow,\n        fg: v0.base.bg\n      },\n      green: {\n        bg: v0.spot.green,\n        fg: v0.base.bg\n      },\n      cyan: {\n        bg: v0.spot.cyan,\n        fg: v0.base.bg\n      }\n    },\n    badge: {\n      default: {\n        bg: v0.muted.default.enabled.bg,\n        fg: v0.muted.default.enabled.fg,\n        dot: v0.muted.default.enabled.muted.fg,\n        icon: v0.muted.default.enabled.muted.fg\n      },\n      neutral: {\n        bg: v0.muted.transparent.enabled.bg,\n        fg: v0.muted.transparent.enabled.fg,\n        dot: v0.muted.transparent.enabled.muted.fg,\n        icon: v0.muted.transparent.enabled.muted.fg\n      },\n      primary: {\n        bg: v0.muted.primary.enabled.bg,\n        fg: v0.muted.primary.enabled.fg,\n        dot: v0.muted.primary.enabled.muted.fg,\n        icon: v0.muted.primary.enabled.muted.fg\n      },\n      suggest: {\n        bg: v0.muted.primary.enabled.bg,\n        fg: v0.muted.primary.enabled.fg,\n        dot: v0.muted.primary.enabled.muted.fg,\n        icon: v0.muted.primary.enabled.muted.fg\n      },\n      positive: {\n        bg: v0.muted.positive.enabled.bg,\n        fg: v0.muted.positive.enabled.fg,\n        dot: v0.muted.positive.enabled.muted.fg,\n        icon: v0.muted.positive.enabled.muted.fg\n      },\n      caution: {\n        bg: v0.muted.caution.enabled.bg,\n        fg: v0.muted.caution.enabled.fg,\n        dot: v0.muted.caution.enabled.muted.fg,\n        icon: v0.muted.caution.enabled.muted.fg\n      },\n      critical: {\n        bg: v0.muted.critical.enabled.bg,\n        fg: v0.muted.critical.enabled.fg,\n        dot: v0.muted.critical.enabled.muted.fg,\n        icon: v0.muted.critical.enabled.muted.fg\n      }\n    },\n    kbd: {\n      bg: v0.muted.default.enabled.bg,\n      fg: v0.muted.default.enabled.fg,\n      border: v0.muted.default.enabled.border\n    },\n    muted: {\n      ...v0.muted.default.enabled.muted,\n      bg: state.bg2 || state.bg\n    },\n    skeleton: {\n      from: state.skeleton?.from || state.border,\n      to: state.skeleton?.to || state.border\n    }\n  };\n}\nfunction inputStatesThemeColor_v0_v2(states) {\n  return {\n    enabled: inputStateThemeColor_v0_v2(states.enabled),\n    disabled: inputStateThemeColor_v0_v2(states.disabled),\n    readOnly: inputStateThemeColor_v0_v2(states.readOnly),\n    hovered: inputStateThemeColor_v0_v2(states.hovered)\n  };\n}\nfunction inputStateThemeColor_v0_v2(state) {\n  return {\n    bg: state.bg,\n    border: state.border,\n    fg: state.fg,\n    muted: {\n      bg: state.bg2\n    },\n    placeholder: state.placeholder\n  };\n}\nconst cache$3 = /* @__PURE__ */ new WeakMap();\nfunction getTheme_v2(theme) {\n  if (theme.sanity.v2?._resolved) return theme.sanity.v2;\n  const cached_v2 = cache$3.get(theme);\n  if (cached_v2) return cached_v2;\n  const v2 = {\n    _version: 2,\n    _resolved: !0,\n    avatar: {\n      ...defaultThemeConfig.avatar,\n      ...theme.sanity.avatar\n    },\n    button: {\n      ...defaultThemeConfig.button,\n      ...theme.sanity.button\n    },\n    card: defaultThemeConfig.card,\n    color: themeColor_v0_v2(theme.sanity.color),\n    container: theme.sanity.container,\n    font: theme.sanity.fonts,\n    input: {\n      ...defaultThemeConfig.input,\n      ...theme.sanity.input,\n      checkbox: {\n        ...defaultThemeConfig.input.checkbox,\n        ...theme.sanity.input.checkbox\n      },\n      radio: {\n        ...defaultThemeConfig.input.radio,\n        ...theme.sanity.input.radio\n      },\n      switch: {\n        ...defaultThemeConfig.input.switch,\n        ...theme.sanity.input.switch\n      }\n    },\n    layer: theme.sanity.layer ?? defaultThemeConfig.layer,\n    media: theme.sanity.media,\n    radius: theme.sanity.radius,\n    shadow: theme.sanity.shadows,\n    space: theme.sanity.space,\n    style: theme.sanity.styles\n  };\n  return cache$3.set(theme, v2), v2;\n}\nfunction is_v0(themeProp) {\n  return themeProp._version === 0;\n}\nfunction is_v2(themeProp) {\n  return themeProp._version === 2;\n}\nconst cache$2 = /* @__PURE__ */ new WeakMap();\nfunction v0_v2(v0) {\n  if (v0.v2) return v0.v2;\n  const cached_v2 = cache$2.get(v0);\n  if (cached_v2) return cached_v2;\n  const {\n    avatar,\n    button,\n    color: color2,\n    container,\n    fonts: font,\n    input,\n    layer,\n    media,\n    radius,\n    shadows: shadow,\n    space,\n    styles: style\n  } = v0, v2 = {\n    _version: 2,\n    avatar: {\n      ...defaultThemeConfig.avatar,\n      ...avatar\n    },\n    button: {\n      ...defaultThemeConfig.button,\n      ...button\n    },\n    card: defaultThemeConfig.card,\n    color: {\n      light: {\n        transparent: themeColor_v0_v2(color2.light.transparent),\n        default: themeColor_v0_v2(color2.light.default),\n        neutral: themeColor_v0_v2(color2.light.transparent),\n        primary: themeColor_v0_v2(color2.light.primary),\n        suggest: themeColor_v0_v2(color2.light.primary),\n        positive: themeColor_v0_v2(color2.light.positive),\n        caution: themeColor_v0_v2(color2.light.caution),\n        critical: themeColor_v0_v2(color2.light.critical)\n      },\n      dark: {\n        transparent: themeColor_v0_v2(color2.dark.transparent),\n        default: themeColor_v0_v2(color2.dark.default),\n        neutral: themeColor_v0_v2(color2.dark.transparent),\n        primary: themeColor_v0_v2(color2.dark.primary),\n        suggest: themeColor_v0_v2(color2.dark.primary),\n        positive: themeColor_v0_v2(color2.dark.positive),\n        caution: themeColor_v0_v2(color2.dark.caution),\n        critical: themeColor_v0_v2(color2.dark.critical)\n      }\n    },\n    container,\n    font,\n    input: {\n      ...defaultThemeConfig.input,\n      ...input,\n      checkbox: {\n        ...defaultThemeConfig.input.checkbox,\n        ...input.checkbox\n      },\n      radio: {\n        ...defaultThemeConfig.input.radio,\n        ...input.radio\n      },\n      switch: {\n        ...defaultThemeConfig.input.switch,\n        ...input.switch\n      }\n    },\n    layer: layer ?? defaultThemeConfig.layer,\n    media,\n    radius,\n    shadow,\n    space,\n    style\n  };\n  return cache$2.set(v0, v2), v2;\n}\nconst cache$1 = /* @__PURE__ */ new WeakMap();\nfunction v2_v0(v2) {\n  const cachedTheme = cache$1.get(v2);\n  if (cachedTheme) return cachedTheme;\n  const {\n    avatar,\n    button,\n    color: color2,\n    container,\n    font: fonts,\n    input,\n    media,\n    radius,\n    shadow: shadows,\n    space,\n    style: styles\n  } = v2;\n  return {\n    _version: 0,\n    avatar,\n    button,\n    container,\n    color: {\n      light: {\n        transparent: themeColor_v2_v0(color2.light.transparent),\n        default: themeColor_v2_v0(color2.light.default),\n        primary: themeColor_v2_v0(color2.light.primary),\n        positive: themeColor_v2_v0(color2.light.positive),\n        caution: themeColor_v2_v0(color2.light.caution),\n        critical: themeColor_v2_v0(color2.light.critical)\n      },\n      dark: {\n        transparent: themeColor_v2_v0(color2.dark.transparent),\n        default: themeColor_v2_v0(color2.dark.default),\n        primary: themeColor_v2_v0(color2.dark.primary),\n        positive: themeColor_v2_v0(color2.dark.positive),\n        caution: themeColor_v2_v0(color2.dark.caution),\n        critical: themeColor_v2_v0(color2.dark.critical)\n      }\n    },\n    focusRing: input.text.focusRing,\n    fonts,\n    input,\n    media,\n    radius,\n    shadows,\n    space,\n    styles,\n    v2\n  };\n}\nfunction themeColor_v2_v0(color_v2) {\n  return {\n    base: {\n      bg: color_v2.bg,\n      fg: color_v2.fg,\n      border: color_v2.border,\n      focusRing: color_v2.focusRing,\n      shadow: color_v2.shadow\n    },\n    button: color_v2.button,\n    card: color_v2.selectable.default,\n    dark: color_v2._dark,\n    input: {\n      default: inputStatesThemeColor_v2_v0(color_v2.input.default),\n      invalid: inputStatesThemeColor_v2_v0(color_v2.input.invalid)\n    },\n    muted: {\n      ...color_v2.button.ghost,\n      transparent: color_v2.button.ghost.default\n    },\n    solid: {\n      ...color_v2.button.default,\n      transparent: color_v2.button.default.default\n    },\n    selectable: color_v2.selectable,\n    spot: {\n      gray: color_v2.avatar.gray.bg,\n      blue: color_v2.avatar.blue.bg,\n      purple: color_v2.avatar.purple.bg,\n      magenta: color_v2.avatar.magenta.bg,\n      red: color_v2.avatar.red.bg,\n      orange: color_v2.avatar.orange.bg,\n      yellow: color_v2.avatar.yellow.bg,\n      green: color_v2.avatar.green.bg,\n      cyan: color_v2.avatar.cyan.bg\n    },\n    syntax: color_v2.syntax\n  };\n}\nfunction inputStatesThemeColor_v2_v0(t) {\n  return {\n    enabled: inputStateThemeColor_v2_v0(t.enabled),\n    disabled: inputStateThemeColor_v2_v0(t.disabled),\n    readOnly: inputStateThemeColor_v2_v0(t.readOnly),\n    hovered: inputStateThemeColor_v2_v0(t.hovered)\n  };\n}\nfunction inputStateThemeColor_v2_v0(t) {\n  return {\n    bg: t.bg,\n    bg2: t.muted.bg,\n    border: t.border,\n    fg: t.fg,\n    placeholder: t.placeholder\n  };\n}\nconst THEME_COLOR_SCHEMES = [\"light\", \"dark\"], THEME_COLOR_BLEND_MODES = [\"multiply\", \"screen\"], THEME_COLOR_CARD_TONES = [\n  \"transparent\",\n  \"default\",\n  \"neutral\",\n  \"primary\",\n  // deprecated\n  \"suggest\",\n  \"positive\",\n  \"caution\",\n  \"critical\"\n], THEME_COLOR_STATE_TONES = [\n  \"default\",\n  \"neutral\",\n  \"primary\",\n  // deprecated\n  \"suggest\",\n  \"positive\",\n  \"caution\",\n  \"critical\"\n], THEME_COLOR_STATES = [\"enabled\", \"hovered\", \"pressed\", \"selected\", \"disabled\"], THEME_COLOR_BUTTON_MODES = [\"default\", \"ghost\", \"bleed\"], THEME_COLOR_INPUT_MODES = [\"default\", \"invalid\"], THEME_COLOR_INPUT_STATES = [\"enabled\", \"hovered\", \"readOnly\", \"disabled\"], THEME_COLOR_AVATAR_COLORS = _sanity_color__WEBPACK_IMPORTED_MODULE_0__.COLOR_HUES;\nfunction isColorBlendModeValue(str) {\n  return THEME_COLOR_BLEND_MODES.includes(str);\n}\nfunction isColorHueKey(str) {\n  return _sanity_color__WEBPACK_IMPORTED_MODULE_0__.COLOR_HUES.includes(str);\n}\nfunction isColorTintKey(str) {\n  return _sanity_color__WEBPACK_IMPORTED_MODULE_0__.COLOR_TINTS.includes(str);\n}\nfunction isColorButtonMode(str) {\n  return THEME_COLOR_BUTTON_MODES.includes(str);\n}\nconst COLOR_CONFIG_STATE_KEYS = [\"_hue\", \"bg\", \"fg\", \"border\", \"focusRing\", \"muted/fg\", \"accent/fg\", \"link/fg\", \"code/bg\", \"code/fg\", \"skeleton/from\", \"skeleton/to\", \"status/dot\", \"status/icon\"], COLOR_CONFIG_CARD_KEYS = [...COLOR_CONFIG_STATE_KEYS, \"_hue\", \"bg\", \"fg\", \"border\", \"focusRing\", \"shadow/outline\", \"shadow/umbra\", \"shadow/penumbra\", \"shadow/ambient\"], COLOR_CONFIG_BLEND_KEYS = [\"_blend\"], COLOR_CONFIG_AVATAR_COLORS = [\"*\", ...THEME_COLOR_AVATAR_COLORS], COLOR_CONFIG_CARD_TONES = [\"*\", ...THEME_COLOR_CARD_TONES], COLOR_CONFIG_STATE_TONES = [\"*\", ...THEME_COLOR_STATE_TONES], COLOR_CONFIG_STATES = [\"*\", ...THEME_COLOR_STATES], COLOR_CONFIG_INPUT_MODES = [\"*\", ...THEME_COLOR_INPUT_MODES], COLOR_CONFIG_INPUT_STATES = [\"*\", ...THEME_COLOR_INPUT_STATES];\nfunction parseTokenKey(str) {\n  const segments = str.split(\"/\"), segment0 = segments.shift() || \"\";\n  if (isColorConfigBaseTone(segment0)) {\n    const key = segments.join(\"/\");\n    if (isColorConfigBaseKey(key))\n      return {\n        type: \"base\",\n        tone: segment0,\n        key\n      };\n    if (isColorConfigBlendKey(key))\n      return {\n        type: \"base\",\n        tone: segment0,\n        key\n      };\n  }\n  if (segment0 === \"button\") {\n    const segment1 = segments.shift() || \"\";\n    if (isColorConfigStateTone(segment1)) {\n      const segment2 = segments.shift() || \"\";\n      if (isColorButtonMode(segment2)) {\n        const key = segments.join(\"/\");\n        if (isColorConfigStateKey(key))\n          return {\n            type: \"button\",\n            tone: segment1,\n            mode: segment2,\n            key\n          };\n        if (isColorConfigBlendKey(key))\n          return {\n            type: \"button\",\n            tone: segment1,\n            mode: segment2,\n            key\n          };\n      }\n    }\n  }\n}\nfunction isColorMixPercentValue(str) {\n  return /^\\d+%$/.test(str);\n}\nfunction parseTokenValue(str) {\n  const segments = str.split(\"/\");\n  let nextSegment = segments.shift() || \"\";\n  const [segment0, segment0mix] = nextSegment.split(\" \");\n  if (isColorTintKey(segment0)) {\n    const tint = segment0, segment1 = segments.shift() || \"\";\n    if (isColorMixPercentValue(segment0mix)) {\n      const mix2 = Number(segment0mix.slice(0, -1)) / 100;\n      return {\n        type: \"color\",\n        tint,\n        mix: mix2\n      };\n    }\n    if (isColorOpacityValue(segment1)) {\n      const opacity = Number(segment1);\n      return {\n        type: \"color\",\n        tint,\n        opacity\n      };\n    }\n    return {\n      type: \"color\",\n      tint\n    };\n  }\n  if (isColorValue(segment0)) {\n    const key = segment0, segment1 = segments.shift() || \"\";\n    if (isColorMixPercentValue(segment0mix)) {\n      const mix2 = Number(segment0mix.slice(0, -1)) / 100;\n      return {\n        type: \"color\",\n        key,\n        mix: mix2\n      };\n    }\n    if (isColorOpacityValue(segment1)) {\n      const opacity = Number(segment1);\n      return {\n        type: \"color\",\n        key,\n        opacity\n      };\n    }\n    return {\n      type: \"color\",\n      key\n    };\n  }\n  if (isColorHueKey(segment0)) {\n    const hue = segment0;\n    nextSegment = segments.shift() || \"\";\n    const [segment1, segment1mix] = nextSegment.split(\" \");\n    if (isColorTintKey(segment1)) {\n      const tint = segment1, segment2 = segments.shift() || \"\";\n      if (isColorMixPercentValue(segment1mix)) {\n        const mix2 = Number(segment1mix.slice(0, -1)) / 100;\n        return {\n          type: \"color\",\n          hue,\n          tint,\n          mix: mix2\n        };\n      }\n      if (isColorOpacityValue(segment2)) {\n        const opacity = Number(segment2);\n        return {\n          type: \"color\",\n          hue,\n          tint,\n          opacity\n        };\n      }\n      return {\n        type: \"color\",\n        hue,\n        tint\n      };\n    }\n    return {\n      type: \"hue\",\n      value: hue\n    };\n  }\n  if (isColorBlendModeValue(segment0))\n    return {\n      type: \"blendMode\",\n      value: segment0\n    };\n}\nfunction isColorConfigBaseTone(str) {\n  return COLOR_CONFIG_CARD_TONES.includes(str);\n}\nfunction isColorConfigBaseKey(str) {\n  return COLOR_CONFIG_CARD_KEYS.includes(str);\n}\nfunction isColorConfigStateKey(str) {\n  return COLOR_CONFIG_STATE_KEYS.includes(str);\n}\nfunction isColorConfigStateTone(str) {\n  return COLOR_CONFIG_STATE_TONES.includes(str);\n}\nfunction isColorConfigBlendKey(str) {\n  return COLOR_CONFIG_BLEND_KEYS.includes(str);\n}\nfunction isColorTokenValue(str) {\n  return parseTokenValue(str)?.type === \"color\" || parseTokenValue(str)?.type === \"hue\";\n}\nfunction isColorValue(str) {\n  return str === \"black\" || str === \"white\";\n}\nfunction isColorOpacityValue(str) {\n  return str === \"0\" || /^0\\.[0-9]+$/.test(str) || str === \"1\";\n}\nfunction compileColorTokenValue(node) {\n  let key = \"\";\n  return node.key === \"black\" || node.key === \"white\" ? key = node.key : key = `${node.hue}/${node.tint}`, node.mix !== void 0 ? `${key} ${node.mix * 100}%` : (node.opacity !== void 0 && (key += `/${node.opacity}`), key);\n}\nconst DEFAULT_COLOR_TOKEN_VALUE = [\"500\", \"500\"];\nfunction resolveColorTokenValue(context, value = DEFAULT_COLOR_TOKEN_VALUE) {\n  const {\n    hue,\n    scheme\n  } = context, node = parseTokenValue(value[scheme === \"light\" ? 0 : 1]);\n  if (!node || node.type !== \"color\")\n    throw new Error(`Invalid color token: ${value[0]}`);\n  return compileColorTokenValue({\n    ...node,\n    hue: node.hue || hue\n  });\n}\nconst defaultColorTokens = {\n  base: {\n    \"*\": {\n      _blend: [\"multiply\", \"screen\"],\n      accent: {\n        fg: [\"purple/600\", \"purple/400\"]\n      },\n      avatar: {\n        \"*\": {\n          _blend: [\"screen\", \"multiply\"],\n          bg: [\"500\", \"400\"],\n          fg: [\"white\", \"black\"]\n        }\n      },\n      backdrop: [\"gray/200/0.5\", \"black/0.5\"],\n      badge: {\n        \"*\": {\n          bg: [\"100\", \"900\"],\n          fg: [\"600\", \"400\"],\n          icon: [\"500\", \"500\"],\n          dot: [\"500\", \"500\"]\n        },\n        positive: {\n          bg: [\"200 50%\", \"900\"],\n          fg: [\"600\", \"500\"]\n        },\n        caution: {\n          bg: [\"200 50%\", \"900\"],\n          fg: [\"600\", \"500\"]\n        }\n      },\n      bg: [\"50\", \"950\"],\n      border: [\"200\", \"800\"],\n      code: {\n        bg: [\"50\", \"950\"],\n        fg: [\"600\", \"400\"]\n      },\n      fg: [\"800\", \"200\"],\n      focusRing: [\"blue/500\", \"blue/500\"],\n      icon: [\"600\", \"400\"],\n      kbd: {\n        bg: [\"white\", \"black\"],\n        fg: [\"600\", \"400\"],\n        border: [\"200\", \"800\"]\n      },\n      link: {\n        fg: [\"blue/600\", \"blue/300\"]\n      },\n      muted: {\n        bg: [\"50\", \"950\"],\n        fg: [\"700 75%\", \"300 75%\"]\n      },\n      shadow: {\n        outline: [\"500/0.3\", \"500/0.4\"],\n        umbra: [\"gray/500/0.1\", \"black/0.2\"],\n        penumbra: [\"gray/500/0.07\", \"black/0.14\"],\n        ambient: [\"gray/500/0.06\", \"black/0.12\"]\n      },\n      skeleton: {\n        from: [\"100\", \"900\"],\n        to: [\"100 50%\", \"900 50%\"]\n      }\n    },\n    transparent: {\n      bg: [\"50\", \"black\"]\n    },\n    default: {\n      bg: [\"white\", \"950\"],\n      fg: [\"800\", \"200\"],\n      muted: {\n        fg: [\"600\", \"400\"]\n      }\n    },\n    primary: {\n      _hue: \"blue\"\n    },\n    suggest: {\n      _hue: \"purple\"\n    },\n    positive: {\n      _hue: \"green\",\n      shadow: {\n        outline: [\"500/0.4\", \"500/0.4\"]\n      }\n    },\n    caution: {\n      _hue: \"yellow\",\n      shadow: {\n        outline: [\"600/0.3\", \"500/0.4\"]\n      }\n    },\n    critical: {\n      _hue: \"red\"\n    }\n  },\n  button: {\n    default: {\n      \"*\": {\n        \"*\": {\n          _blend: [\"screen\", \"multiply\"],\n          accent: {\n            fg: [\"purple/300\", \"purple/700\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"500\", \"400\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              bg: [\"900\", \"100\"],\n              fg: [\"400\", \"600\"],\n              dot: [\"500\", \"500\"],\n              icon: [\"500\", \"500\"]\n            }\n          },\n          bg: [\"500\", \"400\"],\n          border: [\"500/0\", \"400/0\"],\n          code: {\n            bg: [\"500 20%\", \"400 20%\"],\n            fg: [\"200\", \"600\"]\n          },\n          fg: [\"white\", \"black\"],\n          icon: [\"100 70%\", \"900 70%\"],\n          kbd: {\n            bg: [\"black\", \"white\"],\n            fg: [\"200\", \"600\"],\n            border: [\"800\", \"200\"]\n          },\n          link: {\n            fg: [\"blue/200\", \"blue/600\"]\n          },\n          muted: {\n            bg: [\"950\", \"50\"],\n            fg: [\"100 70%\", \"900 70%\"]\n          },\n          skeleton: {\n            from: [\"900\", \"100\"],\n            to: [\"900 50%\", \"100 50%\"]\n          }\n        },\n        hovered: {\n          bg: [\"600\", \"300\"],\n          border: [\"700/0\", \"300/0\"]\n        },\n        pressed: {\n          bg: [\"700\", \"300\"]\n        },\n        selected: {\n          bg: [\"700\", \"300\"]\n        },\n        disabled: {\n          _hue: \"gray\",\n          accent: {\n            fg: [\"100 70%\", \"900 70%\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"gray/500\", \"gray/400\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              bg: [\"gray/700\", \"gray/300\"],\n              fg: [\"white\", \"black\"],\n              dot: [\"white\", \"black\"],\n              icon: [\"white\", \"black\"]\n            }\n          },\n          bg: [\"300\", \"600\"],\n          code: {\n            bg: [\"950\", \"50\"],\n            fg: [\"300\", \"600\"]\n          },\n          fg: [\"300\", \"600\"],\n          muted: {\n            bg: [\"950\", \"50\"],\n            fg: [\"300\", \"600\"]\n          },\n          kbd: {\n            bg: [\"black\", \"white\"],\n            fg: [\"white\", \"black\"],\n            border: [\"700\", \"300\"]\n          },\n          link: {\n            fg: [\"100 70%\", \"900 70%\"]\n          }\n        }\n      },\n      default: {\n        \"*\": {\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"500\", \"400\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          bg: [\"800\", \"200\"],\n          muted: {\n            bg: [\"950\", \"50\"],\n            fg: [\"400\", \"600\"]\n          }\n        },\n        hovered: {\n          bg: [\"900\", \"100\"]\n        },\n        pressed: {\n          bg: [\"black\", \"white\"]\n        },\n        selected: {\n          bg: [\"black\", \"white\"]\n        }\n      }\n    },\n    ghost: {\n      \"*\": {\n        \"*\": {\n          _blend: [\"multiply\", \"screen\"],\n          accent: {\n            fg: [\"purple/700 60%\", \"purple/300 70%\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"500\", \"400\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              bg: [\"100\", \"900\"],\n              fg: [\"600\", \"400\"],\n              dot: [\"500\", \"500\"],\n              icon: [\"500\", \"500\"]\n            }\n          },\n          bg: [\"50\", \"950\"],\n          border: [\"100\", \"900\"],\n          code: {\n            bg: [\"500 10%\", \"400 10%\"],\n            fg: [\"700 60%\", \"400 60%\"]\n          },\n          fg: [\"600\", \"400\"],\n          icon: [\"700 60%\", \"300 60%\"],\n          kbd: {\n            bg: [\"white\", \"black\"],\n            fg: [\"600\", \"400\"],\n            border: [\"200\", \"800\"]\n          },\n          link: {\n            fg: [\"blue/700 60%\", \"blue/300 60%\"]\n          },\n          muted: {\n            bg: [\"100\", \"950\"],\n            fg: [\"700 60%\", \"300 60%\"]\n          },\n          skeleton: {\n            from: [\"100\", \"900\"],\n            to: [\"100 50%\", \"900 50%\"]\n          }\n        },\n        hovered: {\n          bg: [\"100\", \"900\"],\n          fg: [\"700\", \"300\"]\n        },\n        pressed: {\n          bg: [\"200\", \"800\"],\n          fg: [\"800\", \"200\"]\n        },\n        selected: {\n          bg: [\"200\", \"800\"],\n          fg: [\"800\", \"200\"]\n        },\n        disabled: {\n          _hue: \"gray\",\n          accent: {\n            fg: [\"200\", \"800\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"gray/100\", \"gray/900\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              _hue: \"gray\",\n              bg: [\"50\", \"950\"],\n              fg: [\"gray/200\", \"gray/800\"],\n              dot: [\"gray/200\", \"gray/800\"],\n              icon: [\"gray/200\", \"gray/800\"]\n            }\n          },\n          border: [\"100\", \"900\"],\n          code: {\n            bg: [\"50\", \"950\"],\n            fg: [\"200\", \"800\"]\n          },\n          fg: [\"400\", \"600\"],\n          icon: [\"300\", \"700\"],\n          muted: {\n            fg: [\"300\", \"700\"]\n          },\n          kbd: {\n            bg: [\"white\", \"black\"],\n            fg: [\"200\", \"800\"],\n            border: [\"100\", \"900\"]\n          },\n          link: {\n            fg: [\"200\", \"800\"]\n          }\n        }\n      },\n      positive: {\n        \"*\": {\n          border: [\"600 20%\", \"800\"]\n        }\n      },\n      caution: {\n        \"*\": {\n          border: [\"600 20%\", \"800\"]\n        }\n      }\n    },\n    bleed: {\n      \"*\": {\n        \"*\": {\n          _blend: [\"multiply\", \"screen\"],\n          accent: {\n            fg: [\"purple/700 70%\", \"purple/300 70%\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"500\", \"400\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              bg: [\"100\", \"900\"],\n              fg: [\"600\", \"400\"],\n              dot: [\"500\", \"500\"],\n              icon: [\"500\", \"500\"]\n            }\n          },\n          bg: [\"white\", \"black\"],\n          border: [\"white/0\", \"black/0\"],\n          code: {\n            bg: [\"50\", \"950\"],\n            fg: [\"700 75%\", \"300 75%\"]\n          },\n          fg: [\"700\", \"300\"],\n          icon: [\"700 75%\", \"300 75%\"],\n          kbd: {\n            bg: [\"white\", \"black\"],\n            fg: [\"700\", \"300\"],\n            border: [\"200\", \"800\"]\n          },\n          link: {\n            fg: [\"blue/700 70%\", \"blue/300 70%\"]\n          },\n          muted: {\n            bg: [\"100\", \"950\"],\n            fg: [\"700 75%\", \"300 75%\"]\n          },\n          skeleton: {\n            from: [\"100\", \"900\"],\n            to: [\"100 50%\", \"900 50%\"]\n          }\n        },\n        hovered: {\n          bg: [\"50\", \"900\"],\n          fg: [\"800\", \"200\"],\n          icon: [\"800 70%\", \"300 70%\"]\n        },\n        pressed: {\n          bg: [\"100\", \"800\"],\n          fg: [\"800\", \"200\"],\n          icon: [\"800 70%\", \"200 70%\"]\n        },\n        selected: {\n          bg: [\"100\", \"900\"],\n          fg: [\"800\", \"200\"],\n          icon: [\"800 60%\", \"200 60%\"]\n        },\n        disabled: {\n          _hue: \"gray\",\n          accent: {\n            fg: [\"200\", \"800\"]\n          },\n          avatar: {\n            \"*\": {\n              _blend: [\"screen\", \"multiply\"],\n              bg: [\"gray/100\", \"gray/900\"],\n              fg: [\"white\", \"black\"]\n            }\n          },\n          badge: {\n            \"*\": {\n              _hue: \"gray\",\n              bg: [\"50\", \"950\"],\n              fg: [\"gray/200\", \"gray/800\"],\n              dot: [\"gray/200\", \"gray/800\"],\n              icon: [\"gray/200\", \"gray/800\"]\n            }\n          },\n          code: {\n            bg: [\"50\", \"950\"],\n            fg: [\"200\", \"800\"]\n          },\n          fg: [\"400\", \"600\"],\n          icon: [\"300\", \"700\"],\n          muted: {\n            fg: [\"400\", \"600\"]\n          },\n          kbd: {\n            bg: [\"white\", \"black\"],\n            fg: [\"200\", \"800\"],\n            border: [\"100\", \"900\"]\n          },\n          link: {\n            fg: [\"200\", \"800\"]\n          }\n        }\n      }\n    }\n  },\n  input: {\n    \"*\": {\n      \"*\": {\n        _blend: [\"multiply\", \"screen\"],\n        bg: [\"white\", \"black\"],\n        border: [\"200\", \"700\"],\n        fg: [\"black\", \"200\"],\n        muted: {\n          bg: [\"50\", \"950\"]\n        },\n        placeholder: [\"400\", \"600\"]\n      },\n      hovered: {\n        border: [\"300\", \"700\"]\n      },\n      readOnly: {\n        bg: [\"50\", \"950\"],\n        border: [\"200\", \"800\"],\n        fg: [\"800\", \"200\"]\n      },\n      disabled: {\n        bg: [\"50\", \"950\"],\n        fg: [\"400\", \"600\"],\n        border: [\"100\", \"900\"],\n        placeholder: [\"200\", \"800 50%\"]\n      }\n    },\n    invalid: {\n      \"*\": {\n        _hue: \"red\",\n        bg: [\"100\", \"950\"]\n      }\n    }\n  },\n  selectable: {\n    \"*\": {\n      \"*\": {\n        _blend: [\"multiply\", \"screen\"],\n        accent: {\n          fg: [\"purple/700 70%\", \"purple/300 70%\"]\n        },\n        avatar: {\n          \"*\": {\n            _blend: [\"screen\", \"multiply\"],\n            bg: [\"500\", \"400\"],\n            fg: [\"white\", \"black\"]\n          }\n        },\n        badge: {\n          \"*\": {\n            bg: [\"100\", \"900\"],\n            fg: [\"600\", \"400\"],\n            dot: [\"500\", \"500\"],\n            icon: [\"500\", \"500\"]\n          }\n        },\n        bg: [\"white\", \"black\"],\n        border: [\"200\", \"800\"],\n        code: {\n          bg: [\"50\", \"950\"],\n          fg: [\"600\", \"400\"]\n        },\n        fg: [\"700\", \"300\"],\n        icon: [\"700 75%\", \"300 75%\"],\n        kbd: {\n          bg: [\"white\", \"black\"],\n          fg: [\"600\", \"400\"],\n          border: [\"200\", \"800\"]\n        },\n        link: {\n          fg: [\"blue/700 70%\", \"blue/300 70%\"]\n        },\n        muted: {\n          bg: [\"50\", \"950\"],\n          fg: [\"700 75%\", \"300 75%\"]\n        },\n        skeleton: {\n          from: [\"100\", \"900\"],\n          to: [\"100 50%\", \"900 50%\"]\n        }\n      },\n      hovered: {\n        bg: [\"50\", \"950\"]\n      },\n      pressed: {\n        bg: [\"100\", \"900\"]\n      },\n      selected: {\n        _blend: [\"screen\", \"multiply\"],\n        accent: {\n          fg: [\"purple/300\", \"purple/700\"]\n        },\n        avatar: {\n          \"*\": {\n            _blend: [\"multiply\", \"screen\"],\n            bg: [\"white\", \"black\"],\n            fg: [\"black\", \"white\"]\n          }\n        },\n        badge: {\n          \"*\": {\n            bg: [\"900\", \"100\"],\n            fg: [\"400\", \"600\"],\n            dot: [\"500\", \"500\"],\n            icon: [\"500\", \"500\"]\n          }\n        },\n        bg: [\"500\", \"400\"],\n        border: [\"500 20%\", \"400 20%\"],\n        code: {\n          bg: [\"500 20%\", \"400 20%\"],\n          fg: [\"200\", \"600\"]\n        },\n        fg: [\"white\", \"black\"],\n        icon: [\"100 70%\", \"900 70%\"],\n        kbd: {\n          bg: [\"black\", \"white\"],\n          fg: [\"200\", \"600\"],\n          border: [\"800\", \"200\"]\n        },\n        link: {\n          fg: [\"blue/200\", \"blue/600\"]\n        },\n        muted: {\n          bg: [\"500 10%\", \"400 10%\"],\n          fg: [\"100 70%\", \"900 70%\"]\n        },\n        skeleton: {\n          from: [\"900\", \"100\"],\n          to: [\"900 50%\", \"100 50%\"]\n        }\n      },\n      disabled: {\n        _hue: \"gray\",\n        accent: {\n          fg: [\"200\", \"800\"]\n        },\n        avatar: {\n          \"*\": {\n            _blend: [\"screen\", \"multiply\"],\n            bg: [\"gray/100\", \"gray/900\"],\n            fg: [\"white\", \"black\"]\n          }\n        },\n        badge: {\n          \"*\": {\n            _hue: \"gray\",\n            bg: [\"50\", \"950\"],\n            fg: [\"gray/200\", \"gray/800\"],\n            dot: [\"gray/200\", \"gray/800\"],\n            icon: [\"gray/200\", \"gray/800\"]\n          }\n        },\n        border: [\"100\", \"900\"],\n        code: {\n          bg: [\"50\", \"950\"],\n          fg: [\"200\", \"800\"]\n        },\n        fg: [\"200\", \"800\"],\n        icon: [\"200\", \"800\"],\n        kbd: {\n          bg: [\"white\", \"black\"],\n          fg: [\"200\", \"800\"],\n          border: [\"100\", \"900\"]\n        },\n        link: {\n          fg: [\"200\", \"800\"]\n        },\n        muted: {\n          bg: [\"50 50%\", \"950 50%\"],\n          fg: [\"200\", \"800\"]\n        }\n      }\n    },\n    default: {\n      selected: {\n        _hue: \"blue\"\n      }\n    },\n    critical: {\n      disabled: {\n        bg: [\"50 50%\", \"950 50%\"]\n      }\n    }\n  },\n  syntax: {\n    atrule: [\"purple/600\", \"purple/400\"],\n    attrName: [\"green/600\", \"green/400\"],\n    attrValue: [\"yellow/600\", \"yellow/400\"],\n    attribute: [\"yellow/600\", \"yellow/400\"],\n    boolean: [\"purple/600\", \"purple/400\"],\n    builtin: [\"purple/600\", \"purple/400\"],\n    cdata: [\"yellow/600\", \"yellow/400\"],\n    char: [\"yellow/600\", \"yellow/400\"],\n    class: [\"orange/600\", \"orange/400\"],\n    className: [\"cyan/600\", \"cyan/400\"],\n    comment: [\"gray/400\", \"gray/600\"],\n    constant: [\"purple/600\", \"purple/400\"],\n    deleted: [\"red/600\", \"red/400\"],\n    entity: [\"red/600\", \"red/400\"],\n    function: [\"green/600\", \"green/400\"],\n    hexcode: [\"blue/600\", \"blue/400\"],\n    id: [\"purple/600\", \"purple/400\"],\n    important: [\"purple/600\", \"purple/400\"],\n    inserted: [\"yellow/600\", \"yellow/400\"],\n    keyword: [\"magenta/600\", \"magenta/400\"],\n    number: [\"purple/600\", \"purple/400\"],\n    operator: [\"magenta/600\", \"magenta/400\"],\n    property: [\"blue/600\", \"blue/400\"],\n    pseudoClass: [\"yellow/600\", \"yellow/400\"],\n    pseudoElement: [\"yellow/600\", \"yellow/400\"],\n    punctuation: [\"gray/600\", \"gray/400\"],\n    regex: [\"blue/600\", \"blue/400\"],\n    selector: [\"red/600\", \"red/400\"],\n    string: [\"yellow/600\", \"yellow/400\"],\n    symbol: [\"purple/600\", \"purple/400\"],\n    tag: [\"red/600\", \"red/400\"],\n    unit: [\"orange/600\", \"orange/400\"],\n    url: [\"red/600\", \"red/400\"],\n    variable: [\"red/600\", \"red/400\"]\n  }\n};\nfunction isRecord(value) {\n  return !!(value && typeof value == \"object\" && !Array.isArray(value));\n}\nfunction merge(...records) {\n  const _records = records.filter(Boolean);\n  return _records.length === 0 ? {} : _records.reduce(_merge, {});\n}\nfunction _merge(acc, source) {\n  for (const key of Object.keys(source)) {\n    const prevValue = acc[key], nextValue = source[key];\n    isRecord(prevValue) && isRecord(nextValue) ? acc[key] = merge(prevValue, nextValue) : acc[key] = nextValue;\n  }\n  return acc;\n}\nfunction resolveColorTokens(inputTokens) {\n  const tokens = merge(defaultColorTokens, inputTokens);\n  return {\n    base: resolveBaseColorTokens(tokens),\n    button: resolveButtonColorTokens(tokens),\n    input: resolveInputColorTokens(tokens),\n    selectable: resolveSelectableColorTokens(tokens),\n    syntax: tokens.syntax\n  };\n}\nfunction resolveBaseColorTokens(sparseTokens) {\n  const tokens = {};\n  for (const tone of THEME_COLOR_CARD_TONES)\n    tokens[tone] = resolveBaseColorTones(sparseTokens, tone);\n  return tokens;\n}\nfunction resolveBaseColorTones(inputTokens, tone) {\n  const spec = merge(inputTokens?.base?.[\"*\"], inputTokens?.base?.[tone]), hue = spec._hue || inputTokens?.base?.[tone]?._hue || \"gray\";\n  return {\n    ...spec,\n    _hue: hue,\n    avatar: _sanity_color__WEBPACK_IMPORTED_MODULE_0__.COLOR_HUES.reduce((acc, hue2) => ({\n      ...acc,\n      [hue2]: merge({\n        _hue: hue2\n      }, spec.avatar?.[\"*\"], spec.avatar?.[hue2])\n    }), {}),\n    badge: THEME_COLOR_STATE_TONES.reduce((acc, tone2) => ({\n      ...acc,\n      [tone2]: {\n        _hue: inputTokens?.base?.[tone2]?._hue || hue,\n        ...spec.badge?.[\"*\"],\n        ...spec.badge?.[tone2]\n      }\n    }), {})\n  };\n}\nfunction resolveButtonColorTokens(inputTokens) {\n  const tokens = {};\n  for (const mode of THEME_COLOR_BUTTON_MODES)\n    tokens[mode] = resolveButtonToneColorTokens(inputTokens, mode);\n  return tokens;\n}\nfunction resolveButtonToneColorTokens(inputTokens, mode) {\n  const tokens = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    tokens[tone] = resolveButtonModeColorTokens(inputTokens, mode, tone);\n  return tokens;\n}\nfunction resolveButtonModeColorTokens(inputTokens, mode, tone) {\n  const tokens = {};\n  for (const state of THEME_COLOR_STATES)\n    tokens[state] = resolveButtonStateColorTokens(inputTokens, tone, mode, state);\n  return tokens;\n}\nfunction resolveButtonStateColorTokens(inputTokens, tone, mode, state) {\n  const spec = merge(inputTokens?.button?.[mode]?.[\"*\"]?.[\"*\"], inputTokens?.button?.[mode]?.[tone]?.[\"*\"], inputTokens?.button?.[mode]?.[\"*\"]?.[state], inputTokens?.button?.[mode]?.[tone]?.[state]), hue = spec._hue || inputTokens?.base?.[tone]?._hue;\n  return {\n    ...spec,\n    _hue: hue,\n    avatar: _sanity_color__WEBPACK_IMPORTED_MODULE_0__.COLOR_HUES.reduce((acc, hue2) => ({\n      ...acc,\n      [hue2]: merge({\n        _hue: hue2\n      }, spec.avatar?.[\"*\"], spec.avatar?.[hue2])\n    }), {}),\n    badge: THEME_COLOR_STATE_TONES.reduce((acc, tone2) => ({\n      ...acc,\n      [tone2]: {\n        _hue: inputTokens?.base?.[tone2]?._hue || hue,\n        ...spec.badge?.[\"*\"],\n        ...spec.badge?.[tone2]\n      }\n    }), {})\n  };\n}\nfunction resolveInputColorTokens(inputTokens) {\n  const tokens = {};\n  for (const mode of THEME_COLOR_INPUT_MODES)\n    tokens[mode] = resolveInputModeColorTokens(inputTokens, mode);\n  return tokens;\n}\nfunction resolveInputModeColorTokens(inputTokens, mode) {\n  const states = {};\n  for (const state of THEME_COLOR_INPUT_STATES)\n    states[state] = resolveInputStateColorTokens(inputTokens, mode, state);\n  return states;\n}\nfunction resolveInputStateColorTokens(inputTokens, mode, state) {\n  const spec = merge(inputTokens?.input?.[\"*\"]?.[\"*\"], inputTokens?.input?.[mode]?.[\"*\"], inputTokens?.input?.[\"*\"]?.[state], inputTokens?.input?.[mode]?.[state]), hue = spec._hue || inputTokens?.input?.[mode]?._hue;\n  return {\n    ...spec,\n    _hue: hue\n  };\n}\nfunction resolveSelectableColorTokens(inputTokens) {\n  const tokens = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    tokens[tone] = resolveSelectableToneColorTokens(inputTokens, tone);\n  return tokens;\n}\nfunction resolveSelectableToneColorTokens(inputTokens, tone) {\n  const states = {\n    _hue: inputTokens?.selectable?.[tone]?._hue || inputTokens?.base?.[tone]?._hue\n  };\n  for (const state of THEME_COLOR_STATES)\n    states[state] = resolveSelectableStateColorTokens(inputTokens, tone, state);\n  return states;\n}\nfunction resolveSelectableStateColorTokens(inputTokens, tone, state) {\n  const spec = merge(inputTokens?.selectable?.[\"*\"]?.[\"*\"], inputTokens?.selectable?.[tone]?.[\"*\"], inputTokens?.selectable?.[\"*\"]?.[state], inputTokens?.selectable?.[tone]?.[state]), hue = spec._hue || inputTokens?.base?.[tone]?._hue;\n  return {\n    ...spec,\n    _hue: hue,\n    avatar: _sanity_color__WEBPACK_IMPORTED_MODULE_0__.COLOR_HUES.reduce((acc, hue2) => ({\n      ...acc,\n      [hue2]: merge({\n        _hue: hue2\n      }, spec.avatar?.[\"*\"], spec.avatar?.[hue2])\n    }), {}),\n    badge: THEME_COLOR_STATE_TONES.reduce((acc, tone2) => ({\n      ...acc,\n      [tone2]: {\n        _hue: inputTokens?.base?.[tone2]?._hue || hue,\n        ...spec.badge?.[\"*\"],\n        ...spec.badge?.[tone2]\n      }\n    }), {})\n  };\n}\nfunction buildColorTheme(config) {\n  const resolvedConfig = {\n    color: resolveColorTokens(config?.color)\n  };\n  return {\n    light: buildColorScheme({\n      scheme: \"light\"\n    }, resolvedConfig),\n    dark: buildColorScheme({\n      scheme: \"dark\"\n    }, resolvedConfig)\n  };\n}\nfunction buildColorScheme(options, config) {\n  const {\n    scheme\n  } = options, colorScheme = {};\n  for (const tone of THEME_COLOR_CARD_TONES)\n    colorScheme[tone] = buildCardColorTheme({\n      scheme,\n      tone\n    }, config);\n  return colorScheme;\n}\nfunction buildCardColorTheme(options, config) {\n  const {\n    scheme,\n    tone\n  } = options, tokens = config?.color?.base?.[tone], context = {\n    hue: tokens?._hue || \"gray\",\n    scheme\n  };\n  return {\n    _blend: (tokens?._blend || [\"multiply\", \"screen\"])[scheme === \"light\" ? 0 : 1],\n    _dark: scheme === \"dark\",\n    accent: {\n      fg: resolveColorTokenValue(context, tokens?.accent?.fg)\n    },\n    avatar: buildAvatarColorTheme({\n      scheme\n    }, tokens),\n    backdrop: resolveColorTokenValue(context, tokens?.backdrop),\n    badge: buildBadgeColorTheme(tokens?.badge, {\n      scheme\n    }, config),\n    bg: resolveColorTokenValue(context, tokens?.bg),\n    border: resolveColorTokenValue(context, tokens?.border),\n    button: buildButtonColorTheme({\n      scheme,\n      tone\n    }, config),\n    code: {\n      bg: resolveColorTokenValue(context, tokens?.code?.bg),\n      fg: resolveColorTokenValue(context, tokens?.code?.fg)\n    },\n    fg: resolveColorTokenValue(context, tokens?.fg),\n    focusRing: resolveColorTokenValue(context, tokens?.focusRing),\n    icon: resolveColorTokenValue(context, tokens?.icon),\n    input: buildInputColorTheme({\n      scheme,\n      tone\n    }, config),\n    kbd: {\n      bg: resolveColorTokenValue(context, tokens?.kbd?.bg),\n      fg: resolveColorTokenValue(context, tokens?.kbd?.fg),\n      border: resolveColorTokenValue(context, tokens?.kbd?.border)\n    },\n    link: {\n      fg: resolveColorTokenValue(context, tokens?.link?.fg)\n    },\n    muted: {\n      bg: resolveColorTokenValue(context, tokens?.muted?.bg),\n      fg: resolveColorTokenValue(context, tokens?.muted?.fg)\n    },\n    selectable: buildSelectableColorTheme({\n      scheme,\n      tone\n    }, config),\n    shadow: buildShadowColorTheme({\n      scheme,\n      tone\n    }, config),\n    skeleton: {\n      from: resolveColorTokenValue(context, tokens?.skeleton?.from),\n      to: resolveColorTokenValue(context, tokens?.skeleton?.to)\n    },\n    syntax: buildSyntaxColorTheme({\n      scheme\n    }, config)\n  };\n}\nfunction buildShadowColorTheme(options, config) {\n  const {\n    scheme,\n    tone\n  } = options, tokens = config?.color?.base?.[tone], context = {\n    hue: tokens?._hue || \"gray\",\n    scheme\n  };\n  return {\n    outline: resolveColorTokenValue(context, tokens?.shadow?.outline),\n    umbra: resolveColorTokenValue(context, tokens?.shadow?.umbra),\n    penumbra: resolveColorTokenValue(context, tokens?.shadow?.penumbra),\n    ambient: resolveColorTokenValue(context, tokens?.shadow?.ambient)\n  };\n}\nfunction buildAvatarColorTheme(options, stateTokens) {\n  const {\n    scheme\n  } = options;\n  return {\n    gray: _buildAvatarColorTheme({\n      color: \"gray\",\n      scheme\n    }, stateTokens),\n    blue: _buildAvatarColorTheme({\n      color: \"blue\",\n      scheme\n    }, stateTokens),\n    purple: _buildAvatarColorTheme({\n      color: \"purple\",\n      scheme\n    }, stateTokens),\n    magenta: _buildAvatarColorTheme({\n      color: \"magenta\",\n      scheme\n    }, stateTokens),\n    red: _buildAvatarColorTheme({\n      color: \"red\",\n      scheme\n    }, stateTokens),\n    orange: _buildAvatarColorTheme({\n      color: \"orange\",\n      scheme\n    }, stateTokens),\n    yellow: _buildAvatarColorTheme({\n      color: \"yellow\",\n      scheme\n    }, stateTokens),\n    green: _buildAvatarColorTheme({\n      color: \"green\",\n      scheme\n    }, stateTokens),\n    cyan: _buildAvatarColorTheme({\n      color: \"cyan\",\n      scheme\n    }, stateTokens)\n  };\n}\nfunction _buildAvatarColorTheme(options, stateTokens) {\n  const {\n    color: color2,\n    scheme\n  } = options, tokens = stateTokens?.avatar?.[color2], context = {\n    hue: tokens?._hue || \"gray\",\n    scheme\n  };\n  return {\n    _blend: (tokens?._blend || [\"screen\", \"multiply\"])[scheme === \"light\" ? 0 : 1],\n    bg: resolveColorTokenValue(context, tokens?.bg),\n    fg: resolveColorTokenValue(context, tokens?.fg)\n  };\n}\nfunction buildBadgeColorTheme(tokens, options, config) {\n  const {\n    scheme\n  } = options, colorBadge = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    colorBadge[tone] = _buildBadgeColorTheme(tokens, {\n      scheme,\n      tone\n    }, config);\n  return colorBadge;\n}\nfunction _buildBadgeColorTheme(parentTokens, options, config) {\n  const {\n    scheme,\n    tone\n  } = options, tokens = parentTokens?.[tone], context = {\n    hue: tokens?._hue || config?.color?.base?.[tone]?._hue || \"gray\",\n    scheme\n  };\n  return {\n    bg: resolveColorTokenValue(context, tokens?.bg),\n    fg: resolveColorTokenValue(context, tokens?.fg),\n    dot: resolveColorTokenValue(context, tokens?.dot),\n    icon: resolveColorTokenValue(context, tokens?.icon)\n  };\n}\nfunction buildButtonColorTheme(options, config) {\n  const {\n    scheme,\n    tone: cardTone\n  } = options, modes = {};\n  for (const mode of THEME_COLOR_BUTTON_MODES)\n    modes[mode] = buildButtonTonesColorTheme({\n      cardTone,\n      scheme,\n      mode\n    }, config);\n  return modes;\n}\nfunction buildButtonTonesColorTheme(options, config) {\n  const {\n    cardTone,\n    mode,\n    scheme\n  } = options, tones2 = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    tones2[tone] = buildButtonStatesColorTheme({\n      cardTone,\n      mode,\n      scheme,\n      tone\n    }, config);\n  return tones2;\n}\nfunction buildButtonStatesColorTheme(options, config) {\n  const {\n    cardTone,\n    mode,\n    scheme,\n    tone\n  } = options, states = {};\n  for (const state of THEME_COLOR_STATES)\n    states[state] = buildButtonStateColorTheme({\n      cardTone,\n      mode,\n      tone,\n      scheme,\n      state\n    }, config);\n  return states;\n}\nfunction buildButtonStateColorTheme(options, config) {\n  const {\n    cardTone,\n    mode,\n    tone,\n    scheme,\n    state\n  } = options, cardTokens = config?.color?.base?.[cardTone], tokens = config?.color?.button?.[mode]?.[tone]?.[state], hue = tokens?._hue || cardTokens?._hue || \"gray\", blendMode = tokens?._blend || [\"screen\", \"multiply\"], context = {\n    hue,\n    scheme\n  };\n  return {\n    _blend: blendMode[scheme === \"light\" ? 0 : 1],\n    accent: {\n      fg: resolveColorTokenValue(context, tokens?.accent?.fg)\n    },\n    avatar: buildAvatarColorTheme({\n      scheme\n    }, tokens),\n    badge: buildBadgeColorTheme(tokens?.badge, {\n      scheme\n    }, config),\n    bg: resolveColorTokenValue(context, tokens?.bg),\n    border: resolveColorTokenValue(context, tokens?.border),\n    code: {\n      bg: resolveColorTokenValue(context, tokens?.code?.bg),\n      fg: resolveColorTokenValue(context, tokens?.code?.fg)\n    },\n    fg: resolveColorTokenValue(context, tokens?.fg),\n    icon: resolveColorTokenValue(context, tokens?.icon),\n    muted: {\n      bg: resolveColorTokenValue(context, tokens?.muted?.bg),\n      fg: resolveColorTokenValue(context, tokens?.muted?.fg)\n    },\n    kbd: {\n      bg: resolveColorTokenValue(context, tokens?.kbd?.bg),\n      fg: resolveColorTokenValue(context, tokens?.kbd?.fg),\n      border: resolveColorTokenValue(context, tokens?.kbd?.border)\n    },\n    link: {\n      fg: resolveColorTokenValue(context, tokens?.link?.fg)\n    },\n    skeleton: {\n      from: resolveColorTokenValue(context, tokens?.skeleton?.from),\n      to: resolveColorTokenValue(context, tokens?.skeleton?.to)\n    }\n  };\n}\nfunction buildInputColorTheme(options, config) {\n  const {\n    scheme,\n    tone\n  } = options;\n  return {\n    default: buildInputStatesColorTheme({\n      mode: \"default\",\n      scheme,\n      tone\n    }, config),\n    invalid: buildInputStatesColorTheme({\n      mode: \"invalid\",\n      scheme,\n      tone\n    }, config)\n  };\n}\nfunction buildInputStatesColorTheme(options, config) {\n  const {\n    mode,\n    scheme,\n    tone\n  } = options;\n  return {\n    enabled: buildInputStateColorTheme({\n      mode,\n      scheme,\n      state: \"enabled\",\n      cardTone: tone\n    }, config),\n    hovered: buildInputStateColorTheme({\n      mode,\n      scheme,\n      state: \"hovered\",\n      cardTone: tone\n    }, config),\n    readOnly: buildInputStateColorTheme({\n      mode,\n      scheme,\n      state: \"readOnly\",\n      cardTone: tone\n    }, config),\n    disabled: buildInputStateColorTheme({\n      mode,\n      scheme,\n      state: \"disabled\",\n      cardTone: tone\n    }, config)\n  };\n}\nfunction buildInputStateColorTheme(options, config) {\n  const {\n    cardTone,\n    mode,\n    scheme,\n    state\n  } = options, cardTokens = config?.color?.base?.[cardTone], tokens = config?.color?.input?.[mode]?.[state], hue = tokens?._hue || cardTokens?._hue || \"gray\", blendMode = tokens?._blend || [\"screen\", \"multiply\"], context = {\n    hue,\n    scheme\n  };\n  return {\n    _blend: blendMode[scheme === \"light\" ? 0 : 1],\n    bg: resolveColorTokenValue(context, tokens?.bg),\n    border: resolveColorTokenValue(context, tokens?.border),\n    fg: resolveColorTokenValue(context, tokens?.fg),\n    muted: {\n      bg: resolveColorTokenValue(context, tokens?.muted?.bg)\n    },\n    placeholder: resolveColorTokenValue(context, tokens?.placeholder)\n  };\n}\nfunction buildSelectableColorTheme(options, config) {\n  const {\n    scheme,\n    tone: cardTone\n  } = options, tones2 = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    tones2[tone] = buildSelectableStatesColorTheme({\n      cardTone,\n      scheme,\n      tone\n    }, config);\n  return tones2;\n}\nfunction buildSelectableStatesColorTheme(options, config) {\n  const {\n    cardTone,\n    scheme,\n    tone\n  } = options, states = {};\n  for (const state of THEME_COLOR_STATES)\n    states[state] = buildSelectableStateColorTheme({\n      cardTone,\n      tone,\n      scheme,\n      state\n    }, config);\n  return states;\n}\nfunction buildSelectableStateColorTheme(options, config) {\n  const {\n    cardTone,\n    scheme,\n    state,\n    tone\n  } = options, cardTokens = config?.color?.base?.[cardTone], tokens = config?.color?.selectable?.[tone]?.[state], hue = tokens?._hue || cardTokens?._hue || \"gray\", blendMode = tokens?._blend || [\"screen\", \"multiply\"], context = {\n    hue,\n    scheme\n  };\n  return {\n    _blend: blendMode[scheme === \"light\" ? 0 : 1],\n    accent: {\n      fg: resolveColorTokenValue(context, tokens?.accent?.fg)\n    },\n    avatar: buildAvatarColorTheme({\n      scheme\n    }, tokens),\n    badge: buildBadgeColorTheme(tokens?.badge, {\n      scheme\n    }, config),\n    bg: resolveColorTokenValue(context, tokens?.bg),\n    border: resolveColorTokenValue(context, tokens?.border),\n    code: {\n      bg: resolveColorTokenValue(context, tokens?.code?.bg),\n      fg: resolveColorTokenValue(context, tokens?.code?.fg)\n    },\n    fg: resolveColorTokenValue(context, tokens?.fg),\n    icon: resolveColorTokenValue(context, tokens?.icon),\n    muted: {\n      bg: resolveColorTokenValue(context, tokens?.muted?.bg),\n      fg: resolveColorTokenValue(context, tokens?.muted?.fg)\n    },\n    kbd: {\n      bg: resolveColorTokenValue(context, tokens?.kbd?.bg),\n      fg: resolveColorTokenValue(context, tokens?.kbd?.fg),\n      border: resolveColorTokenValue(context, tokens?.kbd?.border)\n    },\n    link: {\n      fg: resolveColorTokenValue(context, tokens?.link?.fg)\n    },\n    skeleton: {\n      from: resolveColorTokenValue(context, tokens?.skeleton?.from),\n      to: resolveColorTokenValue(context, tokens?.skeleton?.to)\n    }\n  };\n}\nfunction buildSyntaxColorTheme(options, config) {\n  const {\n    scheme\n  } = options, tokens = config?.color?.syntax, context = {\n    hue: \"gray\",\n    scheme\n  };\n  return {\n    atrule: resolveColorTokenValue(context, tokens?.atrule),\n    attrName: resolveColorTokenValue(context, tokens?.attrName),\n    attrValue: resolveColorTokenValue(context, tokens?.attrValue),\n    attribute: resolveColorTokenValue(context, tokens?.attribute),\n    boolean: resolveColorTokenValue(context, tokens?.boolean),\n    builtin: resolveColorTokenValue(context, tokens?.builtin),\n    cdata: resolveColorTokenValue(context, tokens?.cdata),\n    char: resolveColorTokenValue(context, tokens?.char),\n    class: resolveColorTokenValue(context, tokens?.class),\n    className: resolveColorTokenValue(context, tokens?.className),\n    comment: resolveColorTokenValue(context, tokens?.comment),\n    constant: resolveColorTokenValue(context, tokens?.constant),\n    deleted: resolveColorTokenValue(context, tokens?.deleted),\n    doctype: resolveColorTokenValue(context, tokens?.doctype),\n    entity: resolveColorTokenValue(context, tokens?.entity),\n    function: resolveColorTokenValue(context, tokens?.function),\n    hexcode: resolveColorTokenValue(context, tokens?.hexcode),\n    id: resolveColorTokenValue(context, tokens?.id),\n    important: resolveColorTokenValue(context, tokens?.important),\n    inserted: resolveColorTokenValue(context, tokens?.inserted),\n    keyword: resolveColorTokenValue(context, tokens?.keyword),\n    number: resolveColorTokenValue(context, tokens?.number),\n    operator: resolveColorTokenValue(context, tokens?.operator),\n    prolog: resolveColorTokenValue(context, tokens?.prolog),\n    property: resolveColorTokenValue(context, tokens?.property),\n    pseudoClass: resolveColorTokenValue(context, tokens?.pseudoClass),\n    pseudoElement: resolveColorTokenValue(context, tokens?.pseudoElement),\n    punctuation: resolveColorTokenValue(context, tokens?.punctuation),\n    regex: resolveColorTokenValue(context, tokens?.regex),\n    selector: resolveColorTokenValue(context, tokens?.selector),\n    string: resolveColorTokenValue(context, tokens?.string),\n    symbol: resolveColorTokenValue(context, tokens?.symbol),\n    tag: resolveColorTokenValue(context, tokens?.tag),\n    unit: resolveColorTokenValue(context, tokens?.unit),\n    url: resolveColorTokenValue(context, tokens?.url),\n    variable: resolveColorTokenValue(context, tokens?.variable)\n  };\n}\nconst defaultColorPalette = _sanity_color__WEBPACK_IMPORTED_MODULE_0__.color;\nfunction mixChannel(b, s, weight) {\n  const delta = (s - b) * weight;\n  return b + delta;\n}\nfunction mix(b, s, weight) {\n  return {\n    r: mixChannel(b.r, s.r, weight),\n    g: mixChannel(b.g, s.g, weight),\n    b: mixChannel(b.b, s.b, weight)\n  };\n}\nfunction multiplyChannel(b, s) {\n  return b * s;\n}\nfunction multiply(b, s) {\n  return {\n    r: multiplyChannel(b.r / 255, s.r / 255) * 255,\n    g: multiplyChannel(b.g / 255, s.g / 255) * 255,\n    b: multiplyChannel(b.b / 255, s.b / 255) * 255\n  };\n}\nfunction screenChannel(b, s) {\n  return b + s - b * s;\n}\nfunction screen(b, s) {\n  return {\n    r: screenChannel(b.r / 255, s.r / 255) * 255,\n    g: screenChannel(b.g / 255, s.g / 255) * 255,\n    b: screenChannel(b.b / 255, s.b / 255) * 255\n  };\n}\nfunction lerp(x, y, a) {\n  return x * (1 - a) + y * a;\n}\nfunction invlerp(x, y, a) {\n  return clamp((a - x) / (y - x));\n}\nfunction clamp(a, min = 0, max = 1) {\n  return Math.min(max, Math.max(min, a));\n}\nfunction range(x1, y1, x2, y2, a) {\n  return lerp(x2, y2, invlerp(x1, y1, a));\n}\nfunction round(value) {\n  return Math.round(value);\n}\nfunction hexToRgb(hex) {\n  if (hex.length === 4) {\n    const hexR = hex.slice(1, 2), hexG = hex.slice(2, 3), hexB = hex.slice(3, 4);\n    return {\n      r: parseInt(hexR + hexR, 16),\n      g: parseInt(hexG + hexG, 16),\n      b: parseInt(hexB + hexB, 16)\n    };\n  }\n  return {\n    r: parseInt(hex.slice(1, 3), 16),\n    g: parseInt(hex.slice(3, 5), 16),\n    b: parseInt(hex.slice(5, 7), 16)\n  };\n}\nfunction rgbaToRGBA(rgba2) {\n  const values = rgba2.replace(/rgba\\(|\\)/g, \"\").split(\",\");\n  return {\n    r: parseInt(values[0]),\n    g: parseInt(values[1]),\n    b: parseInt(values[2]),\n    a: parseFloat(values[3])\n  };\n}\nfunction rgbToHex(color2) {\n  const r = round(clamp(Math.round(color2.r), 0, 255)), g = round(clamp(Math.round(color2.g), 0, 255)), b = round(clamp(Math.round(color2.b), 0, 255));\n  return \"a\" in color2 ? `rgba(${r},${g},${b},${color2.a})` : \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\nfunction rgbToHsl({\n  r,\n  g,\n  b\n}) {\n  r /= 255, g /= 255, b /= 255;\n  const cmin = Math.min(r, g, b), cmax = Math.max(r, g, b), delta = cmax - cmin;\n  let h = 0, s = 0, l = 0;\n  return delta == 0 ? h = 0 : cmax == r ? h = (g - b) / delta % 6 : cmax == g ? h = (b - r) / delta + 2 : h = (r - g) / delta + 4, h = Math.round(h * 60), h < 0 && (h += 360), l = (cmax + cmin) / 2, s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1)), s = +(s * 100).toFixed(1), l = +(l * 100).toFixed(1), {\n    h,\n    s,\n    l\n  };\n}\nfunction hslToRgb(hsl) {\n  const s = hsl.s / 100, l = hsl.l / 100, c = (1 - Math.abs(2 * l - 1)) * s, x = c * (1 - Math.abs(hsl.h / 60 % 2 - 1)), m = l - c / 2;\n  let r = 0, g = 0, b = 0;\n  return 0 <= hsl.h && hsl.h < 60 ? (r = c, g = x, b = 0) : 60 <= hsl.h && hsl.h < 120 ? (r = x, g = c, b = 0) : 120 <= hsl.h && hsl.h < 180 ? (r = 0, g = c, b = x) : 180 <= hsl.h && hsl.h < 240 ? (r = 0, g = x, b = c) : 240 <= hsl.h && hsl.h < 300 ? (r = x, g = 0, b = c) : 300 <= hsl.h && hsl.h < 360 && (r = c, g = 0, b = x), {\n    r: Math.round((r + m) * 255),\n    g: Math.round((g + m) * 255),\n    b: Math.round((b + m) * 255)\n  };\n}\nconst HEX_CHARS = \"0123456789ABCDEFabcdef\", HSL_RE = /hsl\\(\\s*(\\d+)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*\\)/i;\nfunction isHexChars(str) {\n  for (const c of str)\n    if (HEX_CHARS.indexOf(c) === -1)\n      return !1;\n  return !0;\n}\nfunction isHex(str) {\n  return str[0] !== \"#\" || !(str.length === 4 || str.length === 7) ? !1 : isHexChars(str.slice(1));\n}\nfunction parseHsl(str) {\n  const res = HSL_RE.exec(str);\n  if (!res)\n    throw new Error(`parseHsl: string is not a HSL color: \"${str}\"`);\n  return {\n    h: parseInt(res[1]),\n    s: parseFloat(res[3]),\n    l: parseFloat(res[5])\n  };\n}\nfunction parseColor(color2) {\n  if (!color2) return {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  if (typeof color2 != \"string\")\n    throw new Error(\"parseColor: expected a string\");\n  if (isHex(color2))\n    return hexToRgb(color2);\n  if (color2.startsWith(\"hsl(\"))\n    return hslToRgb(parseHsl(color2));\n  if (color2.startsWith(\"rgba(\"))\n    return rgbaToRGBA(color2);\n  throw new Error(`parseColor: unexpected color format: \"${color2}\"`);\n}\nfunction getContrastRatio(bg, fg) {\n  const rgb1 = parseColor(bg), rgb2 = parseColor(fg), c1 = rgb_lrgb(rgb1), c2 = rgb_lrgb(rgb2), l1 = lrgb_luminance(c1), l2 = lrgb_luminance(c2);\n  return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n}\nfunction rgb_lrgb({\n  r,\n  g,\n  b\n}) {\n  return [rgb_lrgb1(r / 255), rgb_lrgb1(g / 255), rgb_lrgb1(b / 255)];\n}\nfunction rgb_lrgb1(v) {\n  return v <= 0.04045 ? v / 12.92 : ((v + 0.055) / 1.055) ** 2.4;\n}\nfunction lrgb_luminance([r, g, b]) {\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}\nfunction rgba(color2, a) {\n  const rgb = parseColor(color2);\n  return `rgba(${rgb.r},${rgb.g},${rgb.b},${a})`;\n}\nconst RGB_RANGE = [0, 255];\nfunction mixThemeColor(value, options) {\n  const {\n    blendMode\n  } = options, color2 = parseColor(value), black2 = parseColor(options.black), white2 = parseColor(options.white), bg = options.bg ? parseColor(options.bg) : blendMode === \"multiply\" ? white2 : black2, paletteRange = {\n    r: [black2.r, white2.r],\n    g: [black2.g, white2.g],\n    b: [black2.b, white2.b]\n  }, convertedBgColor = {\n    r: clamp(range(...paletteRange.r, ...RGB_RANGE, bg.r), ...RGB_RANGE),\n    g: clamp(range(...paletteRange.g, ...RGB_RANGE, bg.g), ...RGB_RANGE),\n    b: clamp(range(...paletteRange.b, ...RGB_RANGE, bg.b), ...RGB_RANGE)\n  }, convertedColor = {\n    r: clamp(range(...paletteRange.r, ...RGB_RANGE, color2.r), ...RGB_RANGE),\n    g: clamp(range(...paletteRange.g, ...RGB_RANGE, color2.g), ...RGB_RANGE),\n    b: clamp(range(...paletteRange.b, ...RGB_RANGE, color2.b), ...RGB_RANGE)\n  }, resultColor = blendMode === \"multiply\" ? multiply(convertedBgColor, convertedColor) : screen(convertedBgColor, convertedColor), v = {\n    r: clamp(range(...RGB_RANGE, ...paletteRange.r, resultColor.r), ...paletteRange.r),\n    g: clamp(range(...RGB_RANGE, ...paletteRange.g, resultColor.g), ...paletteRange.g),\n    b: clamp(range(...RGB_RANGE, ...paletteRange.b, resultColor.b), ...paletteRange.b)\n  };\n  return rgbToHex(v);\n}\nfunction renderColorValue(str, options) {\n  const {\n    bg,\n    blendMode,\n    colorPalette\n  } = options;\n  if (bg === \"white\")\n    throw new Error(\"Cannot blend with white background\");\n  const node = parseTokenValue(str);\n  if (!node || node.type !== \"color\")\n    throw new Error(`Invalid color token value: ${str}`);\n  let hex = \"\";\n  if (node.key === \"black\" && (hex = renderColorHex(colorPalette.black)), node.key === \"white\" && (hex = renderColorHex(colorPalette.white)), node.hue && node.tint && (hex = renderColorHex(colorPalette[node.hue][node.tint])), !hex)\n    throw new Error(`Invalid color token value: ${str}`);\n  const hexBeforeMix = hex, mixOptions = {\n    blendMode,\n    bg,\n    black: renderColorHex(colorPalette.black),\n    // opacity: node.opacity,\n    white: renderColorHex(colorPalette.white)\n  };\n  try {\n    if (hex = mixThemeColor(hex, mixOptions), bg && node.mix !== void 0) {\n      const from = hexToRgb(bg), to = hexToRgb(hex);\n      hex = rgbToHex(mix(from, to, node.mix));\n    }\n  } catch (err) {\n    throw console.warn(\"could not blend\", hex, mixOptions), err;\n  }\n  return hex === \"#aN\" && (console.warn(`invalid color token value: ${str}`), hex = hexBeforeMix), node.opacity !== void 0 && (hex = rgba(hex, node.opacity)), hex;\n}\nfunction renderColorHex(color2) {\n  return typeof color2 == \"string\" ? color2 : color2.hex;\n}\nfunction renderThemeColorSchemes(value, config) {\n  const colorPalette = config?.palette ?? defaultColorPalette;\n  return {\n    light: renderThemeColorScheme(colorPalette, value.light),\n    dark: renderThemeColorScheme(colorPalette, value.dark)\n  };\n}\nfunction renderThemeColorScheme(colorPalette, value) {\n  const toneEntries = Object.entries(value), [, transparentTone] = toneEntries.find(([k]) => k === \"transparent\"), [, defaultTone] = toneEntries.find(([k]) => k === \"default\"), renderedTransparentTone = renderThemeColor(transparentTone, {\n    colorPalette\n  }), renderedDefaultTone = renderThemeColor(defaultTone, {\n    colorPalette\n  }), bg = renderedDefaultTone.bg;\n  if (bg === \"white\")\n    throw new Error(\"Cannot blend with white background\");\n  return Object.fromEntries([[\"transparent\", renderedTransparentTone], [\"default\", renderedDefaultTone], ...toneEntries.filter(([k]) => k !== \"default\" && k !== \"transparent\").map(([k, v]) => [k, renderThemeColor(v, {\n    bg,\n    colorPalette\n  })])]);\n}\nfunction renderThemeColor(value, options) {\n  const {\n    colorPalette,\n    bg\n  } = options, blendMode = value._blend || \"multiply\", baseBg = renderColorValue(value.bg, {\n    colorPalette,\n    bg,\n    blendMode\n  }), colorOptions = {\n    colorPalette,\n    bg: baseBg,\n    blendMode\n  }, button = renderThemeColorButton(value.button, {\n    baseBg,\n    blendMode,\n    colorPalette\n  }), selectable = renderThemeColorSelectable(value.selectable, {\n    colorPalette,\n    baseBg,\n    blendMode\n  }), shadow = {\n    outline: renderColorValue(value.shadow.outline, colorOptions),\n    umbra: renderColorValue(value.shadow.umbra, {\n      ...colorOptions,\n      bg: void 0,\n      colorPalette: {\n        ...colorPalette,\n        black: \"#000000\"\n      }\n    }),\n    penumbra: renderColorValue(value.shadow.penumbra, {\n      ...colorOptions,\n      bg: void 0,\n      colorPalette: {\n        ...colorPalette,\n        black: \"#000000\"\n      }\n    }),\n    ambient: renderColorValue(value.shadow.ambient, {\n      ...colorOptions,\n      bg: void 0,\n      colorPalette: {\n        ...colorPalette,\n        black: \"#000000\"\n      }\n    })\n  };\n  return {\n    _blend: blendMode,\n    _dark: value._dark,\n    accent: {\n      fg: renderColorValue(value.accent.fg, colorOptions)\n    },\n    avatar: renderThemeColorAvatar(value.avatar, {\n      baseBg,\n      colorPalette,\n      blendMode\n    }),\n    backdrop: renderColorValue(value.backdrop, colorOptions),\n    badge: renderThemeColorBadge(value.badge, {\n      baseBg,\n      colorPalette,\n      blendMode\n    }),\n    bg: baseBg,\n    border: renderColorValue(value.border, colorOptions),\n    button,\n    code: {\n      bg: renderColorValue(value.code.bg, colorOptions),\n      fg: renderColorValue(value.code.fg, colorOptions)\n    },\n    fg: renderColorValue(value.fg, colorOptions),\n    focusRing: renderColorValue(value.focusRing, colorOptions),\n    icon: renderColorValue(value.icon, colorOptions),\n    input: renderThemeColorInput(value.input, {\n      baseBg,\n      colorPalette,\n      blendMode\n    }),\n    kbd: renderThemeColorKBD(value.kbd, {\n      baseBg,\n      colorPalette,\n      blendMode\n    }),\n    link: {\n      fg: renderColorValue(value.link.fg, colorOptions)\n    },\n    muted: {\n      bg: renderColorValue(value.muted.bg, colorOptions),\n      fg: renderColorValue(value.muted.fg, colorOptions)\n    },\n    shadow,\n    skeleton: {\n      from: renderColorValue(value.skeleton.from, colorOptions),\n      to: renderColorValue(value.skeleton.to, colorOptions)\n    },\n    syntax: renderSyntaxColorTheme(value.syntax, {\n      baseBg,\n      colorPalette,\n      blendMode\n    }),\n    selectable\n  };\n}\nfunction renderThemeColorKBD(value, options) {\n  const {\n    baseBg,\n    blendMode,\n    colorPalette\n  } = options, rootOptions = {\n    bg: baseBg,\n    blendMode,\n    colorPalette\n  }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {\n    bg,\n    blendMode,\n    colorPalette\n  };\n  return {\n    bg,\n    fg: renderColorValue(value.fg, colorOptions),\n    border: renderColorValue(value.border, colorOptions)\n  };\n}\nfunction renderThemeColorAvatar(value, options) {\n  const colorAvatar = {};\n  for (const hue of _sanity_color__WEBPACK_IMPORTED_MODULE_0__.COLOR_HUES)\n    colorAvatar[hue] = renderThemeColorAvatarColor(value[hue], options);\n  return colorAvatar;\n}\nfunction renderThemeColorAvatarColor(value, options) {\n  const {\n    baseBg,\n    blendMode: rootBlendMode,\n    colorPalette\n  } = options, blendMode = value._blend || \"multiply\", rootOptions = {\n    bg: baseBg,\n    blendMode: rootBlendMode,\n    colorPalette\n  }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {\n    bg,\n    blendMode,\n    colorPalette\n  };\n  return {\n    _blend: blendMode,\n    bg,\n    fg: renderColorValue(value.fg, colorOptions)\n  };\n}\nfunction renderThemeColorBadge(value, options) {\n  const colorBadge = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    colorBadge[tone] = renderThemeColorBadgeColor(value[tone], options);\n  return colorBadge;\n}\nfunction renderThemeColorBadgeColor(value, options) {\n  const {\n    baseBg,\n    blendMode: rootBlendMode,\n    colorPalette\n  } = options, blendMode = rootBlendMode, rootOptions = {\n    bg: baseBg,\n    blendMode: rootBlendMode,\n    colorPalette\n  }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {\n    bg,\n    blendMode,\n    colorPalette\n  };\n  return {\n    bg,\n    dot: renderColorValue(value.dot, colorOptions),\n    fg: renderColorValue(value.fg, colorOptions),\n    icon: renderColorValue(value.icon, colorOptions)\n  };\n}\nfunction renderThemeColorButton(value, options) {\n  return {\n    default: renderThemeColorButtonTones(value.default, options),\n    ghost: renderThemeColorButtonTones(value.ghost, options),\n    bleed: renderThemeColorButtonTones(value.bleed, options)\n  };\n}\nfunction renderThemeColorButtonTones(value, options) {\n  const colorButtonMode = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    colorButtonMode[tone] = renderThemeColorButtonStates(value[tone], options);\n  return colorButtonMode;\n}\nfunction renderThemeColorButtonStates(value, options) {\n  return {\n    enabled: renderThemeColorState(value.enabled, options),\n    hovered: renderThemeColorState(value.hovered, options),\n    pressed: renderThemeColorState(value.pressed, options),\n    selected: renderThemeColorState(value.selected, options),\n    disabled: renderThemeColorState(value.disabled, options)\n  };\n}\nfunction renderThemeColorState(value, options) {\n  const {\n    baseBg,\n    blendMode: rootBlendMode,\n    colorPalette\n  } = options, blendMode = value._blend || \"multiply\", rootOptions = {\n    bg: baseBg,\n    blendMode: rootBlendMode,\n    colorPalette\n  }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {\n    bg,\n    blendMode,\n    colorPalette\n  };\n  return {\n    _blend: blendMode,\n    accent: {\n      fg: renderColorValue(value.accent.fg, colorOptions)\n    },\n    avatar: renderThemeColorAvatar(value.avatar, {\n      baseBg: bg,\n      colorPalette,\n      blendMode\n    }),\n    badge: renderThemeColorBadge(value.badge, {\n      baseBg: bg,\n      colorPalette,\n      blendMode\n    }),\n    bg,\n    border: renderColorValue(value.border, colorOptions),\n    code: {\n      bg: renderColorValue(value.code.bg, colorOptions),\n      fg: renderColorValue(value.code.fg, colorOptions)\n    },\n    fg: renderColorValue(value.fg, colorOptions),\n    icon: renderColorValue(value.icon, colorOptions),\n    link: {\n      fg: renderColorValue(value.link.fg, colorOptions)\n    },\n    muted: {\n      bg: renderColorValue(value.muted.bg, colorOptions),\n      fg: renderColorValue(value.muted.fg, colorOptions)\n    },\n    kbd: {\n      bg: renderColorValue(value.kbd.bg, colorOptions),\n      fg: renderColorValue(value.kbd.fg, colorOptions),\n      border: renderColorValue(value.kbd.border, colorOptions)\n    },\n    skeleton: {\n      from: renderColorValue(value.skeleton?.from, colorOptions),\n      to: renderColorValue(value.skeleton?.to, colorOptions)\n    }\n  };\n}\nfunction renderThemeColorInput(value, options) {\n  return {\n    default: renderInputStatesColorTheme(value.default, options),\n    invalid: renderInputStatesColorTheme(value.invalid, options)\n  };\n}\nfunction renderInputStatesColorTheme(value, options) {\n  return {\n    enabled: renderInputStateColorTheme(value.enabled, options),\n    hovered: renderInputStateColorTheme(value.hovered, options),\n    readOnly: renderInputStateColorTheme(value.readOnly, options),\n    disabled: renderInputStateColorTheme(value.disabled, options)\n  };\n}\nfunction renderInputStateColorTheme(value, options) {\n  const {\n    baseBg,\n    blendMode: rootBlendMode,\n    colorPalette\n  } = options, blendMode = value._blend || \"multiply\", rootOptions = {\n    colorPalette,\n    bg: baseBg,\n    blendMode: rootBlendMode\n  }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {\n    colorPalette,\n    bg,\n    blendMode\n  };\n  return {\n    _blend: blendMode,\n    bg,\n    border: renderColorValue(value.border, colorOptions),\n    fg: renderColorValue(value.fg, colorOptions),\n    muted: {\n      bg: renderColorValue(value.muted.bg, colorOptions)\n    },\n    placeholder: renderColorValue(value.placeholder, colorOptions)\n  };\n}\nfunction renderThemeColorSelectable(value, options) {\n  const colorSelectable = {};\n  for (const tone of THEME_COLOR_STATE_TONES)\n    colorSelectable[tone] = renderThemeColorSelectableStates(value[tone], options);\n  return colorSelectable;\n}\nfunction renderThemeColorSelectableStates(value, options) {\n  return {\n    enabled: renderThemeColorState(value.enabled, options),\n    hovered: renderThemeColorState(value.hovered, options),\n    pressed: renderThemeColorState(value.pressed, options),\n    selected: renderThemeColorState(value.selected, options),\n    disabled: renderThemeColorState(value.disabled, options)\n  };\n}\nfunction renderSyntaxColorTheme(value, options) {\n  const {\n    colorPalette,\n    baseBg,\n    blendMode\n  } = options, colorOptions = {\n    colorPalette,\n    bg: baseBg,\n    blendMode\n  };\n  return {\n    atrule: renderColorValue(value.atrule, colorOptions),\n    attrName: renderColorValue(value.attrName, colorOptions),\n    attrValue: renderColorValue(value.attrValue, colorOptions),\n    attribute: renderColorValue(value.attribute, colorOptions),\n    boolean: renderColorValue(value.boolean, colorOptions),\n    builtin: renderColorValue(value.builtin, colorOptions),\n    cdata: renderColorValue(value.cdata, colorOptions),\n    char: renderColorValue(value.char, colorOptions),\n    class: renderColorValue(value.class, colorOptions),\n    className: renderColorValue(value.className, colorOptions),\n    comment: renderColorValue(value.comment, colorOptions),\n    constant: renderColorValue(value.constant, colorOptions),\n    deleted: renderColorValue(value.deleted, colorOptions),\n    doctype: renderColorValue(value.doctype, colorOptions),\n    entity: renderColorValue(value.entity, colorOptions),\n    function: renderColorValue(value.function, colorOptions),\n    hexcode: renderColorValue(value.hexcode, colorOptions),\n    id: renderColorValue(value.id, colorOptions),\n    important: renderColorValue(value.important, colorOptions),\n    inserted: renderColorValue(value.inserted, colorOptions),\n    keyword: renderColorValue(value.keyword, colorOptions),\n    number: renderColorValue(value.number, colorOptions),\n    operator: renderColorValue(value.operator, colorOptions),\n    prolog: renderColorValue(value.prolog, colorOptions),\n    property: renderColorValue(value.property, colorOptions),\n    pseudoClass: renderColorValue(value.pseudoClass, colorOptions),\n    pseudoElement: renderColorValue(value.pseudoElement, colorOptions),\n    punctuation: renderColorValue(value.punctuation, colorOptions),\n    regex: renderColorValue(value.regex, colorOptions),\n    selector: renderColorValue(value.selector, colorOptions),\n    string: renderColorValue(value.string, colorOptions),\n    symbol: renderColorValue(value.symbol, colorOptions),\n    tag: renderColorValue(value.tag, colorOptions),\n    unit: renderColorValue(value.unit, colorOptions),\n    url: renderColorValue(value.url, colorOptions),\n    variable: renderColorValue(value.variable, colorOptions)\n  };\n}\nfunction buildTheme(config) {\n  const colorTheme = buildColorTheme(config), v2 = {\n    _version: 2,\n    avatar: config?.avatar ?? defaultThemeConfig.avatar,\n    button: config?.button ?? defaultThemeConfig.button,\n    card: config?.card ?? defaultThemeConfig.card,\n    // How colors are generated:\n    // 1. Merge custom tokens with default tokens\n    // 2. Generate tree of color keys (gray/500, black, white, etc.)\n    // 3. Apply mixing and render to hex values\n    // render(build(mergeWithDefaults()))\n    color: renderThemeColorSchemes(colorTheme, config),\n    container: config?.container ?? defaultThemeConfig.container,\n    font: config?.font ?? defaultThemeFonts,\n    input: config?.input ?? defaultThemeConfig.input,\n    layer: config?.layer ?? defaultThemeConfig.layer,\n    media: config?.media ?? defaultThemeConfig.media,\n    radius: config?.radius ?? defaultThemeConfig.radius,\n    shadow: config?.shadow ?? defaultThemeConfig.shadow,\n    space: config?.space ?? defaultThemeConfig.space,\n    style: config?.style ?? defaultThemeConfig.style\n  };\n  return v2_v0(v2);\n}\nfunction themeColor_v0_v2_9(color2) {\n  if (\"neutral\" in color2.badge)\n    return color2;\n  const colors2 = color2;\n  return {\n    ...colors2,\n    badge: {\n      ...colors2.badge,\n      neutral: colors2.badge.default,\n      suggest: colors2.badge.primary\n    },\n    button: {\n      bleed: {\n        ...colors2.button.bleed,\n        neutral: colors2.button.bleed.default,\n        suggest: colors2.button.bleed.primary\n      },\n      default: {\n        ...colors2.button.default,\n        neutral: colors2.button.default.default,\n        suggest: colors2.button.default.primary\n      },\n      ghost: {\n        ...colors2.button.ghost,\n        neutral: colors2.button.ghost.default,\n        suggest: colors2.button.ghost.primary\n      }\n    },\n    selectable: {\n      ...colors2.selectable,\n      neutral: colors2.selectable.default,\n      suggest: colors2.selectable.primary\n    }\n  };\n}\nconst cache = /* @__PURE__ */ new Map();\nfunction getScopedTheme(themeProp, scheme, tone) {\n  const cachedTheme = _getCachedTheme(themeProp, scheme, tone);\n  if (cachedTheme) return cachedTheme;\n  const v0 = is_v2(themeProp) ? v2_v0(themeProp) : themeProp, v2 = is_v2(themeProp) ? themeProp : v0_v2(themeProp), colorScheme_v0 = v0.color[scheme] || v0.color.light, color_v0 = colorScheme_v0[tone] || colorScheme_v0.default, layer_v0 = v0.layer || defaultThemeConfig.layer, colorScheme_v2 = v2.color[scheme] || v2.color.light, color_v2 = colorScheme_v2[tone] || colorScheme_v2.default, color_v2_9 = themeColor_v0_v2_9(color_v2), layer_v2 = v2.layer || defaultThemeConfig.layer, theme = {\n    sanity: {\n      ...v0,\n      color: color_v0,\n      layer: layer_v0,\n      v2: {\n        ...v2,\n        _resolved: !0,\n        color: color_v2_9,\n        layer: layer_v2\n      }\n    }\n  };\n  return _setCachedTheme(themeProp, scheme, tone, theme), theme;\n}\nfunction _getCachedTheme(rootTheme, scheme, tone) {\n  const schemeCache = cache.get(scheme);\n  if (!schemeCache) return;\n  const toneCache = schemeCache.get(tone);\n  if (toneCache)\n    return toneCache.get(rootTheme);\n}\nfunction _setCachedTheme(rootTheme, scheme, tone, theme) {\n  cache.has(scheme) || cache.set(scheme, /* @__PURE__ */ new Map());\n  const schemeCache = cache.get(scheme);\n  schemeCache.has(tone) || schemeCache.set(tone, /* @__PURE__ */ new WeakMap()), schemeCache.get(tone).set(rootTheme, theme);\n}\n\n//# sourceMappingURL=theme.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/ui/dist/theme.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing-csm/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing-csm/dist/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDataAttribute: () => (/* binding */ createDataAttribute),\n/* harmony export */   decodeSanityNodeData: () => (/* binding */ decodeSanityNodeData),\n/* harmony export */   encodeSanityNodeData: () => (/* binding */ encodeSanityNodeData),\n/* harmony export */   pathToUrlString: () => (/* binding */ pathToUrlString),\n/* harmony export */   urlStringToPath: () => (/* binding */ urlStringToPath)\n/* harmony export */ });\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sanity/client/csm */ \"(ssr)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/valibot/dist/index.js\");\n\n\nconst lengthyStr$1 = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.pipe)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)(), (0,valibot__WEBPACK_IMPORTED_MODULE_0__.minLength)(1)), optionalLengthyStr = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.optional)(lengthyStr$1), sanityNodeSchema = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.object)({\n  baseUrl: lengthyStr$1,\n  dataset: optionalLengthyStr,\n  id: lengthyStr$1,\n  path: lengthyStr$1,\n  projectId: optionalLengthyStr,\n  tool: optionalLengthyStr,\n  type: optionalLengthyStr,\n  workspace: optionalLengthyStr\n});\nfunction isValidSanityNode(node) {\n  return (0,valibot__WEBPACK_IMPORTED_MODULE_0__.is)(sanityNodeSchema, node);\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction pathToUrlString(path) {\n  let str = \"\";\n  for (const segment of path) {\n    if (typeof segment == \"string\") {\n      str && (str += \".\"), str += segment;\n      continue;\n    }\n    if (typeof segment == \"number\") {\n      str && (str += \":\"), str += `${segment}`;\n      continue;\n    }\n    if (isArray(segment)) {\n      str && (str += \":\"), str += `${segment.join(\",\")}}`;\n      continue;\n    }\n    if (segment._key) {\n      str && (str += \":\"), str += `${segment._key}`;\n      continue;\n    }\n  }\n  return str;\n}\nfunction encodeSanityNodeData(node) {\n  const { id: _id, path, baseUrl, tool, workspace, type } = node;\n  return isValidSanityNode(node) ? [\n    [\"id\", (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.getPublishedId)(_id)],\n    [\"type\", type],\n    [\"path\", pathToUrlString(_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.fromString(path))],\n    [\"base\", encodeURIComponent(baseUrl)],\n    [\"workspace\", workspace],\n    [\"tool\", tool]\n  ].filter(([, value]) => !!value).map((part) => part.join(\"=\")).join(\";\") : void 0;\n}\nfunction createDataAttribute(props) {\n  function normalizePath(path) {\n    return path ? typeof path == \"string\" ? _sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.fromString(path) : path : [];\n  }\n  function toString(props2) {\n    if (!props2.id) throw new Error(\"`id` is required to create a data attribute\");\n    if (!props2.type) throw new Error(\"`type` is required to create a data attribute\");\n    if (!props2.path || !props2.path.length)\n      throw new Error(\"`path` is required to create a data attribute\");\n    const attrs = {\n      baseUrl: props2.baseUrl || \"/\",\n      workspace: props2.workspace,\n      tool: props2.tool,\n      type: props2.type,\n      id: props2.id,\n      path: typeof props2.path == \"string\" ? props2.path : _sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.toString(props2.path)\n    };\n    return encodeSanityNodeData(attrs);\n  }\n  const DataAttribute = (path) => toString({\n    ...props,\n    path: [...normalizePath(props.path), ...normalizePath(path)]\n  });\n  return DataAttribute.toString = function() {\n    return toString(props);\n  }, DataAttribute.combine = function(attrs) {\n    return createDataAttribute({\n      ...props,\n      ...attrs\n    });\n  }, DataAttribute.scope = function(path) {\n    return createDataAttribute({\n      ...props,\n      path: [...normalizePath(props.path), ...normalizePath(path)]\n    });\n  }, DataAttribute;\n}\nconst RE_SEGMENT_WITH_INDEX = /^([\\w-]+):(0|[1-9][0-9]*)$/, RE_SEGMENT_WITH_TUPLE = /^([\\w-]+):([0-9]+),([0-9]+)$/, RE_SEGMENT_WITH_KEY = /^([\\w-]+):([\\w-]+)$/;\nfunction urlStringToPath(str) {\n  const path = [];\n  for (const segment of str.split(\".\")) {\n    const withIndex = RE_SEGMENT_WITH_INDEX.exec(segment);\n    if (withIndex) {\n      path.push(withIndex[1], Number(withIndex[2]));\n      continue;\n    }\n    const withTuple = RE_SEGMENT_WITH_TUPLE.exec(segment);\n    if (withTuple) {\n      path.push(withTuple[1], [Number(withTuple[2]), Number(withTuple[3])]);\n      continue;\n    }\n    const withKey = RE_SEGMENT_WITH_KEY.exec(segment);\n    if (withKey) {\n      path.push(withKey[1], { _key: withKey[2] });\n      continue;\n    }\n    path.push(segment);\n  }\n  return path;\n}\nconst lengthyStr = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.pipe)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)(), (0,valibot__WEBPACK_IMPORTED_MODULE_0__.minLength)(1)), sanityLegacyNodeSchema = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.object)({\n  origin: lengthyStr,\n  href: lengthyStr,\n  data: (0,valibot__WEBPACK_IMPORTED_MODULE_0__.optional)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.record)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)(), (0,valibot__WEBPACK_IMPORTED_MODULE_0__.unknown)()))\n});\nfunction decodeSanityString(str) {\n  const data = str.split(\";\").reduce((acc, segment) => {\n    const [key, value] = segment.split(\"=\");\n    if (!key || segment.includes(\"=\") && !value) return acc;\n    switch (key) {\n      case \"id\":\n        acc.id = value;\n        break;\n      case \"type\":\n        acc.type = value;\n        break;\n      case \"path\":\n        acc.path = _sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.toString(urlStringToPath(value));\n        break;\n      case \"base\":\n        acc.baseUrl = decodeURIComponent(value);\n        break;\n      case \"tool\":\n        acc.tool = value;\n        break;\n      case \"workspace\":\n        acc.workspace = value;\n        break;\n      case \"projectId\":\n        acc.projectId = value;\n        break;\n      case \"dataset\":\n        acc.dataset = value;\n        break;\n    }\n    return acc;\n  }, {});\n  if (isValidSanityNode(data))\n    return data;\n}\nfunction decodeSanityObject(data) {\n  const sanityNode = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.safeParse)(sanityNodeSchema, data);\n  if (sanityNode.success)\n    return sanityNode.output;\n  const sanityLegacyNode = (0,valibot__WEBPACK_IMPORTED_MODULE_0__.safeParse)(sanityLegacyNodeSchema, data);\n  if (sanityLegacyNode.success)\n    try {\n      const url = new URL(\n        sanityLegacyNode.output.href,\n        typeof document > \"u\" ? \"https://example.com\" : location.origin\n      );\n      return url.searchParams.size > 0 ? (0,valibot__WEBPACK_IMPORTED_MODULE_0__.parse)(sanityNodeSchema, Object.fromEntries(url.searchParams.entries())) : sanityLegacyNode.output;\n    } catch (err) {\n      return console.error(\"Failed to parse sanity node\", err), sanityLegacyNode.output;\n    }\n}\nfunction decodeSanityNodeData(data) {\n  if (typeof data == \"object\" && data !== null)\n    return decodeSanityObject(data);\n  try {\n    const obj = JSON.parse(data);\n    return decodeSanityObject(obj);\n  } catch {\n    return decodeSanityString(data);\n  }\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing-csm/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/PointerEvents.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/dist/_chunks-es/PointerEvents.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InsertMenu: () => (/* binding */ InsertMenu),\n/* harmony export */   InsertMenuPopover: () => (/* binding */ InsertMenuPopover),\n/* harmony export */   PointerEvents: () => (/* binding */ PointerEvents),\n/* harmony export */   PopoverPortal: () => (/* binding */ PopoverPortal),\n/* harmony export */   TelemetryContext: () => (/* binding */ TelemetryContext),\n/* harmony export */   events: () => (/* binding */ events),\n/* harmony export */   getNodeIcon: () => (/* binding */ getNodeIcon),\n/* harmony export */   useTelemetry: () => (/* binding */ useTelemetry)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-compiler-runtime */ \"(ssr)/./node_modules/react-compiler-runtime/dist/index.js\");\n/* harmony import */ var _sanity_insert_menu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sanity/insert-menu */ \"(ssr)/./node_modules/@sanity/insert-menu/dist/index.js\");\n/* harmony import */ var _sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/ui/_visual-editing */ \"(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/_visual-editing.mjs\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! styled-components */ \"(ssr)/./node_modules/styled-components/dist/styled-components.esm.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sanity/icons */ \"(ssr)/./node_modules/@sanity/icons/dist/index.js\");\n\n\n\n\n\n\n\nfunction getNodeIcon(option) {\n  if (!option) return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_3__.CubeIcon, {});\n  if (option.type === \"string\")\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_3__.StringIcon, {});\n  if (option.type === \"number\")\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_3__.NumberIcon, {});\n  const {\n    value: node\n  } = option;\n  if (\"icon\" in option && option.icon)\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", { dangerouslySetInnerHTML: {\n      __html: option.icon\n    } });\n  const {\n    type\n  } = node;\n  if (type === \"string\")\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_3__.StringIcon, {});\n  if (type === \"boolean\")\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_3__.CheckmarkCircleIcon, {});\n  if (type === \"number\")\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_3__.NumberIcon, {});\n  if (type === \"array\" || type === \"union\")\n    return (Array.isArray(node.of) ? node.of : [node.of]).some((n) => \"name\" in n && n.name === \"block\") ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_3__.BlockContentIcon, {}) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_3__.ThListIcon, {});\n  if (type === \"object\") {\n    if (option.name === \"image\")\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_3__.ImageIcon, {});\n    if (option.name === \"block\")\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_3__.StringIcon, {});\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_3__.CubeIcon, {});\n}\nconst PortalContainer = styled_components__WEBPACK_IMPORTED_MODULE_4__.styled.div`\n  height: 100%;\n  inset: 0;\n  overflow-y: scroll;\n  overscroll-behavior: contain;\n  pointer-events: all;\n  position: fixed;\n  width: 100%;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:before {\n    content: '';\n    display: block;\n    height: calc(100% + 1px);\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: -1;\n  }\n`, PortalBackground = styled_components__WEBPACK_IMPORTED_MODULE_4__.styled.div`\n  background: transparent;\n  height: 100%;\n  inset: 0;\n  position: absolute;\n  width: 100%;\n`, PopoverPortal = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(6), {\n    children,\n    onDismiss,\n    setBoundaryElement\n  } = props, handleClick = _temp$1;\n  let t0;\n  $[0] !== onDismiss ? (t0 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PortalBackground, { onClickCapture: onDismiss }), $[0] = onDismiss, $[1] = t0) : t0 = $[1];\n  let t1;\n  return $[2] !== children || $[3] !== setBoundaryElement || $[4] !== t0 ? (t1 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Portal, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(PortalContainer, { \"data-sanity-overlay-element\": !0, ref: setBoundaryElement, onClick: handleClick, children: [\n    t0,\n    children\n  ] }) }), $[2] = children, $[3] = setBoundaryElement, $[4] = t0, $[5] = t1) : t1 = $[5], t1;\n};\nfunction _temp$1(event) {\n  event.stopPropagation();\n}\nfunction defineEvent(options) {\n  return {\n    type: \"log\",\n    name: options.name,\n    version: options.version,\n    description: options.description,\n    maxSampleRate: options.maxSampleRate,\n    schema: void 0\n  };\n}\nconst events = {\n  \"Visual Editing Drag Sequence Completed\": defineEvent({\n    name: \"Visual Editing Drag Sequence Completed\",\n    description: \"An array is successfully reordered using drag and drop.\",\n    version: 1\n  }),\n  \"Visual Editing Drag Minimap Enabled\": defineEvent({\n    name: \"Visual Editing Drag Minimap Enabled\",\n    description: \"The zoomed-out minimap view is enabled during a drag sequence.\",\n    version: 1\n  }),\n  \"Visual Editing Context Menu Item Removed\": defineEvent({\n    name: \"Visual Editing Context Menu Item Removed\",\n    description: \"An item is removed using the Context Menu.\",\n    version: 1\n  }),\n  \"Visual Editing Context Menu Item Duplicated\": defineEvent({\n    name: \"Visual Editing Context Menu Item Duplicated\",\n    description: \"An item is duplicated using the Context Menu.\",\n    version: 1\n  }),\n  \"Visual Editing Context Menu Item Moved\": defineEvent({\n    name: \"Visual Editing Context Menu Item Moved\",\n    description: \"An item is moved using the Context Menu.\",\n    version: 1\n  }),\n  \"Visual Editing Context Menu Item Inserted\": defineEvent({\n    name: \"Visual Editing Context Menu Item Inserted\",\n    description: \"An item is inserted using the Context Menu.\",\n    version: 1\n  }),\n  \"Visual Editing Insert Menu Item Inserted\": defineEvent({\n    name: \"Visual Editing Insert Menu Item Inserted\",\n    description: \"An item is inserted using the Insert Menu.\",\n    version: 1\n  }),\n  \"Visual Editing Overlay Clicked\": defineEvent({\n    name: \"Visual Editing Overlay Clicked\",\n    description: \"An Overlay is clicked.\",\n    version: 1\n  })\n}, TelemetryContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0);\nfunction useTelemetry() {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(TelemetryContext);\n  if (!context)\n    throw new Error(\"Telemetry context is missing\");\n  return context;\n}\nconst labels = {\n  \"insert-menu.filter.all-items\": \"All\",\n  \"insert-menu.search.no-results\": \"No results\",\n  \"insert-menu.search.placeholder\": \"Filter types\\u2026\",\n  \"insert-menu.toggle-grid-view.tooltip\": \"Toggle grid view\",\n  \"insert-menu.toggle-list-view.tooltip\": \"Toggle list view\"\n}, InsertMenu = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(11), {\n    node,\n    onSelect\n  } = props;\n  let t0;\n  $[0] !== node.options?.insertMenu ? (t0 = node.options?.insertMenu || {}, $[0] = node.options?.insertMenu, $[1] = t0) : t0 = $[1];\n  const insertMenuOptions = t0;\n  let t1;\n  $[2] !== insertMenuOptions.views ? (t1 = insertMenuOptions.views?.map(_temp), $[2] = insertMenuOptions.views, $[3] = t1) : t1 = $[3];\n  const views = t1;\n  let t2;\n  $[4] !== node.of ? (t2 = node.of.map(_temp2), $[4] = node.of, $[5] = t2) : t2 = $[5];\n  let t3;\n  return $[6] !== insertMenuOptions || $[7] !== onSelect || $[8] !== t2 || $[9] !== views ? (t3 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_insert_menu__WEBPACK_IMPORTED_MODULE_6__.InsertMenu, { ...insertMenuOptions, labels, schemaTypes: t2, onSelect, views }), $[6] = insertMenuOptions, $[7] = onSelect, $[8] = t2, $[9] = views, $[10] = t3) : t3 = $[10], t3;\n}, InsertMenuPopover = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(11), {\n    node,\n    onDismiss,\n    onSelect,\n    referenceElement\n  } = props;\n  let t0;\n  $[0] !== node || $[1] !== onSelect ? (t0 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(InsertMenu, { node, onSelect }), $[0] = node, $[1] = onSelect, $[2] = t0) : t0 = $[2];\n  const popoverContent = t0, width = (node.options?.insertMenu || {}).views?.some(_temp3) ? 0 : void 0;\n  let t1;\n  $[3] === Symbol.for(\"react.memo_cache_sentinel\") ? (t1 = [\"bottom\"], $[3] = t1) : t1 = $[3];\n  let t2;\n  $[4] !== popoverContent || $[5] !== referenceElement || $[6] !== width ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_5__.Popover, { animate: !0, constrainSize: !0, content: popoverContent, fallbackPlacements: t1, open: !0, placement: \"top\", preventOverflow: !0, referenceElement, width }), $[4] = popoverContent, $[5] = referenceElement, $[6] = width, $[7] = t2) : t2 = $[7];\n  let t3;\n  return $[8] !== onDismiss || $[9] !== t2 ? (t3 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PopoverPortal, { onDismiss, children: t2 }), $[8] = onDismiss, $[9] = t2, $[10] = t3) : t3 = $[10], t3;\n};\nfunction _temp(view) {\n  return view.name === \"grid\" ? {\n    ...view,\n    previewImageUrl: (name) => view.previewImageUrls?.[name]\n  } : view;\n}\nfunction _temp2(type) {\n  return {\n    ...type,\n    icon: getNodeIcon(type)\n  };\n}\nfunction _temp3(view) {\n  return view.name === \"grid\";\n}\nconst PointerEvents = (t0) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(10);\n  let children, rest, style;\n  $[0] !== t0 ? ({\n    children,\n    style,\n    ...rest\n  } = t0, $[0] = t0, $[1] = children, $[2] = rest, $[3] = style) : (children = $[1], rest = $[2], style = $[3]);\n  let t1;\n  $[4] !== style ? (t1 = {\n    ...style,\n    pointerEvents: \"all\"\n  }, $[4] = style, $[5] = t1) : t1 = $[5];\n  let t2;\n  return $[6] !== children || $[7] !== rest || $[8] !== t1 ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", { style: t1, \"data-sanity-overlay-element\": !0, ...rest, children }), $[6] = children, $[7] = rest, $[8] = t1, $[9] = t2) : t2 = $[9], t2;\n};\n\n//# sourceMappingURL=PointerEvents.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/PointerEvents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/SharedStateContext.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/dist/_chunks-es/SharedStateContext.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SharedStateContext: () => (/* binding */ SharedStateContext),\n/* harmony export */   createOverlayController: () => (/* binding */ createOverlayController),\n/* harmony export */   sanityNodesExistInSameArray: () => (/* binding */ sanityNodesExistInSameArray),\n/* harmony export */   useOptimistic: () => (/* binding */ useOptimistic)\n/* harmony export */ });\n/* harmony import */ var react_compiler_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-compiler-runtime */ \"(ssr)/./node_modules/react-compiler-runtime/dist/index.js\");\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sanity/client/csm */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var use_effect_event__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! use-effect-event */ \"(ssr)/./node_modules/use-effect-event/dist/index.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./context.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/context.js\");\n/* harmony import */ var _mutations_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mutations.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js\");\n/* harmony import */ var _sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sanity/visual-editing-csm */ \"(ssr)/./node_modules/@sanity/visual-editing-csm/dist/index.js\");\n/* harmony import */ var _vercel_stega__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vercel/stega */ \"(ssr)/./node_modules/@vercel/stega/dist/index.mjs\");\n\n\n\n\n\n\n\n\nfunction useOptimistic(passthrough, reducer) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_0__.c)(21), [pristine, setPristine] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!0), [optimistic, setOptimistic] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(passthrough), [lastEvent, setLastEvent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [lastPassthrough, setLastPassthrough] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(passthrough), actor = (0,_mutations_js__WEBPACK_IMPORTED_MODULE_3__.useOptimisticActor)();\n  let t0;\n  $[0] !== reducer ? (t0 = (action, prevState) => (Array.isArray(reducer) ? reducer : [reducer]).reduce((acc, reducer_0) => reducer_0(acc, {\n    document: action.document,\n    id: (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_4__.getPublishedId)(action.id),\n    originalId: action.id,\n    type: action.type\n  }), prevState), $[0] = reducer, $[1] = t0) : t0 = $[1];\n  const reduceStateFromAction = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_5__.useEffectEvent)(t0);\n  let t1;\n  $[2] !== passthrough ? (t1 = () => setLastPassthrough(passthrough), $[2] = passthrough, $[3] = t1) : t1 = $[3];\n  const updateLastPassthrough = (0,use_effect_event__WEBPACK_IMPORTED_MODULE_5__.useEffectEvent)(t1);\n  let t2;\n  $[4] !== actor || $[5] !== reduceStateFromAction || $[6] !== updateLastPassthrough ? (t2 = () => {\n    if ((0,_context_js__WEBPACK_IMPORTED_MODULE_6__.isEmptyActor)(actor))\n      return;\n    let pristineTimeout;\n    const rebasedSub = actor.on(\"rebased.local\", (_event) => {\n      const event = {\n        document: _event.document,\n        id: _event.id,\n        originalId: (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_4__.getPublishedId)(_event.id),\n        type: \"mutate\"\n      };\n      setOptimistic((prevState_0) => reduceStateFromAction(event, prevState_0)), setLastEvent(event), updateLastPassthrough(), setPristine(!1), clearTimeout(pristineTimeout);\n    }), pristineSub = actor.on(\"pristine\", () => {\n      pristineTimeout = setTimeout(() => {\n        (0,react__WEBPACK_IMPORTED_MODULE_1__.startTransition)(() => setPristine(!0));\n      }, 15e3);\n    });\n    return () => {\n      rebasedSub.unsubscribe(), pristineSub.unsubscribe();\n    };\n  }, $[4] = actor, $[5] = reduceStateFromAction, $[6] = updateLastPassthrough, $[7] = t2) : t2 = $[7];\n  let t3;\n  $[8] !== actor ? (t3 = [actor], $[8] = actor, $[9] = t3) : t3 = $[9], (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(t2, t3);\n  let t4;\n  $[10] !== lastEvent || $[11] !== lastPassthrough || $[12] !== passthrough || $[13] !== pristine || $[14] !== reduceStateFromAction ? (t4 = () => {\n    if (!pristine) {\n      if (!lastEvent)\n        throw new Error(\"No last event found when syncing passthrough\");\n      lastPassthrough !== passthrough && (0,react__WEBPACK_IMPORTED_MODULE_1__.startTransition)(() => {\n        setOptimistic(reduceStateFromAction(lastEvent, passthrough)), setLastPassthrough(passthrough);\n      });\n    }\n  }, $[10] = lastEvent, $[11] = lastPassthrough, $[12] = passthrough, $[13] = pristine, $[14] = reduceStateFromAction, $[15] = t4) : t4 = $[15];\n  let t5;\n  return $[16] !== lastEvent || $[17] !== lastPassthrough || $[18] !== passthrough || $[19] !== pristine ? (t5 = [lastEvent, lastPassthrough, passthrough, pristine], $[16] = lastEvent, $[17] = lastPassthrough, $[18] = passthrough, $[19] = pristine, $[20] = t5) : t5 = $[20], (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(t4, t5), pristine ? passthrough : optimistic;\n}\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i)\n  byteToHex.push((i + 256).toString(16).slice(1));\nfunction unsafeStringify(arr, offset = 0) {\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n  if (!getRandomValues) {\n    if (typeof crypto > \"u\" || !crypto.getRandomValues)\n      throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n    getRandomValues = crypto.getRandomValues.bind(crypto);\n  }\n  return getRandomValues(rnds8);\n}\nconst randomUUID = typeof crypto < \"u\" && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar native = {\n  randomUUID\n};\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !options)\n    return native.randomUUID();\n  options = options || {};\n  const rnds = options.random ?? options.rng?.() ?? rng();\n  if (rnds.length < 16)\n    throw new Error(\"Random bytes length must be >= 16\");\n  return rnds[6] = rnds[6] & 15 | 64, rnds[8] = rnds[8] & 63 | 128, unsafeStringify(rnds);\n}\nfunction getRect(element) {\n  const domRect = element.getBoundingClientRect();\n  return {\n    x: domRect.x + scrollX,\n    y: domRect.y + scrollY,\n    w: domRect.width,\n    h: domRect.height\n  };\n}\nfunction offsetRect(rect, px, axis) {\n  return axis === \"x\" ? {\n    x: rect.x + px,\n    y: rect.y,\n    w: rect.w - 2 * px,\n    h: rect.h\n  } : {\n    x: rect.x,\n    y: rect.y + px,\n    w: rect.w,\n    h: rect.h - 2 * px\n  };\n}\nfunction rayIntersect(l1, l2) {\n  const {\n    x1,\n    y1,\n    x2,\n    y2\n  } = l1, {\n    x1: x3,\n    y1: y3,\n    x2: x4,\n    y2: y4\n  } = l2;\n  if (x1 === x2 && y1 === y2 || x3 === x4 && y3 === y4)\n    return !1;\n  const denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n  if (denominator === 0)\n    return !1;\n  const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator, ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\n  if (ua < 0 || ua > 1 || ub < 0 || ub > 1)\n    return !1;\n  const x = x1 + ua * (x2 - x1), y = y1 + ua * (y2 - y1);\n  return {\n    x,\n    y\n  };\n}\nfunction rectEqual(r1, r2) {\n  return r1.x === r2.x && r1.y === r2.y && r1.w === r2.w && r1.h === r2.h;\n}\nfunction rayRectIntersections(line, rect) {\n  const rectLines = [{\n    x1: rect.x,\n    y1: rect.y,\n    x2: rect.x + rect.w,\n    y2: rect.y\n  }, {\n    x1: rect.x + rect.w,\n    y1: rect.y,\n    x2: rect.x + rect.w,\n    y2: rect.y + rect.h\n  }, {\n    x1: rect.x + rect.w,\n    y1: rect.y + rect.h,\n    x2: rect.x,\n    y2: rect.y + rect.h\n  }, {\n    x1: rect.x,\n    y1: rect.y + rect.h,\n    x2: rect.x,\n    y2: rect.y\n  }], intersections = [];\n  for (let i = 0; i < rectLines.length; i++) {\n    const intersection = rayIntersect(line, rectLines[i]);\n    if (intersection) {\n      let isDuplicate = !1;\n      for (let j = 0; j < intersections.length; j++)\n        intersections[j].x === intersection.x && intersections[j].y === intersection.y && (isDuplicate = !0);\n      isDuplicate || intersections.push(intersection);\n    }\n  }\n  return intersections.length === 0 ? !1 : intersections.sort((a, b) => pointDist(a, {\n    x: line.x1,\n    y: line.y1\n  }) - pointDist(b, {\n    x: line.x1,\n    y: line.y1\n  }));\n}\nfunction pointDist(p1, p2) {\n  const a = p1.x - p2.x, b = p1.y - p2.y;\n  return Math.sqrt(a * a + b * b);\n}\nfunction pointInBounds(point, bounds) {\n  const withinX = point.x >= bounds.x && point.x <= bounds.x + bounds.w, withinY = point.y >= bounds.y && point.y <= bounds.y + bounds.h;\n  return withinX && withinY;\n}\nfunction findClosestIntersection(ray, targets, flow) {\n  const rayOrigin = {\n    x: ray.x1,\n    y: ray.y1\n  };\n  if (targets.some((t) => pointInBounds(rayOrigin, offsetRect(t, Math.min(t.w, t.h) / 10, flow === \"horizontal\" ? \"x\" : \"y\")))) return null;\n  let closestIntersection, closestRect;\n  for (const target of targets) {\n    const intersections = rayRectIntersections(ray, offsetRect(target, Math.min(target.w, target.h) / 10, flow === \"horizontal\" ? \"x\" : \"y\"));\n    if (intersections) {\n      const firstIntersection = intersections[0];\n      closestIntersection ? pointDist(rayOrigin, firstIntersection) < pointDist(rayOrigin, closestIntersection) && (closestIntersection = firstIntersection, closestRect = target) : (closestIntersection = firstIntersection, closestRect = target);\n    }\n  }\n  return closestRect || null;\n}\nfunction scaleRect(rect, scale, origin) {\n  const {\n    x,\n    y,\n    w,\n    h\n  } = rect, {\n    x: originX,\n    y: originY\n  } = origin, newX = originX + (x - originX) * scale, newY = originY + (y - originY) * scale, newWidth = w * scale, newHeight = h * scale;\n  return {\n    x: newX,\n    y: newY,\n    w: newWidth,\n    h: newHeight\n  };\n}\nfunction getRectGroupXExtent(rects) {\n  const minGroupX = Math.max(0, Math.min(...rects.map((r) => r.x))), maxGroupX = Math.min(document.body.offsetWidth, Math.max(...rects.map((r) => r.x + r.w)));\n  return {\n    min: minGroupX,\n    max: maxGroupX,\n    width: maxGroupX - minGroupX\n  };\n}\nfunction getRectGroupYExtent(rects) {\n  const minGroupY = Math.max(0, Math.min(...rects.map((r) => r.y))), maxGroupY = Math.min(document.body.scrollHeight, Math.max(...rects.map((r) => r.y + r.h)));\n  return {\n    min: minGroupY,\n    max: maxGroupY,\n    height: maxGroupY - minGroupY\n  };\n}\nfunction calcTargetFlow(targets) {\n  return targets.some((t1) => targets.filter((t2) => !rectEqual(t1, t2)).some((t2) => t1.y === t2.y)) ? \"horizontal\" : \"vertical\";\n}\nfunction calcInsertPosition(origin, targets, flow) {\n  if (flow === \"horizontal\") {\n    const rayLeft = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x - 1e8,\n      y2: origin.y\n    }, rayRight = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x + 1e8,\n      y2: origin.y\n    };\n    return {\n      left: findClosestIntersection(rayLeft, targets, flow),\n      right: findClosestIntersection(rayRight, targets, flow)\n    };\n  } else {\n    const rayTop = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x,\n      y2: origin.y - 1e8\n    }, rayBottom = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x,\n      y2: origin.y + 1e8\n    };\n    return {\n      top: findClosestIntersection(rayTop, targets, flow),\n      bottom: findClosestIntersection(rayBottom, targets, flow)\n    };\n  }\n}\nfunction findRectSanityData(rect, overlayGroup) {\n  return overlayGroup.find((e) => rectEqual(getRect(e.elements.element), rect))?.sanity;\n}\nfunction resolveInsertPosition(overlayGroup, insertPosition, flow) {\n  return Object.values(insertPosition).every((v) => v === null) ? null : flow === \"horizontal\" ? {\n    left: insertPosition.left ? {\n      rect: insertPosition.left,\n      sanity: findRectSanityData(insertPosition.left, overlayGroup)\n    } : null,\n    right: insertPosition.right ? {\n      rect: insertPosition.right,\n      sanity: findRectSanityData(insertPosition.right, overlayGroup)\n    } : null\n  } : {\n    top: insertPosition.top ? {\n      rect: insertPosition.top,\n      sanity: findRectSanityData(insertPosition.top, overlayGroup)\n    } : null,\n    bottom: insertPosition.bottom ? {\n      rect: insertPosition.bottom,\n      sanity: findRectSanityData(insertPosition.bottom, overlayGroup)\n    } : null\n  };\n}\nfunction calcMousePos(e) {\n  const bodyBounds = document.body.getBoundingClientRect();\n  return {\n    x: Math.max(bodyBounds.x, Math.min(e.clientX, bodyBounds.x + bodyBounds.width)),\n    y: e.clientY + window.scrollY\n  };\n}\nfunction calcMousePosInverseTransform(mousePos2) {\n  const body = document.body, transform = window.getComputedStyle(body).transform;\n  if (transform === \"none\")\n    return {\n      x: mousePos2.x,\n      y: mousePos2.y\n    };\n  const inverseMatrix = new DOMMatrix(transform).inverse(), transformedPoint = new DOMPoint(mousePos2.x, mousePos2.y).matrixTransform(inverseMatrix);\n  return {\n    x: transformedPoint.x,\n    y: transformedPoint.y\n  };\n}\nfunction buildPreviewSkeleton(mousePos2, element, scaleFactor) {\n  const bounds = getRect(element), children = [...element.querySelectorAll(\":where(h1, h2, h3, h4, p, a, img, span, button):not(:has(*))\")];\n  mousePos2.x <= bounds.x && (mousePos2.x = bounds.x), mousePos2.x >= bounds.x + bounds.w && (mousePos2.x = bounds.x + bounds.w), mousePos2.y >= bounds.y + bounds.h && (mousePos2.y = bounds.y + bounds.h), mousePos2.y <= bounds.y && (mousePos2.y = bounds.y);\n  const childRects = children.map((child) => {\n    const rect = scaleRect(getRect(child), scaleFactor, {\n      x: bounds.x,\n      y: bounds.y\n    });\n    return {\n      x: rect.x - bounds.x,\n      y: rect.y - bounds.y,\n      w: rect.w,\n      h: rect.h,\n      tagName: child.tagName\n    };\n  });\n  return {\n    offsetX: (bounds.x - mousePos2.x) * scaleFactor,\n    offsetY: (bounds.y - mousePos2.y) * scaleFactor,\n    w: bounds.w * scaleFactor,\n    h: bounds.h * scaleFactor,\n    maxWidth: bounds.w * scaleFactor * 0.75,\n    childRects\n  };\n}\nconst minDragDelta = 4;\nasync function applyMinimapWrapperTransform(target, scaleFactor, minYScaled, handler, rectUpdateFrequency) {\n  return new Promise((resolve) => {\n    target.addEventListener(\"transitionend\", () => {\n      setTimeout(() => {\n        handler({\n          type: \"overlay/dragEndMinimapTransition\"\n        });\n      }, rectUpdateFrequency * 2), resolve();\n    }, {\n      once: !0\n    }), handler({\n      type: \"overlay/dragStartMinimapTransition\"\n    }), handler({\n      type: \"overlay/dragToggleMinimap\",\n      display: !0\n    }), document.body.style.overflow = \"hidden\", document.body.style.height = \"100%\", document.documentElement.style.overflow = \"initial\", document.documentElement.style.height = \"100%\", setTimeout(() => {\n      target.style.transformOrigin = \"50% 0px\", target.style.transition = \"transform 150ms ease\", target.style.transform = `translate3d(0px, ${-minYScaled + scrollY}px, 0px) scale(${scaleFactor})`;\n    }, 25);\n  });\n}\nfunction calcMinimapTransformValues(rects, groupHeightOverride) {\n  let groupHeight = groupHeightOverride || getRectGroupYExtent(rects).height;\n  const padding = 100;\n  groupHeight += padding * 2;\n  const scaleFactor = groupHeight > window.innerHeight ? window.innerHeight / groupHeight : 1, scaledRects = rects.map((r) => scaleRect(r, scaleFactor, {\n    x: window.innerWidth / 2,\n    y: 0\n  })), {\n    min: minYScaled\n  } = getRectGroupYExtent(scaledRects);\n  return {\n    scaleFactor,\n    minYScaled: minYScaled - padding * scaleFactor\n  };\n}\nfunction calcGroupBoundsPreview(rects) {\n  const groupBoundsX = getRectGroupXExtent(rects), groupBoundsY = getRectGroupYExtent(rects), offsetDist = 8, canOffsetX = groupBoundsX.min > offsetDist && groupBoundsX.min + groupBoundsX.width <= window.innerWidth - offsetDist, canOffsetY = groupBoundsY.min > offsetDist && groupBoundsY.min + groupBoundsY.height <= document.body.scrollHeight - offsetDist, canOffset = canOffsetX && canOffsetY;\n  return {\n    x: canOffset ? groupBoundsX.min - offsetDist : groupBoundsX.min,\n    y: canOffset ? groupBoundsY.min - offsetDist : groupBoundsY.min,\n    w: canOffset ? groupBoundsX.width + offsetDist * 2 : groupBoundsX.width,\n    h: canOffset ? groupBoundsY.height + offsetDist * 2 : groupBoundsY.height\n  };\n}\nasync function resetMinimapWrapperTransform(endYOrigin, target, prescaleHeight2, handler, rectUpdateFrequency, previousRootStyleValues2) {\n  return new Promise((resolve) => {\n    const transform = window.getComputedStyle(target).transform;\n    if (new DOMMatrix(transform).a === 1) return;\n    const maxScroll = prescaleHeight2 - window.innerHeight, prevScrollY = scrollY;\n    endYOrigin -= window.innerHeight / 2, endYOrigin < 0 && (endYOrigin = 0), target.addEventListener(\"transitionend\", () => {\n      target.style.transition = \"none\", target.style.transform = \"none\", scrollTo({\n        top: endYOrigin,\n        behavior: \"instant\"\n      }), setTimeout(() => {\n        handler({\n          type: \"overlay/dragEndMinimapTransition\"\n        }), handler({\n          type: \"overlay/dragToggleMinimap\",\n          display: !1\n        });\n      }, rectUpdateFrequency * 2), resolve();\n    }, {\n      once: !0\n    }), handler({\n      type: \"overlay/dragStartMinimapTransition\"\n    }), target.style.transform = `translateY(${Math.max(prevScrollY - endYOrigin, -maxScroll + prevScrollY)}px) scale(1)`, previousRootStyleValues2 && (document.body.style.overflow = previousRootStyleValues2.body.overflow, document.body.style.height = previousRootStyleValues2.body.height, document.documentElement.style.overflow = previousRootStyleValues2.documentElement.overflow, document.documentElement.style.height = previousRootStyleValues2.documentElement.height);\n  });\n}\nlet minimapScaleApplied = !1, mousePosInverseTransform = {\n  y: 0\n}, mousePos = {\n  x: 0,\n  y: 0\n}, prescaleHeight = typeof document > \"u\" ? 0 : document.documentElement.scrollHeight, previousRootStyleValues = null;\nfunction handleOverlayDrag(opts) {\n  const {\n    mouseEvent,\n    element,\n    overlayGroup,\n    handler,\n    target,\n    onSequenceStart,\n    onSequenceEnd\n  } = opts;\n  if (mouseEvent.button !== 0) return;\n  window.focus();\n  const rectUpdateFrequency = 150;\n  let rects = overlayGroup.map((e) => getRect(e.elements.element));\n  const flow = element.getAttribute(\"data-sanity-drag-flow\") || calcTargetFlow(rects), dragGroup = element.getAttribute(\"data-sanity-drag-group\"), disableMinimap = !!element.getAttribute(\"data-sanity-drag-minimap-disable\"), preventInsertDefault = !!element.getAttribute(\"data-sanity-drag-prevent-default\"), documentHeightOverride = element.getAttribute(\"data-unstable_sanity-drag-document-height\"), groupHeightOverride = element.getAttribute(\"data-unstable_sanity-drag-group-height\");\n  let insertPosition = null;\n  const initialMousePos = calcMousePos(mouseEvent), scaleTarget = document.body, {\n    minYScaled,\n    scaleFactor\n  } = calcMinimapTransformValues(rects, groupHeightOverride ? ~~groupHeightOverride : null);\n  let sequenceStarted = !1, minimapPromptShown = !1, mousedown = !0;\n  minimapScaleApplied || (previousRootStyleValues = {\n    body: {\n      overflow: window.getComputedStyle(document.body).overflow,\n      height: window.getComputedStyle(document.body).height\n    },\n    documentElement: {\n      overflow: window.getComputedStyle(document.documentElement).overflow,\n      height: window.getComputedStyle(document.documentElement).height\n    }\n  }, prescaleHeight = documentHeightOverride ? ~~documentHeightOverride : document.documentElement.scrollHeight);\n  const rectsInterval = setInterval(() => {\n    rects = overlayGroup.map((e) => getRect(e.elements.element));\n  }, rectUpdateFrequency), applyMinimap = () => {\n    if (scaleFactor >= 1) return;\n    const skeleton = buildPreviewSkeleton(mousePos, element, scaleFactor);\n    handler({\n      type: \"overlay/dragUpdateSkeleton\",\n      skeleton\n    }), handler({\n      type: \"overlay/dragToggleMinimapPrompt\",\n      display: !1\n    }), applyMinimapWrapperTransform(scaleTarget, scaleFactor, minYScaled, handler, rectUpdateFrequency).then(() => {\n      setTimeout(() => {\n        handler({\n          type: \"overlay/dragUpdateGroupRect\",\n          groupRect: calcGroupBoundsPreview(rects)\n        });\n      }, rectUpdateFrequency * 2);\n    });\n  }, handleScroll = (e) => {\n    Math.abs(e.deltaY) >= 10 && scaleFactor < 1 && !minimapScaleApplied && !minimapPromptShown && !disableMinimap && mousedown && (handler({\n      type: \"overlay/dragToggleMinimapPrompt\",\n      display: !0\n    }), minimapPromptShown = !0), e.shiftKey && !minimapScaleApplied && !disableMinimap && (window.dispatchEvent(new CustomEvent(\"unstable_sanity/dragApplyMinimap\")), minimapScaleApplied = !0, setTimeout(() => {\n      applyMinimap();\n    }, 50));\n  }, handleMouseMove = (e) => {\n    if (e.preventDefault(), mousePos = calcMousePos(e), mousePosInverseTransform = calcMousePosInverseTransform(mousePos), Math.abs(pointDist(mousePos, initialMousePos)) < minDragDelta) return;\n    if (!sequenceStarted) {\n      const groupRect = calcGroupBoundsPreview(rects), skeleton = buildPreviewSkeleton(mousePos, element, 1);\n      handler({\n        type: \"overlay/dragStart\",\n        flow\n      }), handler({\n        type: \"overlay/dragUpdateSkeleton\",\n        skeleton\n      }), handler({\n        type: \"overlay/dragUpdateGroupRect\",\n        groupRect\n      }), sequenceStarted = !0, onSequenceStart();\n    }\n    handler({\n      type: \"overlay/dragUpdateCursorPosition\",\n      x: mousePos.x,\n      y: mousePos.y\n    }), e.shiftKey && !minimapScaleApplied && !disableMinimap && (window.dispatchEvent(new CustomEvent(\"unstable_sanity/dragApplyMinimap\")), minimapScaleApplied = !0, setTimeout(() => {\n      applyMinimap();\n    }, 50));\n    const newInsertPosition = calcInsertPosition(mousePos, rects, flow);\n    JSON.stringify(insertPosition) !== JSON.stringify(newInsertPosition) && (insertPosition = newInsertPosition, handler({\n      type: \"overlay/dragUpdateInsertPosition\",\n      insertPosition: resolveInsertPosition(overlayGroup, insertPosition, flow)\n    }));\n  }, handleMouseUp = () => {\n    mousedown = !1, handler({\n      type: \"overlay/dragEnd\",\n      target,\n      insertPosition: insertPosition ? resolveInsertPosition(overlayGroup, insertPosition, flow) : null,\n      dragGroup,\n      flow,\n      preventInsertDefault\n    }), minimapPromptShown && handler({\n      type: \"overlay/dragToggleMinimapPrompt\",\n      display: !1\n    }), minimapScaleApplied || (clearInterval(rectsInterval), onSequenceEnd(), removeFrameListeners(), removeKeyListeners()), removeMouseListeners();\n  }, handleKeyup = (e) => {\n    if (e.key === \"Shift\" && minimapScaleApplied) {\n      minimapScaleApplied = !1;\n      const skeleton = buildPreviewSkeleton(mousePos, element, 1 / scaleFactor);\n      handler({\n        type: \"overlay/dragUpdateSkeleton\",\n        skeleton\n      }), window.dispatchEvent(new CustomEvent(\"unstable_sanity/dragResetMinimap\")), setTimeout(() => {\n        resetMinimapWrapperTransform(mousePosInverseTransform.y, scaleTarget, prescaleHeight, handler, rectUpdateFrequency, previousRootStyleValues);\n      }, 50), handler({\n        type: \"overlay/dragUpdateGroupRect\",\n        groupRect: null\n      }), mousedown || (clearInterval(rectsInterval), removeMouseListeners(), removeFrameListeners(), removeKeyListeners(), onSequenceEnd());\n    }\n  }, handleBlur = () => {\n    handler({\n      type: \"overlay/dragUpdateGroupRect\",\n      groupRect: null\n    }), window.dispatchEvent(new CustomEvent(\"unstable_sanity/dragResetMinimap\")), setTimeout(() => {\n      resetMinimapWrapperTransform(mousePosInverseTransform.y, scaleTarget, prescaleHeight, handler, rectUpdateFrequency, previousRootStyleValues).then(() => {\n        minimapScaleApplied = !1;\n      });\n    }, 50), clearInterval(rectsInterval), removeMouseListeners(), removeFrameListeners(), removeKeyListeners(), onSequenceEnd();\n  }, removeMouseListeners = () => {\n    window.removeEventListener(\"mousemove\", handleMouseMove), window.removeEventListener(\"wheel\", handleScroll), window.removeEventListener(\"mouseup\", handleMouseUp);\n  }, removeKeyListeners = () => {\n    window.removeEventListener(\"keyup\", handleKeyup);\n  }, removeFrameListeners = () => {\n    window.removeEventListener(\"blur\", handleBlur);\n  };\n  window.addEventListener(\"blur\", handleBlur), window.addEventListener(\"keyup\", handleKeyup), window.addEventListener(\"wheel\", handleScroll), window.addEventListener(\"mousemove\", handleMouseMove), window.addEventListener(\"mouseup\", handleMouseUp);\n}\nconst isElementNode$1 = (target) => target instanceof HTMLElement || target instanceof SVGElement;\nfunction findNonInlineElement(element) {\n  const {\n    display\n  } = window.getComputedStyle(element);\n  if (display !== \"inline\") return element;\n  const parent = element.parentElement;\n  return parent ? findNonInlineElement(parent) : null;\n}\nconst findOverlayElement = (el) => !el || !isElementNode$1(el) ? null : el.dataset?.sanityOverlayElement ? el : findOverlayElement(el.parentElement);\nfunction testVercelStegaRegex(input) {\n  return _vercel_stega__WEBPACK_IMPORTED_MODULE_2__.VERCEL_STEGA_REGEX.lastIndex = 0, _vercel_stega__WEBPACK_IMPORTED_MODULE_2__.VERCEL_STEGA_REGEX.test(input);\n}\nfunction decodeStega(str, isAltText = !1) {\n  try {\n    const decoded = (0,_vercel_stega__WEBPACK_IMPORTED_MODULE_2__.vercelStegaDecode)(str);\n    return !decoded || decoded.origin !== \"sanity.io\" ? null : (isAltText && (decoded.href = decoded.href?.replace(\".alt\", \"\")), decoded);\n  } catch (err) {\n    return console.error(\"Failed to decode stega for string: \", str, \"with the original error: \", err), null;\n  }\n}\nfunction testAndDecodeStega(str, isAltText = !1) {\n  return testVercelStegaRegex(str) ? decodeStega(str, isAltText) : null;\n}\nconst isElementNode = (node) => node.nodeType === Node.ELEMENT_NODE, isImgElement = (el) => el.tagName === \"IMG\", isTimeElement = (el) => el.tagName === \"TIME\", isSvgRootElement = (el) => el.tagName.toUpperCase() === \"SVG\";\nfunction isSanityNode(node) {\n  return \"path\" in node;\n}\nfunction findCommonPath(first, second) {\n  let firstParts = first.split(\".\"), secondParts = second.split(\".\");\n  const maxLength = Math.min(firstParts.length, secondParts.length);\n  return firstParts = firstParts.slice(0, maxLength).reverse(), secondParts = secondParts.slice(0, maxLength).reverse(), firstParts.reduce((parts, part, i) => part === secondParts[i] ? [...parts, part] : [], []).reverse().join(\".\");\n}\nfunction findCommonSanityData(nodes) {\n  if (!nodes.length || !nodes.map((n) => isSanityNode(n)).every((n, _i, arr) => n === arr[0]))\n    return;\n  if (!isSanityNode(nodes[0])) return nodes[0];\n  const sanityNodes = nodes.filter(isSanityNode);\n  let common = nodes[0];\n  const consistentValueKeys = [\"projectId\", \"dataset\", \"id\", \"baseUrl\", \"workspace\", \"tool\"];\n  for (let i = 1; i < sanityNodes.length; i++) {\n    const node = sanityNodes[i];\n    if (consistentValueKeys.some((key) => node[key] !== common?.[key])) {\n      common = void 0;\n      break;\n    }\n    common.path = findCommonPath(common.path, node.path);\n  }\n  return common;\n}\nfunction findSanityNodes(el) {\n  const elements = [];\n  function addElement(element, data) {\n    const sanity = (0,_sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_7__.decodeSanityNodeData)(data);\n    if (!sanity)\n      return;\n    const measureElement = findNonInlineElement(element);\n    measureElement && elements.push({\n      elements: {\n        element,\n        measureElement\n      },\n      sanity\n    });\n  }\n  if (el)\n    for (const node of el.childNodes) {\n      const {\n        nodeType,\n        parentElement,\n        textContent\n      } = node;\n      if (isElementNode(node) && node.dataset?.sanityEditTarget !== void 0) {\n        const nodesInTarget = findSanityNodes(node).map(({\n          sanity\n        }) => sanity);\n        if (!nodesInTarget.map((n) => isSanityNode(n)).every((n, _i, arr) => n === arr[0]))\n          continue;\n        const commonData = findCommonSanityData(nodesInTarget);\n        commonData && elements.push({\n          elements: {\n            element: node,\n            measureElement: node\n          },\n          sanity: commonData\n        });\n      } else if (nodeType === Node.TEXT_NODE && parentElement && textContent) {\n        const data = testAndDecodeStega(textContent);\n        if (!data) continue;\n        addElement(parentElement, data);\n      } else if (isElementNode(node)) {\n        if (node.tagName === \"SCRIPT\" || node.tagName === \"SANITY-VISUAL-EDITING\")\n          continue;\n        if (node.dataset?.sanity)\n          addElement(node, node.dataset.sanity);\n        else if (node.dataset?.sanityEditInfo)\n          addElement(node, node.dataset.sanityEditInfo);\n        else if (isImgElement(node)) {\n          const data = testAndDecodeStega(node.alt, !0);\n          if (!data) continue;\n          addElement(node, data);\n          continue;\n        } else if (isTimeElement(node)) {\n          const data = testAndDecodeStega(node.dateTime, !0);\n          if (!data) continue;\n          addElement(node, data);\n        } else if (isSvgRootElement(node)) {\n          if (!node.ariaLabel) continue;\n          const data = testAndDecodeStega(node.ariaLabel, !0);\n          if (!data) continue;\n          addElement(node, data);\n        }\n        elements.push(...findSanityNodes(node));\n      }\n    }\n  return elements;\n}\nfunction isSanityArrayPath(path) {\n  const lastDotIndex = path.lastIndexOf(\".\");\n  return path.substring(lastDotIndex, path.length).includes(\"[\");\n}\nfunction getSanityNodeArrayPath(path) {\n  if (!isSanityArrayPath(path)) return null;\n  const split = path.split(\".\");\n  return split[split.length - 1] = split[split.length - 1].replace(/\\[.*?\\]/g, \"[]\"), split.join(\".\");\n}\nfunction sanityNodesExistInSameArray(sanityNode1, sanityNode2) {\n  return !isSanityArrayPath(sanityNode1.path) || !isSanityArrayPath(sanityNode2.path) ? !1 : getSanityNodeArrayPath(sanityNode1.path) === getSanityNodeArrayPath(sanityNode2.path);\n}\nfunction resolveDragAndDropGroup(element, sanity, elementSet, elementsMap) {\n  if (!element.getAttribute(\"data-sanity\") || element.getAttribute(\"data-sanity-drag-disable\") || !sanity || !isSanityNode(sanity) || !isSanityArrayPath(sanity.path)) return null;\n  const targetDragGroup = element.getAttribute(\"data-sanity-drag-group\"), group = [...elementSet].reduce((acc, el) => {\n    const elData = elementsMap.get(el), elDragDisabled = el.getAttribute(\"data-sanity-drag-disable\"), elDragGroup = el.getAttribute(\"data-sanity-drag-group\"), elHasSanityAttribution = el.getAttribute(\"data-sanity\") !== null, sharedDragGroup = targetDragGroup !== null ? targetDragGroup === elDragGroup : !0;\n    return elData && !elDragDisabled && isSanityNode(elData.sanity) && sanityNodesExistInSameArray(sanity, elData.sanity) && sharedDragGroup && elHasSanityAttribution && acc.push(elData), acc;\n  }, []);\n  return group.length <= 1 ? null : group;\n}\nfunction createOverlayController({\n  handler,\n  overlayElement,\n  inFrame,\n  inPopUp,\n  optimisticActorReady\n}) {\n  let activated = !1;\n  const elementIdMap = /* @__PURE__ */ new Map(), elementsMap = /* @__PURE__ */ new WeakMap(), elementSet = /* @__PURE__ */ new Set(), measureElements = /* @__PURE__ */ new WeakMap(), cursorMap = /* @__PURE__ */ new WeakMap();\n  let ro, io, mo, activeDragSequence = !1, hoverStack = [];\n  const getHoveredElement = () => hoverStack[hoverStack.length - 1];\n  function addEventHandlers(el, handlers) {\n    el.addEventListener(\"click\", handlers.click, {\n      capture: !0\n    }), el.addEventListener(\"contextmenu\", handlers.contextmenu, {\n      capture: !0\n    }), el.addEventListener(\"mousemove\", handlers.mousemove, {\n      once: !0,\n      capture: !0\n    }), el.addEventListener(\"mousedown\", handlers.mousedown, {\n      capture: !0\n    });\n  }\n  function removeEventHandlers(el, handlers) {\n    el.removeEventListener(\"click\", handlers.click, {\n      capture: !0\n    }), el.removeEventListener(\"contextmenu\", handlers.contextmenu, {\n      capture: !0\n    }), el.removeEventListener(\"mousemove\", handlers.mousemove, {\n      capture: !0\n    }), el.removeEventListener(\"mousedown\", handlers.mousedown, {\n      capture: !0\n    }), el.removeEventListener(\"mouseenter\", handlers.mouseenter), el.removeEventListener(\"mouseleave\", handlers.mouseleave);\n  }\n  function activateElement({\n    id,\n    elements,\n    handlers\n  }) {\n    const {\n      element,\n      measureElement\n    } = elements;\n    addEventHandlers(element, handlers), ro.observe(measureElement), handler({\n      type: \"element/activate\",\n      id\n    });\n  }\n  function deactivateElement({\n    id,\n    elements,\n    handlers\n  }) {\n    const {\n      element,\n      measureElement\n    } = elements;\n    removeEventHandlers(element, handlers), ro.unobserve(measureElement), hoverStack = hoverStack.filter((el) => el !== element), handler({\n      type: \"element/deactivate\",\n      id\n    });\n  }\n  function setOverlayCursor(element) {\n    if (!(!inFrame && !inPopUp || !optimisticActorReady))\n      for (const hoverstackElement of hoverStack) {\n        if (element === hoverstackElement) {\n          const targetSanityData = elementsMap.get(element)?.sanity;\n          if (!targetSanityData || !isSanityNode(targetSanityData)) return;\n          if (resolveDragAndDropGroup(element, targetSanityData, elementSet, elementsMap)) {\n            const existingCursor = element.style.cursor;\n            existingCursor && cursorMap.set(element, existingCursor), handler({\n              type: \"overlay/setCursor\",\n              element,\n              cursor: \"move\"\n            });\n            continue;\n          }\n        }\n        restoreOverlayCursor(hoverstackElement);\n      }\n  }\n  function restoreOverlayCursor(element) {\n    const previousCursor = cursorMap.get(element);\n    handler({\n      type: \"overlay/setCursor\",\n      element,\n      cursor: previousCursor\n    });\n  }\n  function registerElement({\n    elements,\n    sanity\n  }) {\n    const {\n      element,\n      measureElement\n    } = elements, eventHandlers = {\n      click(event) {\n        const target = event.target;\n        if (element === getHoveredElement() && element.contains(target)) {\n          inFrame && (event.preventDefault(), event.stopPropagation());\n          const sanity2 = elementsMap.get(element)?.sanity;\n          sanity2 && !activeDragSequence && handler({\n            type: \"element/click\",\n            id,\n            sanity: sanity2\n          });\n        }\n      },\n      contextmenu(event) {\n        if (!(\"path\" in sanity) || !inFrame && !inPopUp || !optimisticActorReady || !sanity.path.split(\".\").pop()?.includes(\"[_key==\")) return;\n        const target = event.target;\n        element === getHoveredElement() && element.contains(target) && ((inFrame || inPopUp) && (event.preventDefault(), event.stopPropagation()), handler({\n          type: \"element/contextmenu\",\n          id,\n          position: {\n            x: event.clientX,\n            y: event.clientY\n          },\n          sanity\n        }));\n      },\n      mousedown(event) {\n        if (event.preventDefault(), event.currentTarget !== hoverStack.at(-1) || element.getAttribute(\"data-sanity-drag-disable\") || !inFrame && !inPopUp || !optimisticActorReady) return;\n        const targetSanityData = elementsMap.get(element)?.sanity;\n        if (!targetSanityData || !isSanityNode(targetSanityData) || !isSanityArrayPath(targetSanityData.path)) return;\n        const dragGroup = resolveDragAndDropGroup(element, sanity, elementSet, elementsMap);\n        dragGroup && handleOverlayDrag({\n          element,\n          handler,\n          mouseEvent: event,\n          overlayGroup: dragGroup,\n          target: targetSanityData,\n          onSequenceStart: () => {\n            activeDragSequence = !0;\n          },\n          onSequenceEnd: () => {\n            setTimeout(() => {\n              activeDragSequence = !1;\n            }, 250);\n          }\n        });\n      },\n      mousemove(event) {\n        eventHandlers.mouseenter(event);\n        const el = event.currentTarget;\n        el && (el.addEventListener(\"mouseenter\", eventHandlers.mouseenter), el.addEventListener(\"mouseleave\", eventHandlers.mouseleave));\n      },\n      mouseenter() {\n        document.querySelector(\"vercel-live-feedback\") && element.closest(\"[data-vercel-edit-info]\") || element.closest(\"[data-vercel-edit-target]\") || (hoverStack.push(element), handler({\n          type: \"element/mouseenter\",\n          id,\n          rect: getRect(element)\n        }), setOverlayCursor(element));\n      },\n      mouseleave(e) {\n        function leave() {\n          hoverStack.pop();\n          const hoveredElement = getHoveredElement();\n          if (handler({\n            type: \"element/mouseleave\",\n            id\n          }), hoveredElement) {\n            setOverlayCursor(hoveredElement);\n            const overlayElement2 = elementsMap.get(hoveredElement);\n            overlayElement2 && handler({\n              type: \"element/mouseenter\",\n              id: overlayElement2.id,\n              rect: getRect(hoveredElement)\n            });\n          }\n          restoreOverlayCursor(element);\n        }\n        function addDeferredLeave(el) {\n          const deferredLeave = (e2) => {\n            const {\n              relatedTarget: relatedTarget2\n            } = e2;\n            findOverlayElement(relatedTarget2) ? relatedTarget2 && isElementNode$1(relatedTarget2) && (el.removeEventListener(\"mouseleave\", deferredLeave), addDeferredLeave(relatedTarget2)) : (el.removeEventListener(\"mouseleave\", deferredLeave), leave());\n          };\n          el.addEventListener(\"mouseleave\", deferredLeave);\n        }\n        const {\n          relatedTarget\n        } = e, container = findOverlayElement(relatedTarget), isInteractiveOverlayElement = overlayElement.contains(container);\n        if (isElementNode$1(container) && isInteractiveOverlayElement)\n          return addDeferredLeave(container);\n        leave();\n      }\n    }, id = v4(), sanityNode = {\n      id,\n      elements,\n      sanity,\n      handlers: eventHandlers\n    };\n    elementSet.add(element), measureElements.set(measureElement, element), elementIdMap.set(id, element), elementsMap.set(element, sanityNode), io?.observe(element), handler({\n      type: \"element/register\",\n      id,\n      element,\n      rect: getRect(element),\n      sanity,\n      dragDisabled: !!element.getAttribute(\"data-sanity-drag-disable\")\n    }), activated && activateElement(sanityNode);\n  }\n  function updateElement({\n    elements,\n    sanity\n  }) {\n    const {\n      element\n    } = elements, overlayElement2 = elementsMap.get(element);\n    overlayElement2 && (elementsMap.set(element, {\n      ...overlayElement2,\n      sanity\n    }), handler({\n      type: \"element/update\",\n      id: overlayElement2.id,\n      rect: getRect(element),\n      sanity\n    }));\n  }\n  function parseElements(node) {\n    const sanityNodes = findSanityNodes(node);\n    for (const sanityNode of sanityNodes) {\n      const {\n        element\n      } = sanityNode.elements;\n      elementsMap.has(element) ? updateElement(sanityNode) : registerElement(sanityNode);\n    }\n  }\n  function unregisterElement(element) {\n    const overlayElement2 = elementsMap.get(element);\n    if (overlayElement2) {\n      const {\n        id,\n        handlers\n      } = overlayElement2;\n      removeEventHandlers(element, handlers), ro.unobserve(element), elementsMap.delete(element), elementSet.delete(element), elementIdMap.delete(id), handler({\n        type: \"element/unregister\",\n        id\n      });\n    }\n  }\n  function handleMutation(mutations) {\n    let mutationWasInScope = !1;\n    for (const mutation of mutations) {\n      const {\n        target,\n        type\n      } = mutation, node = type === \"characterData\" ? target.parentElement : target;\n      node === overlayElement || overlayElement.contains(node) || (mutationWasInScope = !0, isElementNode$1(node) && parseElements({\n        childNodes: [node]\n      }));\n    }\n    if (mutationWasInScope)\n      for (const element of elementSet)\n        element.isConnected || unregisterElement(element);\n  }\n  function updateRect(el) {\n    const overlayElement2 = elementsMap.get(el);\n    overlayElement2 && handler({\n      type: \"element/updateRect\",\n      id: overlayElement2.id,\n      rect: getRect(el)\n    });\n  }\n  function handleResize(entries) {\n    for (const entry of entries) {\n      const target = entry.target;\n      if (isElementNode$1(target)) {\n        const element = measureElements.get(target);\n        if (!element) return;\n        updateRect(element);\n      }\n    }\n  }\n  function handleIntersection(entries) {\n    if (activated)\n      for (const entry of entries) {\n        const {\n          target\n        } = entry, match = isElementNode$1(target) && elementsMap.get(target);\n        match && (entry.isIntersecting ? activateElement(match) : deactivateElement(match));\n      }\n  }\n  function handleBlur(event) {\n    const element = findOverlayElement(event.target);\n    if (element) {\n      element.dataset.sanityOverlayElement === \"capture\" && (event.preventDefault(), event.stopPropagation());\n      return;\n    }\n    hoverStack = [], handler({\n      type: \"overlay/blur\"\n    });\n  }\n  function handleWindowResize() {\n    for (const element of elementSet)\n      updateRect(element);\n  }\n  function handleKeydown(event) {\n    event.key === \"Escape\" && (hoverStack = [], handler({\n      type: \"overlay/blur\"\n    }));\n  }\n  function handleWindowScroll(event) {\n    const {\n      target\n    } = event;\n    if (!(target === window.document || !isElementNode$1(target)))\n      for (const element of elementSet)\n        target.contains(element) && updateRect(element);\n  }\n  function activate() {\n    activated || (io = new IntersectionObserver(handleIntersection, {\n      threshold: 0.3\n    }), elementSet.forEach((element) => io.observe(element)), handler({\n      type: \"overlay/activate\"\n    }), activated = !0);\n  }\n  function deactivate() {\n    activated && (io?.disconnect(), elementSet.forEach((element) => {\n      const overlayElement2 = elementsMap.get(element);\n      overlayElement2 && deactivateElement(overlayElement2);\n    }), handler({\n      type: \"overlay/deactivate\"\n    }), activated = !1);\n  }\n  function destroy() {\n    window.removeEventListener(\"click\", handleBlur), window.removeEventListener(\"contextmenu\", handleBlur), window.removeEventListener(\"keydown\", handleKeydown), window.removeEventListener(\"resize\", handleWindowResize), window.removeEventListener(\"scroll\", handleWindowScroll), mo.disconnect(), ro.disconnect(), elementSet.forEach((element) => {\n      unregisterElement(element);\n    }), elementIdMap.clear(), elementSet.clear(), hoverStack = [], deactivate();\n  }\n  function create() {\n    window.addEventListener(\"click\", handleBlur), window.addEventListener(\"contextmenu\", handleBlur), window.addEventListener(\"keydown\", handleKeydown), window.addEventListener(\"resize\", handleWindowResize), window.addEventListener(\"scroll\", handleWindowScroll, {\n      capture: !0,\n      passive: !0\n    }), ro = new ResizeObserver(handleResize), mo = new MutationObserver(handleMutation), mo.observe(document.body, {\n      attributes: !0,\n      characterData: !0,\n      childList: !0,\n      subtree: !0\n    }), parseElements(document.body), activate();\n  }\n  return window.document.fonts.ready.then(() => {\n    for (const element of elementSet)\n      updateRect(element);\n  }), create(), {\n    activate,\n    deactivate,\n    destroy\n  };\n}\nconst SharedStateContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n\n//# sourceMappingURL=SharedStateContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/SharedStateContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/context.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/dist/_chunks-es/context.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actor: () => (/* binding */ actor),\n/* harmony export */   emptyActor: () => (/* binding */ emptyActor),\n/* harmony export */   isEmptyActor: () => (/* binding */ isEmptyActor),\n/* harmony export */   listeners: () => (/* binding */ listeners),\n/* harmony export */   setActor: () => (/* binding */ setActor)\n/* harmony export */ });\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n\nconst emptyActor = (0,xstate__WEBPACK_IMPORTED_MODULE_0__.createEmptyActor)();\nlet actor = emptyActor;\nconst listeners = /* @__PURE__ */ new Set();\nfunction isEmptyActor(actor2) {\n  return actor2 === emptyActor;\n}\nfunction setActor(nextActor) {\n  actor = nextActor;\n  for (const onActorChange of listeners)\n    onActorChange();\n}\n\n//# sourceMappingURL=context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9kaXN0L19jaHVua3MtZXMvY29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMEM7QUFDMUMsbUJBQW1CLHdEQUFnQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9kaXN0L19jaHVua3MtZXMvY29udGV4dC5qcz8yYTZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVtcHR5QWN0b3IgfSBmcm9tIFwieHN0YXRlXCI7XG5jb25zdCBlbXB0eUFjdG9yID0gY3JlYXRlRW1wdHlBY3RvcigpO1xubGV0IGFjdG9yID0gZW1wdHlBY3RvcjtcbmNvbnN0IGxpc3RlbmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG5mdW5jdGlvbiBpc0VtcHR5QWN0b3IoYWN0b3IyKSB7XG4gIHJldHVybiBhY3RvcjIgPT09IGVtcHR5QWN0b3I7XG59XG5mdW5jdGlvbiBzZXRBY3RvcihuZXh0QWN0b3IpIHtcbiAgYWN0b3IgPSBuZXh0QWN0b3I7XG4gIGZvciAoY29uc3Qgb25BY3RvckNoYW5nZSBvZiBsaXN0ZW5lcnMpXG4gICAgb25BY3RvckNoYW5nZSgpO1xufVxuZXhwb3J0IHtcbiAgYWN0b3IsXG4gIGVtcHR5QWN0b3IsXG4gIGlzRW1wdHlBY3RvcixcbiAgbGlzdGVuZXJzLFxuICBzZXRBY3RvclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRleHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/context.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   getArrayDuplicatePatches: () => (/* binding */ getArrayDuplicatePatches),\n/* harmony export */   getArrayInsertPatches: () => (/* binding */ getArrayInsertPatches),\n/* harmony export */   getArrayItemKeyAndParentPath: () => (/* binding */ getArrayItemKeyAndParentPath),\n/* harmony export */   getArrayMovePatches: () => (/* binding */ getArrayMovePatches),\n/* harmony export */   getArrayRemovePatches: () => (/* binding */ getArrayRemovePatches),\n/* harmony export */   useDocuments: () => (/* binding */ useDocuments),\n/* harmony export */   useOptimisticActor: () => (/* binding */ useOptimisticActor),\n/* harmony export */   useOptimisticActorReady: () => (/* binding */ useOptimisticActorReady)\n/* harmony export */ });\n/* harmony import */ var react_compiler_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-compiler-runtime */ \"(ssr)/./node_modules/react-compiler-runtime/dist/index.js\");\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sanity/client/csm */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var _sanity_mutate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/mutate */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js\");\n/* harmony import */ var _sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sanity/presentation-comlink */ \"(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/context.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var get_random_values_esm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! get-random-values-esm */ \"(ssr)/./node_modules/get-random-values-esm/index.mjs\");\n\n\n\n\n\n\n\nconst reKeySegment$1 = /_key\\s*==\\s*['\"](.*)['\"]/, reIndexTuple = /^\\d*:\\d*$/;\nfunction isIndexSegment(segment) {\n  return typeof segment == \"number\" || typeof segment == \"string\" && /^\\[\\d+\\]$/.test(segment);\n}\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment$1.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction isIndexTuple(segment) {\n  if (typeof segment == \"string\" && reIndexTuple.test(segment))\n    return !0;\n  if (!Array.isArray(segment) || segment.length !== 2)\n    return !1;\n  const [from, to] = segment;\n  return (typeof from == \"number\" || from === \"\") && (typeof to == \"number\" || to === \"\");\n}\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/;\nfunction get(obj, path, defaultVal) {\n  const select = typeof path == \"string\" ? fromString(path) : path;\n  if (!Array.isArray(select))\n    throw new Error(\"Path must be an array or a string\");\n  let acc = obj;\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i];\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc[segment];\n    }\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc.find((item) => item._key === segment._key);\n    }\n    if (typeof segment == \"string\" && (acc = typeof acc == \"object\" && acc !== null ? acc[segment] : void 0), typeof acc > \"u\")\n      return defaultVal;\n  }\n  return acc;\n}\nfunction fromString(path) {\n  if (typeof path != \"string\")\n    throw new Error(\"Path is not a string\");\n  const segments = path.match(rePropName);\n  if (!segments)\n    throw new Error(\"Invalid path string\");\n  return segments.map(normalizePathSegment);\n}\nfunction normalizePathSegment(segment) {\n  return isIndexSegment(segment) ? normalizeIndexSegment(segment) : isKeySegment(segment) ? normalizeKeySegment(segment) : isIndexTuple(segment) ? normalizeIndexTupleSegment(segment) : segment;\n}\nfunction normalizeIndexSegment(segment) {\n  return Number(segment.replace(/[^\\d]/g, \"\"));\n}\nfunction normalizeKeySegment(segment) {\n  return { _key: segment.match(reKeySegment)[1] };\n}\nfunction normalizeIndexTupleSegment(segment) {\n  const [from, to] = segment.split(\":\").map((seg) => seg === \"\" ? seg : Number(seg));\n  return [from, to];\n}\nfunction useOptimisticActor() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(_temp, _temp2, _temp3);\n}\nfunction _temp3() {\n  return _context_js__WEBPACK_IMPORTED_MODULE_2__.emptyActor;\n}\nfunction _temp2() {\n  return _context_js__WEBPACK_IMPORTED_MODULE_2__.actor;\n}\nfunction _temp(listener) {\n  return _context_js__WEBPACK_IMPORTED_MODULE_2__.listeners.add(listener), () => _context_js__WEBPACK_IMPORTED_MODULE_2__.listeners.delete(listener);\n}\nfunction useOptimisticActorReady() {\n  const actor2 = useOptimisticActor();\n  let t0;\n  return t0 = !(0,_context_js__WEBPACK_IMPORTED_MODULE_2__.isEmptyActor)(actor2), t0;\n}\nfunction debounce(fn, timeout) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer), timer = setTimeout(() => {\n      fn.apply(fn, args);\n    }, timeout);\n  };\n}\nfunction getDocumentsAndSnapshot(id, actor2) {\n  const inFrame = (0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_3__.isMaybePreviewIframe)(), inPopUp = (0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_3__.isMaybePreviewWindow)();\n  if ((0,_context_js__WEBPACK_IMPORTED_MODULE_2__.isEmptyActor)(actor2) || !inFrame && !inPopUp)\n    throw new Error(\"The `useDocuments` hook cannot be used in this context\");\n  const draftId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_4__.getDraftId)(id), publishedId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_4__.getPublishedId)(id), documents = actor2.getSnapshot().context?.documents, draftDoc = documents?.[draftId], publishedDoc = documents?.[publishedId], doc = draftDoc || publishedDoc;\n  if (!doc)\n    throw new Error(`Document \"${id}\" not found`);\n  const snapshot = draftDoc.getSnapshot().context?.local || publishedDoc.getSnapshot().context?.local, snapshotPromise = new Promise((resolve) => {\n    if (snapshot)\n      resolve(snapshot);\n    else {\n      const subscriber = doc.on(\"ready\", (event) => {\n        const {\n          snapshot: snapshot2\n        } = event;\n        resolve(snapshot2 || null), subscriber.unsubscribe();\n      });\n    }\n  });\n  return {\n    draftDoc,\n    draftId,\n    getSnapshot: () => snapshotPromise,\n    publishedDoc,\n    publishedId,\n    /**\n     * @deprecated - use `getSnapshot` instead\n     */\n    get snapshot() {\n      if (!snapshot)\n        throw new Error(`Snapshot for document \"${id}\" not found`);\n      return snapshot;\n    }\n  };\n}\nfunction createDocumentCommit(id, actor2) {\n  return () => {\n    const {\n      draftDoc\n    } = getDocumentsAndSnapshot(id, actor2);\n    draftDoc.send({\n      type: \"submit\"\n    });\n  };\n}\nfunction createDocumentGet(id, actor2) {\n  return (path) => {\n    const {\n      snapshot\n    } = getDocumentsAndSnapshot(id, actor2);\n    return path ? get(snapshot, path) : snapshot;\n  };\n}\nfunction createDocumentGetSnapshot(id, actor2) {\n  const {\n    getSnapshot\n  } = getDocumentsAndSnapshot(id, actor2);\n  return getSnapshot;\n}\nfunction createDocumentPatch(id, actor2) {\n  return async (patches, options) => {\n    const result = getDocumentsAndSnapshot(id, actor2), {\n      draftDoc,\n      draftId,\n      getSnapshot,\n      publishedId\n    } = result, {\n      commit = !0\n    } = options || {}, resolvedPatches = await (typeof patches == \"function\" ? patches({\n      draftId,\n      publishedId,\n      /**\n       * @deprecated - use `getSnapshot` instead\n       */\n      get snapshot() {\n        return result.snapshot;\n      },\n      getSnapshot\n    }) : patches), _snapshot = await getSnapshot();\n    if (!_snapshot)\n      throw new Error(`Snapshot for document \"${id}\" not found`);\n    draftDoc.send({\n      type: \"mutate\",\n      mutations: [\n        // Attempt to create the draft document, it might not exist if the\n        // snapshot was from the published document\n        (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.createIfNotExists)({\n          ..._snapshot,\n          _id: draftId\n        }),\n        // Patch the draft document with the resolved patches\n        (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.patch)(draftId, resolvedPatches)\n      ]\n    }), commit && (typeof commit == \"object\" && \"debounce\" in commit ? debounce(() => draftDoc.send({\n      type: \"submit\"\n    }), commit.debounce)() : draftDoc.send({\n      type: \"submit\"\n    }));\n  };\n}\nfunction useDocuments() {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_0__.c)(7), actor2 = useOptimisticActor();\n  let t0;\n  $[0] !== actor2 ? (t0 = (documentId) => ({\n    id: documentId,\n    commit: createDocumentCommit(documentId, actor2),\n    get: createDocumentGet(documentId, actor2),\n    getSnapshot: createDocumentGetSnapshot(documentId, actor2),\n    patch: createDocumentPatch(documentId, actor2)\n  }), $[0] = actor2, $[1] = t0) : t0 = $[1];\n  const getDocument = t0;\n  let t1;\n  $[2] !== actor2 ? (t1 = (id, mutations, options) => {\n    const {\n      draftDoc\n    } = getDocumentsAndSnapshot(id, actor2), {\n      commit: t22\n    } = options || {}, commit = t22 === void 0 ? !0 : t22;\n    draftDoc.send({\n      type: \"mutate\",\n      mutations\n    }), commit && (typeof commit == \"object\" && \"debounce\" in commit ? debounce(() => draftDoc.send({\n      type: \"submit\"\n    }), commit.debounce)() : draftDoc.send({\n      type: \"submit\"\n    }));\n  }, $[2] = actor2, $[3] = t1) : t1 = $[3];\n  const mutateDocument = t1;\n  let t2;\n  return $[4] !== getDocument || $[5] !== mutateDocument ? (t2 = {\n    getDocument,\n    mutateDocument\n  }, $[4] = getDocument, $[5] = mutateDocument, $[6] = t2) : t2 = $[6], t2;\n}\nfunction whatwgRNG(length = 16) {\n  const rnds8 = new Uint8Array(length);\n  return (0,get_random_values_esm__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(rnds8), rnds8;\n}\nconst getByteHexTable = /* @__PURE__ */ (() => {\n  let table;\n  return () => {\n    if (table)\n      return table;\n    table = [];\n    for (let i = 0; i < 256; ++i)\n      table[i] = (i + 256).toString(16).slice(1);\n    return table;\n  };\n})();\nfunction randomKey(length) {\n  const table = getByteHexTable();\n  return whatwgRNG(length).reduce((str, n) => str + table[n], \"\").slice(0, length);\n}\nfunction getArrayItemKeyAndParentPath(pathOrNode) {\n  const elementPath = typeof pathOrNode == \"string\" ? pathOrNode : pathOrNode.path, lastDotIndex = elementPath.lastIndexOf(\".\"), lastPathItem = elementPath.substring(lastDotIndex + 1, elementPath.length);\n  if (!lastPathItem.indexOf(\"[\")) throw new Error(\"Invalid path: not an array\");\n  const lastArrayIndex = elementPath.lastIndexOf(\"[\"), path = elementPath.substring(0, lastArrayIndex);\n  let key, hasExplicitKey;\n  if (lastPathItem.includes(\"_key\")) {\n    const startIndex = lastPathItem.indexOf('\"') + 1, endIndex = lastPathItem.indexOf('\"', startIndex);\n    key = lastPathItem.substring(startIndex, endIndex), hasExplicitKey = !0;\n  } else {\n    const startIndex = lastPathItem.indexOf(\"[\") + 1, endIndex = lastPathItem.indexOf(\"]\", startIndex);\n    key = lastPathItem.substring(startIndex, endIndex), hasExplicitKey = !1;\n  }\n  if (!path || !key) throw new Error(\"Invalid path\");\n  return {\n    path,\n    key,\n    hasExplicitKey\n  };\n}\nfunction getArrayDuplicatePatches(node, snapshot, position = \"after\") {\n  const {\n    path: arrayPath,\n    key: itemKey\n  } = getArrayItemKeyAndParentPath(node), duplicate = {\n    ...get(snapshot, node.path),\n    _key: randomKey()\n  };\n  return [(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(arrayPath, (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.insert)(duplicate, position, {\n    _key: itemKey\n  }))];\n}\nfunction getArrayRemovePatches(node, snapshot) {\n  const {\n    path: arrayPath,\n    key: itemKey\n  } = getArrayItemKeyAndParentPath(node), currentIndex = get(snapshot, arrayPath).findIndex((item) => item._key === itemKey);\n  return [(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(arrayPath, (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.truncate)(currentIndex, currentIndex + 1))];\n}\nfunction getArrayInsertPatches(node, insertType, position) {\n  const {\n    path: arrayPath,\n    key: itemKey\n  } = getArrayItemKeyAndParentPath(node), insertKey = randomKey();\n  return [(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(arrayPath, (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.insert)([{\n    _type: insertType,\n    _key: insertKey\n  }], position, {\n    _key: itemKey\n  }))];\n}\nasync function getArrayMovePatches(node, doc, moveTo) {\n  if (!node.type) throw new Error(\"Node type is missing\");\n  const {\n    path: arrayPath,\n    key: itemKey\n  } = getArrayItemKeyAndParentPath(node), snapshot = await doc.getSnapshot(), array = get(snapshot, arrayPath), item = get(snapshot, node.path), currentIndex = array.findIndex((item2) => item2._key === itemKey);\n  let nextIndex = -1, position = \"before\";\n  if (moveTo === \"first\") {\n    if (currentIndex === 0) return [];\n    nextIndex = 0, position = \"before\";\n  } else if (moveTo === \"last\") {\n    if (currentIndex === array.length - 1) return [];\n    nextIndex = -1, position = \"after\";\n  } else if (moveTo === \"next\") {\n    if (currentIndex === array.length - 1) return [];\n    nextIndex = currentIndex, position = \"after\";\n  } else if (moveTo === \"previous\") {\n    if (currentIndex === 0) return [];\n    nextIndex = currentIndex - 1, position = \"before\";\n  }\n  return [(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(arrayPath, (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.truncate)(currentIndex, currentIndex + 1)), (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(arrayPath, (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.insert)(item, position, nextIndex))];\n}\n\n//# sourceMappingURL=mutations.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/dist/optimistic/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/dist/optimistic/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actor: () => (/* reexport safe */ _chunks_es_context_js__WEBPACK_IMPORTED_MODULE_6__.actor),\n/* harmony export */   createDatasetMutator: () => (/* binding */ createDatasetMutator),\n/* harmony export */   createDocumentMutator: () => (/* binding */ createDocumentMutator),\n/* harmony export */   emptyActor: () => (/* reexport safe */ _chunks_es_context_js__WEBPACK_IMPORTED_MODULE_6__.emptyActor),\n/* harmony export */   isEmptyActor: () => (/* reexport safe */ _chunks_es_context_js__WEBPACK_IMPORTED_MODULE_6__.isEmptyActor),\n/* harmony export */   listeners: () => (/* reexport safe */ _chunks_es_context_js__WEBPACK_IMPORTED_MODULE_6__.listeners),\n/* harmony export */   setActor: () => (/* reexport safe */ _chunks_es_context_js__WEBPACK_IMPORTED_MODULE_6__.setActor)\n/* harmony export */ });\n/* harmony import */ var _chunks_es_context_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_chunks-es/context.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/context.js\");\n/* harmony import */ var _sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sanity/mutate/_unstable_machine */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_unstable_machine.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/log-b47a3833.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/raise-527db318.development.esm.js\");\n/* harmony import */ var _sanity_mutate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sanity/mutate */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js\");\n\n\n\n\nconst createDocumentMutator = (comlink) => {\n  const fetchSnapshot = (0,xstate__WEBPACK_IMPORTED_MODULE_0__.fromPromise)(async ({\n    input,\n    signal\n  }) => {\n    const {\n      id\n    } = input, {\n      snapshot\n    } = await comlink.fetch(\"visual-editing/fetch-snapshot\", {\n      documentId: id\n    }, {\n      signal\n    });\n    return snapshot;\n  }), submitMutations = (0,xstate__WEBPACK_IMPORTED_MODULE_0__.fromPromise)(async ({\n    input\n  }) => {\n    const {\n      transactions\n    } = input;\n    for (const transaction of transactions) {\n      const data = _sanity_mutate__WEBPACK_IMPORTED_MODULE_1__.SanityEncoder.encodeTransaction(transaction);\n      return comlink.post(\"visual-editing/mutate\", data);\n    }\n  });\n  return _sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_2__.documentMutatorMachine.provide({\n    actions: {\n      \"send sync event to parent\": (0,xstate__WEBPACK_IMPORTED_MODULE_3__.b)(({\n        enqueue\n      }) => {\n        enqueue.sendParent(({\n          context\n        }) => ({\n          type: \"sync\",\n          id: context.id,\n          document: context.remote\n        })), enqueue.emit(({\n          context\n        }) => ({\n          type: \"ready\",\n          snapshot: context.local\n        }));\n      })\n    },\n    actors: {\n      \"fetch remote snapshot\": fetchSnapshot,\n      \"submit mutations as transactions\": submitMutations\n    }\n  });\n}, datasetMutatorMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  types: {},\n  actions: {\n    \"emit sync event\": (0,xstate__WEBPACK_IMPORTED_MODULE_3__.e)(({\n      event\n    }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"sync\"), event)),\n    \"emit mutation event\": (0,xstate__WEBPACK_IMPORTED_MODULE_3__.e)(({\n      event\n    }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutation\"), event)),\n    \"emit rebased event\": (0,xstate__WEBPACK_IMPORTED_MODULE_3__.e)(({\n      event\n    }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, [\"rebased.local\", \"rebased.remote\"]), event)),\n    \"emit pristine event\": (0,xstate__WEBPACK_IMPORTED_MODULE_3__.e)(({\n      event\n    }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, [\"pristine\"]), event)),\n    \"add document actor\": (0,xstate__WEBPACK_IMPORTED_MODULE_3__.a)({\n      documents: ({\n        context,\n        event,\n        spawn\n      }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"observe\");\n        const id = event.documentId;\n        return context.documents[id] ? context.documents : {\n          ...context.documents,\n          [id]: spawn(\"documentMutatorMachine\", {\n            input: {\n              id,\n              client: context.client,\n              sharedListener: context.sharedListener || (0,_sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_2__.createSharedListener)(context.client)\n            },\n            id\n          })\n        };\n      }\n    }),\n    \"stop remote snapshot\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.R)(({\n      context,\n      event\n    }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"unobserve\"), context.documents[event.documentId])),\n    \"remove remote snapshot from context\": (0,xstate__WEBPACK_IMPORTED_MODULE_3__.a)({\n      documents: ({\n        context,\n        event\n      }) => {\n        if ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"unobserve\"), !context.documents[event.documentId]) return context.documents;\n        const {\n          [event.documentId]: _,\n          ...documents\n        } = context.documents;\n        return documents;\n      }\n    })\n  },\n  actors: {\n    documentMutatorMachine: _sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_2__.documentMutatorMachine\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QBsD2BjAhsgIhgrgLZgB2ALgMTICWsZpA2gAwC6ioADqrNWdaiXYgAHogC0ADgBMAOgkA2ACyKArBICcTdfKXSANCACeiFQHYZpgMxWV800yYqp6gIyn5AXw8G0WXAWJyCnwSGjpGViEuHj4BIVEEKUt5OSlFU1smFwkFW0sDY0T1GRUXRXkXKVN7HSYJJkUvHwxsPHQiUjIZDgAnWj4SMApCfDJMemY2JBBo3n5BaYSXeVlbKRUsiXdFSxcXfKNERSqZTbr1zVMJNyaQX1aAzpkIah6yQwp0VEJCXkmo7hzOKLRDLFwyFxaSzXKTOKQudSKCQFRDOczqCSWJjwjbHCQqRFebwgEioCBwIT3fztQJkAExebxcQuFEIZaWGRIrF7dSXKTyFSNYlUtodcjdPp0aiDelAhagBLpVmWAmc46mNwSZTyLQuFS3EWPcUvN6FTiA2LykSoq6c6wbCqVUzparKioyRFVfkq1zqNSWIkeIA */\n  id: \"dataset-mutator\",\n  context: ({\n    input\n  }) => ({\n    documents: {},\n    client: input.client,\n    sharedListener: input.sharedListener\n  }),\n  on: {\n    sync: {\n      actions: [\"emit sync event\"]\n    },\n    mutation: {\n      actions: [\"emit mutation event\"]\n    },\n    \"rebased.*\": {\n      actions: [\"emit rebased event\"]\n    },\n    pristine: {\n      actions: [\"emit pristine event\"]\n    },\n    observe: {\n      actions: [\"add document actor\"]\n    },\n    unobserve: {\n      actions: [\"stop remote snapshot\", \"remove remote snapshot from context\"]\n    }\n  },\n  initial: \"pristine\",\n  states: {\n    pristine: {}\n  }\n}), createDatasetMutator = (comlink) => datasetMutatorMachine.provide({\n  actors: {\n    documentMutatorMachine: createDocumentMutator(comlink)\n  }\n});\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/dist/optimistic/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/dist/react/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/dist/react/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VisualEditing: () => (/* binding */ VisualEditing),\n/* harmony export */   createDataAttribute: () => (/* reexport safe */ _sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_11__.createDataAttribute),\n/* harmony export */   createDatasetMutator: () => (/* reexport safe */ _optimistic_index_js__WEBPACK_IMPORTED_MODULE_19__.createDatasetMutator),\n/* harmony export */   createDocumentMutator: () => (/* reexport safe */ _optimistic_index_js__WEBPACK_IMPORTED_MODULE_19__.createDocumentMutator),\n/* harmony export */   emptyActor: () => (/* reexport safe */ _chunks_es_context_js__WEBPACK_IMPORTED_MODULE_21__.emptyActor),\n/* harmony export */   useDocuments: () => (/* reexport safe */ _chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.useDocuments),\n/* harmony export */   useOptimistic: () => (/* reexport safe */ _chunks_es_SharedStateContext_js__WEBPACK_IMPORTED_MODULE_13__.useOptimistic),\n/* harmony export */   useOptimisticActor: () => (/* reexport safe */ _chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.useOptimisticActor)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-compiler-runtime */ \"(ssr)/./node_modules/react-compiler-runtime/dist/index.js\");\n/* harmony import */ var _sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sanity/presentation-comlink */ \"(ssr)/./node_modules/@sanity/presentation-comlink/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sanity/client/csm */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var _sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sanity/ui/_visual-editing */ \"(ssr)/./node_modules/@sanity/ui/dist/_chunks-es/_visual-editing.mjs\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! styled-components */ \"(ssr)/./node_modules/styled-components/dist/styled-components.esm.js\");\n/* harmony import */ var _chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_chunks-es/mutations.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js\");\n/* harmony import */ var _chunks_es_SharedStateContext_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../_chunks-es/SharedStateContext.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/SharedStateContext.js\");\n/* harmony import */ var _sanity_mutate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/mutate */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js\");\n/* harmony import */ var _chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../_chunks-es/PointerEvents.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/PointerEvents.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sanity/icons */ \"(ssr)/./node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var _sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sanity/visual-editing-csm */ \"(ssr)/./node_modules/@sanity/visual-editing-csm/dist/index.js\");\n/* harmony import */ var scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! scroll-into-view-if-needed */ \"(ssr)/./node_modules/scroll-into-view-if-needed/dist/index.js\");\n/* harmony import */ var _sanity_comlink__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sanity/comlink */ \"(ssr)/./node_modules/@sanity/comlink/dist/index.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/raise-527db318.development.esm.js\");\n/* harmony import */ var _chunks_es_context_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../_chunks-es/context.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/_chunks-es/context.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/Subject.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/merge.js\");\n/* harmony import */ var _optimistic_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../optimistic/index.js */ \"(ssr)/./node_modules/@sanity/visual-editing/dist/optimistic/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst History = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(8), {\n    comlink,\n    history\n  } = props;\n  let t0, t1;\n  $[0] !== comlink || $[1] !== history ? (t0 = () => comlink?.on(\"presentation/navigate\", (data) => {\n    history?.update(data);\n  }), t1 = [comlink, history], $[0] = comlink, $[1] = history, $[2] = t0, $[3] = t1) : (t0 = $[2], t1 = $[3]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t0, t1);\n  let t2, t3;\n  return $[4] !== comlink || $[5] !== history ? (t2 = () => {\n    if (history)\n      return history.subscribe((update) => {\n        update.title = update.title || document.title, comlink?.post(\"visual-editing/navigate\", update);\n      });\n  }, t3 = [comlink, history], $[4] = comlink, $[5] = history, $[6] = t2, $[7] = t3) : (t2 = $[6], t3 = $[7]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t2, t3), null;\n}, Meta = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(3), {\n    comlink\n  } = props;\n  let t0, t1;\n  return $[0] !== comlink ? (t0 = () => {\n    const sendMeta = () => {\n      comlink.post(\"visual-editing/meta\", {\n        title: document.title\n      });\n    }, observer = new MutationObserver((t2) => {\n      const [mutation] = t2;\n      mutation.target.nodeName === \"TITLE\" && sendMeta();\n    });\n    return observer.observe(document.head, {\n      subtree: !0,\n      characterData: !0,\n      childList: !0\n    }), sendMeta(), () => observer.disconnect();\n  }, t1 = [comlink], $[0] = comlink, $[1] = t0, $[2] = t1) : (t0 = $[1], t1 = $[2]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t0, t1), null;\n};\nfunction getReferenceNodeAndInsertPosition(position) {\n  if (position) {\n    const {\n      top,\n      right,\n      bottom,\n      left\n    } = position;\n    if (left || top)\n      return {\n        node: (left ?? top).sanity,\n        position: \"after\"\n      };\n    if (right || bottom)\n      return {\n        node: (right ?? bottom).sanity,\n        position: \"before\"\n      };\n  }\n}\nfunction useDragEndEvents() {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(4), {\n    getDocument\n  } = (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.useDocuments)();\n  let t0, t1;\n  $[0] !== getDocument ? (t0 = () => {\n    const handler = (e) => {\n      const {\n        insertPosition,\n        target,\n        preventInsertDefault\n      } = e.detail;\n      if (preventInsertDefault)\n        return;\n      const reference = getReferenceNodeAndInsertPosition(insertPosition);\n      if (reference) {\n        const doc = getDocument(target.id), {\n          node,\n          position\n        } = reference, {\n          key: targetKey,\n          hasExplicitKey\n        } = (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.getArrayItemKeyAndParentPath)(target), {\n          path: arrayPath,\n          key: referenceItemKey\n        } = (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.getArrayItemKeyAndParentPath)(node);\n        arrayPath && referenceItemKey && referenceItemKey !== targetKey && doc.patch(async (t22) => {\n          const {\n            getSnapshot\n          } = t22, snapshot = await getSnapshot(), elementValue = (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.get)(snapshot, target.path);\n          return hasExplicitKey ? [(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(arrayPath, (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.remove)({\n            _key: targetKey\n          })), (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(arrayPath, (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.insert)(elementValue, position, {\n            _key: referenceItemKey\n          }))] : [(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(arrayPath, (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.remove)(~~targetKey)), (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(arrayPath, (0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.insert)(elementValue, position, referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey))];\n        });\n      }\n    };\n    return window.addEventListener(\"sanity/dragEnd\", handler), () => {\n      window.removeEventListener(\"sanity/dragEnd\", handler);\n    };\n  }, t1 = [getDocument], $[0] = getDocument, $[1] = t0, $[2] = t1) : (t0 = $[1], t1 = $[2]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t0, t1);\n  const dispatchDragEndEvent = _temp$9;\n  let t2;\n  return $[3] === Symbol.for(\"react.memo_cache_sentinel\") ? (t2 = {\n    dispatchDragEndEvent\n  }, $[3] = t2) : t2 = $[3], t2;\n}\nfunction _temp$9(event) {\n  const customEvent = new CustomEvent(\"sanity/dragEnd\", {\n    detail: event,\n    cancelable: !0\n  });\n  window.dispatchEvent(customEvent);\n}\nconst SchemaContext = (0,react__WEBPACK_IMPORTED_MODULE_2__.createContext)(null);\nfunction useSchema() {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(SchemaContext);\n  if (!context)\n    throw new Error(\"Schema context is missing\");\n  return context;\n}\nfunction getArrayRemoveAction(node, doc) {\n  if (!node.type) throw new Error(\"Node type is missing\");\n  return () => doc.patch(async ({\n    getSnapshot\n  }) => (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.getArrayRemovePatches)(node, await getSnapshot()));\n}\nfunction getArrayInsertAction(node, doc, insertType, position) {\n  if (!node.type) throw new Error(\"Node type is missing\");\n  return () => doc.patch(() => (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.getArrayInsertPatches)(node, insertType, position));\n}\nfunction getDuplicateAction(node, doc) {\n  if (!node.type) throw new Error(\"Node type is missing\");\n  return () => doc.patch(async ({\n    getSnapshot\n  }) => (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.getArrayDuplicatePatches)(node, await getSnapshot()));\n}\nfunction getContextMenuItems(context) {\n  const {\n    node,\n    field,\n    parent,\n    doc\n  } = context;\n  return field?.type === \"arrayItem\" ? getContextMenuArrayItems({\n    node,\n    field,\n    doc\n  }) : parent?.type === \"union\" ? getContextMenuUnionItems({\n    node,\n    parent,\n    doc\n  }) : Promise.resolve([]);\n}\nfunction getDuplicateItem(context) {\n  const {\n    node,\n    doc\n  } = context;\n  return doc ? [{\n    type: \"action\",\n    label: \"Duplicate\",\n    icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.CopyIcon,\n    action: getDuplicateAction(node, doc),\n    telemetryEvent: \"Visual Editing Context Menu Item Duplicated\"\n  }] : [];\n}\nfunction getRemoveItems(context) {\n  const {\n    node,\n    doc\n  } = context;\n  return doc ? [{\n    type: \"action\",\n    label: \"Remove\",\n    icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.RemoveIcon,\n    action: getArrayRemoveAction(node, doc),\n    telemetryEvent: \"Visual Editing Context Menu Item Removed\"\n  }] : [];\n}\nasync function getMoveItems(context, withDivider = !0) {\n  const {\n    node,\n    doc\n  } = context;\n  if (!doc) return [];\n  const items = [], groupItems = [], [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.getArrayMovePatches)(node, doc, \"previous\"), (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.getArrayMovePatches)(node, doc, \"next\"), (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.getArrayMovePatches)(node, doc, \"first\"), (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.getArrayMovePatches)(node, doc, \"last\")]);\n  return moveFirstPatches.length && groupItems.push({\n    type: \"action\",\n    label: \"To top\",\n    icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.PublishIcon,\n    action: () => doc.patch(moveFirstPatches),\n    telemetryEvent: \"Visual Editing Context Menu Item Moved\"\n  }), moveUpPatches.length && groupItems.push({\n    type: \"action\",\n    label: \"Up\",\n    icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.ArrowUpIcon,\n    action: () => doc.patch(moveUpPatches),\n    telemetryEvent: \"Visual Editing Context Menu Item Moved\"\n  }), moveDownPatches.length && groupItems.push({\n    type: \"action\",\n    label: \"Down\",\n    icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.ArrowDownIcon,\n    action: () => doc.patch(moveDownPatches),\n    telemetryEvent: \"Visual Editing Context Menu Item Moved\"\n  }), moveLastPatches.length && groupItems.push({\n    type: \"action\",\n    label: \"To bottom\",\n    icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.UnpublishIcon,\n    action: () => doc.patch(moveLastPatches),\n    telemetryEvent: \"Visual Editing Context Menu Item Moved\"\n  }), groupItems.length && (items.push({\n    type: \"group\",\n    label: \"Move\",\n    icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.SortIcon,\n    items: groupItems\n  }), withDivider && items.push({\n    type: \"divider\"\n  })), items;\n}\nasync function getContextMenuArrayItems(context) {\n  const {\n    node,\n    field,\n    doc\n  } = context, items = [];\n  return items.push(...getDuplicateItem(context)), items.push(...getRemoveItems(context)), items.push(...await getMoveItems(context)), items.push({\n    type: \"action\",\n    label: \"Insert before\",\n    icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, \"before\"),\n    telemetryEvent: \"Visual Editing Context Menu Item Inserted\"\n  }), items.push({\n    type: \"action\",\n    label: \"Insert after\",\n    icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, \"after\"),\n    telemetryEvent: \"Visual Editing Context Menu Item Inserted\"\n  }), items;\n}\nconst InsertMenuWrapper = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(12), {\n    label,\n    parent,\n    width,\n    onSelect,\n    boundaryElement\n  } = props;\n  let t0;\n  $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = [\"left-start\", \"right\", \"left\", \"right-end\", \"left-end\", \"bottom\", \"top\"], $[0] = t0) : t0 = $[0];\n  let t1;\n  $[1] === Symbol.for(\"react.memo_cache_sentinel\") ? (t1 = [4, 4, 4, 4], $[1] = t1) : t1 = $[1];\n  let t2;\n  $[2] !== boundaryElement || $[3] !== width ? (t2 = {\n    arrow: !1,\n    constrainSize: !0,\n    floatingBoundary: boundaryElement,\n    padding: 0,\n    placement: \"right-start\",\n    fallbackPlacements: t0,\n    preventOverflow: !0,\n    width,\n    __unstable_margins: t1\n  }, $[2] = boundaryElement, $[3] = width, $[4] = t2) : t2 = $[4];\n  let t3;\n  $[5] !== onSelect || $[6] !== parent ? (t3 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_7__.InsertMenu, { node: parent, onSelect }), $[5] = onSelect, $[6] = parent, $[7] = t3) : t3 = $[7];\n  let t4;\n  return $[8] !== label || $[9] !== t2 || $[10] !== t3 ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.MenuGroup, { fontSize: 1, icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.InsertBelowIcon, padding: 2, popover: t2, space: 2, text: label, children: t3 }), $[8] = label, $[9] = t2, $[10] = t3, $[11] = t4) : t4 = $[11], t4;\n};\nasync function getContextMenuUnionItems(context) {\n  const {\n    doc,\n    node,\n    parent\n  } = context, items = [];\n  if (items.push(...getDuplicateItem(context)), items.push(...getRemoveItems(context)), items.push(...await getMoveItems(context)), parent.options?.insertMenu) {\n    const width = (parent.options.insertMenu || {}).views?.some((view) => view.name === \"grid\") ? 0 : void 0;\n    items.push({\n      type: \"custom\",\n      component: ({\n        boundaryElement,\n        sendTelemetry\n      }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InsertMenuWrapper, { label: \"Insert before\", onSelect: (schemaType) => {\n        getArrayInsertAction(node, doc, schemaType.name, \"before\")(), sendTelemetry(\"Visual Editing Context Menu Item Inserted\", null);\n      }, parent, width, boundaryElement })\n    }), items.push({\n      type: \"custom\",\n      component: ({\n        boundaryElement,\n        sendTelemetry\n      }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InsertMenuWrapper, { label: \"Insert after\", onSelect: (schemaType) => {\n        getArrayInsertAction(node, doc, schemaType.name, \"after\")(), sendTelemetry(\"Visual Editing Context Menu Item Inserted\", null);\n      }, parent, width, boundaryElement })\n    });\n  } else\n    items.push({\n      type: \"group\",\n      label: \"Insert before\",\n      icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.InsertAboveIcon,\n      items: parent.of.filter((item) => item.type === \"unionOption\").map((t) => ({\n        type: \"action\",\n        icon: (0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_7__.getNodeIcon)(t),\n        label: t.name === \"block\" ? \"Paragraph\" : t.title || t.name,\n        action: getArrayInsertAction(node, doc, t.name, \"before\"),\n        telemetryEvent: \"Visual Editing Context Menu Item Inserted\"\n      }))\n    }), items.push({\n      type: \"group\",\n      label: \"Insert after\",\n      icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_6__.InsertBelowIcon,\n      items: parent.of.filter((item) => item.type === \"unionOption\").map((t) => ({\n        type: \"action\",\n        label: t.name === \"block\" ? \"Paragraph\" : t.title || t.name,\n        icon: (0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_7__.getNodeIcon)(t),\n        action: getArrayInsertAction(node, doc, t.name, \"after\"),\n        telemetryEvent: \"Visual Editing Context Menu Item Inserted\"\n      }))\n    });\n  return items;\n}\nconst POPOVER_MARGINS = [-4, 4, -4, 4];\nfunction ContextMenuItem(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(27), {\n    node,\n    onDismiss,\n    boundaryElement\n  } = props, sendTelemetry = (0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_7__.useTelemetry)();\n  let t0;\n  $[0] !== node || $[1] !== onDismiss || $[2] !== sendTelemetry ? (t0 = () => {\n    node.type === \"action\" && (node.action?.(), onDismiss?.(), node.telemetryEvent && sendTelemetry(node.telemetryEvent, null));\n  }, $[0] = node, $[1] = onDismiss, $[2] = sendTelemetry, $[3] = t0) : t0 = $[3];\n  const onClick = t0;\n  if (node.type === \"divider\") {\n    let t1;\n    return $[4] === Symbol.for(\"react.memo_cache_sentinel\") ? (t1 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.MenuDivider, {}), $[4] = t1) : t1 = $[4], t1;\n  }\n  if (node.type === \"action\") {\n    const t1 = !node.action;\n    let t2;\n    return $[5] !== node.hotkeys || $[6] !== node.icon || $[7] !== node.label || $[8] !== onClick || $[9] !== t1 ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.MenuItem, { fontSize: 1, hotkeys: node.hotkeys, icon: node.icon, padding: 2, space: 2, text: node.label, disabled: t1, onClick }), $[5] = node.hotkeys, $[6] = node.icon, $[7] = node.label, $[8] = onClick, $[9] = t1, $[10] = t2) : t2 = $[10], t2;\n  }\n  if (node.type === \"group\") {\n    const t1 = node.icon;\n    let t2;\n    $[11] === Symbol.for(\"react.memo_cache_sentinel\") ? (t2 = {\n      arrow: !1,\n      constrainSize: !0,\n      placement: \"right-start\",\n      fallbackPlacements: [\"left-start\", \"right\", \"left\", \"right-end\", \"left-end\", \"bottom\", \"top\"],\n      preventOverflow: !0,\n      __unstable_margins: POPOVER_MARGINS\n    }, $[11] = t2) : t2 = $[11];\n    const t3 = node.label;\n    let t4;\n    if ($[12] !== boundaryElement || $[13] !== node.items || $[14] !== onDismiss) {\n      let t52;\n      $[16] !== boundaryElement || $[17] !== onDismiss ? (t52 = (item, itemIndex) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ContextMenuItem, { node: item, onDismiss, boundaryElement }, itemIndex), $[16] = boundaryElement, $[17] = onDismiss, $[18] = t52) : t52 = $[18], t4 = node.items.map(t52), $[12] = boundaryElement, $[13] = node.items, $[14] = onDismiss, $[15] = t4;\n    } else\n      t4 = $[15];\n    let t5;\n    return $[19] !== node.icon || $[20] !== node.label || $[21] !== t4 ? (t5 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.MenuGroup, { fontSize: 1, icon: t1, padding: 2, popover: t2, space: 2, text: t3, children: t4 }), $[19] = node.icon, $[20] = node.label, $[21] = t4, $[22] = t5) : t5 = $[22], t5;\n  }\n  if (node.type === \"custom\") {\n    const {\n      component: Component\n    } = node;\n    let t1;\n    return $[23] !== Component || $[24] !== boundaryElement || $[25] !== sendTelemetry ? (t1 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Component, { boundaryElement, sendTelemetry }), $[23] = Component, $[24] = boundaryElement, $[25] = sendTelemetry, $[26] = t1) : t1 = $[26], t1;\n  }\n  return null;\n}\nconst ContextMenu = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(43), {\n    node,\n    onDismiss,\n    position: t0\n  } = props, {\n    x,\n    y\n  } = t0, [boundaryElement, setBoundaryElement] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null), {\n    getField\n  } = useSchema(), {\n    getDocument\n  } = (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.useDocuments)();\n  let t1;\n  $[0] !== getField || $[1] !== node ? (t1 = getField(node), $[0] = getField, $[1] = node, $[2] = t1) : t1 = $[2];\n  const {\n    field,\n    parent\n  } = t1;\n  let t2;\n  t2 = field?.title || field?.name || \"Unknown type\";\n  const title = t2, [items, setItems] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(void 0);\n  let t3, t4;\n  $[3] !== field || $[4] !== getDocument || $[5] !== node || $[6] !== parent ? (t3 = () => {\n    (async () => {\n      const doc = getDocument(node.id);\n      if (!doc)\n        return;\n      const items_0 = await getContextMenuItems({\n        node,\n        field,\n        parent,\n        doc\n      });\n      setItems(items_0);\n    })();\n  }, t4 = [field, node, parent, getDocument], $[3] = field, $[4] = getDocument, $[5] = node, $[6] = parent, $[7] = t3, $[8] = t4) : (t3 = $[7], t4 = $[8]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t3, t4);\n  let t5, t6;\n  $[9] !== x || $[10] !== y ? (t6 = {\n    getBoundingClientRect: () => ({\n      bottom: y,\n      left: x,\n      right: x,\n      top: y,\n      width: 0,\n      height: 0\n    })\n  }, $[9] = x, $[10] = y, $[11] = t6) : t6 = $[11], t5 = t6;\n  const contextMenuReferenceElement = t5;\n  let t7, t8;\n  $[12] !== field ? (t8 = (0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_7__.getNodeIcon)(field), $[12] = field, $[13] = t8) : t8 = $[13], t7 = t8;\n  const icon = t7;\n  let t9;\n  $[14] === Symbol.for(\"react.memo_cache_sentinel\") ? (t9 = {\n    minWidth: 120,\n    maxWidth: 160\n  }, $[14] = t9) : t9 = $[14];\n  let t10;\n  $[15] !== icon || $[16] !== items ? (t10 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Box, { flex: \"none\", children: items ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Text, { size: 1, children: icon }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Spinner, { size: 1 }) }), $[15] = icon, $[16] = items, $[17] = t10) : t10 = $[17];\n  const t11 = items ? title : \"Loading...\";\n  let t12;\n  $[18] !== t11 ? (t12 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Stack, { flex: 1, space: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Text, { size: 1, weight: \"semibold\", children: t11 }) }), $[18] = t11, $[19] = t12) : t12 = $[19];\n  let t13;\n  $[20] !== t10 || $[21] !== t12 ? (t13 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Flex, { gap: 2, padding: 2, children: [\n    t10,\n    t12\n  ] }), $[20] = t10, $[21] = t12, $[22] = t13) : t13 = $[22];\n  let t14;\n  $[23] !== boundaryElement || $[24] !== items || $[25] !== onDismiss ? (t14 = items && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.MenuDivider, {}),\n    items.map((item, i) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ContextMenuItem, { node: item, onDismiss, boundaryElement }, i))\n  ] }), $[23] = boundaryElement, $[24] = items, $[25] = onDismiss, $[26] = t14) : t14 = $[26];\n  let t15;\n  $[27] !== t13 || $[28] !== t14 ? (t15 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Menu, { style: t9, children: [\n    t13,\n    t14\n  ] }), $[27] = t13, $[28] = t14, $[29] = t15) : t15 = $[29];\n  const t16 = `${x}-${y}`;\n  let t17;\n  $[30] !== x || $[31] !== y ? (t17 = {\n    position: \"absolute\",\n    left: x,\n    top: y\n  }, $[30] = x, $[31] = y, $[32] = t17) : t17 = $[32];\n  let t18;\n  $[33] !== t16 || $[34] !== t17 ? (t18 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { style: t17 }, t16), $[33] = t16, $[34] = t17, $[35] = t18) : t18 = $[35];\n  let t19;\n  $[36] !== contextMenuReferenceElement || $[37] !== t15 || $[38] !== t18 ? (t19 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Popover, { __unstable_margins: POPOVER_MARGINS, arrow: !1, open: !0, placement: \"right-start\", referenceElement: contextMenuReferenceElement, content: t15, children: t18 }), $[36] = contextMenuReferenceElement, $[37] = t15, $[38] = t18, $[39] = t19) : t19 = $[39];\n  let t20;\n  return $[40] !== onDismiss || $[41] !== t19 ? (t20 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_7__.PopoverPortal, { setBoundaryElement, onDismiss, children: t19 }), $[40] = onDismiss, $[41] = t19, $[42] = t20) : t20 = $[42], t20;\n};\nfunction getLinkHref(href, referer) {\n  try {\n    const parsed = new URL(href, typeof location > \"u\" ? void 0 : location.origin);\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer));\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`;\n    }\n    return parsed.searchParams.set(\"preview\", referer), parsed.toString();\n  } catch {\n    return href;\n  }\n}\nconst PreviewSnapshotsContext = (0,react__WEBPACK_IMPORTED_MODULE_2__.createContext)(null);\nfunction usePreviewSnapshots() {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(PreviewSnapshotsContext);\n  if (!context)\n    throw new Error(\"Preview Snapshots context is missing\");\n  return context;\n}\nconst isReactElementOverlayComponent = (component) => (0,react__WEBPACK_IMPORTED_MODULE_2__.isValidElement)(component), Root$3 = (0,styled_components__WEBPACK_IMPORTED_MODULE_9__.styled)((0,_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Card))`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`, Actions = (0,styled_components__WEBPACK_IMPORTED_MODULE_9__.styled)((0,_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Flex))`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`, Tab = (0,styled_components__WEBPACK_IMPORTED_MODULE_9__.styled)((0,_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Flex))`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`, ActionOpen = (0,styled_components__WEBPACK_IMPORTED_MODULE_9__.styled)((0,_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Card))`\n  cursor: pointer;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`, Labels = (0,styled_components__WEBPACK_IMPORTED_MODULE_9__.styled)((0,_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Flex))`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`;\nfunction createIntentLink(node) {\n  const {\n    id,\n    type,\n    path,\n    baseUrl,\n    tool,\n    workspace\n  } = node;\n  return (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.createEditUrl)({\n    baseUrl,\n    workspace,\n    tool,\n    type,\n    id,\n    path: (0,_sanity_visual_editing_csm__WEBPACK_IMPORTED_MODULE_11__.pathToUrlString)(_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.studioPath.fromString(path))\n  });\n}\nconst ElementOverlayInner = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(35), {\n    element,\n    focused,\n    componentResolver,\n    node,\n    showActions,\n    draggable\n  } = props, {\n    getField,\n    getType\n  } = useSchema();\n  let t0;\n  $[0] !== getType || $[1] !== node ? (t0 = getType(node), $[0] = getType, $[1] = node, $[2] = t0) : t0 = $[2];\n  const schemaType = t0;\n  let t1;\n  $[3] !== getField || $[4] !== node ? (t1 = getField(node), $[3] = getField, $[4] = node, $[5] = t1) : t1 = $[5];\n  const {\n    field,\n    parent\n  } = t1;\n  let t2;\n  $[6] !== node ? (t2 = \"path\" in node ? createIntentLink(node) : node.href, $[6] = node, $[7] = t2) : t2 = $[7];\n  const href = t2, previewSnapshots = usePreviewSnapshots();\n  let t3;\n  bb0: {\n    if (!(\"path\" in node)) {\n      t3 = void 0;\n      break bb0;\n    }\n    let t42;\n    $[8] !== node || $[9] !== previewSnapshots ? (t42 = previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title, $[8] = node, $[9] = previewSnapshots, $[10] = t42) : t42 = $[10], t3 = t42;\n  }\n  const title = t3;\n  let t4;\n  bb1: {\n    if (!(\"path\" in node)) {\n      t4 = void 0;\n      break bb1;\n    }\n    if (!field || !schemaType) {\n      t4 = void 0;\n      break bb1;\n    }\n    const type = field.value.type, t52 = !!focused;\n    let t62;\n    $[11] !== element || $[12] !== field || $[13] !== node || $[14] !== parent || $[15] !== schemaType || $[16] !== t52 || $[17] !== type ? (t62 = {\n      document: schemaType,\n      element,\n      field,\n      focused: t52,\n      node,\n      parent,\n      type\n    }, $[11] = element, $[12] = field, $[13] = node, $[14] = parent, $[15] = schemaType, $[16] = t52, $[17] = type, $[18] = t62) : t62 = $[18], t4 = t62;\n  }\n  const componentContext = t4, customComponents = useCustomComponents(componentContext, componentResolver);\n  let t5;\n  $[19] !== schemaType ? (t5 = schemaType?.icon ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { dangerouslySetInnerHTML: {\n    __html: schemaType.icon\n  } }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_6__.DocumentIcon, {}), $[19] = schemaType, $[20] = t5) : t5 = $[20];\n  const icon = t5;\n  let t6;\n  $[21] !== href || $[22] !== showActions ? (t6 = showActions ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Actions, { gap: 1, paddingY: 1, \"data-sanity-overlay-element\": !0, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Link, { href }) }) : null, $[21] = href, $[22] = showActions, $[23] = t6) : t6 = $[23];\n  let t7;\n  $[24] !== draggable || $[25] !== icon || $[26] !== title ? (t7 = title && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tab, { gap: 1, paddingY: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Labels, { gap: 2, padding: 2, children: [\n    draggable && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Box, { marginRight: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Text, { className: \"drag-handle\", size: 0, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_6__.DragHandleIcon, {}) }) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Text, { size: 0, children: icon }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Text, { size: 1, weight: \"medium\", children: title })\n  ] }) }), $[24] = draggable, $[25] = icon, $[26] = title, $[27] = t7) : t7 = $[27];\n  let t8;\n  $[28] !== componentContext || $[29] !== customComponents ? (t8 = Array.isArray(customComponents) ? customComponents.map((t92, i) => {\n    const {\n      component: Component,\n      props: props_0\n    } = t92;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Component, { PointerEvents: _chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_7__.PointerEvents, ...componentContext, ...props_0 }, i);\n  }) : customComponents, $[28] = componentContext, $[29] = customComponents, $[30] = t8) : t8 = $[30];\n  let t9;\n  return $[31] !== t6 || $[32] !== t7 || $[33] !== t8 ? (t9 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    t6,\n    t7,\n    t8\n  ] }), $[31] = t6, $[32] = t7, $[33] = t8, $[34] = t9) : t9 = $[34], t9;\n}, ElementOverlay = (0,react__WEBPACK_IMPORTED_MODULE_2__.memo)(function(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(24), {\n    draggable,\n    focused,\n    hovered,\n    rect,\n    wasMaybeCollapsed,\n    enableScrollIntoView\n  } = props, ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null), scrolledIntoViewRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(!1);\n  let t0;\n  const t1 = `${rect.w}px`, t2 = `${rect.h}px`, t3 = `translate(${rect.x}px, ${rect.y}px)`;\n  let t4;\n  $[0] !== t1 || $[1] !== t2 || $[2] !== t3 ? (t4 = {\n    width: t1,\n    height: t2,\n    transform: t3\n  }, $[0] = t1, $[1] = t2, $[2] = t3, $[3] = t4) : t4 = $[3], t0 = t4;\n  const style = t0;\n  let t5, t6;\n  $[4] !== enableScrollIntoView || $[5] !== focused || $[6] !== wasMaybeCollapsed ? (t5 = () => {\n    if (!scrolledIntoViewRef.current && !wasMaybeCollapsed && focused === !0 && ref.current && enableScrollIntoView) {\n      const target = ref.current;\n      (0,scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(ref.current, {\n        behavior: (actions) => {\n          actions.length !== 0 && target.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"nearest\"\n          });\n        },\n        scrollMode: \"if-needed\",\n        block: \"center\",\n        inline: \"nearest\"\n      });\n    }\n    scrolledIntoViewRef.current = focused === !0;\n  }, t6 = [focused, wasMaybeCollapsed, enableScrollIntoView], $[4] = enableScrollIntoView, $[5] = focused, $[6] = wasMaybeCollapsed, $[7] = t5, $[8] = t6) : (t5 = $[7], t6 = $[8]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t5, t6);\n  const [isNearTop, setIsNearTop] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1);\n  let t7;\n  $[9] !== hovered ? (t7 = () => {\n    if (!ref.current || !hovered)\n      return;\n    const io = new IntersectionObserver((t82) => {\n      const [intersection] = t82;\n      setIsNearTop(intersection.boundingClientRect.top < 0);\n    }, {\n      threshold: 1\n    });\n    return io.observe(ref.current), () => io.disconnect();\n  }, $[9] = hovered, $[10] = t7) : t7 = $[10];\n  let t8;\n  $[11] !== hovered || $[12] !== isNearTop ? (t8 = [hovered, isNearTop], $[11] = hovered, $[12] = isNearTop, $[13] = t8) : t8 = $[13], (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t7, t8);\n  const t9 = focused ? \"\" : void 0, t10 = hovered ? \"\" : void 0, t11 = isNearTop ? \"\" : void 0, t12 = draggable ? \"\" : void 0;\n  let t13;\n  $[14] !== hovered || $[15] !== props ? (t13 = hovered && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ElementOverlayInner, { ...props }), $[14] = hovered, $[15] = props, $[16] = t13) : t13 = $[16];\n  let t14;\n  return $[17] !== style || $[18] !== t10 || $[19] !== t11 || $[20] !== t12 || $[21] !== t13 || $[22] !== t9 ? (t14 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$3, { \"data-focused\": t9, \"data-hovered\": t10, \"data-flipped\": t11, \"data-draggable\": t12, ref, style, children: t13 }), $[17] = style, $[18] = t10, $[19] = t11, $[20] = t12, $[21] = t13, $[22] = t9, $[23] = t14) : t14 = $[23], t14;\n});\nfunction useCustomComponents(componentContext, componentResolver) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(4);\n  let t0;\n  bb0: {\n    if (!componentContext) {\n      t0 = void 0;\n      break bb0;\n    }\n    let t1;\n    if ($[0] !== componentContext || $[1] !== componentResolver) {\n      const resolved = componentResolver?.(componentContext);\n      if (!resolved) {\n        t0 = void 0;\n        break bb0;\n      }\n      if (isReactElementOverlayComponent(resolved)) {\n        t0 = resolved;\n        break bb0;\n      }\n      t1 = (Array.isArray(resolved) ? resolved : [resolved]).map(_temp$8), $[0] = componentContext, $[1] = componentResolver, $[2] = t1, $[3] = t0;\n    } else\n      t1 = $[2], t0 = $[3];\n    t0 = t1;\n  }\n  return t0;\n}\nfunction _temp$8(component) {\n  return typeof component == \"object\" && \"component\" in component ? component : {\n    component,\n    props: {}\n  };\n}\nconst Link = (0,react__WEBPACK_IMPORTED_MODULE_2__.memo)(function(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(6), referer = (0,react__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStore)(_temp2$5, _temp3$2);\n  let t0, t1;\n  $[0] !== props.href || $[1] !== referer ? (t1 = getLinkHref(props.href, referer), $[0] = props.href, $[1] = referer, $[2] = t1) : t1 = $[2], t0 = t1;\n  const href = t0;\n  let t2;\n  $[3] === Symbol.for(\"react.memo_cache_sentinel\") ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ActionOpen, { padding: 2, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Text, { size: 1, weight: \"medium\", children: \"Open in Studio\" }) }), $[3] = t2) : t2 = $[3];\n  let t3;\n  return $[4] !== href ? (t3 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Box, { as: \"a\", href, target: \"_blank\", rel: \"noopener noreferrer\", children: t2 }), $[4] = href, $[5] = t3) : t3 = $[5], t3;\n});\nfunction _temp2$5(onStoreChange) {\n  const handlePopState = () => onStoreChange();\n  return window.addEventListener(\"popstate\", handlePopState), () => window.removeEventListener(\"popstate\", handlePopState);\n}\nfunction _temp3$2() {\n  return window.location.href;\n}\nconst OverlayDragGroupRect = (t0) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(5), {\n    dragGroupRect\n  } = t0, t1 = `${dragGroupRect.y}px`, t2 = `${dragGroupRect.x}px`, t3 = `${dragGroupRect.w - 1}px`, t4 = `${dragGroupRect.h - 1}px`;\n  let t5;\n  return $[0] !== t1 || $[1] !== t2 || $[2] !== t3 || $[3] !== t4 ? (t5 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { style: {\n    position: \"absolute\",\n    top: t1,\n    left: t2,\n    width: t3,\n    height: t4,\n    border: \"1px dashed #f0709b\",\n    pointerEvents: \"none\"\n  } }), $[0] = t1, $[1] = t2, $[2] = t3, $[3] = t4, $[4] = t5) : t5 = $[4], t5;\n}, markerThickness = 6;\nfunction lerp(v0, v1, t) {\n  return v0 * (1 - t) + v1 * t;\n}\nconst OverlayDragInsertMarker = (t0) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(4), {\n    dragInsertPosition\n  } = t0;\n  if (dragInsertPosition === null)\n    return;\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? \"horizontal\" : \"vertical\";\n  let x = 0, y = 0, width = 0, height = 0;\n  if (flow === \"horizontal\") {\n    const {\n      left,\n      right\n    } = dragInsertPosition;\n    if (width = markerThickness, right && left) {\n      const startX = left.rect.x + left.rect.w, endX = right.rect.x, offset = Math.min(right.rect.h, left.rect.h) * 0.0125;\n      x = lerp(startX, endX, 0.5) - markerThickness / 2, y = left.rect.y + offset, height = Math.min(right.rect.h, left.rect.h) - offset * 2;\n    } else if (right && !left) {\n      const offset_0 = right.rect.h * 0.0125;\n      x = right.rect.x - markerThickness / 2, y = right.rect.y + offset_0, height = right.rect.h - offset_0 * 2;\n    } else if (left && !right) {\n      const offset_1 = left.rect.h * 0.0125;\n      x = left.rect.x + left.rect.w - markerThickness / 2, y = left.rect.y + offset_1, height = left.rect.h - offset_1 * 2;\n    }\n  } else {\n    const {\n      bottom,\n      top\n    } = dragInsertPosition;\n    if (bottom && top) {\n      const startX_0 = Math.min(top.rect.x, bottom.rect.x), startY = top.rect.y + top.rect.h, endY = bottom.rect.y, offset_2 = Math.min(bottom.rect.w, top.rect.w) * 0.0125;\n      height = markerThickness, x = startX_0 + offset_2, y = lerp(startY, endY, 0.5) - markerThickness / 2, width = Math.max(bottom.rect.w, top.rect.w) - offset_2 * 2;\n    } else if (bottom && !top) {\n      const offset_3 = bottom.rect.w * 0.0125;\n      x = bottom.rect.x + offset_3, y = bottom.rect.y - markerThickness / 2, width = bottom.rect.w - offset_3 * 2, height = markerThickness;\n    } else if (top && !bottom) {\n      const offset_4 = top.rect.w * 0.0125;\n      x = top.rect.x + offset_4, y = top.rect.y + top.rect.h - markerThickness / 2, width = top.rect.w - offset_4 * 2, height = markerThickness;\n    }\n  }\n  const t1 = `${width}px`, t2 = `${height}px`, t3 = `translate(${x}px, ${y}px)`;\n  let t4;\n  return $[0] !== t1 || $[1] !== t2 || $[2] !== t3 ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { style: {\n    position: \"absolute\",\n    width: t1,\n    height: t2,\n    transform: t3,\n    background: \"#556bfc\",\n    border: \"2px solid white\",\n    borderRadius: \"999px\",\n    zIndex: \"999999\"\n  } }), $[0] = t1, $[1] = t2, $[2] = t3, $[3] = t4) : t4 = $[3], t4;\n}, Root$2 = styled_components__WEBPACK_IMPORTED_MODULE_9__.styled.div`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({\n  $scaleFactor,\n  $width,\n  $height\n}) => `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({\n  $width\n}) => `${$width}px`};\n  height: ${({\n  $height\n}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`;\nfunction clamp(number, min, max) {\n  return number < min ? min : number > max ? max : number;\n}\nfunction map(number, inMin, inMax, outMin, outMax) {\n  const mapped = (number - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n  return clamp(mapped, outMin, outMax);\n}\nconst OverlayDragPreview = (t0) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(50), {\n    skeleton\n  } = t0, maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2), scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1, offsetX = skeleton.offsetX * scaleFactor, offsetY = skeleton.offsetY * scaleFactor, prefersDark = (0,_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.usePrefersDark)(), theme = (0,_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.useTheme_v2)(), radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)];\n  let T0, T1, t1, t10, t11, t12, t13, t14, t2, t3, t4, t5, t6, t7, t8, t9;\n  if ($[0] !== offsetX || $[1] !== offsetY || $[2] !== prefersDark || $[3] !== radius || $[4] !== scaleFactor || $[5] !== skeleton.childRects || $[6] !== skeleton.h || $[7] !== skeleton.w) {\n    const imageRects = skeleton.childRects.filter(_temp$7), textRects = skeleton.childRects.filter(_temp2$4);\n    T1 = Root$2, t10 = skeleton.w, t11 = skeleton.h, t12 = offsetX, t13 = offsetY, t14 = scaleFactor, T0 = _sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Card, t5 = radius, t6 = 4, t7 = \"hidden\", t8 = \"transparent\", t9 = prefersDark ? \"dark\" : \"light\", t4 = \"drag-preview-content-wrapper\", t2 = \"drag-preview-skeleton\", t3 = `0 0 ${skeleton.w} ${skeleton.h}`, t1 = [...imageRects, ...textRects], $[0] = offsetX, $[1] = offsetY, $[2] = prefersDark, $[3] = radius, $[4] = scaleFactor, $[5] = skeleton.childRects, $[6] = skeleton.h, $[7] = skeleton.w, $[8] = T0, $[9] = T1, $[10] = t1, $[11] = t10, $[12] = t11, $[13] = t12, $[14] = t13, $[15] = t14, $[16] = t2, $[17] = t3, $[18] = t4, $[19] = t5, $[20] = t6, $[21] = t7, $[22] = t8, $[23] = t9;\n  } else\n    T0 = $[8], T1 = $[9], t1 = $[10], t10 = $[11], t11 = $[12], t12 = $[13], t13 = $[14], t14 = $[15], t2 = $[16], t3 = $[17], t4 = $[18], t5 = $[19], t6 = $[20], t7 = $[21], t8 = $[22], t9 = $[23];\n  let t15;\n  $[24] !== t1 || $[25] !== theme.color ? (t15 = t1.map((r_1, i) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\", { x: r_1.x, y: r_1.y, width: r_1.w, height: r_1.h, fill: theme.color.skeleton.from }, i)), $[24] = t1, $[25] = theme.color, $[26] = t15) : t15 = $[26];\n  let t16;\n  $[27] !== t15 || $[28] !== t2 || $[29] !== t3 ? (t16 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\", { className: t2, viewBox: t3, children: t15 }), $[27] = t15, $[28] = t2, $[29] = t3, $[30] = t16) : t16 = $[30];\n  let t17;\n  $[31] !== t16 || $[32] !== t4 ? (t17 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: t4, children: t16 }), $[31] = t16, $[32] = t4, $[33] = t17) : t17 = $[33];\n  let t18;\n  $[34] !== T0 || $[35] !== t17 || $[36] !== t5 || $[37] !== t6 || $[38] !== t7 || $[39] !== t8 || $[40] !== t9 ? (t18 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(T0, { radius: t5, shadow: t6, overflow: t7, tone: t8, scheme: t9, children: t17 }), $[34] = T0, $[35] = t17, $[36] = t5, $[37] = t6, $[38] = t7, $[39] = t8, $[40] = t9, $[41] = t18) : t18 = $[41];\n  let t19;\n  return $[42] !== T1 || $[43] !== t10 || $[44] !== t11 || $[45] !== t12 || $[46] !== t13 || $[47] !== t14 || $[48] !== t18 ? (t19 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(T1, { $width: t10, $height: t11, $offsetX: t12, $offsetY: t13, $scaleFactor: t14, children: t18 }), $[42] = T1, $[43] = t10, $[44] = t11, $[45] = t12, $[46] = t13, $[47] = t14, $[48] = t18, $[49] = t19) : t19 = $[49], t19;\n};\nfunction _temp$7(r) {\n  return r.tagName === \"IMG\";\n}\nfunction _temp2$4(r_0) {\n  return r_0.tagName !== \"IMG\";\n}\nconst Root$1 = (0,styled_components__WEBPACK_IMPORTED_MODULE_9__.styled)((0,_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Card))`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`, OverlayMinimapPrompt = () => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(2);\n  let t0;\n  $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = {\n    zIndex: \"999999\"\n  }, $[0] = t0) : t0 = $[0];\n  let t1;\n  return $[1] === Symbol.for(\"react.memo_cache_sentinel\") ? (t1 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root$1, { padding: 2, shadow: 2, radius: 2, style: t0, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Flex, { align: \"center\", gap: 2, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Hotkeys, { keys: [\"Shift\"] }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.Text, { size: 1, children: \"Zoom Out\" }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_6__.ExpandIcon, {})\n  ] }) }), $[1] = t1) : t1 = $[1], t1;\n}, elementsReducer = (elements, message) => {\n  const {\n    type\n  } = message;\n  switch (type) {\n    case \"element/register\":\n      return elements.find((e) => e.id === message.id) ? elements : [...elements, {\n        id: message.id,\n        activated: !1,\n        element: message.element,\n        focused: !1,\n        hovered: !1,\n        rect: message.rect,\n        sanity: message.sanity,\n        dragDisabled: message.dragDisabled\n      }];\n    case \"element/activate\":\n      return elements.map((e) => e.id === message.id ? {\n        ...e,\n        activated: !0\n      } : e);\n    case \"element/update\":\n      return elements.map((e) => e.id === message.id ? {\n        ...e,\n        sanity: message.sanity,\n        rect: message.rect\n      } : e);\n    case \"element/unregister\":\n      return elements.filter((e) => e.id !== message.id);\n    case \"element/deactivate\":\n      return elements.map((e) => e.id === message.id ? {\n        ...e,\n        activated: !1,\n        hovered: !1\n      } : e);\n    case \"element/mouseenter\":\n      return elements.map((e) => e.id === message.id ? {\n        ...e,\n        rect: message.rect,\n        hovered: !0\n      } : {\n        ...e,\n        hovered: !1\n      });\n    case \"element/mouseleave\":\n      return elements.map((element) => element.id === message.id ? {\n        ...element,\n        hovered: !1\n      } : element);\n    case \"element/updateRect\":\n      return elements.map((element) => element.id === message.id ? {\n        ...element,\n        rect: message.rect\n      } : element);\n    case \"element/click\":\n      return elements.map((e) => ({\n        ...e,\n        focused: e.id === message.id && \"clicked\"\n      }));\n    case \"overlay/blur\":\n      return elements.map((e) => ({\n        ...e,\n        focused: !1\n      }));\n    case \"presentation/blur\":\n      return elements.map((e) => ({\n        ...e,\n        focused: !1\n      }));\n    case \"presentation/focus\": {\n      const clickedElement = elements.find((e) => e.focused === \"clicked\");\n      return elements.map((e) => {\n        const focused = \"path\" in e.sanity && e.sanity.id === message.data.id && e.sanity.path === message.data.path;\n        return clickedElement && e === clickedElement && focused ? e : {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? \"duplicate\" : focused\n        };\n      });\n    }\n    default:\n      return elements;\n  }\n};\nfunction overlayStateReducer(state, message) {\n  const {\n    type\n  } = message;\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect\n  } = state, wasMaybeCollapsed = !1;\n  if (type === \"presentation/focus\") {\n    const prevFocusPath = state.focusPath;\n    focusPath = message.data.path, prevFocusPath !== focusPath && (wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith(\"[\"));\n  }\n  return type === \"presentation/perspective\" && (perspective = message.data.perspective), type === \"element/contextmenu\" && (\"sanity\" in message ? contextMenu = {\n    node: message.sanity,\n    position: message.position\n  } : contextMenu = null), (type === \"element/click\" || type === \"element/mouseleave\" || type === \"overlay/blur\" || type === \"presentation/blur\" || type === \"presentation/focus\") && (contextMenu = null), type === \"overlay/dragUpdateInsertPosition\" && (dragInsertPosition = message.insertPosition), type === \"overlay/dragStart\" && (isDragging = !0), message.type === \"overlay/dragUpdateSkeleton\" && (dragSkeleton = message.skeleton), type === \"overlay/dragEnd\" && (isDragging = !1), message.type === \"overlay/dragToggleMinimapPrompt\" && (dragShowMinimapPrompt = message.display), type === \"overlay/dragStartMinimapTransition\" && (dragMinimapTransition = !0), type === \"overlay/dragEndMinimapTransition\" && (dragMinimapTransition = !1), type === \"overlay/dragUpdateGroupRect\" && (dragGroupRect = message.groupRect), type === \"overlay/dragToggleMinimap\" && (dragShowMinimap = message.display), {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition\n  };\n}\nconst PreviewSnapshotsProvider = function(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(13), {\n    comlink,\n    children\n  } = props;\n  let t0;\n  $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = [], $[0] = t0) : t0 = $[0];\n  const [previewSnapshots, setPreviewSnapshots] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(t0);\n  let t1;\n  $[1] !== comlink ? (t1 = async (signal) => {\n    if (comlink)\n      try {\n        const response = await comlink.fetch(\"visual-editing/preview-snapshots\", void 0, {\n          signal,\n          suppressWarnings: !0\n        });\n        setPreviewSnapshots(response.snapshots);\n      } catch {\n      }\n  }, $[1] = comlink, $[2] = t1) : t1 = $[2];\n  const fetchPreviewSnapshots = t1;\n  let t2, t3;\n  $[3] !== comlink || $[4] !== fetchPreviewSnapshots ? (t2 = () => {\n    if (!comlink)\n      return;\n    const previewSapshotsFetch = new AbortController(), unsub = comlink.onStatus(() => {\n      fetchPreviewSnapshots(previewSapshotsFetch.signal);\n    }, \"connected\");\n    return () => {\n      previewSapshotsFetch.abort(), unsub();\n    };\n  }, t3 = [comlink, fetchPreviewSnapshots], $[3] = comlink, $[4] = fetchPreviewSnapshots, $[5] = t2, $[6] = t3) : (t2 = $[5], t3 = $[6]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t2, t3);\n  let t4, t5;\n  $[7] !== comlink ? (t4 = () => comlink?.on(\"presentation/preview-snapshots\", (data) => {\n    setPreviewSnapshots(data.snapshots);\n  }), t5 = [comlink], $[7] = comlink, $[8] = t4, $[9] = t5) : (t4 = $[8], t5 = $[9]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t4, t5);\n  let t6;\n  t6 = previewSnapshots;\n  const context = t6;\n  let t7;\n  return $[10] !== children || $[11] !== context ? (t7 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PreviewSnapshotsContext.Provider, { value: context, children }), $[10] = children, $[11] = context, $[12] = t7) : t7 = $[12], t7;\n};\nfunction isSanityNode(node) {\n  return \"path\" in node;\n}\nfunction isDocumentSchemaType(type) {\n  return type.type === \"document\";\n}\nfunction isTypeSchemaType(type) {\n  return type.type === \"type\";\n}\nfunction popUnkeyedPathSegments(path) {\n  return path.split(\".\").toReversed().reduce((acc, part) => acc.length ? [part, ...acc] : part.includes(\"[_key==\") ? [part] : [], []).join(\".\");\n}\nfunction getPathsWithUnresolvedTypes(elements) {\n  return elements.reduce((acc, element) => {\n    const {\n      sanity\n    } = element;\n    if (!(\"id\" in sanity) || !sanity.path.includes(\"[_key==\")) return acc;\n    const path = popUnkeyedPathSegments(sanity.path);\n    return acc.find((item) => item.id === sanity.id && item.path === path) || acc.push({\n      id: sanity.id,\n      path\n    }), acc;\n  }, []);\n}\nconst SchemaProvider = function(props) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(22), {\n    comlink,\n    children,\n    elements\n  } = props;\n  let t0;\n  $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = /* @__PURE__ */ new Map(), $[0] = t0) : t0 = $[0];\n  const [resolvedTypes, setResolvedTypes] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(t0), [schema, setSchema] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n  let t1, t2;\n  $[1] !== comlink ? (t1 = () => {\n    if (!comlink)\n      return;\n    const fetchSchema = async function(signal) {\n      if (comlink)\n        try {\n          const response = await comlink.fetch(\"visual-editing/schema\", void 0, {\n            signal,\n            suppressWarnings: !0\n          });\n          setSchema(response.schema);\n        } catch {\n        }\n    }, schemaFetch = new AbortController(), unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal);\n    }, \"connected\");\n    return () => {\n      schemaFetch.abort(), unsub();\n    };\n  }, t2 = [comlink], $[1] = comlink, $[2] = t1, $[3] = t2) : (t1 = $[2], t2 = $[3]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t1, t2);\n  let t3;\n  $[4] === Symbol.for(\"react.memo_cache_sentinel\") ? (t3 = [], $[4] = t3) : t3 = $[4];\n  const reportedPathsRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(t3), t4 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useDeferredValue)(elements);\n  let t5;\n  $[5] !== t4 ? (t5 = getPathsWithUnresolvedTypes(t4), $[5] = t4, $[6] = t5) : t5 = $[6];\n  const paths = t5, controllerRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n  let t6, t7;\n  $[7] !== comlink || $[8] !== paths ? (t6 = () => {\n    if (!paths.length || !comlink)\n      return;\n    const reportPaths = async (paths_0, signal_0) => {\n      const initialReportedPaths = reportedPathsRef.current;\n      try {\n        reportedPathsRef.current = paths_0;\n        const response_0 = await comlink.fetch(\"visual-editing/schema-union-types\", {\n          paths: paths_0\n        }, {\n          signal: signal_0,\n          suppressWarnings: !0\n        });\n        if (signal_0.aborted)\n          return;\n        setResolvedTypes(response_0.types), controllerRef.current = null;\n      } catch {\n      }\n      signal_0.aborted && (reportedPathsRef.current = initialReportedPaths);\n    };\n    paths.some((p) => !reportedPathsRef.current.find((t82) => {\n      const {\n        id,\n        path\n      } = t82;\n      return id === p.id && path === p.path;\n    })) && (controllerRef.current?.abort(), controllerRef.current = new AbortController(), reportPaths(paths, controllerRef.current.signal));\n  }, t7 = [comlink, paths], $[7] = comlink, $[8] = paths, $[9] = t6, $[10] = t7) : (t6 = $[9], t7 = $[10]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t6, t7);\n  let t8;\n  $[11] !== schema ? (t8 = (node, _type) => {\n    const type = _type || \"document\";\n    if (!schema || typeof node != \"string\" && (!isSanityNode(node) || !Array.isArray(schema)))\n      return;\n    const name = typeof node == \"string\" ? node : node.type, filter = type === \"document\" ? isDocumentSchemaType : isTypeSchemaType;\n    return schema.filter(filter).find((schemaType) => schemaType.name === name);\n  }, $[11] = schema, $[12] = t8) : t8 = $[12];\n  const getType = t8;\n  let t9;\n  $[13] !== getType || $[14] !== resolvedTypes ? (t9 = (node_0) => {\n    if (!isSanityNode(node_0))\n      return {\n        field: void 0,\n        parent: void 0\n      };\n    const schemaType_0 = getType(node_0);\n    if (!schemaType_0)\n      return {\n        field: void 0,\n        parent: void 0\n      };\n    function fieldFromPath(schemaType_1, path_0, parent, t102) {\n      const prevPath = t102 === void 0 ? [] : t102;\n      if (!schemaType_1)\n        return {\n          field: void 0,\n          parent: void 0\n        };\n      const [next, ...rest] = path_0;\n      if (\"fields\" in schemaType_1) {\n        const objectField = schemaType_1.fields[next];\n        if (!objectField && \"rest\" in schemaType_1)\n          return fieldFromPath(schemaType_1.rest, path_0, schemaType_1, prevPath);\n        if (!rest.length)\n          return {\n            field: objectField,\n            parent\n          };\n        if (!objectField)\n          throw new Error(`[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path_0].join(\".\")}\"`);\n        return fieldFromPath(objectField.value, rest, schemaType_1, [...prevPath, next]);\n      } else {\n        if (schemaType_1.type === \"array\")\n          return fieldFromPath(schemaType_1.of, path_0, schemaType_1, prevPath);\n        if (schemaType_1.type === \"arrayItem\")\n          return rest.length ? fieldFromPath(schemaType_1.value, rest, schemaType_1, [...prevPath, next]) : {\n            field: schemaType_1,\n            parent\n          };\n        if (schemaType_1.type === \"union\") {\n          const name_0 = next.startsWith(\"[_key==\") ? resolvedTypes?.get(node_0.id)?.get([prevPath.join(\".\"), next].filter(Boolean).join(\"\")) : next;\n          return fieldFromPath(schemaType_1.of.find((item) => item.type === \"unionOption\" ? item.name === name_0 : item), rest, schemaType_1, [...prevPath, next]);\n        } else {\n          if (schemaType_1.type === \"unionOption\")\n            return next ? fieldFromPath(schemaType_1.value, path_0, schemaType_1, prevPath) : {\n              field: schemaType_1,\n              parent\n            };\n          if (schemaType_1.type === \"inline\") {\n            const type_0 = getType(schemaType_1.name, \"type\");\n            return fieldFromPath(type_0.value, path_0, schemaType_1, prevPath);\n          }\n        }\n      }\n      throw new Error(`[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path_0].join(\".\")}\"`);\n    }\n    const nodePath = node_0.path.split(\".\").flatMap(_temp$6);\n    try {\n      return fieldFromPath(schemaType_0, nodePath, void 0);\n    } catch (t112) {\n      const e = t112;\n      return e instanceof Error && console.warn(e.message), {\n        field: void 0,\n        parent: void 0\n      };\n    }\n  }, $[13] = getType, $[14] = resolvedTypes, $[15] = t9) : t9 = $[15];\n  const getField = t9;\n  let t10, t11;\n  $[16] !== getField || $[17] !== getType ? (t11 = {\n    getField,\n    getType\n  }, $[16] = getField, $[17] = getType, $[18] = t11) : t11 = $[18], t10 = t11;\n  const context = t10;\n  let t12;\n  return $[19] !== children || $[20] !== context ? (t12 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SchemaContext.Provider, { value: context, children }), $[19] = children, $[20] = context, $[21] = t12) : t12 = $[21], t12;\n};\nfunction _temp$6(part) {\n  return part.includes(\"[\") ? part.split(/(\\[.+\\])/, 2) : [part];\n}\nconst createStore = (initialState) => {\n  let state = initialState;\n  const getState = () => state, listeners = /* @__PURE__ */ new Set();\n  return {\n    getState,\n    setState: (fn) => {\n      state = fn(state), listeners.forEach((l) => l());\n    },\n    subscribe: (listener) => (listeners.add(listener), () => listeners.delete(listener))\n  };\n}, store = createStore({}), SharedStateProvider = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(11), {\n    comlink,\n    children\n  } = props;\n  let t0, t1;\n  $[0] !== comlink ? (t0 = () => comlink?.on(\"presentation/shared-state\", _temp$5), t1 = [comlink], $[0] = comlink, $[1] = t0, $[2] = t1) : (t0 = $[1], t1 = $[2]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t0, t1);\n  let t2, t3;\n  $[3] !== comlink ? (t2 = () => {\n    (async function() {\n      const value = await comlink?.fetch(\"visual-editing/shared-state\", void 0, {\n        suppressWarnings: !0\n      });\n      value && store.setState(() => value.state);\n    })().catch(_temp2$3);\n  }, t3 = [comlink], $[3] = comlink, $[4] = t2, $[5] = t3) : (t2 = $[4], t3 = $[5]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t2, t3);\n  let t4, t5;\n  $[6] !== comlink ? (t5 = {\n    comlink,\n    store\n  }, $[6] = comlink, $[7] = t5) : t5 = $[7], t4 = t5;\n  const value_0 = t4;\n  let t6;\n  return $[8] !== children || $[9] !== value_0 ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_SharedStateContext_js__WEBPACK_IMPORTED_MODULE_13__.SharedStateContext.Provider, { value: value_0, children }), $[8] = children, $[9] = value_0, $[10] = t6) : t6 = $[10], t6;\n};\nfunction _temp$5(data) {\n  \"value\" in data ? store.setState((prev) => ({\n    ...prev,\n    [data.key]: data.value\n  })) : store.setState((prev_0) => Object.fromEntries(Object.entries(prev_0).filter((t0) => {\n    const [key] = t0;\n    return key !== data.key;\n  })));\n}\nfunction _temp2$3(reason) {\n  console.debug(reason), console.warn(\"[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `sanity` is up-to-date\");\n}\nconst TelemetryProvider = (t0) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(5), {\n    children,\n    comlink\n  } = t0;\n  let t1;\n  $[0] !== comlink ? (t1 = (name, data) => {\n    if (!comlink)\n      return;\n    const event = _chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_7__.events[name];\n    if (event)\n      comlink.post(\"visual-editing/telemetry-log\", {\n        event,\n        data\n      });\n    else\n      throw new Error(`Telemetry event: ${name} does not exist`);\n  }, $[0] = comlink, $[1] = t1) : t1 = $[1];\n  const log = t1;\n  let t2;\n  return $[2] !== children || $[3] !== log ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_7__.TelemetryContext.Provider, { value: log, children }), $[2] = children, $[3] = log, $[4] = t2) : t2 = $[4], t2;\n};\nfunction useController(element, handler, inFrame, inPopUp) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(7), overlayController = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(void 0), optimisticActorReady = (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.useOptimisticActorReady)();\n  let t0, t1;\n  return $[0] !== element || $[1] !== handler || $[2] !== inFrame || $[3] !== inPopUp || $[4] !== optimisticActorReady ? (t0 = () => {\n    if (element)\n      return overlayController.current = (0,_chunks_es_SharedStateContext_js__WEBPACK_IMPORTED_MODULE_13__.createOverlayController)({\n        handler,\n        overlayElement: element,\n        inFrame,\n        inPopUp,\n        optimisticActorReady\n      }), () => {\n        overlayController.current?.destroy(), overlayController.current = void 0;\n      };\n  }, t1 = [element, handler, inFrame, inPopUp, optimisticActorReady], $[0] = element, $[1] = handler, $[2] = inFrame, $[3] = inPopUp, $[4] = optimisticActorReady, $[5] = t0, $[6] = t1) : (t0 = $[5], t1 = $[6]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t0, t1), overlayController;\n}\nfunction usePerspectiveSync(comlink, dispatch) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(4);\n  let t0, t1;\n  $[0] !== comlink || $[1] !== dispatch ? (t0 = () => {\n    const controller = new AbortController();\n    comlink?.fetch(\"visual-editing/fetch-perspective\", void 0, {\n      signal: controller.signal,\n      suppressWarnings: !0\n    }).then((data) => {\n      dispatch({\n        type: \"presentation/perspective\",\n        data\n      });\n    }).catch(_temp$4);\n    const unsub = comlink?.on(\"presentation/perspective\", (data_0) => {\n      dispatch({\n        type: \"presentation/perspective\",\n        data: data_0\n      });\n    });\n    return () => {\n      unsub?.(), controller.abort();\n    };\n  }, t1 = [comlink, dispatch], $[0] = comlink, $[1] = dispatch, $[2] = t0, $[3] = t1) : (t0 = $[2], t1 = $[3]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t0, t1);\n}\nfunction _temp$4() {\n}\nfunction isEqualSets(a, b) {\n  if (a === b) return !0;\n  if (a.size !== b.size) return !1;\n  for (const value of a) if (!b.has(value)) return !1;\n  return !0;\n}\nfunction useReportDocuments(comlink, elements, perspective) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(7), lastReported = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(void 0);\n  let t0;\n  $[0] !== comlink ? (t0 = (documents, perspective_0) => {\n    comlink?.post(\"visual-editing/documents\", {\n      documents,\n      perspective: perspective_0\n    });\n  }, $[0] = comlink, $[1] = t0) : t0 = $[1];\n  const reportDocuments = t0;\n  let t1, t2;\n  $[2] !== elements || $[3] !== perspective || $[4] !== reportDocuments ? (t1 = () => {\n    const nodes = elements.map(_temp$3).filter(_temp2$2), nodeIds = new Set(nodes.map(_temp3$1));\n    if (!lastReported.current || !isEqualSets(nodeIds, lastReported.current.nodeIds) || perspective !== lastReported.current.perspective) {\n      const documentsOnPage = Array.from(nodeIds).map((_id) => {\n        const node_0 = nodes.find((node) => node.id === _id), {\n          type,\n          projectId: _projectId,\n          dataset: _dataset\n        } = node_0;\n        return _projectId && _dataset ? {\n          _id,\n          _type: type,\n          _projectId,\n          _dataset\n        } : {\n          _id,\n          _type: type\n        };\n      });\n      lastReported.current = {\n        nodeIds,\n        perspective\n      }, reportDocuments(documentsOnPage, perspective);\n    }\n  }, t2 = [elements, perspective, reportDocuments], $[2] = elements, $[3] = perspective, $[4] = reportDocuments, $[5] = t1, $[6] = t2) : (t1 = $[5], t2 = $[6]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t1, t2);\n}\nfunction _temp3$1(e_0) {\n  return e_0.id;\n}\nfunction _temp2$2(s) {\n  return !!s;\n}\nfunction _temp$3(e) {\n  const {\n    sanity\n  } = e;\n  return \"id\" in sanity ? sanity : null;\n}\nconst Root = styled_components__WEBPACK_IMPORTED_MODULE_9__.styled.div`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({\n  $zIndex\n}) => $zIndex ?? \"9999999\"};\n`;\nfunction raf2(fn) {\n  let r0, r1;\n  return r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn);\n  }), () => {\n    r0 !== void 0 && cancelAnimationFrame(r0), r1 !== void 0 && cancelAnimationFrame(r1);\n  };\n}\nconst DocumentReporter = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(8), {\n    documentIds\n  } = props;\n  let t0;\n  $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = [], $[0] = t0) : t0 = $[0];\n  const [uniqueIds, setUniqueIds] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(t0);\n  let t1, t2;\n  $[1] !== documentIds ? (t1 = () => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds));\n      return prev.length === next.length && prev.reduce(_temp$2, next)?.length === 0 ? prev : next;\n    });\n  }, t2 = [documentIds], $[1] = documentIds, $[2] = t1, $[3] = t2) : (t1 = $[2], t2 = $[3]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t1, t2);\n  const actor = (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.useOptimisticActor)();\n  let t3, t4;\n  return $[4] !== actor || $[5] !== uniqueIds ? (t3 = () => {\n    for (const id_0 of uniqueIds)\n      actor.send({\n        type: \"observe\",\n        documentId: (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getDraftId)(id_0)\n      }), actor.send({\n        type: \"observe\",\n        documentId: (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getPublishedId)(id_0)\n      });\n    return () => {\n      for (const id_1 of uniqueIds)\n        actor.send({\n          type: \"unobserve\",\n          documentId: (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getDraftId)(id_1)\n        }), actor.send({\n          type: \"unobserve\",\n          documentId: (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getPublishedId)(id_1)\n        });\n    };\n  }, t4 = [actor, uniqueIds], $[4] = actor, $[5] = uniqueIds, $[6] = t3, $[7] = t4) : (t3 = $[6], t4 = $[7]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t3, t4), null;\n}, OverlaysController = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(12), {\n    comlink,\n    dispatch,\n    inFrame,\n    inPopUp,\n    onDrag,\n    overlayEnabled,\n    rootElement\n  } = props, {\n    dispatchDragEndEvent\n  } = useDragEndEvents(), sendTelemetry = (0,_chunks_es_PointerEvents_js__WEBPACK_IMPORTED_MODULE_7__.useTelemetry)();\n  let t0;\n  $[0] !== comlink || $[1] !== dispatch || $[2] !== dispatchDragEndEvent || $[3] !== onDrag || $[4] !== sendTelemetry ? (t0 = (message) => {\n    if (message.type === \"element/click\") {\n      const {\n        sanity\n      } = message;\n      comlink?.post(\"visual-editing/focus\", sanity), sendTelemetry(\"Visual Editing Overlay Clicked\", null);\n    } else if (message.type === \"overlay/activate\")\n      comlink?.post(\"visual-editing/toggle\", {\n        enabled: !0\n      });\n    else if (message.type === \"overlay/deactivate\")\n      comlink?.post(\"visual-editing/toggle\", {\n        enabled: !1\n      });\n    else if (message.type === \"overlay/dragEnd\") {\n      const {\n        insertPosition,\n        target,\n        dragGroup,\n        flow,\n        preventInsertDefault\n      } = message;\n      dispatchDragEndEvent({\n        insertPosition,\n        target,\n        dragGroup,\n        flow,\n        preventInsertDefault\n      }), insertPosition && sendTelemetry(\"Visual Editing Drag Sequence Completed\", null);\n    } else if (message.type === \"overlay/dragUpdateCursorPosition\") {\n      onDrag(message.x, message.y);\n      return;\n    } else if (message.type === \"overlay/dragToggleMinimap\" && message.display === !0)\n      sendTelemetry(\"Visual Editing Drag Minimap Enabled\", null);\n    else if (message.type === \"overlay/setCursor\") {\n      const {\n        element,\n        cursor\n      } = message;\n      cursor ? element.style.cursor = cursor : element.style.removeProperty(\"cursor\");\n    }\n    dispatch(message);\n  }, $[0] = comlink, $[1] = dispatch, $[2] = dispatchDragEndEvent, $[3] = onDrag, $[4] = sendTelemetry, $[5] = t0) : t0 = $[5];\n  const controller = useController(rootElement, t0, inFrame, inPopUp);\n  let t1;\n  $[6] !== controller.current || $[7] !== overlayEnabled ? (t1 = () => {\n    overlayEnabled ? controller.current?.activate() : controller.current?.deactivate();\n  }, $[6] = controller.current, $[7] = overlayEnabled, $[8] = t1) : t1 = $[8];\n  let t2;\n  return $[9] !== controller || $[10] !== overlayEnabled ? (t2 = [controller, overlayEnabled], $[9] = controller, $[10] = overlayEnabled, $[11] = t2) : t2 = $[11], (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t1, t2), null;\n}, Overlays = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(74), {\n    comlink,\n    comlinkStatus,\n    componentResolver: _componentResolver,\n    inFrame,\n    inPopUp,\n    zIndex\n  } = props, prefersDark = (0,_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.usePrefersDark)();\n  let t0;\n  $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: !1,\n    dragShowMinimapPrompt: !1,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: \"\",\n    isDragging: !1,\n    perspective: \"published\",\n    wasMaybeCollapsed: !1,\n    dragMinimapTransition: !1,\n    dragGroupRect: null\n  }, $[0] = t0) : t0 = $[0];\n  const [t1, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useReducer)(overlayStateReducer, t0), {\n    contextMenu,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    elements,\n    isDragging,\n    perspective,\n    wasMaybeCollapsed,\n    dragMinimapTransition,\n    dragGroupRect\n  } = t1, [rootElement, setRootElement] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null), [overlayEnabled, setOverlayEnabled] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!0);\n  let t2, t3;\n  $[1] !== comlink ? (t2 = () => {\n    const unsubs = [comlink?.on(\"presentation/focus\", (data) => {\n      dispatch({\n        type: \"presentation/focus\",\n        data\n      });\n    }), comlink?.on(\"presentation/blur\", (data_0) => {\n      dispatch({\n        type: \"presentation/blur\",\n        data: data_0\n      });\n    }), comlink?.on(\"presentation/toggle-overlay\", () => {\n      setOverlayEnabled(_temp2$1);\n    })].filter(Boolean);\n    return () => unsubs.forEach(_temp3);\n  }, t3 = [comlink], $[1] = comlink, $[2] = t2, $[3] = t3) : (t2 = $[2], t3 = $[3]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t2, t3), usePerspectiveSync(comlink, dispatch), useReportDocuments(comlink, elements, perspective);\n  let t4;\n  $[4] !== rootElement ? (t4 = (x, y) => {\n    rootElement && (rootElement.style.setProperty(\"--drag-preview-x\", `${x}px`), rootElement.style.setProperty(\"--drag-preview-y\", `${y - window.scrollY}px`));\n  }, $[4] = rootElement, $[5] = t4) : t4 = $[5];\n  const updateDragPreviewCustomProps = t4;\n  let t5, t6;\n  $[6] === Symbol.for(\"react.memo_cache_sentinel\") ? (t5 = () => {\n    const handleClick = _temp4, handleKeyUp = (e) => {\n      isAltKey(e) && setOverlayEnabled(_temp5);\n    }, handleKeydown = (e_0) => {\n      isAltKey(e_0) && setOverlayEnabled(_temp6), isHotkey([\"mod\", \"\\\\\"], e_0) && setOverlayEnabled(_temp7);\n    };\n    return window.addEventListener(\"click\", handleClick), window.addEventListener(\"keydown\", handleKeydown), window.addEventListener(\"keyup\", handleKeyUp), () => {\n      window.removeEventListener(\"click\", handleClick), window.removeEventListener(\"keydown\", handleKeydown), window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, t6 = [setOverlayEnabled], $[6] = t5, $[7] = t6) : (t5 = $[6], t6 = $[7]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t5, t6);\n  const [overlaysFlash, setOverlaysFlash] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1), [fadingOut, setFadingOut] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1), fadeOutTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(void 0);\n  let t7, t8;\n  $[8] !== overlayEnabled ? (t7 = () => {\n    if (overlayEnabled)\n      return raf2(() => {\n        setOverlaysFlash(!0), raf2(() => {\n          setFadingOut(!0), fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(!1), setOverlaysFlash(!1);\n          }, 1500);\n        });\n      });\n    fadeOutTimeoutRef.current && (clearTimeout(fadeOutTimeoutRef.current), setOverlaysFlash(!1), setFadingOut(!1));\n  }, t8 = [overlayEnabled], $[8] = overlayEnabled, $[9] = t7, $[10] = t8) : (t7 = $[9], t8 = $[10]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t7, t8);\n  let t9, t10;\n  $[11] !== elements ? (t10 = elements.flatMap(_temp8), $[11] = elements, $[12] = t10) : t10 = $[12], t9 = t10;\n  const documentIds = t9;\n  let t11;\n  $[13] === Symbol.for(\"react.memo_cache_sentinel\") ? (t11 = () => {\n    dispatch({\n      type: \"overlay/blur\"\n    });\n  }, $[13] = t11) : t11 = $[13];\n  const closeContextMenu = t11, optimisticActorReady = (0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.useOptimisticActorReady)();\n  let t12;\n  t12 = optimisticActorReady ? _componentResolver : void 0;\n  const componentResolver = t12;\n  let t13;\n  bb0: {\n    if ((inFrame || inPopUp) && comlinkStatus !== \"connected\" || isDragging) {\n      let t143;\n      $[14] === Symbol.for(\"react.memo_cache_sentinel\") ? (t143 = [], $[14] = t143) : t143 = $[14], t13 = t143;\n      break bb0;\n    }\n    let t142;\n    $[15] !== componentResolver || $[16] !== dragMinimapTransition || $[17] !== dragShowMinimap || $[18] !== elements || $[19] !== inFrame || $[20] !== isDragging || $[21] !== optimisticActorReady || $[22] !== wasMaybeCollapsed ? (t142 = elements.filter(_temp9).map((t152) => {\n      const {\n        id,\n        element: element_0,\n        focused,\n        hovered,\n        rect,\n        sanity,\n        dragDisabled\n      } = t152, draggable = !dragDisabled && !!element_0.getAttribute(\"data-sanity\") && optimisticActorReady && elements.some((e_2) => \"id\" in e_2.sanity && \"id\" in sanity ? (0,_chunks_es_SharedStateContext_js__WEBPACK_IMPORTED_MODULE_13__.sanityNodesExistInSameArray)(e_2.sanity, sanity) && e_2.sanity.path !== sanity.path : !1);\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ElementOverlay, { componentResolver, element: element_0, enableScrollIntoView: !isDragging && !dragMinimapTransition && !dragShowMinimap, focused, hovered, node: sanity, rect, showActions: !inFrame, draggable, isDragging: isDragging || dragMinimapTransition, wasMaybeCollapsed: focused && wasMaybeCollapsed }, id);\n    }), $[15] = componentResolver, $[16] = dragMinimapTransition, $[17] = dragShowMinimap, $[18] = elements, $[19] = inFrame, $[20] = isDragging, $[21] = optimisticActorReady, $[22] = wasMaybeCollapsed, $[23] = t142) : t142 = $[23], t13 = t142;\n  }\n  const elementsToRender = t13, t14 = prefersDark ? \"dark\" : \"light\", t15 = fadingOut ? \"\" : void 0, t16 = overlaysFlash ? \"\" : void 0;\n  let t17;\n  $[24] !== documentIds || $[25] !== perspective ? (t17 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DocumentReporter, { documentIds, perspective }), $[24] = documentIds, $[25] = perspective, $[26] = t17) : t17 = $[26];\n  let t18;\n  $[27] !== comlink || $[28] !== inFrame || $[29] !== inPopUp || $[30] !== overlayEnabled || $[31] !== rootElement || $[32] !== updateDragPreviewCustomProps ? (t18 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(OverlaysController, { comlink, dispatch, inFrame, inPopUp, onDrag: updateDragPreviewCustomProps, overlayEnabled, rootElement }), $[27] = comlink, $[28] = inFrame, $[29] = inPopUp, $[30] = overlayEnabled, $[31] = rootElement, $[32] = updateDragPreviewCustomProps, $[33] = t18) : t18 = $[33];\n  let t19;\n  $[34] !== contextMenu ? (t19 = contextMenu && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ContextMenu, { ...contextMenu, onDismiss: closeContextMenu }), $[34] = contextMenu, $[35] = t19) : t19 = $[35];\n  let t20;\n  $[36] !== dragGroupRect || $[37] !== dragInsertPosition || $[38] !== dragMinimapTransition || $[39] !== dragShowMinimapPrompt || $[40] !== isDragging ? (t20 = isDragging && !dragMinimapTransition && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    dragInsertPosition && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(OverlayDragInsertMarker, { dragInsertPosition }),\n    dragShowMinimapPrompt && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(OverlayMinimapPrompt, {}),\n    dragGroupRect && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(OverlayDragGroupRect, { dragGroupRect })\n  ] }), $[36] = dragGroupRect, $[37] = dragInsertPosition, $[38] = dragMinimapTransition, $[39] = dragShowMinimapPrompt, $[40] = isDragging, $[41] = t20) : t20 = $[41];\n  let t21;\n  $[42] !== dragSkeleton || $[43] !== isDragging ? (t21 = isDragging && dragSkeleton && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(OverlayDragPreview, { skeleton: dragSkeleton }), $[42] = dragSkeleton, $[43] = isDragging, $[44] = t21) : t21 = $[44];\n  let t22;\n  $[45] !== elementsToRender || $[46] !== t15 || $[47] !== t16 || $[48] !== t17 || $[49] !== t18 || $[50] !== t19 || $[51] !== t20 || $[52] !== t21 || $[53] !== zIndex ? (t22 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Root, { \"data-fading-out\": t15, \"data-overlays\": t16, ref: setRootElement, $zIndex: zIndex, children: [\n    t17,\n    t18,\n    t19,\n    elementsToRender,\n    t20,\n    t21\n  ] }), $[45] = elementsToRender, $[46] = t15, $[47] = t16, $[48] = t17, $[49] = t18, $[50] = t19, $[51] = t20, $[52] = t21, $[53] = zIndex, $[54] = t22) : t22 = $[54];\n  let t23;\n  $[55] !== comlink || $[56] !== t22 ? (t23 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SharedStateProvider, { comlink, children: t22 }), $[55] = comlink, $[56] = t22, $[57] = t23) : t23 = $[57];\n  let t24;\n  $[58] !== comlink || $[59] !== t23 ? (t24 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PreviewSnapshotsProvider, { comlink, children: t23 }), $[58] = comlink, $[59] = t23, $[60] = t24) : t24 = $[60];\n  let t25;\n  $[61] !== comlink || $[62] !== elements || $[63] !== t24 ? (t25 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SchemaProvider, { comlink, elements, children: t24 }), $[61] = comlink, $[62] = elements, $[63] = t24, $[64] = t25) : t25 = $[64];\n  let t26;\n  $[65] !== rootElement || $[66] !== t25 ? (t26 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.LayerProvider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.PortalProvider, { element: rootElement, children: t25 }) }), $[65] = rootElement, $[66] = t25, $[67] = t26) : t26 = $[67];\n  let t27;\n  $[68] !== t14 || $[69] !== t26 ? (t27 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.ThemeProvider, { scheme: t14, theme: _sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.studioTheme, tone: \"transparent\", children: t26 }), $[68] = t14, $[69] = t26, $[70] = t27) : t27 = $[70];\n  let t28;\n  return $[71] !== comlink || $[72] !== t27 ? (t28 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TelemetryProvider, { comlink, children: t27 }), $[71] = comlink, $[72] = t27, $[73] = t28) : t28 = $[73], t28;\n}, IS_MAC = typeof window < \"u\" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform), MODIFIERS = {\n  alt: \"altKey\",\n  ctrl: \"ctrlKey\",\n  mod: IS_MAC ? \"metaKey\" : \"ctrlKey\",\n  shift: \"shiftKey\"\n};\nfunction isHotkey(keys, event) {\n  return keys.every((key) => MODIFIERS[key] ? event[MODIFIERS[key]] : event.key === key.toUpperCase());\n}\nfunction isAltKey(event) {\n  return event.key === \"Alt\";\n}\nfunction _temp$2(acc, prevId) {\n  return acc.filter((id) => id !== prevId);\n}\nfunction _temp2$1(enabled) {\n  return !enabled;\n}\nfunction _temp3(unsub) {\n  return unsub();\n}\nfunction _temp4(event) {\n  const target = event.target;\n  if (((0,_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.isHTMLAnchorElement)(target) || (0,_sanity_ui_visual_editing__WEBPACK_IMPORTED_MODULE_8__.isHTMLElement)(target) && target.closest(\"a\")) && event.altKey) {\n    event.preventDefault(), event.stopPropagation();\n    const newEvent = new MouseEvent(event.type, {\n      ...event,\n      altKey: !1,\n      bubbles: !0,\n      cancelable: !0\n    });\n    event.target?.dispatchEvent(newEvent);\n  }\n}\nfunction _temp5(enabled_0) {\n  return !enabled_0;\n}\nfunction _temp6(enabled_1) {\n  return !enabled_1;\n}\nfunction _temp7(enabled_2) {\n  return !enabled_2;\n}\nfunction _temp8(element) {\n  return \"id\" in element.sanity ? [element.sanity.id] : [];\n}\nfunction _temp9(e_1) {\n  return e_1.activated || e_1.focused;\n}\nconst Refresh = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(4), {\n    comlink,\n    refresh\n  } = props, manualRefreshRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(0), mutationRefreshRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(0);\n  let t0, t1;\n  return $[0] !== comlink || $[1] !== refresh ? (t0 = () => comlink.on(\"presentation/refresh\", (data) => {\n    if (data.source === \"manual\") {\n      clearTimeout(manualRefreshRef.current);\n      const promise = refresh(data);\n      if (promise === !1)\n        return;\n      comlink.post(\"visual-editing/refreshing\", data);\n      let timedOut;\n      timedOut = !1, manualRefreshRef.current = window.setTimeout(() => {\n        comlink.post(\"visual-editing/refreshed\", data), timedOut = !0;\n      }, 3e3), promise?.finally?.(() => {\n        timedOut || (clearTimeout(manualRefreshRef.current), comlink.post(\"visual-editing/refreshed\", data));\n      });\n    } else if (data.source === \"mutation\") {\n      clearTimeout(mutationRefreshRef.current);\n      const promise_0 = refresh(data);\n      if (promise_0 === !1)\n        return;\n      comlink.post(\"visual-editing/refreshing\", data), mutationRefreshRef.current = window.setTimeout(() => {\n        const promise_1 = refresh(data);\n        promise_1 !== !1 && (comlink.post(\"visual-editing/refreshing\", data), promise_1?.finally?.(() => {\n          comlink.post(\"visual-editing/refreshed\", data);\n        }) || comlink.post(\"visual-editing/refreshed\", data));\n      }, 1e3), promise_0?.finally?.(() => {\n        comlink.post(\"visual-editing/refreshed\", data);\n      }) || comlink.post(\"visual-editing/refreshed\", data);\n    }\n  }), t1 = [comlink, refresh], $[0] = comlink, $[1] = refresh, $[2] = t0, $[3] = t1) : (t0 = $[2], t1 = $[3]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t0, t1), null;\n};\nfunction useComlink(t0) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(9), active = t0 === void 0 ? !0 : t0, [node, setNode] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(), [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"idle\");\n  let t1, t2;\n  $[0] !== active ? (t1 = () => {\n    if (!active)\n      return;\n    const instance = (0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_14__.createNode)({\n      name: \"visual-editing\",\n      connectTo: \"presentation\"\n    }, (0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_14__.createNodeMachine)().provide({\n      actors: (0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_15__.createCompatibilityActors)()\n    })), unsub = instance.onStatus(() => setStatus(\"connected\"), \"connected\");\n    setNode(instance);\n    const stop = instance.start();\n    return () => {\n      unsub(), stop(), setNode(void 0);\n    };\n  }, t2 = [active], $[0] = active, $[1] = t1, $[2] = t2) : (t1 = $[1], t2 = $[2]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t1, t2);\n  let t3, t4;\n  $[3] !== status ? (t3 = () => {\n    if (status === \"connected\")\n      return;\n    const controller = new AbortController();\n    return window.addEventListener(\"message\", _temp$1, {\n      signal: controller.signal\n    }), () => {\n      controller.abort();\n    };\n  }, t4 = [status], $[3] = status, $[4] = t3, $[5] = t4) : (t3 = $[4], t4 = $[5]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t3, t4);\n  let t5;\n  return $[6] !== node || $[7] !== status ? (t5 = [node, status], $[6] = node, $[7] = status, $[8] = t5) : t5 = $[8], t5;\n}\nfunction _temp$1(t0) {\n  const {\n    data,\n    origin\n  } = t0;\n  data && typeof data == \"object\" && \"domain\" in data && data.domain === \"sanity/channels\" && \"from\" in data && data.from === \"presentation\" && \"type\" in data && data.type === \"presentation/status\" && window.parent.postMessage({\n    domain: \"sanity/channels\",\n    type: \"visual-editing/status\",\n    data: {\n      origin: location.origin\n    }\n  }, origin);\n}\nfunction createSharedListener(comlink) {\n  const incomingConnection$ = new rxjs__WEBPACK_IMPORTED_MODULE_16__.ReplaySubject(1), incomingMutations$ = new rxjs__WEBPACK_IMPORTED_MODULE_17__.Subject();\n  return comlink.fetch(\"visual-editing/snapshot-welcome\", void 0, {\n    suppressWarnings: !0\n  }).then((data) => {\n    incomingConnection$.next(data.event);\n  }).catch(() => {\n  }), comlink.on(\"presentation/snapshot-event\", (data) => {\n    data.event.type === \"reconnect\" && incomingConnection$.next(data.event), data.event.type === \"mutation\" && incomingMutations$.next(data.event);\n  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_18__.merge)(incomingConnection$, incomingMutations$);\n}\nfunction useDatasetMutator(comlink) {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(3);\n  let t0, t1;\n  $[0] !== comlink ? (t0 = () => {\n    if (!comlink)\n      return;\n    const listener = createSharedListener(comlink), datasetMutator = (0,_optimistic_index_js__WEBPACK_IMPORTED_MODULE_19__.createDatasetMutator)(comlink), mutator = (0,xstate__WEBPACK_IMPORTED_MODULE_20__.A)(datasetMutator, {\n      input: {\n        client: {\n          withConfig: _temp\n        },\n        sharedListener: listener\n      }\n    });\n    mutator.start();\n    const featuresFetch = new AbortController();\n    return comlink.fetch(\"visual-editing/features\", void 0, {\n      signal: featuresFetch.signal,\n      suppressWarnings: !0\n    }).then((data) => {\n      data.features.optimistic && (0,_chunks_es_context_js__WEBPACK_IMPORTED_MODULE_21__.setActor)(mutator);\n    }).catch(_temp2), () => {\n      mutator.stop(), featuresFetch.abort();\n    };\n  }, t1 = [comlink], $[0] = comlink, $[1] = t0, $[2] = t1) : (t0 = $[1], t1 = $[2]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t0, t1);\n}\nfunction _temp2() {\n  console.warn(\"[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.\");\n}\nfunction _temp() {\n}\nconst VisualEditing = (props) => {\n  const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_1__.c)(22), {\n    components,\n    history,\n    portal: t0,\n    refresh,\n    zIndex\n  } = props, portal = t0 === void 0 ? !0 : t0, [inFrame, setInFrame] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null), [inPopUp, setInPopUp] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n  let t1, t2;\n  $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t1 = () => {\n    setInFrame((0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_15__.isMaybePreviewIframe)()), setInPopUp((0,_sanity_presentation_comlink__WEBPACK_IMPORTED_MODULE_15__.isMaybePreviewWindow)());\n  }, t2 = [], $[0] = t1, $[1] = t2) : (t1 = $[0], t2 = $[1]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t1, t2);\n  const [portalElement, setPortalElement] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n  let t3, t4;\n  $[2] !== portal ? (t3 = () => {\n    if (portal === !1)\n      return;\n    const node = document.createElement(\"sanity-visual-editing\");\n    return document.documentElement.appendChild(node), setPortalElement(node), () => {\n      setPortalElement(null), document.documentElement.contains(node) && document.documentElement.removeChild(node);\n    };\n  }, t4 = [portal], $[2] = portal, $[3] = t3, $[4] = t4) : (t3 = $[3], t4 = $[4]), (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(t3, t4);\n  const [comlink, comlinkStatus] = useComlink(inFrame === !0 || inPopUp === !0);\n  useDatasetMutator(comlinkStatus === \"connected\" ? comlink : void 0);\n  let t5;\n  $[5] !== comlink || $[6] !== comlinkStatus || $[7] !== components || $[8] !== inFrame || $[9] !== inPopUp || $[10] !== zIndex ? (t5 = inFrame !== null && inPopUp !== null && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Overlays, { comlink, comlinkStatus, componentResolver: components, inFrame, inPopUp, zIndex }), $[5] = comlink, $[6] = comlinkStatus, $[7] = components, $[8] = inFrame, $[9] = inPopUp, $[10] = zIndex, $[11] = t5) : t5 = $[11];\n  let t6;\n  $[12] !== comlink || $[13] !== history || $[14] !== refresh ? (t6 = comlink && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(History, { comlink, history }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Meta, { comlink }),\n    refresh && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Refresh, { comlink, refresh })\n  ] }), $[12] = comlink, $[13] = history, $[14] = refresh, $[15] = t6) : t6 = $[15];\n  let t7;\n  $[16] !== t5 || $[17] !== t6 ? (t7 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    t5,\n    t6\n  ] }), $[16] = t5, $[17] = t6, $[18] = t7) : t7 = $[18];\n  const children = t7;\n  if (portal === !1 || !portalElement)\n    return children;\n  let t8;\n  return $[19] !== children || $[20] !== portalElement ? (t8 = (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal)(children, portalElement), $[19] = children, $[20] = portalElement, $[21] = t8) : t8 = $[21], t8;\n};\nVisualEditing.displayName = \"VisualEditing\";\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/dist/react/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DRAFTS_FOLDER: () => (/* binding */ DRAFTS_FOLDER),\n/* harmony export */   VERSION_FOLDER: () => (/* binding */ VERSION_FOLDER),\n/* harmony export */   createEditUrl: () => (/* binding */ createEditUrl),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   getDraftId: () => (/* binding */ getDraftId),\n/* harmony export */   getPublishedId: () => (/* binding */ getPublishedId),\n/* harmony export */   getVersionFromId: () => (/* binding */ getVersionFromId),\n/* harmony export */   getVersionId: () => (/* binding */ getVersionId),\n/* harmony export */   isDraftId: () => (/* binding */ isDraftId),\n/* harmony export */   isPublishedId: () => (/* binding */ isPublishedId),\n/* harmony export */   isVersionId: () => (/* binding */ isVersionId),\n/* harmony export */   jsonPath: () => (/* binding */ jsonPath),\n/* harmony export */   jsonPathToStudioPath: () => (/* binding */ jsonPathToStudioPath),\n/* harmony export */   parseJsonPath: () => (/* binding */ parseJsonPath),\n/* harmony export */   reKeySegment: () => (/* binding */ reKeySegment),\n/* harmony export */   resolveEditInfo: () => (/* binding */ resolveEditInfo),\n/* harmony export */   resolveMapping: () => (/* binding */ resolveMapping),\n/* harmony export */   resolveStudioBaseRoute: () => (/* binding */ resolveStudioBaseRoute),\n/* harmony export */   studioPath: () => (/* binding */ studioPath),\n/* harmony export */   studioPathToJsonPath: () => (/* binding */ studioPathToJsonPath),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   walkMap: () => (/* binding */ walkMap)\n/* harmony export */ });\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, reIndexTuple = /^\\d*:\\d*$/;\nfunction isIndexSegment(segment) {\n  return typeof segment == \"number\" || typeof segment == \"string\" && /^\\[\\d+\\]$/.test(segment);\n}\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction isIndexTuple(segment) {\n  if (typeof segment == \"string\" && reIndexTuple.test(segment))\n    return !0;\n  if (!Array.isArray(segment) || segment.length !== 2)\n    return !1;\n  const [from, to] = segment;\n  return (typeof from == \"number\" || from === \"\") && (typeof to == \"number\" || to === \"\");\n}\nfunction get(obj, path, defaultVal) {\n  const select = typeof path == \"string\" ? fromString(path) : path;\n  if (!Array.isArray(select))\n    throw new Error(\"Path must be an array or a string\");\n  let acc = obj;\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i];\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc[segment];\n    }\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc.find((item) => item._key === segment._key);\n    }\n    if (typeof segment == \"string\" && (acc = typeof acc == \"object\" && acc !== null ? acc[segment] : void 0), typeof acc > \"u\")\n      return defaultVal;\n  }\n  return acc;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nfunction fromString(path) {\n  if (typeof path != \"string\")\n    throw new Error(\"Path is not a string\");\n  const segments = path.match(rePropName);\n  if (!segments)\n    throw new Error(\"Invalid path string\");\n  return segments.map(parsePathSegment);\n}\nfunction parsePathSegment(segment) {\n  return isIndexSegment(segment) ? parseIndexSegment(segment) : isKeySegment(segment) ? parseKeySegment(segment) : isIndexTuple(segment) ? parseIndexTupleSegment(segment) : segment;\n}\nfunction parseIndexSegment(segment) {\n  return Number(segment.replace(/[^\\d]/g, \"\"));\n}\nfunction parseKeySegment(segment) {\n  return { _key: segment.match(reKeySegment)[1] };\n}\nfunction parseIndexTupleSegment(segment) {\n  const [from, to] = segment.split(\":\").map((seg) => seg === \"\" ? seg : Number(seg));\n  return [from, to];\n}\nvar studioPath = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  fromString,\n  get,\n  isIndexSegment,\n  isIndexTuple,\n  isKeySegment,\n  reKeySegment,\n  toString\n});\nconst DRAFTS_FOLDER = \"drafts\", VERSION_FOLDER = \"versions\", PATH_SEPARATOR = \".\", DRAFTS_PREFIX = `${DRAFTS_FOLDER}${PATH_SEPARATOR}`, VERSION_PREFIX = `${VERSION_FOLDER}${PATH_SEPARATOR}`;\nfunction isDraftId(id) {\n  return id.startsWith(DRAFTS_PREFIX);\n}\nfunction isVersionId(id) {\n  return id.startsWith(VERSION_PREFIX);\n}\nfunction isPublishedId(id) {\n  return !isDraftId(id) && !isVersionId(id);\n}\nfunction getDraftId(id) {\n  if (isVersionId(id)) {\n    const publishedId = getPublishedId(id);\n    return DRAFTS_PREFIX + publishedId;\n  }\n  return isDraftId(id) ? id : DRAFTS_PREFIX + id;\n}\nfunction getVersionId(id, version) {\n  if (version === \"drafts\" || version === \"published\")\n    throw new Error('Version can not be \"published\" or \"drafts\"');\n  return `${VERSION_PREFIX}${version}${PATH_SEPARATOR}${getPublishedId(id)}`;\n}\nfunction getVersionFromId(id) {\n  if (!isVersionId(id)) return;\n  const [_versionPrefix, versionId, ..._publishedId] = id.split(PATH_SEPARATOR);\n  return versionId;\n}\nfunction getPublishedId(id) {\n  return isVersionId(id) ? id.split(PATH_SEPARATOR).slice(2).join(PATH_SEPARATOR) : isDraftId(id) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction studioPathToJsonPath(path) {\n  return (typeof path == \"string\" ? fromString(path) : path).map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (Array.isArray(segment))\n      throw new Error(`IndexTuple segments aren't supported:${JSON.stringify(segment)}`);\n    if (isContentSourceMapParsedPathKeyedSegment(segment))\n      return segment;\n    if (segment._key)\n      return { _key: segment._key, _index: -1 };\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction isContentSourceMapParsedPathKeyedSegment(segment) {\n  return typeof segment == \"object\" && \"_key\" in segment && \"_index\" in segment;\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  if (workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), isPublishedId(_id))\n    searchParams.set(\"perspective\", \"published\");\n  else if (isVersionId(_id)) {\n    const versionId = getVersionFromId(_id);\n    searchParams.set(\"perspective\", versionId);\n  }\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveEditInfo(options) {\n  const { resultSourceMap: csm, resultPath } = options, { mapping, pathSuffix } = resolveMapping(resultPath, csm) || {};\n  if (!mapping || mapping.source.type === \"literal\" || mapping.source.type === \"unknown\")\n    return;\n  const sourceDoc = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path];\n  if (sourceDoc && sourcePath) {\n    const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n      typeof options.studioUrl == \"function\" ? options.studioUrl(sourceDoc) : options.studioUrl\n    );\n    if (!baseUrl) return;\n    const { _id, _type, _projectId, _dataset } = sourceDoc;\n    return {\n      baseUrl,\n      workspace,\n      tool,\n      id: _id,\n      type: _type,\n      path: parseJsonPath(sourcePath + pathSuffix),\n      projectId: _projectId,\n      dataset: _dataset\n    };\n  }\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\n\n//# sourceMappingURL=resolveEditInfo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrify: () => (/* binding */ arrify)\n/* harmony export */ });\nfunction arrify(val) {\n  return Array.isArray(val) ? val : [val];\n}\n\n//# sourceMappingURL=arrify.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2FycmlmeS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbnRlYy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3Zpc3VhbC1lZGl0aW5nL25vZGVfbW9kdWxlcy9Ac2FuaXR5L211dGF0ZS9kaXN0L19jaHVua3MtZXMvYXJyaWZ5LmpzP2Y4MjciXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYXJyaWZ5KHZhbCkge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWwpID8gdmFsIDogW3ZhbF07XG59XG5leHBvcnQge1xuICBhcnJpZnlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJpZnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/decode.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/decode.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeAll: () => (/* binding */ decodeAll)\n/* harmony export */ });\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/parse.js\");\n\nfunction isCreateIfNotExistsMutation(sanityMutation) {\n  return \"createIfNotExists\" in sanityMutation;\n}\nfunction isCreateOrReplaceMutation(sanityMutation) {\n  return \"createOrReplace\" in sanityMutation;\n}\nfunction isCreateMutation(sanityMutation) {\n  return \"create\" in sanityMutation;\n}\nfunction isDeleteMutation(sanityMutation) {\n  return \"delete\" in sanityMutation;\n}\nfunction isPatchMutation(sanityMutation) {\n  return \"patch\" in sanityMutation;\n}\nfunction isSetPatch(sanityPatch) {\n  return \"set\" in sanityPatch;\n}\nfunction isSetIfMissingPatch(sanityPatch) {\n  return \"setIfMissing\" in sanityPatch;\n}\nfunction isUnsetPatch(sanityPatch) {\n  return \"unset\" in sanityPatch;\n}\nfunction isIncPatch(sanityPatch) {\n  return \"inc\" in sanityPatch;\n}\nfunction isDecPatch(sanityPatch) {\n  return \"inc\" in sanityPatch;\n}\nfunction isInsertPatch(sanityPatch) {\n  return \"insert\" in sanityPatch;\n}\nfunction decodeAll(sanityMutations) {\n  return sanityMutations.map(decodeMutation);\n}\nfunction decode(encodedMutation) {\n  return decodeMutation(encodedMutation);\n}\nfunction decodeMutation(encodedMutation) {\n  if (isCreateIfNotExistsMutation(encodedMutation))\n    return {\n      type: \"createIfNotExists\",\n      document: encodedMutation.createIfNotExists\n    };\n  if (isCreateOrReplaceMutation(encodedMutation))\n    return {\n      type: \"createOrReplace\",\n      document: encodedMutation.createOrReplace\n    };\n  if (isCreateMutation(encodedMutation))\n    return { type: \"create\", document: encodedMutation.create };\n  if (isDeleteMutation(encodedMutation))\n    return { id: encodedMutation.delete.id, type: \"delete\" };\n  if (isPatchMutation(encodedMutation))\n    return {\n      type: \"patch\",\n      id: encodedMutation.patch.id,\n      patches: decodeNodePatches(encodedMutation.patch)\n    };\n  throw new Error(`Unknown mutation: ${JSON.stringify(encodedMutation)}`);\n}\nconst POSITION_KEYS = [\"before\", \"replace\", \"after\"];\nfunction getInsertPosition(insert) {\n  const positions = POSITION_KEYS.filter((k) => k in insert);\n  if (positions.length > 1)\n    throw new Error(\n      `Insert patch is ambiguous. Should only contain one of: ${POSITION_KEYS.join(\n        \", \"\n      )}, instead found ${positions.join(\", \")}`\n    );\n  return positions[0];\n}\nfunction decodeNodePatches(patch) {\n  return [\n    ...getSetPatches(patch),\n    ...getSetIfMissingPatches(patch),\n    ...getUnsetPatches(patch),\n    ...getIncPatches(patch),\n    ...getDecPatches(patch),\n    ...getInsertPatches(patch)\n  ];\n}\nfunction getSetPatches(patch) {\n  return isSetPatch(patch) ? Object.keys(patch.set).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"set\", value: patch.set[path] }\n  })) : [];\n}\nfunction getSetIfMissingPatches(patch) {\n  return isSetIfMissingPatch(patch) ? Object.keys(patch.setIfMissing).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"setIfMissing\", value: patch.setIfMissing[path] }\n  })) : [];\n}\nfunction getUnsetPatches(patch) {\n  return isUnsetPatch(patch) ? patch.unset.map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"unset\" }\n  })) : [];\n}\nfunction getIncPatches(patch) {\n  return isIncPatch(patch) ? Object.keys(patch.inc).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"inc\", amount: patch.inc[path] }\n  })) : [];\n}\nfunction getDecPatches(patch) {\n  return isDecPatch(patch) ? Object.keys(patch.dec).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"dec\", amount: patch.dec[path] }\n  })) : [];\n}\nfunction getInsertPatches(patch) {\n  if (!isInsertPatch(patch))\n    return [];\n  const position = getInsertPosition(patch.insert);\n  if (!position)\n    throw new Error(\"Insert patch missing position\");\n  const path = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(patch.insert[position]), referenceItem = path.pop(), op = position === \"replace\" ? {\n    type: \"insert\",\n    position,\n    referenceItem,\n    items: patch.insert.items\n  } : {\n    type: \"insert\",\n    position,\n    referenceItem,\n    items: patch.insert.items\n  };\n  return [{ path, op }];\n}\n\n//# sourceMappingURL=decode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2RlY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxnQ0FBZ0M7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFO0FBQ2hFO0FBQ0EsUUFBUSxrQkFBa0IscUJBQXFCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBSztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbnRlYy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3Zpc3VhbC1lZGl0aW5nL25vZGVfbW9kdWxlcy9Ac2FuaXR5L211dGF0ZS9kaXN0L19jaHVua3MtZXMvZGVjb2RlLmpzPzA5OWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2UgfSBmcm9tIFwiLi9wYXJzZS5qc1wiO1xuZnVuY3Rpb24gaXNDcmVhdGVJZk5vdEV4aXN0c011dGF0aW9uKHNhbml0eU11dGF0aW9uKSB7XG4gIHJldHVybiBcImNyZWF0ZUlmTm90RXhpc3RzXCIgaW4gc2FuaXR5TXV0YXRpb247XG59XG5mdW5jdGlvbiBpc0NyZWF0ZU9yUmVwbGFjZU11dGF0aW9uKHNhbml0eU11dGF0aW9uKSB7XG4gIHJldHVybiBcImNyZWF0ZU9yUmVwbGFjZVwiIGluIHNhbml0eU11dGF0aW9uO1xufVxuZnVuY3Rpb24gaXNDcmVhdGVNdXRhdGlvbihzYW5pdHlNdXRhdGlvbikge1xuICByZXR1cm4gXCJjcmVhdGVcIiBpbiBzYW5pdHlNdXRhdGlvbjtcbn1cbmZ1bmN0aW9uIGlzRGVsZXRlTXV0YXRpb24oc2FuaXR5TXV0YXRpb24pIHtcbiAgcmV0dXJuIFwiZGVsZXRlXCIgaW4gc2FuaXR5TXV0YXRpb247XG59XG5mdW5jdGlvbiBpc1BhdGNoTXV0YXRpb24oc2FuaXR5TXV0YXRpb24pIHtcbiAgcmV0dXJuIFwicGF0Y2hcIiBpbiBzYW5pdHlNdXRhdGlvbjtcbn1cbmZ1bmN0aW9uIGlzU2V0UGF0Y2goc2FuaXR5UGF0Y2gpIHtcbiAgcmV0dXJuIFwic2V0XCIgaW4gc2FuaXR5UGF0Y2g7XG59XG5mdW5jdGlvbiBpc1NldElmTWlzc2luZ1BhdGNoKHNhbml0eVBhdGNoKSB7XG4gIHJldHVybiBcInNldElmTWlzc2luZ1wiIGluIHNhbml0eVBhdGNoO1xufVxuZnVuY3Rpb24gaXNVbnNldFBhdGNoKHNhbml0eVBhdGNoKSB7XG4gIHJldHVybiBcInVuc2V0XCIgaW4gc2FuaXR5UGF0Y2g7XG59XG5mdW5jdGlvbiBpc0luY1BhdGNoKHNhbml0eVBhdGNoKSB7XG4gIHJldHVybiBcImluY1wiIGluIHNhbml0eVBhdGNoO1xufVxuZnVuY3Rpb24gaXNEZWNQYXRjaChzYW5pdHlQYXRjaCkge1xuICByZXR1cm4gXCJpbmNcIiBpbiBzYW5pdHlQYXRjaDtcbn1cbmZ1bmN0aW9uIGlzSW5zZXJ0UGF0Y2goc2FuaXR5UGF0Y2gpIHtcbiAgcmV0dXJuIFwiaW5zZXJ0XCIgaW4gc2FuaXR5UGF0Y2g7XG59XG5mdW5jdGlvbiBkZWNvZGVBbGwoc2FuaXR5TXV0YXRpb25zKSB7XG4gIHJldHVybiBzYW5pdHlNdXRhdGlvbnMubWFwKGRlY29kZU11dGF0aW9uKTtcbn1cbmZ1bmN0aW9uIGRlY29kZShlbmNvZGVkTXV0YXRpb24pIHtcbiAgcmV0dXJuIGRlY29kZU11dGF0aW9uKGVuY29kZWRNdXRhdGlvbik7XG59XG5mdW5jdGlvbiBkZWNvZGVNdXRhdGlvbihlbmNvZGVkTXV0YXRpb24pIHtcbiAgaWYgKGlzQ3JlYXRlSWZOb3RFeGlzdHNNdXRhdGlvbihlbmNvZGVkTXV0YXRpb24pKVxuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBcImNyZWF0ZUlmTm90RXhpc3RzXCIsXG4gICAgICBkb2N1bWVudDogZW5jb2RlZE11dGF0aW9uLmNyZWF0ZUlmTm90RXhpc3RzXG4gICAgfTtcbiAgaWYgKGlzQ3JlYXRlT3JSZXBsYWNlTXV0YXRpb24oZW5jb2RlZE11dGF0aW9uKSlcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogXCJjcmVhdGVPclJlcGxhY2VcIixcbiAgICAgIGRvY3VtZW50OiBlbmNvZGVkTXV0YXRpb24uY3JlYXRlT3JSZXBsYWNlXG4gICAgfTtcbiAgaWYgKGlzQ3JlYXRlTXV0YXRpb24oZW5jb2RlZE11dGF0aW9uKSlcbiAgICByZXR1cm4geyB0eXBlOiBcImNyZWF0ZVwiLCBkb2N1bWVudDogZW5jb2RlZE11dGF0aW9uLmNyZWF0ZSB9O1xuICBpZiAoaXNEZWxldGVNdXRhdGlvbihlbmNvZGVkTXV0YXRpb24pKVxuICAgIHJldHVybiB7IGlkOiBlbmNvZGVkTXV0YXRpb24uZGVsZXRlLmlkLCB0eXBlOiBcImRlbGV0ZVwiIH07XG4gIGlmIChpc1BhdGNoTXV0YXRpb24oZW5jb2RlZE11dGF0aW9uKSlcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogXCJwYXRjaFwiLFxuICAgICAgaWQ6IGVuY29kZWRNdXRhdGlvbi5wYXRjaC5pZCxcbiAgICAgIHBhdGNoZXM6IGRlY29kZU5vZGVQYXRjaGVzKGVuY29kZWRNdXRhdGlvbi5wYXRjaClcbiAgICB9O1xuICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gbXV0YXRpb246ICR7SlNPTi5zdHJpbmdpZnkoZW5jb2RlZE11dGF0aW9uKX1gKTtcbn1cbmNvbnN0IFBPU0lUSU9OX0tFWVMgPSBbXCJiZWZvcmVcIiwgXCJyZXBsYWNlXCIsIFwiYWZ0ZXJcIl07XG5mdW5jdGlvbiBnZXRJbnNlcnRQb3NpdGlvbihpbnNlcnQpIHtcbiAgY29uc3QgcG9zaXRpb25zID0gUE9TSVRJT05fS0VZUy5maWx0ZXIoKGspID0+IGsgaW4gaW5zZXJ0KTtcbiAgaWYgKHBvc2l0aW9ucy5sZW5ndGggPiAxKVxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnNlcnQgcGF0Y2ggaXMgYW1iaWd1b3VzLiBTaG91bGQgb25seSBjb250YWluIG9uZSBvZjogJHtQT1NJVElPTl9LRVlTLmpvaW4oXG4gICAgICAgIFwiLCBcIlxuICAgICAgKX0sIGluc3RlYWQgZm91bmQgJHtwb3NpdGlvbnMuam9pbihcIiwgXCIpfWBcbiAgICApO1xuICByZXR1cm4gcG9zaXRpb25zWzBdO1xufVxuZnVuY3Rpb24gZGVjb2RlTm9kZVBhdGNoZXMocGF0Y2gpIHtcbiAgcmV0dXJuIFtcbiAgICAuLi5nZXRTZXRQYXRjaGVzKHBhdGNoKSxcbiAgICAuLi5nZXRTZXRJZk1pc3NpbmdQYXRjaGVzKHBhdGNoKSxcbiAgICAuLi5nZXRVbnNldFBhdGNoZXMocGF0Y2gpLFxuICAgIC4uLmdldEluY1BhdGNoZXMocGF0Y2gpLFxuICAgIC4uLmdldERlY1BhdGNoZXMocGF0Y2gpLFxuICAgIC4uLmdldEluc2VydFBhdGNoZXMocGF0Y2gpXG4gIF07XG59XG5mdW5jdGlvbiBnZXRTZXRQYXRjaGVzKHBhdGNoKSB7XG4gIHJldHVybiBpc1NldFBhdGNoKHBhdGNoKSA/IE9iamVjdC5rZXlzKHBhdGNoLnNldCkubWFwKChwYXRoKSA9PiAoe1xuICAgIHBhdGg6IHBhcnNlKHBhdGgpLFxuICAgIG9wOiB7IHR5cGU6IFwic2V0XCIsIHZhbHVlOiBwYXRjaC5zZXRbcGF0aF0gfVxuICB9KSkgOiBbXTtcbn1cbmZ1bmN0aW9uIGdldFNldElmTWlzc2luZ1BhdGNoZXMocGF0Y2gpIHtcbiAgcmV0dXJuIGlzU2V0SWZNaXNzaW5nUGF0Y2gocGF0Y2gpID8gT2JqZWN0LmtleXMocGF0Y2guc2V0SWZNaXNzaW5nKS5tYXAoKHBhdGgpID0+ICh7XG4gICAgcGF0aDogcGFyc2UocGF0aCksXG4gICAgb3A6IHsgdHlwZTogXCJzZXRJZk1pc3NpbmdcIiwgdmFsdWU6IHBhdGNoLnNldElmTWlzc2luZ1twYXRoXSB9XG4gIH0pKSA6IFtdO1xufVxuZnVuY3Rpb24gZ2V0VW5zZXRQYXRjaGVzKHBhdGNoKSB7XG4gIHJldHVybiBpc1Vuc2V0UGF0Y2gocGF0Y2gpID8gcGF0Y2gudW5zZXQubWFwKChwYXRoKSA9PiAoe1xuICAgIHBhdGg6IHBhcnNlKHBhdGgpLFxuICAgIG9wOiB7IHR5cGU6IFwidW5zZXRcIiB9XG4gIH0pKSA6IFtdO1xufVxuZnVuY3Rpb24gZ2V0SW5jUGF0Y2hlcyhwYXRjaCkge1xuICByZXR1cm4gaXNJbmNQYXRjaChwYXRjaCkgPyBPYmplY3Qua2V5cyhwYXRjaC5pbmMpLm1hcCgocGF0aCkgPT4gKHtcbiAgICBwYXRoOiBwYXJzZShwYXRoKSxcbiAgICBvcDogeyB0eXBlOiBcImluY1wiLCBhbW91bnQ6IHBhdGNoLmluY1twYXRoXSB9XG4gIH0pKSA6IFtdO1xufVxuZnVuY3Rpb24gZ2V0RGVjUGF0Y2hlcyhwYXRjaCkge1xuICByZXR1cm4gaXNEZWNQYXRjaChwYXRjaCkgPyBPYmplY3Qua2V5cyhwYXRjaC5kZWMpLm1hcCgocGF0aCkgPT4gKHtcbiAgICBwYXRoOiBwYXJzZShwYXRoKSxcbiAgICBvcDogeyB0eXBlOiBcImRlY1wiLCBhbW91bnQ6IHBhdGNoLmRlY1twYXRoXSB9XG4gIH0pKSA6IFtdO1xufVxuZnVuY3Rpb24gZ2V0SW5zZXJ0UGF0Y2hlcyhwYXRjaCkge1xuICBpZiAoIWlzSW5zZXJ0UGF0Y2gocGF0Y2gpKVxuICAgIHJldHVybiBbXTtcbiAgY29uc3QgcG9zaXRpb24gPSBnZXRJbnNlcnRQb3NpdGlvbihwYXRjaC5pbnNlcnQpO1xuICBpZiAoIXBvc2l0aW9uKVxuICAgIHRocm93IG5ldyBFcnJvcihcIkluc2VydCBwYXRjaCBtaXNzaW5nIHBvc2l0aW9uXCIpO1xuICBjb25zdCBwYXRoID0gcGFyc2UocGF0Y2guaW5zZXJ0W3Bvc2l0aW9uXSksIHJlZmVyZW5jZUl0ZW0gPSBwYXRoLnBvcCgpLCBvcCA9IHBvc2l0aW9uID09PSBcInJlcGxhY2VcIiA/IHtcbiAgICB0eXBlOiBcImluc2VydFwiLFxuICAgIHBvc2l0aW9uLFxuICAgIHJlZmVyZW5jZUl0ZW0sXG4gICAgaXRlbXM6IHBhdGNoLmluc2VydC5pdGVtc1xuICB9IDoge1xuICAgIHR5cGU6IFwiaW5zZXJ0XCIsXG4gICAgcG9zaXRpb24sXG4gICAgcmVmZXJlbmNlSXRlbSxcbiAgICBpdGVtczogcGF0Y2guaW5zZXJ0Lml0ZW1zXG4gIH07XG4gIHJldHVybiBbeyBwYXRoLCBvcCB9XTtcbn1cbmV4cG9ydCB7XG4gIGRlY29kZSxcbiAgZGVjb2RlQWxsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVjb2RlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/encode.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/encode.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeAll: () => (/* binding */ encodeAll),\n/* harmony export */   encodeMutation: () => (/* binding */ encodeMutation),\n/* harmony export */   encodeTransaction: () => (/* binding */ encodeTransaction)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n\nfunction encode(mutation) {\n  return encodeMutation(mutation);\n}\nfunction encodeAll(mutations) {\n  return mutations.flatMap(encode);\n}\nfunction encodeTransaction(transaction) {\n  return {\n    transactionId: transaction.id,\n    mutations: encodeAll(transaction.mutations)\n  };\n}\nfunction encodeMutation(mutation) {\n  if (mutation.type === \"create\" || mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return { [mutation.type]: mutation.document };\n  if (mutation.type === \"delete\")\n    return {\n      delete: { id: mutation.id }\n    };\n  const ifRevisionID = mutation.options?.ifRevision;\n  return mutation.patches.map((patch) => ({\n    patch: {\n      id: mutation.id,\n      ...ifRevisionID && { ifRevisionID },\n      ...patchToSanity(patch)\n    }\n  }));\n}\nfunction patchToSanity(patch) {\n  const { path, op } = patch;\n  if (op.type === \"unset\")\n    return { unset: [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)] };\n  if (op.type === \"insert\")\n    return {\n      insert: {\n        [op.position]: (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)([...path, op.referenceItem]),\n        items: op.items\n      }\n    };\n  if (op.type === \"diffMatchPatch\")\n    return { diffMatchPatch: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.value } };\n  if (op.type === \"inc\")\n    return { inc: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.amount } };\n  if (op.type === \"dec\")\n    return { dec: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.amount } };\n  if (op.type === \"set\" || op.type === \"setIfMissing\")\n    return { [op.type]: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.value } };\n  if (op.type === \"truncate\") {\n    const range = [\n      op.startIndex,\n      typeof op.endIndex == \"number\" ? op.endIndex : \"\"\n    ].join(\":\");\n    return { unset: [`${(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)}[${range}]`] };\n  }\n  if (op.type === \"upsert\")\n    return {\n      unset: op.items.map(\n        (item) => (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)([...path, { _key: item._key }])\n      ),\n      insert: {\n        [op.position]: (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)([...path, op.referenceItem]),\n        items: op.items\n      }\n    };\n  if (op.type === \"assign\")\n    return {\n      set: Object.fromEntries(\n        Object.keys(op.value).map((key) => [\n          (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(key)),\n          op.value[key]\n        ])\n      )\n    };\n  if (op.type === \"unassign\")\n    return {\n      unset: op.keys.map((key) => (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(key)))\n    };\n  if (op.type === \"replace\")\n    return {\n      insert: {\n        replace: (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(op.referenceItem)),\n        items: op.items\n      }\n    };\n  if (op.type === \"remove\")\n    return {\n      unset: [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(op.referenceItem))]\n    };\n  throw new Error(`Unknown operation type ${op.type}`);\n}\n\n//# sourceMappingURL=encode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2VuY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixjQUFjO0FBQ3pDO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLFVBQVUsV0FBVztBQUNyQjtBQUNBLGFBQWEsUUFBUSx3REFBUztBQUM5QjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsd0RBQVM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGtCQUFrQixDQUFDLHdEQUFTO0FBQ3pDO0FBQ0EsYUFBYSxPQUFPLENBQUMsd0RBQVM7QUFDOUI7QUFDQSxhQUFhLE9BQU8sQ0FBQyx3REFBUztBQUM5QjtBQUNBLGFBQWEsYUFBYSxDQUFDLHdEQUFTO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFdBQVcsd0RBQVMsT0FBTyxHQUFHLE1BQU07QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isd0RBQVMsYUFBYSxpQkFBaUI7QUFDekQ7QUFDQTtBQUNBLHVCQUF1Qix3REFBUztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsd0RBQVM7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHdEQUFTO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHdEQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHdEQUFTO0FBQ3ZCO0FBQ0EsNENBQTRDLFFBQVE7QUFDcEQ7QUFNRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFudGVjLy4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvdmlzdWFsLWVkaXRpbmcvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbXV0YXRlL2Rpc3QvX2NodW5rcy1lcy9lbmNvZGUuanM/OTU2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJpbmdpZnkgfSBmcm9tIFwiLi9zdHJpbmdpZnkuanNcIjtcbmZ1bmN0aW9uIGVuY29kZShtdXRhdGlvbikge1xuICByZXR1cm4gZW5jb2RlTXV0YXRpb24obXV0YXRpb24pO1xufVxuZnVuY3Rpb24gZW5jb2RlQWxsKG11dGF0aW9ucykge1xuICByZXR1cm4gbXV0YXRpb25zLmZsYXRNYXAoZW5jb2RlKTtcbn1cbmZ1bmN0aW9uIGVuY29kZVRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uKSB7XG4gIHJldHVybiB7XG4gICAgdHJhbnNhY3Rpb25JZDogdHJhbnNhY3Rpb24uaWQsXG4gICAgbXV0YXRpb25zOiBlbmNvZGVBbGwodHJhbnNhY3Rpb24ubXV0YXRpb25zKVxuICB9O1xufVxuZnVuY3Rpb24gZW5jb2RlTXV0YXRpb24obXV0YXRpb24pIHtcbiAgaWYgKG11dGF0aW9uLnR5cGUgPT09IFwiY3JlYXRlXCIgfHwgbXV0YXRpb24udHlwZSA9PT0gXCJjcmVhdGVJZk5vdEV4aXN0c1wiIHx8IG11dGF0aW9uLnR5cGUgPT09IFwiY3JlYXRlT3JSZXBsYWNlXCIpXG4gICAgcmV0dXJuIHsgW211dGF0aW9uLnR5cGVdOiBtdXRhdGlvbi5kb2N1bWVudCB9O1xuICBpZiAobXV0YXRpb24udHlwZSA9PT0gXCJkZWxldGVcIilcbiAgICByZXR1cm4ge1xuICAgICAgZGVsZXRlOiB7IGlkOiBtdXRhdGlvbi5pZCB9XG4gICAgfTtcbiAgY29uc3QgaWZSZXZpc2lvbklEID0gbXV0YXRpb24ub3B0aW9ucz8uaWZSZXZpc2lvbjtcbiAgcmV0dXJuIG11dGF0aW9uLnBhdGNoZXMubWFwKChwYXRjaCkgPT4gKHtcbiAgICBwYXRjaDoge1xuICAgICAgaWQ6IG11dGF0aW9uLmlkLFxuICAgICAgLi4uaWZSZXZpc2lvbklEICYmIHsgaWZSZXZpc2lvbklEIH0sXG4gICAgICAuLi5wYXRjaFRvU2FuaXR5KHBhdGNoKVxuICAgIH1cbiAgfSkpO1xufVxuZnVuY3Rpb24gcGF0Y2hUb1Nhbml0eShwYXRjaCkge1xuICBjb25zdCB7IHBhdGgsIG9wIH0gPSBwYXRjaDtcbiAgaWYgKG9wLnR5cGUgPT09IFwidW5zZXRcIilcbiAgICByZXR1cm4geyB1bnNldDogW3N0cmluZ2lmeShwYXRoKV0gfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwiaW5zZXJ0XCIpXG4gICAgcmV0dXJuIHtcbiAgICAgIGluc2VydDoge1xuICAgICAgICBbb3AucG9zaXRpb25dOiBzdHJpbmdpZnkoWy4uLnBhdGgsIG9wLnJlZmVyZW5jZUl0ZW1dKSxcbiAgICAgICAgaXRlbXM6IG9wLml0ZW1zXG4gICAgICB9XG4gICAgfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwiZGlmZk1hdGNoUGF0Y2hcIilcbiAgICByZXR1cm4geyBkaWZmTWF0Y2hQYXRjaDogeyBbc3RyaW5naWZ5KHBhdGgpXTogb3AudmFsdWUgfSB9O1xuICBpZiAob3AudHlwZSA9PT0gXCJpbmNcIilcbiAgICByZXR1cm4geyBpbmM6IHsgW3N0cmluZ2lmeShwYXRoKV06IG9wLmFtb3VudCB9IH07XG4gIGlmIChvcC50eXBlID09PSBcImRlY1wiKVxuICAgIHJldHVybiB7IGRlYzogeyBbc3RyaW5naWZ5KHBhdGgpXTogb3AuYW1vdW50IH0gfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwic2V0XCIgfHwgb3AudHlwZSA9PT0gXCJzZXRJZk1pc3NpbmdcIilcbiAgICByZXR1cm4geyBbb3AudHlwZV06IHsgW3N0cmluZ2lmeShwYXRoKV06IG9wLnZhbHVlIH0gfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwidHJ1bmNhdGVcIikge1xuICAgIGNvbnN0IHJhbmdlID0gW1xuICAgICAgb3Auc3RhcnRJbmRleCxcbiAgICAgIHR5cGVvZiBvcC5lbmRJbmRleCA9PSBcIm51bWJlclwiID8gb3AuZW5kSW5kZXggOiBcIlwiXG4gICAgXS5qb2luKFwiOlwiKTtcbiAgICByZXR1cm4geyB1bnNldDogW2Ake3N0cmluZ2lmeShwYXRoKX1bJHtyYW5nZX1dYF0gfTtcbiAgfVxuICBpZiAob3AudHlwZSA9PT0gXCJ1cHNlcnRcIilcbiAgICByZXR1cm4ge1xuICAgICAgdW5zZXQ6IG9wLml0ZW1zLm1hcChcbiAgICAgICAgKGl0ZW0pID0+IHN0cmluZ2lmeShbLi4ucGF0aCwgeyBfa2V5OiBpdGVtLl9rZXkgfV0pXG4gICAgICApLFxuICAgICAgaW5zZXJ0OiB7XG4gICAgICAgIFtvcC5wb3NpdGlvbl06IHN0cmluZ2lmeShbLi4ucGF0aCwgb3AucmVmZXJlbmNlSXRlbV0pLFxuICAgICAgICBpdGVtczogb3AuaXRlbXNcbiAgICAgIH1cbiAgICB9O1xuICBpZiAob3AudHlwZSA9PT0gXCJhc3NpZ25cIilcbiAgICByZXR1cm4ge1xuICAgICAgc2V0OiBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgIE9iamVjdC5rZXlzKG9wLnZhbHVlKS5tYXAoKGtleSkgPT4gW1xuICAgICAgICAgIHN0cmluZ2lmeShwYXRoLmNvbmNhdChrZXkpKSxcbiAgICAgICAgICBvcC52YWx1ZVtrZXldXG4gICAgICAgIF0pXG4gICAgICApXG4gICAgfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwidW5hc3NpZ25cIilcbiAgICByZXR1cm4ge1xuICAgICAgdW5zZXQ6IG9wLmtleXMubWFwKChrZXkpID0+IHN0cmluZ2lmeShwYXRoLmNvbmNhdChrZXkpKSlcbiAgICB9O1xuICBpZiAob3AudHlwZSA9PT0gXCJyZXBsYWNlXCIpXG4gICAgcmV0dXJuIHtcbiAgICAgIGluc2VydDoge1xuICAgICAgICByZXBsYWNlOiBzdHJpbmdpZnkocGF0aC5jb25jYXQob3AucmVmZXJlbmNlSXRlbSkpLFxuICAgICAgICBpdGVtczogb3AuaXRlbXNcbiAgICAgIH1cbiAgICB9O1xuICBpZiAob3AudHlwZSA9PT0gXCJyZW1vdmVcIilcbiAgICByZXR1cm4ge1xuICAgICAgdW5zZXQ6IFtzdHJpbmdpZnkocGF0aC5jb25jYXQob3AucmVmZXJlbmNlSXRlbSkpXVxuICAgIH07XG4gIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBvcGVyYXRpb24gdHlwZSAke29wLnR5cGV9YCk7XG59XG5leHBvcnQge1xuICBlbmNvZGUsXG4gIGVuY29kZUFsbCxcbiAgZW5jb2RlTXV0YXRpb24sXG4gIGVuY29kZVRyYW5zYWN0aW9uXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5jb2RlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAtPath: () => (/* binding */ getAtPath)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n\nfunction getAtPath(path, value) {\n  if (path.length === 0)\n    return value;\n  let current = value;\n  for (const head of path) {\n    if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.isArrayElement)(head)) {\n      if (!Array.isArray(current))\n        return;\n      if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.isKeyedElement)(head)) {\n        current = current.find((item) => item._key === head._key);\n        continue;\n      }\n      current = current[head];\n      continue;\n    }\n    current = current[head];\n  }\n  return current;\n}\n\n//# sourceMappingURL=getAtPath.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2dldEF0UGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw2REFBYztBQUN0QjtBQUNBO0FBQ0EsVUFBVSw2REFBYztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2dldEF0UGF0aC5qcz8wMDNkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQXJyYXlFbGVtZW50LCBpc0tleWVkRWxlbWVudCB9IGZyb20gXCIuL3N0cmluZ2lmeS5qc1wiO1xuZnVuY3Rpb24gZ2V0QXRQYXRoKHBhdGgsIHZhbHVlKSB7XG4gIGlmIChwYXRoLmxlbmd0aCA9PT0gMClcbiAgICByZXR1cm4gdmFsdWU7XG4gIGxldCBjdXJyZW50ID0gdmFsdWU7XG4gIGZvciAoY29uc3QgaGVhZCBvZiBwYXRoKSB7XG4gICAgaWYgKGlzQXJyYXlFbGVtZW50KGhlYWQpKSB7XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkoY3VycmVudCkpXG4gICAgICAgIHJldHVybjtcbiAgICAgIGlmIChpc0tleWVkRWxlbWVudChoZWFkKSkge1xuICAgICAgICBjdXJyZW50ID0gY3VycmVudC5maW5kKChpdGVtKSA9PiBpdGVtLl9rZXkgPT09IGhlYWQuX2tleSk7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgY3VycmVudCA9IGN1cnJlbnRbaGVhZF07XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgY3VycmVudCA9IGN1cnJlbnRbaGVhZF07XG4gIH1cbiAgcmV0dXJuIGN1cnJlbnQ7XG59XG5leHBvcnQge1xuICBnZXRBdFBhdGhcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRBdFBhdGguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: () => (/* binding */ isObject)\n/* harmony export */ });\nfunction isObject(val) {\n  return val !== null && typeof val == \"object\" && !Array.isArray(val);\n}\n\n//# sourceMappingURL=isObject.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2lzT2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFudGVjLy4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvdmlzdWFsLWVkaXRpbmcvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbXV0YXRlL2Rpc3QvX2NodW5rcy1lcy9pc09iamVjdC5qcz9lMGMzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGlzT2JqZWN0KHZhbCkge1xuICByZXR1cm4gdmFsICE9PSBudWxsICYmIHR5cGVvZiB2YWwgPT0gXCJvYmplY3RcIiAmJiAhQXJyYXkuaXNBcnJheSh2YWwpO1xufVxuZXhwb3J0IHtcbiAgaXNPYmplY3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc09iamVjdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/parse.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/parse.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\nfunction parse(path) {\n  return path.split(/[[.\\]]/g).filter(Boolean).map((seg) => seg.includes(\"==\") ? parseSegment(seg) : coerce(seg));\n}\nconst IS_NUMERIC = /^-?\\d+$/;\nfunction unquote(str) {\n  return str.replace(/^['\"]/, \"\").replace(/['\"]$/, \"\");\n}\nfunction parseSegment(segment) {\n  const [key, value] = segment.split(\"==\");\n  if (key !== \"_key\")\n    throw new Error(\n      `Currently only \"_key\" is supported as path segment. Found ${key}`\n    );\n  if (typeof value > \"u\")\n    throw new Error('Invalid path segment, expected `key==\"value\"`');\n  return { _key: unquote(value) };\n}\nfunction coerce(segment) {\n  return IS_NUMERIC.test(segment) ? Number(segment) : segment;\n}\n\n//# sourceMappingURL=parse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL3BhcnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLElBQUk7QUFDdkU7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbnRlYy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3Zpc3VhbC1lZGl0aW5nL25vZGVfbW9kdWxlcy9Ac2FuaXR5L211dGF0ZS9kaXN0L19jaHVua3MtZXMvcGFyc2UuanM/MWM4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBwYXJzZShwYXRoKSB7XG4gIHJldHVybiBwYXRoLnNwbGl0KC9bWy5cXF1dL2cpLmZpbHRlcihCb29sZWFuKS5tYXAoKHNlZykgPT4gc2VnLmluY2x1ZGVzKFwiPT1cIikgPyBwYXJzZVNlZ21lbnQoc2VnKSA6IGNvZXJjZShzZWcpKTtcbn1cbmNvbnN0IElTX05VTUVSSUMgPSAvXi0/XFxkKyQvO1xuZnVuY3Rpb24gdW5xdW90ZShzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eWydcIl0vLCBcIlwiKS5yZXBsYWNlKC9bJ1wiXSQvLCBcIlwiKTtcbn1cbmZ1bmN0aW9uIHBhcnNlU2VnbWVudChzZWdtZW50KSB7XG4gIGNvbnN0IFtrZXksIHZhbHVlXSA9IHNlZ21lbnQuc3BsaXQoXCI9PVwiKTtcbiAgaWYgKGtleSAhPT0gXCJfa2V5XCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEN1cnJlbnRseSBvbmx5IFwiX2tleVwiIGlzIHN1cHBvcnRlZCBhcyBwYXRoIHNlZ21lbnQuIEZvdW5kICR7a2V5fWBcbiAgICApO1xuICBpZiAodHlwZW9mIHZhbHVlID4gXCJ1XCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHBhdGggc2VnbWVudCwgZXhwZWN0ZWQgYGtleT09XCJ2YWx1ZVwiYCcpO1xuICByZXR1cm4geyBfa2V5OiB1bnF1b3RlKHZhbHVlKSB9O1xufVxuZnVuY3Rpb24gY29lcmNlKHNlZ21lbnQpIHtcbiAgcmV0dXJuIElTX05VTUVSSUMudGVzdChzZWdtZW50KSA/IE51bWJlcihzZWdtZW50KSA6IHNlZ21lbnQ7XG59XG5leHBvcnQge1xuICBwYXJzZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isArrayElement: () => (/* binding */ isArrayElement),\n/* harmony export */   isElementEqual: () => (/* binding */ isElementEqual),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isIndexElement: () => (/* binding */ isIndexElement),\n/* harmony export */   isKeyElement: () => (/* binding */ isKeyElement),\n/* harmony export */   isKeyedElement: () => (/* binding */ isKeyedElement),\n/* harmony export */   isPropertyElement: () => (/* binding */ isPropertyElement),\n/* harmony export */   startsWith: () => (/* binding */ startsWith),\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\nfunction safeGetElementAt(array, index) {\n  if (index < 0 || index >= array.length)\n    throw new Error(\"Index out of bounds\");\n  return array[index];\n}\nfunction startsWith(parentPath, path) {\n  return parentPath.length <= path.length && parentPath.every(\n    (segment, i) => isElementEqual(segment, safeGetElementAt(path, i))\n  );\n}\nfunction isEqual(path, otherPath) {\n  return path.length === otherPath.length && path.every(\n    (segment, i) => isElementEqual(segment, safeGetElementAt(path, i))\n  );\n}\nfunction isElementEqual(segmentA, segmentB) {\n  return isKeyElement(segmentA) && isKeyElement(segmentB) ? segmentA._key === segmentB._key : isIndexElement(segmentA) ? Number(segmentA) === Number(segmentB) : segmentA === segmentB;\n}\nfunction isKeyElement(segment) {\n  return typeof segment?._key == \"string\";\n}\nfunction isIndexElement(segment) {\n  return typeof segment == \"number\";\n}\nfunction isKeyedElement(element) {\n  return typeof element == \"object\" && \"_key\" in element && typeof element._key == \"string\";\n}\nfunction isArrayElement(element) {\n  return typeof element == \"number\" || isKeyedElement(element);\n}\nfunction isPropertyElement(element) {\n  return typeof element == \"string\";\n}\nconst IS_DOTTABLE = /^[a-z_$]+/;\nfunction stringifySegment(segment, hasLeading) {\n  return Array.isArray(segment) ? `[${segment[0]}:${segment[1] || \"\"}]` : typeof segment == \"number\" ? `[${segment}]` : isKeyedElement(segment) ? `[_key==${JSON.stringify(segment._key)}]` : typeof segment == \"string\" && IS_DOTTABLE.test(segment) ? hasLeading ? segment : `.${segment}` : `['${segment}']`;\n}\nfunction stringify(pathArray) {\n  return pathArray.map((segment, i) => stringifySegment(segment, i === 0)).join(\"\");\n}\n\n//# sourceMappingURL=stringify.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL3N0cmluZ2lmeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLFdBQVcsR0FBRyxpQkFBaUIsc0NBQXNDLFFBQVEseUNBQXlDLDZCQUE2QiwwRkFBMEYsUUFBUSxTQUFTLFFBQVE7QUFDNVM7QUFDQTtBQUNBO0FBQ0E7QUFXRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFudGVjLy4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvdmlzdWFsLWVkaXRpbmcvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbXV0YXRlL2Rpc3QvX2NodW5rcy1lcy9zdHJpbmdpZnkuanM/ZTczOCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBzYWZlR2V0RWxlbWVudEF0KGFycmF5LCBpbmRleCkge1xuICBpZiAoaW5kZXggPCAwIHx8IGluZGV4ID49IGFycmF5Lmxlbmd0aClcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbmRleCBvdXQgb2YgYm91bmRzXCIpO1xuICByZXR1cm4gYXJyYXlbaW5kZXhdO1xufVxuZnVuY3Rpb24gc3RhcnRzV2l0aChwYXJlbnRQYXRoLCBwYXRoKSB7XG4gIHJldHVybiBwYXJlbnRQYXRoLmxlbmd0aCA8PSBwYXRoLmxlbmd0aCAmJiBwYXJlbnRQYXRoLmV2ZXJ5KFxuICAgIChzZWdtZW50LCBpKSA9PiBpc0VsZW1lbnRFcXVhbChzZWdtZW50LCBzYWZlR2V0RWxlbWVudEF0KHBhdGgsIGkpKVxuICApO1xufVxuZnVuY3Rpb24gaXNFcXVhbChwYXRoLCBvdGhlclBhdGgpIHtcbiAgcmV0dXJuIHBhdGgubGVuZ3RoID09PSBvdGhlclBhdGgubGVuZ3RoICYmIHBhdGguZXZlcnkoXG4gICAgKHNlZ21lbnQsIGkpID0+IGlzRWxlbWVudEVxdWFsKHNlZ21lbnQsIHNhZmVHZXRFbGVtZW50QXQocGF0aCwgaSkpXG4gICk7XG59XG5mdW5jdGlvbiBpc0VsZW1lbnRFcXVhbChzZWdtZW50QSwgc2VnbWVudEIpIHtcbiAgcmV0dXJuIGlzS2V5RWxlbWVudChzZWdtZW50QSkgJiYgaXNLZXlFbGVtZW50KHNlZ21lbnRCKSA/IHNlZ21lbnRBLl9rZXkgPT09IHNlZ21lbnRCLl9rZXkgOiBpc0luZGV4RWxlbWVudChzZWdtZW50QSkgPyBOdW1iZXIoc2VnbWVudEEpID09PSBOdW1iZXIoc2VnbWVudEIpIDogc2VnbWVudEEgPT09IHNlZ21lbnRCO1xufVxuZnVuY3Rpb24gaXNLZXlFbGVtZW50KHNlZ21lbnQpIHtcbiAgcmV0dXJuIHR5cGVvZiBzZWdtZW50Py5fa2V5ID09IFwic3RyaW5nXCI7XG59XG5mdW5jdGlvbiBpc0luZGV4RWxlbWVudChzZWdtZW50KSB7XG4gIHJldHVybiB0eXBlb2Ygc2VnbWVudCA9PSBcIm51bWJlclwiO1xufVxuZnVuY3Rpb24gaXNLZXllZEVsZW1lbnQoZWxlbWVudCkge1xuICByZXR1cm4gdHlwZW9mIGVsZW1lbnQgPT0gXCJvYmplY3RcIiAmJiBcIl9rZXlcIiBpbiBlbGVtZW50ICYmIHR5cGVvZiBlbGVtZW50Ll9rZXkgPT0gXCJzdHJpbmdcIjtcbn1cbmZ1bmN0aW9uIGlzQXJyYXlFbGVtZW50KGVsZW1lbnQpIHtcbiAgcmV0dXJuIHR5cGVvZiBlbGVtZW50ID09IFwibnVtYmVyXCIgfHwgaXNLZXllZEVsZW1lbnQoZWxlbWVudCk7XG59XG5mdW5jdGlvbiBpc1Byb3BlcnR5RWxlbWVudChlbGVtZW50KSB7XG4gIHJldHVybiB0eXBlb2YgZWxlbWVudCA9PSBcInN0cmluZ1wiO1xufVxuY29uc3QgSVNfRE9UVEFCTEUgPSAvXlthLXpfJF0rLztcbmZ1bmN0aW9uIHN0cmluZ2lmeVNlZ21lbnQoc2VnbWVudCwgaGFzTGVhZGluZykge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShzZWdtZW50KSA/IGBbJHtzZWdtZW50WzBdfToke3NlZ21lbnRbMV0gfHwgXCJcIn1dYCA6IHR5cGVvZiBzZWdtZW50ID09IFwibnVtYmVyXCIgPyBgWyR7c2VnbWVudH1dYCA6IGlzS2V5ZWRFbGVtZW50KHNlZ21lbnQpID8gYFtfa2V5PT0ke0pTT04uc3RyaW5naWZ5KHNlZ21lbnQuX2tleSl9XWAgOiB0eXBlb2Ygc2VnbWVudCA9PSBcInN0cmluZ1wiICYmIElTX0RPVFRBQkxFLnRlc3Qoc2VnbWVudCkgPyBoYXNMZWFkaW5nID8gc2VnbWVudCA6IGAuJHtzZWdtZW50fWAgOiBgWycke3NlZ21lbnR9J11gO1xufVxuZnVuY3Rpb24gc3RyaW5naWZ5KHBhdGhBcnJheSkge1xuICByZXR1cm4gcGF0aEFycmF5Lm1hcCgoc2VnbWVudCwgaSkgPT4gc3RyaW5naWZ5U2VnbWVudChzZWdtZW50LCBpID09PSAwKSkuam9pbihcIlwiKTtcbn1cbmV4cG9ydCB7XG4gIGlzQXJyYXlFbGVtZW50LFxuICBpc0VsZW1lbnRFcXVhbCxcbiAgaXNFcXVhbCxcbiAgaXNJbmRleEVsZW1lbnQsXG4gIGlzS2V5RWxlbWVudCxcbiAgaXNLZXllZEVsZW1lbnQsXG4gIGlzUHJvcGVydHlFbGVtZW50LFxuICBzdGFydHNXaXRoLFxuICBzdHJpbmdpZnlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmdpZnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyMutations: () => (/* binding */ applyMutations),\n/* harmony export */   commit: () => (/* binding */ commit),\n/* harmony export */   getMutationDocumentId: () => (/* binding */ getMutationDocumentId),\n/* harmony export */   rebase: () => (/* binding */ rebase),\n/* harmony export */   squashDMPStrings: () => (/* binding */ squashDMPStrings),\n/* harmony export */   squashMutationGroups: () => (/* binding */ squashMutationGroups),\n/* harmony export */   toTransactions: () => (/* binding */ toTransactions)\n/* harmony export */ });\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash-es */ \"(ssr)/./node_modules/lodash-es/groupBy.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/utils.js\");\n/* harmony import */ var _getAtPath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getAtPath.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js\");\n/* harmony import */ var _sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sanity/diff-match-patch */ \"(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n\n\n\n\n\nfunction getMutationDocumentId(mutation) {\n  if (mutation.type === \"patch\")\n    return mutation.id;\n  if (mutation.type === \"create\")\n    return mutation.document._id;\n  if (mutation.type === \"delete\")\n    return mutation.id;\n  if (mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return mutation.document._id;\n  throw new Error(\"Invalid mutation type\");\n}\nfunction applyAll(current, mutation) {\n  return mutation.reduce((doc, m) => {\n    const res = applyDocumentMutation(doc, m);\n    if (res.status === \"error\")\n      throw new Error(res.message);\n    return res.status === \"noop\" ? doc : res.after;\n  }, current);\n}\nfunction applyDocumentMutation(document, mutation) {\n  if (mutation.type === \"create\")\n    return create(document, mutation);\n  if (mutation.type === \"createIfNotExists\")\n    return createIfNotExists(document, mutation);\n  if (mutation.type === \"delete\")\n    return del(document, mutation);\n  if (mutation.type === \"createOrReplace\")\n    return createOrReplace(document, mutation);\n  if (mutation.type === \"patch\")\n    return patch(document, mutation);\n  throw new Error(`Invalid mutation type: ${mutation.type}`);\n}\nfunction create(document, mutation) {\n  if (document)\n    return { status: \"error\", message: \"Document already exist\" };\n  const result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assignId)(mutation.document, _utils_js__WEBPACK_IMPORTED_MODULE_0__.nanoid);\n  return { status: \"created\", id: result._id, after: result };\n}\nfunction createIfNotExists(document, mutation) {\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasId)(mutation.document) ? document ? { status: \"noop\" } : { status: \"created\", id: mutation.document._id, after: mutation.document } : {\n    status: \"error\",\n    message: \"Cannot createIfNotExists on document without _id\"\n  };\n}\nfunction createOrReplace(document, mutation) {\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasId)(mutation.document) ? document ? {\n    status: \"updated\",\n    id: mutation.document._id,\n    before: document,\n    after: mutation.document\n  } : { status: \"created\", id: mutation.document._id, after: mutation.document } : {\n    status: \"error\",\n    message: \"Cannot createIfNotExists on document without _id\"\n  };\n}\nfunction del(document, mutation) {\n  return document ? mutation.id !== document._id ? { status: \"error\", message: \"Delete mutation targeted wrong document\" } : {\n    status: \"deleted\",\n    id: mutation.id,\n    before: document,\n    after: void 0\n  } : { status: \"noop\" };\n}\nfunction patch(document, mutation) {\n  if (!document)\n    return {\n      status: \"error\",\n      message: \"Cannot apply patch on nonexistent document\"\n    };\n  const next = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyPatchMutation)(mutation, document);\n  return document === next ? { status: \"noop\" } : { status: \"updated\", id: mutation.id, before: document, after: next };\n}\nfunction applyMutations(mutations, dataset) {\n  const updatedDocs = /* @__PURE__ */ Object.create(null);\n  for (const mutation of mutations) {\n    const documentId = getMutationDocumentId(mutation);\n    if (!documentId)\n      throw new Error(\"Unable to get document id from mutation\");\n    const before = updatedDocs[documentId]?.after || dataset.get(documentId), res = applyDocumentMutation(before, mutation);\n    if (res.status === \"error\")\n      throw new Error(res.message);\n    res.status !== \"noop\" && (res.status === \"updated\" || res.status === \"created\" || res.status === \"deleted\") && (documentId in updatedDocs || (updatedDocs[documentId] = { before, after: void 0, muts: [] }), updatedDocs[documentId].after = res.after);\n  }\n  return Object.entries(updatedDocs).map(\n    // eslint-disable-next-line no-shadow\n    ([id, { before, after, muts }]) => ({\n      id,\n      status: after ? before ? \"updated\" : \"created\" : \"deleted\",\n      mutations: muts,\n      before,\n      after\n    })\n  );\n}\nfunction commit(results, dataset) {\n  results.forEach((result) => {\n    (result.status === \"created\" || result.status === \"updated\") && dataset.set(result.id, result.after), result.status === \"deleted\" && dataset.delete(result.id);\n  });\n}\nfunction takeUntilRight(arr, predicate, opts) {\n  const result = [];\n  for (const item of arr.slice().reverse()) {\n    if (predicate(item))\n      return result;\n    result.push(item);\n  }\n  return result.reverse();\n}\nfunction isEqualPath(p1, p2) {\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(p1) === (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(p2);\n}\nfunction supersedes(later, earlier) {\n  return (earlier.type === \"set\" || earlier.type === \"unset\") && (later.type === \"set\" || later.type === \"unset\");\n}\nfunction squashNodePatches(patches) {\n  return compactSetIfMissingPatches(\n    compactSetPatches(compactUnsetPatches(patches))\n  );\n}\nfunction compactUnsetPatches(patches) {\n  return patches.reduce(\n    (earlierPatches, laterPatch) => {\n      if (laterPatch.op.type !== \"unset\")\n        return earlierPatches.push(laterPatch), earlierPatches;\n      const unaffected = earlierPatches.filter(\n        (earlierPatch) => !(0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.startsWith)(laterPatch.path, earlierPatch.path)\n      );\n      return unaffected.push(laterPatch), unaffected;\n    },\n    []\n  );\n}\nfunction compactSetPatches(patches) {\n  return patches.reduceRight(\n    (laterPatches, earlierPatch) => (laterPatches.find(\n      (later) => supersedes(later.op, earlierPatch.op) && isEqualPath(later.path, earlierPatch.path)\n    ) || laterPatches.unshift(earlierPatch), laterPatches),\n    []\n  );\n}\nfunction compactSetIfMissingPatches(patches) {\n  return patches.reduce(\n    (previousPatches, laterPatch) => laterPatch.op.type !== \"setIfMissing\" ? (previousPatches.push(laterPatch), previousPatches) : (takeUntilRight(\n      previousPatches,\n      (patch2) => patch2.op.type === \"unset\"\n    ).find(\n      (precedingPatch) => precedingPatch.op.type === \"setIfMissing\" && isEqualPath(precedingPatch.path, laterPatch.path)\n    ) || previousPatches.push(laterPatch), previousPatches),\n    []\n  );\n}\nfunction compactDMPSetPatches(base, patches) {\n  let edge = base;\n  return patches.reduce(\n    (earlierPatches, laterPatch) => {\n      const before = edge;\n      if (edge = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyNodePatch)(laterPatch, edge), laterPatch.op.type === \"set\" && typeof laterPatch.op.value == \"string\") {\n        const current = (0,_getAtPath_js__WEBPACK_IMPORTED_MODULE_2__.getAtPath)(laterPatch.path, before);\n        if (typeof current == \"string\") {\n          const replaced = {\n            ...laterPatch,\n            op: {\n              type: \"diffMatchPatch\",\n              value: (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.stringifyPatches)(\n                (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.makePatches)(current, laterPatch.op.value)\n              )\n            }\n          };\n          return earlierPatches.flatMap((ep) => isEqualPath(ep.path, laterPatch.path) && ep.op.type === \"diffMatchPatch\" ? [] : ep).concat(replaced);\n        }\n      }\n      return earlierPatches.push(laterPatch), earlierPatches;\n    },\n    []\n  );\n}\nfunction squashDMPStrings(remote, mutationGroups) {\n  return mutationGroups.map((mutationGroup) => ({\n    ...mutationGroup,\n    mutations: dmpIfyMutations(remote, mutationGroup.mutations)\n  }));\n}\nfunction dmpIfyMutations(store, mutations) {\n  return mutations.map((mutation, i) => mutation.type === \"patch\" ? dmpifyPatchMutation(store.get(mutation.id), mutation) : mutation);\n}\nfunction dmpifyPatchMutation(base, mutation) {\n  return base ? {\n    ...mutation,\n    patches: compactDMPSetPatches(base, mutation.patches)\n  } : mutation;\n}\nfunction mergeMutationGroups(mutationGroups) {\n  return chunkWhile(mutationGroups, (group) => !group.transaction).flatMap(\n    (chunk) => ({\n      ...chunk[0],\n      mutations: chunk.flatMap((c) => c.mutations)\n    })\n  );\n}\nfunction chunkWhile(arr, predicate) {\n  const res = [];\n  let currentChunk = [];\n  return arr.forEach((item) => {\n    predicate(item) ? currentChunk.push(item) : (currentChunk.length > 0 && res.push(currentChunk), currentChunk = [], res.push([item]));\n  }), currentChunk.length > 0 && res.push(currentChunk), res;\n}\nfunction squashMutationGroups(staged) {\n  return mergeMutationGroups(staged).map((transaction) => ({\n    ...transaction,\n    mutations: squashMutations(transaction.mutations)\n  })).map((transaction) => ({\n    ...transaction,\n    mutations: transaction.mutations.map((mutation) => mutation.type !== \"patch\" ? mutation : {\n      ...mutation,\n      patches: squashNodePatches(mutation.patches)\n    })\n  }));\n}\nfunction squashMutations(mutations) {\n  const byDocument = (0,lodash_es__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(mutations, getMutationDocumentId);\n  return Object.values(byDocument).flatMap((documentMutations) => squashCreateIfNotExists(squashDelete(documentMutations)).flat().reduce((acc, docMutation) => {\n    const prev = acc[acc.length - 1];\n    return (!prev || prev.type === \"patch\") && docMutation.type === \"patch\" ? acc.slice(0, -1).concat({\n      ...docMutation,\n      patches: (prev?.patches || []).concat(docMutation.patches)\n    }) : acc.concat(docMutation);\n  }, []));\n}\nfunction squashCreateIfNotExists(mutations) {\n  return mutations.length === 0 ? mutations : mutations.reduce((previousMuts, laterMut) => laterMut.type !== \"createIfNotExists\" ? (previousMuts.push(laterMut), previousMuts) : (takeUntilRight(previousMuts, (m) => m.type === \"delete\").find(\n    (precedingPatch) => precedingPatch.type === \"createIfNotExists\"\n  ) || previousMuts.push(laterMut), previousMuts), []);\n}\nfunction squashDelete(mutations) {\n  return mutations.length === 0 ? mutations : mutations.reduce((previousMuts, laterMut) => laterMut.type === \"delete\" ? [laterMut] : (previousMuts.push(laterMut), previousMuts), []);\n}\nfunction rebase(documentId, oldBase, newBase, stagedMutations) {\n  let edge = oldBase;\n  const dmpified = stagedMutations.map((transaction) => {\n    const mutations = transaction.mutations.flatMap((mut) => {\n      if (getMutationDocumentId(mut) !== documentId)\n        return [];\n      const before = edge;\n      return edge = applyAll(edge, [mut]), !before || mut.type !== \"patch\" ? mut : {\n        type: \"dmpified\",\n        mutation: {\n          ...mut,\n          // Todo: make compactDMPSetPatches return pairs of patches that was dmpified with their\n          //  original as dmpPatches and original is not 1:1 (e..g some of the original may not be dmpified)\n          dmpPatches: compactDMPSetPatches(before, mut.patches),\n          original: mut.patches\n        }\n      };\n    });\n    return { ...transaction, mutations };\n  });\n  let newBaseWithDMPForOldBaseApplied = newBase;\n  return dmpified.map((transaction) => {\n    const applied = [];\n    return transaction.mutations.forEach((mut) => {\n      if (mut.type === \"dmpified\")\n        try {\n          newBaseWithDMPForOldBaseApplied = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyPatches)(\n            mut.mutation.dmpPatches,\n            newBaseWithDMPForOldBaseApplied\n          ), applied.push(mut);\n        } catch {\n          console.warn(\"Failed to apply dmp patch, falling back to original\");\n          try {\n            newBaseWithDMPForOldBaseApplied = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyPatches)(\n              mut.mutation.original,\n              newBaseWithDMPForOldBaseApplied\n            ), applied.push(mut);\n          } catch (second) {\n            throw new Error(\n              `Failed to apply patch for document \"${documentId}\": ${second.message}`\n            );\n          }\n        }\n      else\n        newBaseWithDMPForOldBaseApplied = applyAll(\n          newBaseWithDMPForOldBaseApplied,\n          [mut]\n        );\n    });\n  }), [stagedMutations.map((transaction) => ({\n    ...transaction,\n    mutations: transaction.mutations.map((mut) => mut.type !== \"patch\" || getMutationDocumentId(mut) !== documentId ? mut : {\n      ...mut,\n      patches: mut.patches.map((patch2) => patch2.op.type !== \"set\" ? patch2 : {\n        ...patch2,\n        op: {\n          ...patch2.op,\n          value: (0,_getAtPath_js__WEBPACK_IMPORTED_MODULE_2__.getAtPath)(patch2.path, newBaseWithDMPForOldBaseApplied)\n        }\n      })\n    })\n  })), newBaseWithDMPForOldBaseApplied];\n}\nfunction toTransactions(groups) {\n  return groups.map((group) => group.transaction && group.id !== void 0 ? { id: group.id, mutations: group.mutations } : { mutations: group.mutations });\n}\n\n//# sourceMappingURL=toTransactions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/utils.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/utils.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyNodePatch: () => (/* binding */ applyNodePatch),\n/* harmony export */   applyOp: () => (/* binding */ applyOp),\n/* harmony export */   applyPatchMutation: () => (/* binding */ applyPatchMutation),\n/* harmony export */   applyPatches: () => (/* binding */ applyPatches),\n/* harmony export */   assignId: () => (/* binding */ assignId),\n/* harmony export */   hasId: () => (/* binding */ hasId),\n/* harmony export */   nanoid: () => (/* binding */ nanoid),\n/* harmony export */   splice: () => (/* binding */ splice)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isObject.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js\");\n/* harmony import */ var _sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sanity/diff-match-patch */ \"(ssr)/./node_modules/@sanity/diff-match-patch/dist/index.js\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n\n\n\n\nfunction keyOf(value) {\n  return value !== null && typeof value == \"object\" && typeof value._key == \"string\" && value._key || null;\n}\nfunction findTargetIndex(array, pathSegment) {\n  if (typeof pathSegment == \"number\")\n    return normalizeIndex(array.length, pathSegment);\n  if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.isKeyedElement)(pathSegment)) {\n    const idx = array.findIndex((value) => keyOf(value) === pathSegment._key);\n    return idx === -1 ? null : idx;\n  }\n  throw new Error(\n    `Expected path segment to be addressing a single array item either by numeric index or by '_key'. Instead saw ${JSON.stringify(\n      pathSegment\n    )}`\n  );\n}\nfunction getTargetIdx(position, index) {\n  return position === \"before\" ? index : index + 1;\n}\nfunction normalizeIndex(length, index) {\n  if (length === 0 && (index === -1 || index === 0))\n    return 0;\n  const normalized = index < 0 ? length + index : index;\n  return normalized >= length || normalized < 0 ? null : normalized;\n}\nfunction splice(arr, start, deleteCount, items) {\n  const copy = arr.slice();\n  return copy.splice(start, deleteCount, ...items || []), copy;\n}\nfunction insert(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"insert()\" on non-array value');\n  const index = findTargetIndex(currentValue, op.referenceItem);\n  if (index === null)\n    throw new Error(`Found no matching array element to insert ${op.position}`);\n  return currentValue.length === 0 ? op.items : splice(currentValue, getTargetIdx(op.position, index), 0, op.items);\n}\nfunction upsert(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"upsert()\" on non-array value');\n  if (op.items.length === 0)\n    return currentValue;\n  const replaceItemsMap = [], insertItems = [];\n  if (op.items.forEach((itemToBeUpserted, i) => {\n    const existingIndex = currentValue.findIndex(\n      (existingItem) => existingItem?._key === itemToBeUpserted._key\n    );\n    existingIndex >= 0 ? replaceItemsMap[existingIndex] = i : insertItems.push(itemToBeUpserted);\n  }), replaceItemsMap.length === 0 && insertItems.length == 0)\n    return currentValue;\n  const next = [...currentValue];\n  for (const i of replaceItemsMap)\n    next[i] = op.items[replaceItemsMap[i]];\n  return insert(\n    {\n      type: \"insert\",\n      items: insertItems,\n      referenceItem: op.referenceItem,\n      position: op.position\n    },\n    next\n  );\n}\nfunction replace(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"replace()\" on non-array value');\n  const index = findTargetIndex(currentValue, op.referenceItem);\n  if (index === null)\n    throw new Error(\"Found no matching array element to replace\");\n  return splice(currentValue, index, op.items.length, op.items);\n}\nfunction remove(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"remove()\" on non-array value');\n  const index = findTargetIndex(currentValue, op.referenceItem);\n  if (index === null)\n    throw new Error(\"Found no matching array element to replace\");\n  return splice(currentValue, index, 1, []);\n}\nfunction truncate(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"truncate()\" on non-array value');\n  return typeof op.endIndex == \"number\" ? currentValue.slice(0, op.startIndex).concat(currentValue.slice(op.endIndex)) : currentValue.slice(0, op.startIndex);\n}\nfunction set(op, currentValue) {\n  return op.value;\n}\nfunction setIfMissing(op, currentValue) {\n  return currentValue ?? op.value;\n}\nfunction unset(op) {\n}\nfunction inc(op, currentValue) {\n  if (typeof currentValue != \"number\")\n    throw new TypeError('Cannot apply \"inc()\" on non-numeric value');\n  return currentValue + op.amount;\n}\nfunction dec(op, currentValue) {\n  if (typeof currentValue != \"number\")\n    throw new TypeError('Cannot apply \"dec()\" on non-numeric value');\n  return currentValue - op.amount;\n}\nconst hasOwn = Object.prototype.hasOwnProperty.call.bind(\n  Object.prototype.hasOwnProperty\n);\nfunction isEmpty(v) {\n  for (const key in v)\n    if (hasOwn(v, key))\n      return !1;\n  return !0;\n}\nfunction omit(val, props) {\n  const copy = { ...val };\n  for (const prop of props)\n    delete copy[prop];\n  return copy;\n}\nfunction unassign(op, currentValue) {\n  if (!(0,_isObject_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(currentValue))\n    throw new TypeError('Cannot apply \"unassign()\" on non-object value');\n  return op.keys.length === 0 ? currentValue : omit(currentValue, op.keys);\n}\nfunction assign(op, currentValue) {\n  if (!(0,_isObject_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(currentValue))\n    throw new TypeError('Cannot apply \"assign()\" on non-object value');\n  return isEmpty(op.value) ? currentValue : { ...currentValue, ...op.value };\n}\nfunction diffMatchPatch(op, currentValue) {\n  if (typeof currentValue != \"string\")\n    throw new TypeError('Cannot apply \"diffMatchPatch()\" on non-string value');\n  return (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.applyPatches)((0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.parsePatch)(op.value), currentValue)[0];\n}\nvar operations = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  assign,\n  dec,\n  diffMatchPatch,\n  inc,\n  insert,\n  remove,\n  replace,\n  set,\n  setIfMissing,\n  truncate,\n  unassign,\n  unset,\n  upsert\n});\nfunction applyOp(op, currentValue) {\n  if (!(op.type in operations))\n    throw new Error(`Invalid operation type: \"${op.type}\"`);\n  return operations[op.type](op, currentValue);\n}\nfunction applyPatches(patches, document) {\n  return patches.reduce(\n    (prev, patch) => applyNodePatch(patch, prev),\n    document\n  );\n}\nfunction applyNodePatch(patch, document) {\n  return applyAtPath(patch.path, patch.op, document);\n}\nfunction applyAtPath(path, op, value) {\n  if (!isNonEmptyArray(path))\n    return applyOp(op, value);\n  const [head, ...tail] = path;\n  if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.isArrayElement)(head) && Array.isArray(value))\n    return applyInArray(head, tail, op, value);\n  if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.isPropertyElement)(head) && (0,_isObject_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(value))\n    return applyInObject(head, tail, op, value);\n  throw new Error(\n    `Cannot apply operation of type \"${op.type}\" to path ${(0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(\n      path\n    )} on ${typeof value} value`\n  );\n}\nfunction applyInObject(head, tail, op, object) {\n  const current = object[head];\n  if (current === void 0 && tail.length > 0)\n    return object;\n  const patchedValue = applyAtPath(tail, op, current);\n  return patchedValue === current ? object : { ...object, [head]: patchedValue };\n}\nfunction applyInArray(head, tail, op, value) {\n  const index = findTargetIndex(value, head);\n  if (index === null || index === -1)\n    return value;\n  const current = value[index], patchedItem = applyAtPath(tail, op, current);\n  return patchedItem === current ? value : splice(value, index, 1, [patchedItem]);\n}\nfunction isNonEmptyArray(a) {\n  return a.length > 0;\n}\nfunction applyPatchMutation(mutation, document) {\n  if (mutation.options?.ifRevision && document._rev !== mutation.options.ifRevision)\n    throw new Error(\"Revision mismatch\");\n  if (mutation.id !== document._id)\n    throw new Error(\n      `Document id mismatch. Refusing to apply mutation for document with id=\"${mutation.id}\" on the given document with id=\"${document._id}\"`\n    );\n  return applyPatches(mutation.patches, document);\n}\nconst urlAlphabet = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\", POOL_SIZE_MULTIPLIER = 128;\nlet pool, poolOffset;\nfunction fillPool(bytes) {\n  !pool || pool.length < bytes ? (pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER), node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.getRandomValues(pool), poolOffset = 0) : poolOffset + bytes > pool.length && (node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto.getRandomValues(pool), poolOffset = 0), poolOffset += bytes;\n}\nfunction nanoid(size = 21) {\n  fillPool(size -= 0);\n  let id = \"\";\n  for (let i = poolOffset - size; i < poolOffset; i++)\n    id += urlAlphabet[pool[i] & 63];\n  return id;\n}\nfunction hasId(doc) {\n  return \"_id\" in doc;\n}\nfunction assignId(doc, generateId) {\n  return hasId(doc) ? doc : { ...doc, _id: generateId() };\n}\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_unstable_machine.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_unstable_machine.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyMutations: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.applyMutations),\n/* harmony export */   commit: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.commit),\n/* harmony export */   createSharedListener: () => (/* binding */ createSharedListener),\n/* harmony export */   documentMutatorMachine: () => (/* binding */ documentMutatorMachine),\n/* harmony export */   rebase: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.rebase),\n/* harmony export */   squashDMPStrings: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashDMPStrings),\n/* harmony export */   squashMutationGroups: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashMutationGroups),\n/* harmony export */   toTransactions: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.toTransactions)\n/* harmony export */ });\n/* harmony import */ var _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_chunks-es/toTransactions.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js\");\n/* harmony import */ var mendoza__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! mendoza */ \"(ssr)/./node_modules/mendoza/dist/index.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/share.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/filter.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/merge.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/operators/observeOn.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(ssr)/./node_modules/rxjs/dist/esm5/internal/scheduler/asap.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/log-b47a3833.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/dist/raise-527db318.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./_chunks-es/encode.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/encode.js\");\n\n\n\n\n\nfunction createSharedListener(client) {\n  const allEvents$ = client.listen(\n    '*[!(_id in path(\"_.**\"))]',\n    {},\n    {\n      events: [\"welcome\", \"mutation\", \"reconnect\"],\n      includeResult: !1,\n      includePreviousRevision: !1,\n      visibility: \"transaction\",\n      effectFormat: \"mendoza\",\n      includeMutations: !1\n    }\n  ).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.share)({ resetOnRefCountZero: !0 })), reconnect = allEvents$.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((event) => event.type === \"reconnect\")\n  ), welcome = allEvents$.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((event) => event.type === \"welcome\")\n  ), mutations = allEvents$.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((event) => event.type === \"mutation\")\n  ), replayWelcome = (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.merge)(welcome, reconnect).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.shareReplay)({ bufferSize: 1, refCount: !0 })\n  ).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((latestConnectionEvent) => latestConnectionEvent.type === \"welcome\")\n  );\n  return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.merge)(replayWelcome, mutations, reconnect);\n}\nconst documentMutatorMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  types: {},\n  actions: {\n    \"assign error to context\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ error: ({ event }) => event }),\n    \"clear error from context\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ error: void 0 }),\n    \"connect to server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_6__.O)({ type: \"connect\" }),\n    \"listen to server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_6__.P)(\"server-sent events\", {\n      id: \"listener\",\n      input: ({ context }) => ({\n        listener: context.sharedListener || createSharedListener(context.client),\n        id: context.id\n      })\n    }),\n    \"stop listening to server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_6__.R)(\"listener\"),\n    \"buffer remote mutation events\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      mutationEvents: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutation\"), [...context.mutationEvents, event])\n    }),\n    \"restore stashed changes\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      stagedChanges: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"xstate.done.actor.submitTransactions\"), context.stashedChanges),\n      stashedChanges: []\n    }),\n    \"rebase fetched remote snapshot\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue }) => {\n      enqueue.assign(({ event, context }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"xstate.done.actor.getDocument\");\n        const previousRemote = context.remote;\n        let nextRemote = event.output, seenCurrentRev = !1;\n        for (const patch of context.mutationEvents)\n          !patch.effects?.apply || !patch.previousRev && patch.transition !== \"appear\" || (!seenCurrentRev && patch.previousRev === nextRemote?._rev && (seenCurrentRev = !0), seenCurrentRev && (nextRemote = applyMendozaPatch(\n            nextRemote,\n            patch.effects.apply,\n            patch.resultRev\n          )));\n        context.cache && // If the shared cache don't have the document already we can just set it\n        (!context.cache.has(context.id) || // But when it's in the cache, make sure it's necessary to update it\n        context.cache.get(context.id)._rev !== nextRemote?._rev) && context.cache.set(context.id, nextRemote);\n        const [stagedChanges, local] = (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.rebase)(\n          context.id,\n          // It's annoying to convert between null and undefined, reach consensus\n          previousRemote === null ? void 0 : previousRemote,\n          nextRemote === null ? void 0 : nextRemote,\n          context.stagedChanges\n        );\n        return {\n          remote: nextRemote,\n          local,\n          stagedChanges,\n          // Since the snapshot handler applies all the patches they are no longer needed, allow GC\n          mutationEvents: []\n        };\n      }), enqueue.sendParent(\n        ({ context }) => ({\n          type: \"rebased.remote\",\n          id: context.id,\n          document: context.remote\n        })\n      );\n    }),\n    \"apply mendoza patch\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event, context }) => {\n      (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutation\");\n      const previousRemote = context.remote;\n      if (event.transactionId === previousRemote?._rev)\n        return {};\n      const nextRemote = applyMendozaPatch(\n        previousRemote,\n        event.effects.apply,\n        event.resultRev\n      );\n      context.cache && // If the shared cache don't have the document already we can just set it\n      (!context.cache.has(context.id) || // But when it's in the cache, make sure it's necessary to update it\n      context.cache.get(context.id)._rev !== nextRemote?._rev) && context.cache.set(context.id, nextRemote);\n      const [stagedChanges, local] = (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.rebase)(\n        context.id,\n        // It's annoying to convert between null and undefined, reach consensus\n        previousRemote === null ? void 0 : previousRemote,\n        nextRemote === null ? void 0 : nextRemote,\n        context.stagedChanges\n      );\n      return {\n        remote: nextRemote,\n        local,\n        stagedChanges\n      };\n    }),\n    \"increment fetch attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      fetchRemoteSnapshotAttempts: ({ context }) => context.fetchRemoteSnapshotAttempts + 1\n    }),\n    \"reset fetch attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      fetchRemoteSnapshotAttempts: 0\n    }),\n    \"increment submit attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      submitTransactionsAttempts: ({ context }) => context.submitTransactionsAttempts + 1\n    }),\n    \"reset submit attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      submitTransactionsAttempts: 0\n    }),\n    \"stage mutation\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      stagedChanges: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutate\"), [\n        ...context.stagedChanges,\n        { transaction: !1, mutations: event.mutations }\n      ])\n    }),\n    \"stash mutation\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      stashedChanges: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutate\"), [\n        ...context.stashedChanges,\n        { transaction: !1, mutations: event.mutations }\n      ])\n    }),\n    \"rebase local snapshot\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue }) => {\n      enqueue.assign({\n        local: ({ event, context }) => {\n          (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutate\");\n          const localDataset = /* @__PURE__ */ new Map();\n          context.local && localDataset.set(context.id, context.local);\n          const results = (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.applyMutations)(event.mutations, localDataset);\n          return (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.commit)(results, localDataset), localDataset.get(context.id);\n        }\n      }), enqueue.sendParent(\n        ({ context }) => ({\n          type: \"rebased.local\",\n          id: context.id,\n          document: context.local\n        })\n      );\n    }),\n    \"send pristine event to parent\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.s)(\n      ({ context }) => ({\n        type: \"pristine\",\n        id: context.id\n      })\n    ),\n    \"send sync event to parent\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.s)(\n      ({ context }) => ({\n        type: \"sync\",\n        id: context.id,\n        document: context.remote\n      })\n    ),\n    \"send mutation event to parent\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.s)(({ context, event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutation\"), {\n      type: \"mutation\",\n      id: context.id,\n      previousRev: event.previousRev,\n      resultRev: event.resultRev,\n      effects: event.effects\n    }))\n  },\n  actors: {\n    \"server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_8__.fromEventObservable)(\n      ({\n        input\n      }) => {\n        const { listener, id } = input;\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.defer)(() => listener).pipe(\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)(\n            (event) => event.type === \"welcome\" || event.type === \"reconnect\" || event.type === \"mutation\" && event.documentId === id\n          ),\n          // This is necessary to avoid sync emitted events from `shareReplay` from happening before the actor is ready to receive them\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.observeOn)(rxjs__WEBPACK_IMPORTED_MODULE_11__.asapScheduler)\n        );\n      }\n    ),\n    \"fetch remote snapshot\": (0,xstate__WEBPACK_IMPORTED_MODULE_8__.fromPromise)(\n      async ({\n        input,\n        signal\n      }) => {\n        const { client, id } = input;\n        return await client.getDocument(id, {\n          signal\n        }).catch((e) => {\n          if (!(e instanceof Error && e.name === \"AbortError\"))\n            throw e;\n        });\n      }\n    ),\n    \"submit mutations as transactions\": (0,xstate__WEBPACK_IMPORTED_MODULE_8__.fromPromise)(\n      async ({\n        input,\n        signal\n      }) => {\n        const { client, transactions } = input;\n        for (const transaction of transactions) {\n          if (signal.aborted) return;\n          await client.dataRequest(\"mutate\", (0,_chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_12__.encodeTransaction)(transaction), {\n            visibility: \"async\",\n            returnDocuments: !1,\n            signal\n          }).catch((e) => {\n            if (!(e instanceof Error && e.name === \"AbortError\"))\n              throw e;\n          });\n        }\n      }\n    )\n  },\n  delays: {\n    // Exponential backoff delay function\n    fetchRemoteSnapshotTimeout: ({ context }) => Math.pow(2, context.fetchRemoteSnapshotAttempts) * 1e3,\n    submitTransactionsTimeout: ({ context }) => Math.pow(2, context.submitTransactionsAttempts) * 1e3\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QQPYGMCuBbMA7ALgLRYb4CG+KATgMQnn5gDaADALqKgAOKsAlvj4pcnEAA9EADhYAWAHQA2GSwUBmAKwBOaQEZJkhQBoQAT0Q6ATAF8rx1JhwFipCtTkQ+sNMNxg0jCBpvXF9-Vg4kEB5+QWFRCQQLFhY5PQB2dRU1SQsdGSVjMwRlHTkWNM00nR1VKryKmzt0bDwielcqOWDQwVwoGgB3MAAbbxxw0WiBIRFIhPUKuQ1NVU0tTU0WFdVCxAt1dTlNhX2WdRltGUk061sQexandspO7r9e-qo-H3eJyKnYrNQPNJJollpVutNttdghVCo5MoTgoMpo8jIkqpGvdmo42i4Xl0fv4+H0aGAqFRqH9uLxpnE5ogFrCLFd5CtNBYFJkdOpuaosXcHnjnAw3G9-AAxMh8YYYL5BYn4GlROmA+KIFEs1R6ORpZYWHIXGR6bHC1qijpyL4Sj6DEZjZjsSZqmYaxK1ORcvlc-ZqSoyNKwnRpGTyK4WDK5BQ6BQ5BRm3EW55uG1K0n9ClUqgqgFuxketJe7nIv2rUNB0x7LmSL2qGMsSySevcmSJhzJgnipWQOgEma510M4HmcqHZYyWqaOMqTQyWGh0osVSGiwC5uGyftx74sWvHuBNMhX7O-5DoHiPae72lvnlwPBydFlRVS7qPIl7cilP74-+SByMMKBkB4ZKoL4cikgAbigADWYByDA+AACJJgQg4xPmI7FHkZQrKGsjqKcCiaMG9YpJOxySBiCiyPoX6dnuRJ-gEgHAaBmaUm4XDDBQABm1BYIhYAoWhyqnrSmHDpeCAKCicjUbU6g6nkFichYsJrLWVxaPsk7KdICZCmJlqEraAFASBvbPAOEmqlJF4JJURbVDcy4Yvk1GVkUsabApMjKZGqjNg2kgMU8Xa-j0FnsQBXBUJ4vRgH2DBOhEkn0o5TLKV6y6WDG6lhkYVYIDoKzyBkeR8pUDZqOFu5WuZEBsVZzUeFQ+AmDQsAYAARlgAgYZl7o6I2tYLJINSSO+3JaMGlQpGkhFhryo2jW2xkdhFTFNS1EAAT1-UCHa4EIdBcEIYdA34AAKlQZC4LAZAksIsBDeqBbrdpym8iuByxlcLK5BYqQLBUZyTcFvL1aZ3YsTFrVyFdx0ZuSXGdDx-GCUjfXXXdD1PS9j3vVhMnrWCFRxtNaRLdcfIsiwuS5fkgZaOUlhpDDP7MdFzWWftzXI-gdrPGlLoOSNyiHFstRySisjcgzahyFoUYBbRsac5tO6w1F7wIwLONHfg0qyvKyVfPgVAmCT0kJGt41pJD02xgcpElUkcZ6rI+q5JcckbU0W0NWZB57QduMCKbcoKmIsCpXIZB8YwVAABRC-jj3PYCsA3XwOAoKQACUNDmttjVh-zEfG9H5u21lpVjSrTtTTNbsstUYJJAFWgA37XORTz+t8+xtcKpb1v1+6KJFopGQqRi6nBlstYcqNK5riusYDztlejzKMfJXHCdJynqd8SJaAABYAEpgFgKCMAAyrgZBcLAV+P3nBfF6XJnc7tfmY8xZnglgWGe-klILzUhYDSJVRpnCONNOcWxWRKBRDYO4uAUD7XgJEMuIdqDi2GgWQgOhgxMyRKyFc8IuQkXUDvK0HgvAHmIR9bCD4SoeSWCoLkoZpxrmXIw0OLEMxsNJgkSc418KhnrHyG4oZYTcPhMifhJx4SCiDjrABSpgHiLtogAUhwW77DRIGXkk55wexKCrJQsg1jBTnPsYRqZviiL6PohuORgyhhBhGKMsZYzxhcXrf8EBPHulUJOPCtRlABWIu7IoORVBIIhMpNYGJyghKHmEvaYjQEkOwhkxQrJtBES0JDOBPlkgKD1JYZSjZORyTXNkwBsVwkFPYTJVYS58JxPKbOYM0gUj7FjGcEMOpciaJxMHXWOTWJV2avFRKpIwARILJRGJBF4mZBIkDE0KtIxLSSDkDYGhWl70Ru1Tq6zsLURBkoLyWRmz8PmlUZmcY1zXDKdMghcy2mIyFh8W5ZN4RFmOFyKaZwiLeT2GVJcy5pBrguCiMK2tvyDwBYbIWejOkSMQBkeQORJq0RNCUDIDNondxuGpPQmRqIXPhiPECuKMpdMkbILZ-SEnLxyjqOJMZsj1jRTYIAA */\n  id: \"document-mutator\",\n  context: ({ input }) => ({\n    client: input.client.withConfig({ allowReconfigure: !1 }),\n    sharedListener: input.sharedListener,\n    id: input.id,\n    remote: void 0,\n    local: void 0,\n    mutationEvents: [],\n    stagedChanges: [],\n    stashedChanges: [],\n    error: void 0,\n    fetchRemoteSnapshotAttempts: 0,\n    submitTransactionsAttempts: 0,\n    cache: input.cache\n  }),\n  // Auto start the connection by default\n  entry: [\"connect to server-sent events\"],\n  on: {\n    mutate: {\n      actions: [\"rebase local snapshot\", \"stage mutation\"]\n    }\n  },\n  initial: \"disconnected\",\n  states: {\n    disconnected: {\n      on: {\n        connect: {\n          target: \"connecting\",\n          actions: [\"listen to server-sent events\"]\n        }\n      }\n    },\n    connecting: {\n      on: {\n        welcome: \"connected\",\n        reconnect: \"reconnecting\",\n        error: \"connectFailure\"\n      },\n      tags: [\"busy\"]\n    },\n    connectFailure: {\n      on: {\n        connect: {\n          target: \"connecting\",\n          actions: [\"listen to server-sent events\"]\n        }\n      },\n      entry: [\n        \"stop listening to server-sent events\",\n        \"assign error to context\"\n      ],\n      exit: [\"clear error from context\"],\n      tags: [\"error\"]\n    },\n    reconnecting: {\n      on: {\n        welcome: {\n          target: \"connected\"\n        },\n        error: {\n          target: \"connectFailure\"\n        }\n      },\n      tags: [\"busy\", \"error\"]\n    },\n    connected: {\n      on: {\n        mutation: {\n          actions: [\"buffer remote mutation events\"]\n        },\n        reconnect: \"reconnecting\"\n      },\n      entry: [\"clear error from context\"],\n      initial: \"loading\",\n      states: {\n        loading: {\n          invoke: {\n            src: \"fetch remote snapshot\",\n            id: \"getDocument\",\n            input: ({ context }) => ({\n              client: context.client,\n              id: context.id\n            }),\n            onError: {\n              target: \"loadFailure\"\n            },\n            onDone: {\n              target: \"loaded\",\n              actions: [\n                \"rebase fetched remote snapshot\",\n                \"reset fetch attempts\"\n              ]\n            }\n          },\n          tags: [\"busy\"]\n        },\n        loaded: {\n          entry: [\"send sync event to parent\"],\n          on: {\n            mutation: {\n              actions: [\"apply mendoza patch\", \"send mutation event to parent\"]\n            }\n          },\n          initial: \"pristine\",\n          states: {\n            pristine: {\n              on: {\n                mutate: {\n                  actions: [\"rebase local snapshot\", \"stage mutation\"],\n                  target: \"dirty\"\n                }\n              },\n              tags: [\"ready\"]\n            },\n            dirty: {\n              on: {\n                submit: \"submitting\"\n              },\n              tags: [\"ready\"]\n            },\n            submitting: {\n              on: {\n                mutate: {\n                  actions: [\"rebase local snapshot\", \"stash mutation\"]\n                }\n              },\n              invoke: {\n                src: \"submit mutations as transactions\",\n                id: \"submitTransactions\",\n                input: ({ context }) => {\n                  const remoteDataset = /* @__PURE__ */ new Map();\n                  return remoteDataset.set(context.id, context.remote), {\n                    client: context.client,\n                    transactions: (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.toTransactions)(\n                      // Squashing DMP strings is the last thing we do before submitting\n                      (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashDMPStrings)(\n                        remoteDataset,\n                        (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashMutationGroups)(context.stagedChanges)\n                      )\n                    )\n                  };\n                },\n                onError: {\n                  target: \"submitFailure\"\n                },\n                onDone: {\n                  target: \"pristine\",\n                  actions: [\n                    \"restore stashed changes\",\n                    \"reset submit attempts\",\n                    \"send pristine event to parent\"\n                  ]\n                }\n              },\n              /**\n               * 'busy' means we should show a spinner, 'ready' means we can still accept mutations, they'll be applied optimistically right away, and queued for submissions after the current submission settles\n               */\n              tags: [\"busy\", \"ready\"]\n            },\n            submitFailure: {\n              exit: [\"clear error from context\"],\n              after: {\n                submitTransactionsTimeout: {\n                  actions: [\"increment submit attempts\"],\n                  target: \"submitting\"\n                }\n              },\n              on: {\n                retry: \"submitting\"\n              },\n              /**\n               * How can it be both `ready` and `error`? `ready` means it can receive mutations, optimistically apply them, and queue them for submission. `error` means it failed to submit previously applied mutations.\n               * It's completely fine to keep queueing up more mutations and applying them optimistically, while showing UI that notifies that mutations didn't submit, and show a count down until the next automatic retry.\n               */\n              tags: [\"error\", \"ready\"]\n            }\n          }\n        },\n        loadFailure: {\n          exit: [\"clear error from context\"],\n          after: {\n            fetchRemoteSnapshotTimeout: {\n              actions: [\"increment fetch attempts\"],\n              target: \"loading\"\n            }\n          },\n          on: {\n            retry: \"loading\"\n          },\n          tags: [\"error\"]\n        }\n      }\n    }\n  }\n});\nfunction applyMendozaPatch(document, patch, nextRevision) {\n  const next = (0,mendoza__WEBPACK_IMPORTED_MODULE_13__.applyPatch)(omitRev(document), patch);\n  return next ? Object.assign(next, { _rev: nextRevision }) : null;\n}\nfunction omitRev(document) {\n  if (!document)\n    return null;\n  const { _rev, ...doc } = document;\n  return doc;\n}\n\n//# sourceMappingURL=_unstable_machine.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fdW5zdGFibGVfbWFjaGluZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdJO0FBQ25HO0FBQ3FEO0FBQ3NEO0FBQ3JGO0FBQzNEO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywyQ0FBSyxHQUFHLHlCQUF5QjtBQUMxQyxJQUFJLDRDQUFNO0FBQ1Y7QUFDQSxJQUFJLDRDQUFNO0FBQ1Y7QUFDQSxJQUFJLDRDQUFNO0FBQ1YscUJBQXFCLDJDQUFLO0FBQzFCLElBQUksaURBQVcsR0FBRyw2QkFBNkI7QUFDL0M7QUFDQSxJQUFJLDRDQUFNO0FBQ1Y7QUFDQSxTQUFTLDJDQUFLO0FBQ2Q7QUFDQSwrQkFBK0IsNkNBQUs7QUFDcEMsV0FBVztBQUNYO0FBQ0EsK0JBQStCLHlDQUFNLEdBQUcsVUFBVSxPQUFPLFlBQVk7QUFDckUsZ0NBQWdDLHlDQUFNLEdBQUcsZUFBZTtBQUN4RCxxQ0FBcUMseUNBQUssR0FBRyxpQkFBaUI7QUFDOUQsb0NBQW9DLHlDQUFVO0FBQzlDO0FBQ0EsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsNENBQTRDLHlDQUFTO0FBQ3JELHFDQUFxQyx5Q0FBTTtBQUMzQyx5QkFBeUIsZ0JBQWdCLE1BQU0sbURBQVc7QUFDMUQsS0FBSztBQUNMLCtCQUErQix5Q0FBTTtBQUNyQyx3QkFBd0IsZ0JBQWdCLE1BQU0sbURBQVc7QUFDekQ7QUFDQSxLQUFLO0FBQ0wsc0NBQXNDLHlDQUFjLElBQUksU0FBUztBQUNqRSx3QkFBd0IsZ0JBQWdCO0FBQ3hDLFFBQVEsbURBQVc7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxvRUFBTTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMLDJCQUEyQix5Q0FBTSxJQUFJLGdCQUFnQjtBQUNyRCxNQUFNLG1EQUFXO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsb0VBQU07QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxnQ0FBZ0MseUNBQU07QUFDdEMsc0NBQXNDLFNBQVM7QUFDL0MsS0FBSztBQUNMLDRCQUE0Qix5Q0FBTTtBQUNsQztBQUNBLEtBQUs7QUFDTCxpQ0FBaUMseUNBQU07QUFDdkMscUNBQXFDLFNBQVM7QUFDOUMsS0FBSztBQUNMLDZCQUE2Qix5Q0FBTTtBQUNuQztBQUNBLEtBQUs7QUFDTCxzQkFBc0IseUNBQU07QUFDNUIsd0JBQXdCLGdCQUFnQixNQUFNLG1EQUFXO0FBQ3pEO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsS0FBSztBQUNMLHNCQUFzQix5Q0FBTTtBQUM1Qix5QkFBeUIsZ0JBQWdCLE1BQU0sbURBQVc7QUFDMUQ7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxLQUFLO0FBQ0wsNkJBQTZCLHlDQUFjLElBQUksU0FBUztBQUN4RDtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEMsVUFBVSxtREFBVztBQUNyQjtBQUNBO0FBQ0EsMEJBQTBCLDRFQUFjO0FBQ3hDLGlCQUFpQixvRUFBTTtBQUN2QjtBQUNBLE9BQU87QUFDUCxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMLHFDQUFxQyx5Q0FBVTtBQUMvQyxTQUFTLFNBQVM7QUFDbEI7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLGlDQUFpQyx5Q0FBVTtBQUMzQyxTQUFTLFNBQVM7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EscUNBQXFDLHlDQUFVLElBQUksZ0JBQWdCLE1BQU0sbURBQVc7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQSwwQkFBMEIsMkRBQW1CO0FBQzdDO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsZ0JBQWdCLGVBQWU7QUFDL0IsZUFBZSwyQ0FBSztBQUNwQixVQUFVLDRDQUFNO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQVMsQ0FBQyxnREFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsbURBQVc7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLGdCQUFnQixhQUFhO0FBQzdCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esd0NBQXdDLG1EQUFXO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxnQkFBZ0IsdUJBQXVCO0FBQ3ZDO0FBQ0E7QUFDQSw2Q0FBNkMsd0VBQWlCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsbUNBQW1DLFNBQVM7QUFDNUMsa0NBQWtDLFNBQVM7QUFDM0M7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLGNBQWMsT0FBTztBQUNyQixzQ0FBc0Msc0JBQXNCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixTQUFTO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyw0RUFBYztBQUNoRDtBQUNBLHNCQUFzQiw4RUFBZ0I7QUFDdEM7QUFDQSx3QkFBd0Isa0ZBQW9CO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxlQUFlLG9EQUFVO0FBQ3pCLHNDQUFzQyxvQkFBb0I7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGVBQWU7QUFDekI7QUFDQTtBQVVFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fdW5zdGFibGVfbWFjaGluZS5qcz9kMDYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlYmFzZSwgYXBwbHlNdXRhdGlvbnMsIGNvbW1pdCwgdG9UcmFuc2FjdGlvbnMsIHNxdWFzaERNUFN0cmluZ3MsIHNxdWFzaE11dGF0aW9uR3JvdXBzIH0gZnJvbSBcIi4vX2NodW5rcy1lcy90b1RyYW5zYWN0aW9ucy5qc1wiO1xuaW1wb3J0IHsgYXBwbHlQYXRjaCB9IGZyb20gXCJtZW5kb3phXCI7XG5pbXBvcnQgeyBzaGFyZSwgZmlsdGVyLCBtZXJnZSwgc2hhcmVSZXBsYXksIGRlZmVyLCBvYnNlcnZlT24sIGFzYXBTY2hlZHVsZXIgfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHsgc2V0dXAsIGFzc2lnbiwgcmFpc2UsIHNwYXduQ2hpbGQsIHN0b3BDaGlsZCwgYXNzZXJ0RXZlbnQsIGVucXVldWVBY3Rpb25zLCBzZW5kUGFyZW50LCBmcm9tRXZlbnRPYnNlcnZhYmxlLCBmcm9tUHJvbWlzZSB9IGZyb20gXCJ4c3RhdGVcIjtcbmltcG9ydCB7IGVuY29kZVRyYW5zYWN0aW9uIH0gZnJvbSBcIi4vX2NodW5rcy1lcy9lbmNvZGUuanNcIjtcbmZ1bmN0aW9uIGNyZWF0ZVNoYXJlZExpc3RlbmVyKGNsaWVudCkge1xuICBjb25zdCBhbGxFdmVudHMkID0gY2xpZW50Lmxpc3RlbihcbiAgICAnKlshKF9pZCBpbiBwYXRoKFwiXy4qKlwiKSldJyxcbiAgICB7fSxcbiAgICB7XG4gICAgICBldmVudHM6IFtcIndlbGNvbWVcIiwgXCJtdXRhdGlvblwiLCBcInJlY29ubmVjdFwiXSxcbiAgICAgIGluY2x1ZGVSZXN1bHQ6ICExLFxuICAgICAgaW5jbHVkZVByZXZpb3VzUmV2aXNpb246ICExLFxuICAgICAgdmlzaWJpbGl0eTogXCJ0cmFuc2FjdGlvblwiLFxuICAgICAgZWZmZWN0Rm9ybWF0OiBcIm1lbmRvemFcIixcbiAgICAgIGluY2x1ZGVNdXRhdGlvbnM6ICExXG4gICAgfVxuICApLnBpcGUoc2hhcmUoeyByZXNldE9uUmVmQ291bnRaZXJvOiAhMCB9KSksIHJlY29ubmVjdCA9IGFsbEV2ZW50cyQucGlwZShcbiAgICBmaWx0ZXIoKGV2ZW50KSA9PiBldmVudC50eXBlID09PSBcInJlY29ubmVjdFwiKVxuICApLCB3ZWxjb21lID0gYWxsRXZlbnRzJC5waXBlKFxuICAgIGZpbHRlcigoZXZlbnQpID0+IGV2ZW50LnR5cGUgPT09IFwid2VsY29tZVwiKVxuICApLCBtdXRhdGlvbnMgPSBhbGxFdmVudHMkLnBpcGUoXG4gICAgZmlsdGVyKChldmVudCkgPT4gZXZlbnQudHlwZSA9PT0gXCJtdXRhdGlvblwiKVxuICApLCByZXBsYXlXZWxjb21lID0gbWVyZ2Uod2VsY29tZSwgcmVjb25uZWN0KS5waXBlKFxuICAgIHNoYXJlUmVwbGF5KHsgYnVmZmVyU2l6ZTogMSwgcmVmQ291bnQ6ICEwIH0pXG4gICkucGlwZShcbiAgICBmaWx0ZXIoKGxhdGVzdENvbm5lY3Rpb25FdmVudCkgPT4gbGF0ZXN0Q29ubmVjdGlvbkV2ZW50LnR5cGUgPT09IFwid2VsY29tZVwiKVxuICApO1xuICByZXR1cm4gbWVyZ2UocmVwbGF5V2VsY29tZSwgbXV0YXRpb25zLCByZWNvbm5lY3QpO1xufVxuY29uc3QgZG9jdW1lbnRNdXRhdG9yTWFjaGluZSA9IHNldHVwKHtcbiAgdHlwZXM6IHt9LFxuICBhY3Rpb25zOiB7XG4gICAgXCJhc3NpZ24gZXJyb3IgdG8gY29udGV4dFwiOiBhc3NpZ24oeyBlcnJvcjogKHsgZXZlbnQgfSkgPT4gZXZlbnQgfSksXG4gICAgXCJjbGVhciBlcnJvciBmcm9tIGNvbnRleHRcIjogYXNzaWduKHsgZXJyb3I6IHZvaWQgMCB9KSxcbiAgICBcImNvbm5lY3QgdG8gc2VydmVyLXNlbnQgZXZlbnRzXCI6IHJhaXNlKHsgdHlwZTogXCJjb25uZWN0XCIgfSksXG4gICAgXCJsaXN0ZW4gdG8gc2VydmVyLXNlbnQgZXZlbnRzXCI6IHNwYXduQ2hpbGQoXCJzZXJ2ZXItc2VudCBldmVudHNcIiwge1xuICAgICAgaWQ6IFwibGlzdGVuZXJcIixcbiAgICAgIGlucHV0OiAoeyBjb250ZXh0IH0pID0+ICh7XG4gICAgICAgIGxpc3RlbmVyOiBjb250ZXh0LnNoYXJlZExpc3RlbmVyIHx8IGNyZWF0ZVNoYXJlZExpc3RlbmVyKGNvbnRleHQuY2xpZW50KSxcbiAgICAgICAgaWQ6IGNvbnRleHQuaWRcbiAgICAgIH0pXG4gICAgfSksXG4gICAgXCJzdG9wIGxpc3RlbmluZyB0byBzZXJ2ZXItc2VudCBldmVudHNcIjogc3RvcENoaWxkKFwibGlzdGVuZXJcIiksXG4gICAgXCJidWZmZXIgcmVtb3RlIG11dGF0aW9uIGV2ZW50c1wiOiBhc3NpZ24oe1xuICAgICAgbXV0YXRpb25FdmVudHM6ICh7IGV2ZW50LCBjb250ZXh0IH0pID0+IChhc3NlcnRFdmVudChldmVudCwgXCJtdXRhdGlvblwiKSwgWy4uLmNvbnRleHQubXV0YXRpb25FdmVudHMsIGV2ZW50XSlcbiAgICB9KSxcbiAgICBcInJlc3RvcmUgc3Rhc2hlZCBjaGFuZ2VzXCI6IGFzc2lnbih7XG4gICAgICBzdGFnZWRDaGFuZ2VzOiAoeyBldmVudCwgY29udGV4dCB9KSA9PiAoYXNzZXJ0RXZlbnQoZXZlbnQsIFwieHN0YXRlLmRvbmUuYWN0b3Iuc3VibWl0VHJhbnNhY3Rpb25zXCIpLCBjb250ZXh0LnN0YXNoZWRDaGFuZ2VzKSxcbiAgICAgIHN0YXNoZWRDaGFuZ2VzOiBbXVxuICAgIH0pLFxuICAgIFwicmViYXNlIGZldGNoZWQgcmVtb3RlIHNuYXBzaG90XCI6IGVucXVldWVBY3Rpb25zKCh7IGVucXVldWUgfSkgPT4ge1xuICAgICAgZW5xdWV1ZS5hc3NpZ24oKHsgZXZlbnQsIGNvbnRleHQgfSkgPT4ge1xuICAgICAgICBhc3NlcnRFdmVudChldmVudCwgXCJ4c3RhdGUuZG9uZS5hY3Rvci5nZXREb2N1bWVudFwiKTtcbiAgICAgICAgY29uc3QgcHJldmlvdXNSZW1vdGUgPSBjb250ZXh0LnJlbW90ZTtcbiAgICAgICAgbGV0IG5leHRSZW1vdGUgPSBldmVudC5vdXRwdXQsIHNlZW5DdXJyZW50UmV2ID0gITE7XG4gICAgICAgIGZvciAoY29uc3QgcGF0Y2ggb2YgY29udGV4dC5tdXRhdGlvbkV2ZW50cylcbiAgICAgICAgICAhcGF0Y2guZWZmZWN0cz8uYXBwbHkgfHwgIXBhdGNoLnByZXZpb3VzUmV2ICYmIHBhdGNoLnRyYW5zaXRpb24gIT09IFwiYXBwZWFyXCIgfHwgKCFzZWVuQ3VycmVudFJldiAmJiBwYXRjaC5wcmV2aW91c1JldiA9PT0gbmV4dFJlbW90ZT8uX3JldiAmJiAoc2VlbkN1cnJlbnRSZXYgPSAhMCksIHNlZW5DdXJyZW50UmV2ICYmIChuZXh0UmVtb3RlID0gYXBwbHlNZW5kb3phUGF0Y2goXG4gICAgICAgICAgICBuZXh0UmVtb3RlLFxuICAgICAgICAgICAgcGF0Y2guZWZmZWN0cy5hcHBseSxcbiAgICAgICAgICAgIHBhdGNoLnJlc3VsdFJldlxuICAgICAgICAgICkpKTtcbiAgICAgICAgY29udGV4dC5jYWNoZSAmJiAvLyBJZiB0aGUgc2hhcmVkIGNhY2hlIGRvbid0IGhhdmUgdGhlIGRvY3VtZW50IGFscmVhZHkgd2UgY2FuIGp1c3Qgc2V0IGl0XG4gICAgICAgICghY29udGV4dC5jYWNoZS5oYXMoY29udGV4dC5pZCkgfHwgLy8gQnV0IHdoZW4gaXQncyBpbiB0aGUgY2FjaGUsIG1ha2Ugc3VyZSBpdCdzIG5lY2Vzc2FyeSB0byB1cGRhdGUgaXRcbiAgICAgICAgY29udGV4dC5jYWNoZS5nZXQoY29udGV4dC5pZCkuX3JldiAhPT0gbmV4dFJlbW90ZT8uX3JldikgJiYgY29udGV4dC5jYWNoZS5zZXQoY29udGV4dC5pZCwgbmV4dFJlbW90ZSk7XG4gICAgICAgIGNvbnN0IFtzdGFnZWRDaGFuZ2VzLCBsb2NhbF0gPSByZWJhc2UoXG4gICAgICAgICAgY29udGV4dC5pZCxcbiAgICAgICAgICAvLyBJdCdzIGFubm95aW5nIHRvIGNvbnZlcnQgYmV0d2VlbiBudWxsIGFuZCB1bmRlZmluZWQsIHJlYWNoIGNvbnNlbnN1c1xuICAgICAgICAgIHByZXZpb3VzUmVtb3RlID09PSBudWxsID8gdm9pZCAwIDogcHJldmlvdXNSZW1vdGUsXG4gICAgICAgICAgbmV4dFJlbW90ZSA9PT0gbnVsbCA/IHZvaWQgMCA6IG5leHRSZW1vdGUsXG4gICAgICAgICAgY29udGV4dC5zdGFnZWRDaGFuZ2VzXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcmVtb3RlOiBuZXh0UmVtb3RlLFxuICAgICAgICAgIGxvY2FsLFxuICAgICAgICAgIHN0YWdlZENoYW5nZXMsXG4gICAgICAgICAgLy8gU2luY2UgdGhlIHNuYXBzaG90IGhhbmRsZXIgYXBwbGllcyBhbGwgdGhlIHBhdGNoZXMgdGhleSBhcmUgbm8gbG9uZ2VyIG5lZWRlZCwgYWxsb3cgR0NcbiAgICAgICAgICBtdXRhdGlvbkV2ZW50czogW11cbiAgICAgICAgfTtcbiAgICAgIH0pLCBlbnF1ZXVlLnNlbmRQYXJlbnQoXG4gICAgICAgICh7IGNvbnRleHQgfSkgPT4gKHtcbiAgICAgICAgICB0eXBlOiBcInJlYmFzZWQucmVtb3RlXCIsXG4gICAgICAgICAgaWQ6IGNvbnRleHQuaWQsXG4gICAgICAgICAgZG9jdW1lbnQ6IGNvbnRleHQucmVtb3RlXG4gICAgICAgIH0pXG4gICAgICApO1xuICAgIH0pLFxuICAgIFwiYXBwbHkgbWVuZG96YSBwYXRjaFwiOiBhc3NpZ24oKHsgZXZlbnQsIGNvbnRleHQgfSkgPT4ge1xuICAgICAgYXNzZXJ0RXZlbnQoZXZlbnQsIFwibXV0YXRpb25cIik7XG4gICAgICBjb25zdCBwcmV2aW91c1JlbW90ZSA9IGNvbnRleHQucmVtb3RlO1xuICAgICAgaWYgKGV2ZW50LnRyYW5zYWN0aW9uSWQgPT09IHByZXZpb3VzUmVtb3RlPy5fcmV2KVxuICAgICAgICByZXR1cm4ge307XG4gICAgICBjb25zdCBuZXh0UmVtb3RlID0gYXBwbHlNZW5kb3phUGF0Y2goXG4gICAgICAgIHByZXZpb3VzUmVtb3RlLFxuICAgICAgICBldmVudC5lZmZlY3RzLmFwcGx5LFxuICAgICAgICBldmVudC5yZXN1bHRSZXZcbiAgICAgICk7XG4gICAgICBjb250ZXh0LmNhY2hlICYmIC8vIElmIHRoZSBzaGFyZWQgY2FjaGUgZG9uJ3QgaGF2ZSB0aGUgZG9jdW1lbnQgYWxyZWFkeSB3ZSBjYW4ganVzdCBzZXQgaXRcbiAgICAgICghY29udGV4dC5jYWNoZS5oYXMoY29udGV4dC5pZCkgfHwgLy8gQnV0IHdoZW4gaXQncyBpbiB0aGUgY2FjaGUsIG1ha2Ugc3VyZSBpdCdzIG5lY2Vzc2FyeSB0byB1cGRhdGUgaXRcbiAgICAgIGNvbnRleHQuY2FjaGUuZ2V0KGNvbnRleHQuaWQpLl9yZXYgIT09IG5leHRSZW1vdGU/Ll9yZXYpICYmIGNvbnRleHQuY2FjaGUuc2V0KGNvbnRleHQuaWQsIG5leHRSZW1vdGUpO1xuICAgICAgY29uc3QgW3N0YWdlZENoYW5nZXMsIGxvY2FsXSA9IHJlYmFzZShcbiAgICAgICAgY29udGV4dC5pZCxcbiAgICAgICAgLy8gSXQncyBhbm5veWluZyB0byBjb252ZXJ0IGJldHdlZW4gbnVsbCBhbmQgdW5kZWZpbmVkLCByZWFjaCBjb25zZW5zdXNcbiAgICAgICAgcHJldmlvdXNSZW1vdGUgPT09IG51bGwgPyB2b2lkIDAgOiBwcmV2aW91c1JlbW90ZSxcbiAgICAgICAgbmV4dFJlbW90ZSA9PT0gbnVsbCA/IHZvaWQgMCA6IG5leHRSZW1vdGUsXG4gICAgICAgIGNvbnRleHQuc3RhZ2VkQ2hhbmdlc1xuICAgICAgKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlbW90ZTogbmV4dFJlbW90ZSxcbiAgICAgICAgbG9jYWwsXG4gICAgICAgIHN0YWdlZENoYW5nZXNcbiAgICAgIH07XG4gICAgfSksXG4gICAgXCJpbmNyZW1lbnQgZmV0Y2ggYXR0ZW1wdHNcIjogYXNzaWduKHtcbiAgICAgIGZldGNoUmVtb3RlU25hcHNob3RBdHRlbXB0czogKHsgY29udGV4dCB9KSA9PiBjb250ZXh0LmZldGNoUmVtb3RlU25hcHNob3RBdHRlbXB0cyArIDFcbiAgICB9KSxcbiAgICBcInJlc2V0IGZldGNoIGF0dGVtcHRzXCI6IGFzc2lnbih7XG4gICAgICBmZXRjaFJlbW90ZVNuYXBzaG90QXR0ZW1wdHM6IDBcbiAgICB9KSxcbiAgICBcImluY3JlbWVudCBzdWJtaXQgYXR0ZW1wdHNcIjogYXNzaWduKHtcbiAgICAgIHN1Ym1pdFRyYW5zYWN0aW9uc0F0dGVtcHRzOiAoeyBjb250ZXh0IH0pID0+IGNvbnRleHQuc3VibWl0VHJhbnNhY3Rpb25zQXR0ZW1wdHMgKyAxXG4gICAgfSksXG4gICAgXCJyZXNldCBzdWJtaXQgYXR0ZW1wdHNcIjogYXNzaWduKHtcbiAgICAgIHN1Ym1pdFRyYW5zYWN0aW9uc0F0dGVtcHRzOiAwXG4gICAgfSksXG4gICAgXCJzdGFnZSBtdXRhdGlvblwiOiBhc3NpZ24oe1xuICAgICAgc3RhZ2VkQ2hhbmdlczogKHsgZXZlbnQsIGNvbnRleHQgfSkgPT4gKGFzc2VydEV2ZW50KGV2ZW50LCBcIm11dGF0ZVwiKSwgW1xuICAgICAgICAuLi5jb250ZXh0LnN0YWdlZENoYW5nZXMsXG4gICAgICAgIHsgdHJhbnNhY3Rpb246ICExLCBtdXRhdGlvbnM6IGV2ZW50Lm11dGF0aW9ucyB9XG4gICAgICBdKVxuICAgIH0pLFxuICAgIFwic3Rhc2ggbXV0YXRpb25cIjogYXNzaWduKHtcbiAgICAgIHN0YXNoZWRDaGFuZ2VzOiAoeyBldmVudCwgY29udGV4dCB9KSA9PiAoYXNzZXJ0RXZlbnQoZXZlbnQsIFwibXV0YXRlXCIpLCBbXG4gICAgICAgIC4uLmNvbnRleHQuc3Rhc2hlZENoYW5nZXMsXG4gICAgICAgIHsgdHJhbnNhY3Rpb246ICExLCBtdXRhdGlvbnM6IGV2ZW50Lm11dGF0aW9ucyB9XG4gICAgICBdKVxuICAgIH0pLFxuICAgIFwicmViYXNlIGxvY2FsIHNuYXBzaG90XCI6IGVucXVldWVBY3Rpb25zKCh7IGVucXVldWUgfSkgPT4ge1xuICAgICAgZW5xdWV1ZS5hc3NpZ24oe1xuICAgICAgICBsb2NhbDogKHsgZXZlbnQsIGNvbnRleHQgfSkgPT4ge1xuICAgICAgICAgIGFzc2VydEV2ZW50KGV2ZW50LCBcIm11dGF0ZVwiKTtcbiAgICAgICAgICBjb25zdCBsb2NhbERhdGFzZXQgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICAgICAgICAgIGNvbnRleHQubG9jYWwgJiYgbG9jYWxEYXRhc2V0LnNldChjb250ZXh0LmlkLCBjb250ZXh0LmxvY2FsKTtcbiAgICAgICAgICBjb25zdCByZXN1bHRzID0gYXBwbHlNdXRhdGlvbnMoZXZlbnQubXV0YXRpb25zLCBsb2NhbERhdGFzZXQpO1xuICAgICAgICAgIHJldHVybiBjb21taXQocmVzdWx0cywgbG9jYWxEYXRhc2V0KSwgbG9jYWxEYXRhc2V0LmdldChjb250ZXh0LmlkKTtcbiAgICAgICAgfVxuICAgICAgfSksIGVucXVldWUuc2VuZFBhcmVudChcbiAgICAgICAgKHsgY29udGV4dCB9KSA9PiAoe1xuICAgICAgICAgIHR5cGU6IFwicmViYXNlZC5sb2NhbFwiLFxuICAgICAgICAgIGlkOiBjb250ZXh0LmlkLFxuICAgICAgICAgIGRvY3VtZW50OiBjb250ZXh0LmxvY2FsXG4gICAgICAgIH0pXG4gICAgICApO1xuICAgIH0pLFxuICAgIFwic2VuZCBwcmlzdGluZSBldmVudCB0byBwYXJlbnRcIjogc2VuZFBhcmVudChcbiAgICAgICh7IGNvbnRleHQgfSkgPT4gKHtcbiAgICAgICAgdHlwZTogXCJwcmlzdGluZVwiLFxuICAgICAgICBpZDogY29udGV4dC5pZFxuICAgICAgfSlcbiAgICApLFxuICAgIFwic2VuZCBzeW5jIGV2ZW50IHRvIHBhcmVudFwiOiBzZW5kUGFyZW50KFxuICAgICAgKHsgY29udGV4dCB9KSA9PiAoe1xuICAgICAgICB0eXBlOiBcInN5bmNcIixcbiAgICAgICAgaWQ6IGNvbnRleHQuaWQsXG4gICAgICAgIGRvY3VtZW50OiBjb250ZXh0LnJlbW90ZVxuICAgICAgfSlcbiAgICApLFxuICAgIFwic2VuZCBtdXRhdGlvbiBldmVudCB0byBwYXJlbnRcIjogc2VuZFBhcmVudCgoeyBjb250ZXh0LCBldmVudCB9KSA9PiAoYXNzZXJ0RXZlbnQoZXZlbnQsIFwibXV0YXRpb25cIiksIHtcbiAgICAgIHR5cGU6IFwibXV0YXRpb25cIixcbiAgICAgIGlkOiBjb250ZXh0LmlkLFxuICAgICAgcHJldmlvdXNSZXY6IGV2ZW50LnByZXZpb3VzUmV2LFxuICAgICAgcmVzdWx0UmV2OiBldmVudC5yZXN1bHRSZXYsXG4gICAgICBlZmZlY3RzOiBldmVudC5lZmZlY3RzXG4gICAgfSkpXG4gIH0sXG4gIGFjdG9yczoge1xuICAgIFwic2VydmVyLXNlbnQgZXZlbnRzXCI6IGZyb21FdmVudE9ic2VydmFibGUoXG4gICAgICAoe1xuICAgICAgICBpbnB1dFxuICAgICAgfSkgPT4ge1xuICAgICAgICBjb25zdCB7IGxpc3RlbmVyLCBpZCB9ID0gaW5wdXQ7XG4gICAgICAgIHJldHVybiBkZWZlcigoKSA9PiBsaXN0ZW5lcikucGlwZShcbiAgICAgICAgICBmaWx0ZXIoXG4gICAgICAgICAgICAoZXZlbnQpID0+IGV2ZW50LnR5cGUgPT09IFwid2VsY29tZVwiIHx8IGV2ZW50LnR5cGUgPT09IFwicmVjb25uZWN0XCIgfHwgZXZlbnQudHlwZSA9PT0gXCJtdXRhdGlvblwiICYmIGV2ZW50LmRvY3VtZW50SWQgPT09IGlkXG4gICAgICAgICAgKSxcbiAgICAgICAgICAvLyBUaGlzIGlzIG5lY2Vzc2FyeSB0byBhdm9pZCBzeW5jIGVtaXR0ZWQgZXZlbnRzIGZyb20gYHNoYXJlUmVwbGF5YCBmcm9tIGhhcHBlbmluZyBiZWZvcmUgdGhlIGFjdG9yIGlzIHJlYWR5IHRvIHJlY2VpdmUgdGhlbVxuICAgICAgICAgIG9ic2VydmVPbihhc2FwU2NoZWR1bGVyKVxuICAgICAgICApO1xuICAgICAgfVxuICAgICksXG4gICAgXCJmZXRjaCByZW1vdGUgc25hcHNob3RcIjogZnJvbVByb21pc2UoXG4gICAgICBhc3luYyAoe1xuICAgICAgICBpbnB1dCxcbiAgICAgICAgc2lnbmFsXG4gICAgICB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgY2xpZW50LCBpZCB9ID0gaW5wdXQ7XG4gICAgICAgIHJldHVybiBhd2FpdCBjbGllbnQuZ2V0RG9jdW1lbnQoaWQsIHtcbiAgICAgICAgICBzaWduYWxcbiAgICAgICAgfSkuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICBpZiAoIShlIGluc3RhbmNlb2YgRXJyb3IgJiYgZS5uYW1lID09PSBcIkFib3J0RXJyb3JcIikpXG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICApLFxuICAgIFwic3VibWl0IG11dGF0aW9ucyBhcyB0cmFuc2FjdGlvbnNcIjogZnJvbVByb21pc2UoXG4gICAgICBhc3luYyAoe1xuICAgICAgICBpbnB1dCxcbiAgICAgICAgc2lnbmFsXG4gICAgICB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgY2xpZW50LCB0cmFuc2FjdGlvbnMgfSA9IGlucHV0O1xuICAgICAgICBmb3IgKGNvbnN0IHRyYW5zYWN0aW9uIG9mIHRyYW5zYWN0aW9ucykge1xuICAgICAgICAgIGlmIChzaWduYWwuYWJvcnRlZCkgcmV0dXJuO1xuICAgICAgICAgIGF3YWl0IGNsaWVudC5kYXRhUmVxdWVzdChcIm11dGF0ZVwiLCBlbmNvZGVUcmFuc2FjdGlvbih0cmFuc2FjdGlvbiksIHtcbiAgICAgICAgICAgIHZpc2liaWxpdHk6IFwiYXN5bmNcIixcbiAgICAgICAgICAgIHJldHVybkRvY3VtZW50czogITEsXG4gICAgICAgICAgICBzaWduYWxcbiAgICAgICAgICB9KS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKCEoZSBpbnN0YW5jZW9mIEVycm9yICYmIGUubmFtZSA9PT0gXCJBYm9ydEVycm9yXCIpKVxuICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgKVxuICB9LFxuICBkZWxheXM6IHtcbiAgICAvLyBFeHBvbmVudGlhbCBiYWNrb2ZmIGRlbGF5IGZ1bmN0aW9uXG4gICAgZmV0Y2hSZW1vdGVTbmFwc2hvdFRpbWVvdXQ6ICh7IGNvbnRleHQgfSkgPT4gTWF0aC5wb3coMiwgY29udGV4dC5mZXRjaFJlbW90ZVNuYXBzaG90QXR0ZW1wdHMpICogMWUzLFxuICAgIHN1Ym1pdFRyYW5zYWN0aW9uc1RpbWVvdXQ6ICh7IGNvbnRleHQgfSkgPT4gTWF0aC5wb3coMiwgY29udGV4dC5zdWJtaXRUcmFuc2FjdGlvbnNBdHRlbXB0cykgKiAxZTNcbiAgfVxufSkuY3JlYXRlTWFjaGluZSh7XG4gIC8qKiBAeHN0YXRlLWxheW91dCBONElncGdKZzVtRE9JQzVRUVBZR01DdUJiTUE3QUxnTFJZYjRDRytLQVRnTVFubjVnRGFBREFMcUtnQU9Lc0Fsdmo0cGNuRUFBOUVBRGhZQVdBSFFBMkdTd1VCbUFLd0JPYVFFWkpraFFCb1FBVDBRNkFUQUY4cngxSmh3RmlwQ3RUa1Erc05NTnhnMGpDQnB2WEY5LVZnNGtFQjUrUVdGUkNRUUxGaFk1UFFCMmRSVTFTUXNkR1NWak13UmxIVGtXTk0wMG5SMVZLcnlLbXp0MGJEd2llbGNxT1dEUXdWd29HZ0IzTUFBYmJ4eHcwV2lCSVJGSWhQVUt1UTFOVlUwdFRVMFdGZFZDeEF0MWRUbE5oWDJXZFJsdEdVazA2MXNRZXhhbmRzcE83cjllLXFvLUgzZUp5S25Zck5RUE5KSm9sbHBWdXROdHRkZ2hWQ281TW9UZ29NcG84aklrcXBHdmRtbzQyaTRYbDBmdjQrSDBhR0FxRlJxSDl1THhwbkU1b2dGckNMRmQ1Q3ROQllGSmtkT3B1YW9zWGNIbmpuQXczRzktQUF4TWg4WVlZTDVCWW40R2xST21BK0tJRkVzMVI2T1JwWllXSElYR1I2YkhDMXFpanB5TDRTajZERVpqWmpzU1pxbVlheEsxT1JjdmxjLVpxU295Tkt3blJwR1R5SzRXREs1QlE2QlE1QlJtM0VXNTV1RzFLMG45Q2xVcWdxZ0Z1eGtldEplN25JdjJyVU5CMHg3TG1TTDJxR01zU3lTZXZjbVNKaHpKZ25pcFdRT2dFbWE1MTBNNEhtY3FIWll5V3FhT01xVFF5V0doMG9zVlNHaXdDNXVHeWZ0eDc0c1d2SHVCTk1oWDdPLTVEb0hpUGFlNzJsdm5sd1BCeWRGbFJWUzdxUElsN2NpbFA3NC0rU0J5TU1LQmtCNFpLb0w0Y2lrZ0FiaWdBRFdZQnlEQStBQUNKSmdRZzR4UG1JN0ZIa1pRcktHc2pxS2NDaWFNRzlZcEpPeHlTQmlDaXlQb1g2ZG51UkotZ0VnSEFhQm1hVW00WEREQlFBQm0xQllJaFlBb1doeXFuclNtSERwZUNBS0NpY2pVYlU2ZzZua0ZpY2hZc0pyTFdWeGFQc2s3S2RJQ1pDbUpscUVyYUFGQVNCdmJQQU9FbXFsSkY0SkpVUmJWRGN5NFl2azFHVmtVc2FiQXBNaktaR3FqTmcya2dNVThYYS1qMEZuc1FCWEJVSjR2UmdIMkRCT2hFa24wbzVUTEtWNnk2V0RHNmxoa1lWWUlEb0t6eUJrZVI4cFVEWnFPRnU1V3VaRUJzVlp6VWVGUStBbURRc0FZQUFSbGdBZ1labDdvNkkydFlMSklOU1NPKzNKYU1HbFFwR2toRmhyeW8yalcyeGtkaEZURk5TMUVBQVQxLVVDSGE0RUlkQmNFSVlkQTM0QUFLbFFaQzRMQVpBa3NJc0JEZXFCYnJkcHltOGl1Qnl4bGNMSzVCWXFRTEJVWnlUY0Z2TDFhWjNZc1RGclZ5RmR4MFp1U1hHZER4LUdDVWpmWFhYZEQxUFM5ajN2VmhNbnJXQ0ZSeHROYVJMZGNmSXNpd3VTNWZrZ1phT1VsaHBERFA3TWRGeldXZnR6WEktZ2RyUEdsTG9PU055aUhGc3RSeVNpc2pjZ3phaHlGb1VZQmJSc2FjNXRPNncxRjd3SXdMT05IZmcwcXl2S3lWZlBnVkFtQ1Qwa0pHdDQxcEpEMDJ4Z2NwRWxVa2NaNnJJK3E1SmNja2JVMFcwTldaQjU3UWR1TUNLYmNvS21Jc0NwWElaQjhZd1ZBQUJSQy1qajNQWUNzQTNYd09Bb0tRQUNVTkRtdHRqVmgtekVmRzlINXUyMWxwVmpTclR0VFROYnNzdFVZSkpBRldnQTM3WE9SVHordDgreHRjS3BiMXYxKzZLSkZvcEdRcVJpNm5CbHN0WWNxTks1cml1c1lEenRsZWp6S01mSlhIQ2RKeW5xZDhTSmFBQUJZQUVwZ0ZnS0NNQUF5cmdaQmNMQVYrUDNuQmZGNlhKbmM3dGZtWTh4Wm5nbGdXR2Uta2xJTHpVaFlEU0pWUnBuQ09OTk9jV3hXUktCUkRZTzR1QVVEN1hnSkVNdUlkcURpMkdnV1FnT2hneE15Ukt5RmM4SXVRa1hVRHZLMEhndkFIbUlSOWJDRDRTb2VTV0NvTGtvWnB4cm1YSXcwT0xFTXhzTkpna1NjNDE4S2huckh5RzRvWllUY1BoTWlmaEp4NFNDaURqckFCU3BnSGlMdG9nQVVod1c3N0RSSUdYa2s1NXdleEtDckpRc2cxakJUblBzWVJxWnZpaUw2UG9odU9SZ3loaEJoR0tNc1pZenhoY1hyZjhFQlBIdWxVSk9QQ3RSbEFCV0l1N0lvT1JWQklJaE1wTllHSnlnaEtIbUV2YVlqUUVrT3doa3hRckp0QkVTMEpET0JQbGtnS0QxSllaU2paT1J5VFhOa3dCc1Z3a0ZQWVRKVllTNThKeFBLYk9ZTTBnVWo3RmpHY0VNT3BjaWFKeE1IWFdPVFdKVjJhdkZSS3BJd0FSSUxKUkdKQkY0bVpCSWtERTBLdEl4TFNTRGtEWUdoV2w3MFJ1MVRxNnpzTFVSQmtvTHlXUm16OFBtbFVabWNZMXpYREtkTWdoY3kybUl5Rmg4VzVaTjRSRm1PRnlLYVp3aUxlVDJHVkpjeTVwQnJndUNpTUsydHZ5RHdCWWJJV2VqT2tTTVFCa2VRT1JKcTBSTkNVRElETm9uZHh1R3BQUW1ScUlYUGhpUEVDdUtNcGRNa2JJTFotU0VuTHh5anFPSk1ac2oxalJUWUlBQSAqL1xuICBpZDogXCJkb2N1bWVudC1tdXRhdG9yXCIsXG4gIGNvbnRleHQ6ICh7IGlucHV0IH0pID0+ICh7XG4gICAgY2xpZW50OiBpbnB1dC5jbGllbnQud2l0aENvbmZpZyh7IGFsbG93UmVjb25maWd1cmU6ICExIH0pLFxuICAgIHNoYXJlZExpc3RlbmVyOiBpbnB1dC5zaGFyZWRMaXN0ZW5lcixcbiAgICBpZDogaW5wdXQuaWQsXG4gICAgcmVtb3RlOiB2b2lkIDAsXG4gICAgbG9jYWw6IHZvaWQgMCxcbiAgICBtdXRhdGlvbkV2ZW50czogW10sXG4gICAgc3RhZ2VkQ2hhbmdlczogW10sXG4gICAgc3Rhc2hlZENoYW5nZXM6IFtdLFxuICAgIGVycm9yOiB2b2lkIDAsXG4gICAgZmV0Y2hSZW1vdGVTbmFwc2hvdEF0dGVtcHRzOiAwLFxuICAgIHN1Ym1pdFRyYW5zYWN0aW9uc0F0dGVtcHRzOiAwLFxuICAgIGNhY2hlOiBpbnB1dC5jYWNoZVxuICB9KSxcbiAgLy8gQXV0byBzdGFydCB0aGUgY29ubmVjdGlvbiBieSBkZWZhdWx0XG4gIGVudHJ5OiBbXCJjb25uZWN0IHRvIHNlcnZlci1zZW50IGV2ZW50c1wiXSxcbiAgb246IHtcbiAgICBtdXRhdGU6IHtcbiAgICAgIGFjdGlvbnM6IFtcInJlYmFzZSBsb2NhbCBzbmFwc2hvdFwiLCBcInN0YWdlIG11dGF0aW9uXCJdXG4gICAgfVxuICB9LFxuICBpbml0aWFsOiBcImRpc2Nvbm5lY3RlZFwiLFxuICBzdGF0ZXM6IHtcbiAgICBkaXNjb25uZWN0ZWQ6IHtcbiAgICAgIG9uOiB7XG4gICAgICAgIGNvbm5lY3Q6IHtcbiAgICAgICAgICB0YXJnZXQ6IFwiY29ubmVjdGluZ1wiLFxuICAgICAgICAgIGFjdGlvbnM6IFtcImxpc3RlbiB0byBzZXJ2ZXItc2VudCBldmVudHNcIl1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgY29ubmVjdGluZzoge1xuICAgICAgb246IHtcbiAgICAgICAgd2VsY29tZTogXCJjb25uZWN0ZWRcIixcbiAgICAgICAgcmVjb25uZWN0OiBcInJlY29ubmVjdGluZ1wiLFxuICAgICAgICBlcnJvcjogXCJjb25uZWN0RmFpbHVyZVwiXG4gICAgICB9LFxuICAgICAgdGFnczogW1wiYnVzeVwiXVxuICAgIH0sXG4gICAgY29ubmVjdEZhaWx1cmU6IHtcbiAgICAgIG9uOiB7XG4gICAgICAgIGNvbm5lY3Q6IHtcbiAgICAgICAgICB0YXJnZXQ6IFwiY29ubmVjdGluZ1wiLFxuICAgICAgICAgIGFjdGlvbnM6IFtcImxpc3RlbiB0byBzZXJ2ZXItc2VudCBldmVudHNcIl1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGVudHJ5OiBbXG4gICAgICAgIFwic3RvcCBsaXN0ZW5pbmcgdG8gc2VydmVyLXNlbnQgZXZlbnRzXCIsXG4gICAgICAgIFwiYXNzaWduIGVycm9yIHRvIGNvbnRleHRcIlxuICAgICAgXSxcbiAgICAgIGV4aXQ6IFtcImNsZWFyIGVycm9yIGZyb20gY29udGV4dFwiXSxcbiAgICAgIHRhZ3M6IFtcImVycm9yXCJdXG4gICAgfSxcbiAgICByZWNvbm5lY3Rpbmc6IHtcbiAgICAgIG9uOiB7XG4gICAgICAgIHdlbGNvbWU6IHtcbiAgICAgICAgICB0YXJnZXQ6IFwiY29ubmVjdGVkXCJcbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICB0YXJnZXQ6IFwiY29ubmVjdEZhaWx1cmVcIlxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdGFnczogW1wiYnVzeVwiLCBcImVycm9yXCJdXG4gICAgfSxcbiAgICBjb25uZWN0ZWQ6IHtcbiAgICAgIG9uOiB7XG4gICAgICAgIG11dGF0aW9uOiB7XG4gICAgICAgICAgYWN0aW9uczogW1wiYnVmZmVyIHJlbW90ZSBtdXRhdGlvbiBldmVudHNcIl1cbiAgICAgICAgfSxcbiAgICAgICAgcmVjb25uZWN0OiBcInJlY29ubmVjdGluZ1wiXG4gICAgICB9LFxuICAgICAgZW50cnk6IFtcImNsZWFyIGVycm9yIGZyb20gY29udGV4dFwiXSxcbiAgICAgIGluaXRpYWw6IFwibG9hZGluZ1wiLFxuICAgICAgc3RhdGVzOiB7XG4gICAgICAgIGxvYWRpbmc6IHtcbiAgICAgICAgICBpbnZva2U6IHtcbiAgICAgICAgICAgIHNyYzogXCJmZXRjaCByZW1vdGUgc25hcHNob3RcIixcbiAgICAgICAgICAgIGlkOiBcImdldERvY3VtZW50XCIsXG4gICAgICAgICAgICBpbnB1dDogKHsgY29udGV4dCB9KSA9PiAoe1xuICAgICAgICAgICAgICBjbGllbnQ6IGNvbnRleHQuY2xpZW50LFxuICAgICAgICAgICAgICBpZDogY29udGV4dC5pZFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBvbkVycm9yOiB7XG4gICAgICAgICAgICAgIHRhcmdldDogXCJsb2FkRmFpbHVyZVwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25Eb25lOiB7XG4gICAgICAgICAgICAgIHRhcmdldDogXCJsb2FkZWRcIixcbiAgICAgICAgICAgICAgYWN0aW9uczogW1xuICAgICAgICAgICAgICAgIFwicmViYXNlIGZldGNoZWQgcmVtb3RlIHNuYXBzaG90XCIsXG4gICAgICAgICAgICAgICAgXCJyZXNldCBmZXRjaCBhdHRlbXB0c1wiXG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHRhZ3M6IFtcImJ1c3lcIl1cbiAgICAgICAgfSxcbiAgICAgICAgbG9hZGVkOiB7XG4gICAgICAgICAgZW50cnk6IFtcInNlbmQgc3luYyBldmVudCB0byBwYXJlbnRcIl0sXG4gICAgICAgICAgb246IHtcbiAgICAgICAgICAgIG11dGF0aW9uOiB7XG4gICAgICAgICAgICAgIGFjdGlvbnM6IFtcImFwcGx5IG1lbmRvemEgcGF0Y2hcIiwgXCJzZW5kIG11dGF0aW9uIGV2ZW50IHRvIHBhcmVudFwiXVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgaW5pdGlhbDogXCJwcmlzdGluZVwiLFxuICAgICAgICAgIHN0YXRlczoge1xuICAgICAgICAgICAgcHJpc3RpbmU6IHtcbiAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICBtdXRhdGU6IHtcbiAgICAgICAgICAgICAgICAgIGFjdGlvbnM6IFtcInJlYmFzZSBsb2NhbCBzbmFwc2hvdFwiLCBcInN0YWdlIG11dGF0aW9uXCJdLFxuICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBcImRpcnR5XCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHRhZ3M6IFtcInJlYWR5XCJdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGlydHk6IHtcbiAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICBzdWJtaXQ6IFwic3VibWl0dGluZ1wiXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHRhZ3M6IFtcInJlYWR5XCJdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VibWl0dGluZzoge1xuICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgIG11dGF0ZToge1xuICAgICAgICAgICAgICAgICAgYWN0aW9uczogW1wicmViYXNlIGxvY2FsIHNuYXBzaG90XCIsIFwic3Rhc2ggbXV0YXRpb25cIl1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGludm9rZToge1xuICAgICAgICAgICAgICAgIHNyYzogXCJzdWJtaXQgbXV0YXRpb25zIGFzIHRyYW5zYWN0aW9uc1wiLFxuICAgICAgICAgICAgICAgIGlkOiBcInN1Ym1pdFRyYW5zYWN0aW9uc1wiLFxuICAgICAgICAgICAgICAgIGlucHV0OiAoeyBjb250ZXh0IH0pID0+IHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHJlbW90ZURhdGFzZXQgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlbW90ZURhdGFzZXQuc2V0KGNvbnRleHQuaWQsIGNvbnRleHQucmVtb3RlKSwge1xuICAgICAgICAgICAgICAgICAgICBjbGllbnQ6IGNvbnRleHQuY2xpZW50LFxuICAgICAgICAgICAgICAgICAgICB0cmFuc2FjdGlvbnM6IHRvVHJhbnNhY3Rpb25zKFxuICAgICAgICAgICAgICAgICAgICAgIC8vIFNxdWFzaGluZyBETVAgc3RyaW5ncyBpcyB0aGUgbGFzdCB0aGluZyB3ZSBkbyBiZWZvcmUgc3VibWl0dGluZ1xuICAgICAgICAgICAgICAgICAgICAgIHNxdWFzaERNUFN0cmluZ3MoXG4gICAgICAgICAgICAgICAgICAgICAgICByZW1vdGVEYXRhc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgc3F1YXNoTXV0YXRpb25Hcm91cHMoY29udGV4dC5zdGFnZWRDaGFuZ2VzKVxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uRXJyb3I6IHtcbiAgICAgICAgICAgICAgICAgIHRhcmdldDogXCJzdWJtaXRGYWlsdXJlXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uRG9uZToge1xuICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBcInByaXN0aW5lXCIsXG4gICAgICAgICAgICAgICAgICBhY3Rpb25zOiBbXG4gICAgICAgICAgICAgICAgICAgIFwicmVzdG9yZSBzdGFzaGVkIGNoYW5nZXNcIixcbiAgICAgICAgICAgICAgICAgICAgXCJyZXNldCBzdWJtaXQgYXR0ZW1wdHNcIixcbiAgICAgICAgICAgICAgICAgICAgXCJzZW5kIHByaXN0aW5lIGV2ZW50IHRvIHBhcmVudFwiXG4gICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICogJ2J1c3knIG1lYW5zIHdlIHNob3VsZCBzaG93IGEgc3Bpbm5lciwgJ3JlYWR5JyBtZWFucyB3ZSBjYW4gc3RpbGwgYWNjZXB0IG11dGF0aW9ucywgdGhleSdsbCBiZSBhcHBsaWVkIG9wdGltaXN0aWNhbGx5IHJpZ2h0IGF3YXksIGFuZCBxdWV1ZWQgZm9yIHN1Ym1pc3Npb25zIGFmdGVyIHRoZSBjdXJyZW50IHN1Ym1pc3Npb24gc2V0dGxlc1xuICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgdGFnczogW1wiYnVzeVwiLCBcInJlYWR5XCJdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VibWl0RmFpbHVyZToge1xuICAgICAgICAgICAgICBleGl0OiBbXCJjbGVhciBlcnJvciBmcm9tIGNvbnRleHRcIl0sXG4gICAgICAgICAgICAgIGFmdGVyOiB7XG4gICAgICAgICAgICAgICAgc3VibWl0VHJhbnNhY3Rpb25zVGltZW91dDoge1xuICAgICAgICAgICAgICAgICAgYWN0aW9uczogW1wiaW5jcmVtZW50IHN1Ym1pdCBhdHRlbXB0c1wiXSxcbiAgICAgICAgICAgICAgICAgIHRhcmdldDogXCJzdWJtaXR0aW5nXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgcmV0cnk6IFwic3VibWl0dGluZ1wiXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgKiBIb3cgY2FuIGl0IGJlIGJvdGggYHJlYWR5YCBhbmQgYGVycm9yYD8gYHJlYWR5YCBtZWFucyBpdCBjYW4gcmVjZWl2ZSBtdXRhdGlvbnMsIG9wdGltaXN0aWNhbGx5IGFwcGx5IHRoZW0sIGFuZCBxdWV1ZSB0aGVtIGZvciBzdWJtaXNzaW9uLiBgZXJyb3JgIG1lYW5zIGl0IGZhaWxlZCB0byBzdWJtaXQgcHJldmlvdXNseSBhcHBsaWVkIG11dGF0aW9ucy5cbiAgICAgICAgICAgICAgICogSXQncyBjb21wbGV0ZWx5IGZpbmUgdG8ga2VlcCBxdWV1ZWluZyB1cCBtb3JlIG11dGF0aW9ucyBhbmQgYXBwbHlpbmcgdGhlbSBvcHRpbWlzdGljYWxseSwgd2hpbGUgc2hvd2luZyBVSSB0aGF0IG5vdGlmaWVzIHRoYXQgbXV0YXRpb25zIGRpZG4ndCBzdWJtaXQsIGFuZCBzaG93IGEgY291bnQgZG93biB1bnRpbCB0aGUgbmV4dCBhdXRvbWF0aWMgcmV0cnkuXG4gICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICB0YWdzOiBbXCJlcnJvclwiLCBcInJlYWR5XCJdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBsb2FkRmFpbHVyZToge1xuICAgICAgICAgIGV4aXQ6IFtcImNsZWFyIGVycm9yIGZyb20gY29udGV4dFwiXSxcbiAgICAgICAgICBhZnRlcjoge1xuICAgICAgICAgICAgZmV0Y2hSZW1vdGVTbmFwc2hvdFRpbWVvdXQ6IHtcbiAgICAgICAgICAgICAgYWN0aW9uczogW1wiaW5jcmVtZW50IGZldGNoIGF0dGVtcHRzXCJdLFxuICAgICAgICAgICAgICB0YXJnZXQ6IFwibG9hZGluZ1wiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgcmV0cnk6IFwibG9hZGluZ1wiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB0YWdzOiBbXCJlcnJvclwiXVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59KTtcbmZ1bmN0aW9uIGFwcGx5TWVuZG96YVBhdGNoKGRvY3VtZW50LCBwYXRjaCwgbmV4dFJldmlzaW9uKSB7XG4gIGNvbnN0IG5leHQgPSBhcHBseVBhdGNoKG9taXRSZXYoZG9jdW1lbnQpLCBwYXRjaCk7XG4gIHJldHVybiBuZXh0ID8gT2JqZWN0LmFzc2lnbihuZXh0LCB7IF9yZXY6IG5leHRSZXZpc2lvbiB9KSA6IG51bGw7XG59XG5mdW5jdGlvbiBvbWl0UmV2KGRvY3VtZW50KSB7XG4gIGlmICghZG9jdW1lbnQpXG4gICAgcmV0dXJuIG51bGw7XG4gIGNvbnN0IHsgX3JldiwgLi4uZG9jIH0gPSBkb2N1bWVudDtcbiAgcmV0dXJuIGRvYztcbn1cbmV4cG9ydCB7XG4gIGFwcGx5TXV0YXRpb25zLFxuICBjb21taXQsXG4gIGNyZWF0ZVNoYXJlZExpc3RlbmVyLFxuICBkb2N1bWVudE11dGF0b3JNYWNoaW5lLFxuICByZWJhc2UsXG4gIHNxdWFzaERNUFN0cmluZ3MsXG4gIHNxdWFzaE11dGF0aW9uR3JvdXBzLFxuICB0b1RyYW5zYWN0aW9uc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV91bnN0YWJsZV9tYWNoaW5lLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_unstable_machine.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompactEncoder: () => (/* binding */ index$1),\n/* harmony export */   CompactFormatter: () => (/* binding */ compact),\n/* harmony export */   SanityEncoder: () => (/* binding */ index),\n/* harmony export */   append: () => (/* binding */ append),\n/* harmony export */   assign: () => (/* binding */ assign),\n/* harmony export */   at: () => (/* binding */ at),\n/* harmony export */   autoKeys: () => (/* binding */ autoKeys),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createIfNotExists: () => (/* binding */ createIfNotExists),\n/* harmony export */   createOrReplace: () => (/* binding */ createOrReplace),\n/* harmony export */   dec: () => (/* binding */ dec),\n/* harmony export */   del: () => (/* binding */ del),\n/* harmony export */   delete_: () => (/* binding */ delete_),\n/* harmony export */   destroy: () => (/* binding */ destroy),\n/* harmony export */   diffMatchPatch: () => (/* binding */ diffMatchPatch),\n/* harmony export */   inc: () => (/* binding */ inc),\n/* harmony export */   insert: () => (/* binding */ insert),\n/* harmony export */   insertAfter: () => (/* binding */ insertAfter),\n/* harmony export */   insertBefore: () => (/* binding */ insertBefore),\n/* harmony export */   patch: () => (/* binding */ patch),\n/* harmony export */   prepend: () => (/* binding */ prepend),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   replace: () => (/* binding */ replace),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   setIfMissing: () => (/* binding */ setIfMissing),\n/* harmony export */   truncate: () => (/* binding */ truncate),\n/* harmony export */   unassign: () => (/* binding */ unassign),\n/* harmony export */   unset: () => (/* binding */ unset),\n/* harmony export */   upsert: () => (/* binding */ upsert)\n/* harmony export */ });\n/* harmony import */ var _chunks_es_parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_chunks-es/parse.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/parse.js\");\n/* harmony import */ var _chunks_es_stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_chunks-es/stringify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n/* harmony import */ var _chunks_es_decode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_chunks-es/decode.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/decode.js\");\n/* harmony import */ var _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_chunks-es/encode.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/encode.js\");\n/* harmony import */ var _chunks_es_isObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_chunks-es/isObject.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js\");\n/* harmony import */ var _chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_chunks-es/arrify.js */ \"(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js\");\n\n\n\n\n\n\nfunction decode(mutations) {\n  return mutations.map(decodeMutation);\n}\nfunction decodeMutation(mutation) {\n  const [type] = mutation;\n  if (type === \"delete\") {\n    const [, id] = mutation;\n    return { id, type };\n  } else if (type === \"create\") {\n    const [, document] = mutation;\n    return { type, document };\n  } else if (type === \"createIfNotExists\") {\n    const [, document] = mutation;\n    return { type, document };\n  } else if (type === \"createOrReplace\") {\n    const [, document] = mutation;\n    return { type, document };\n  } else if (type === \"patch\")\n    return decodePatchMutation(mutation);\n  throw new Error(`Unrecognized mutation: ${JSON.stringify(mutation)}`);\n}\nfunction decodePatchMutation(mutation) {\n  const [, type, id, serializedPath, , revisionId] = mutation, path = (0,_chunks_es_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(serializedPath);\n  if (type === \"dec\" || type === \"inc\") {\n    const [, , , , [amount]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"inc\", amount } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"unset\")\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"unset\" } }],\n      ...createOpts(revisionId)\n    };\n  if (type === \"insert\") {\n    const [, , , , [position, ref, items]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [\n        {\n          path,\n          op: {\n            type: \"insert\",\n            position,\n            items,\n            referenceItem: typeof ref == \"string\" ? { _key: ref } : ref\n          }\n        }\n      ],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"set\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"set\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"setIfMissing\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"setIfMissing\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"diffMatchPatch\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"diffMatchPatch\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"truncate\") {\n    const [, , , , [startIndex, endIndex]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"truncate\", startIndex, endIndex } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"assign\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"assign\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"replace\") {\n    const [, , , , [ref, items]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [\n        { path, op: { type: \"replace\", items, referenceItem: decodeItemRef(ref) } }\n      ],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"upsert\") {\n    const [, , , , [position, referenceItem, items]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [\n        {\n          path,\n          op: {\n            type: \"upsert\",\n            items,\n            referenceItem: decodeItemRef(referenceItem),\n            position\n          }\n        }\n      ],\n      ...createOpts(revisionId)\n    };\n  }\n  throw new Error(`Invalid mutation type: ${type}`);\n}\nfunction decodeItemRef(ref) {\n  return typeof ref == \"string\" ? { _key: ref } : ref;\n}\nfunction createOpts(revisionId) {\n  return revisionId ? { options: { ifRevision: revisionId } } : null;\n}\nfunction encode(mutations) {\n  return mutations.flatMap((m) => encodeMutation$1(m));\n}\nfunction encodeItemRef$1(ref) {\n  return typeof ref == \"number\" ? ref : ref._key;\n}\nfunction encodeMutation$1(mutation) {\n  if (mutation.type === \"create\" || mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return [[mutation.type, mutation.document]];\n  if (mutation.type === \"delete\")\n    return [[\"delete\", mutation.id]];\n  if (mutation.type === \"patch\")\n    return mutation.patches.map(\n      (patch2) => maybeAddRevision(\n        mutation.options?.ifRevision,\n        encodePatchMutation(mutation.id, patch2)\n      )\n    );\n  throw new Error(`Invalid mutation type: ${mutation.type}`);\n}\nfunction encodePatchMutation(id, patch2) {\n  const { op } = patch2, path = (0,_chunks_es_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(patch2.path);\n  if (op.type === \"unset\")\n    return [\"patch\", \"unset\", id, path, []];\n  if (op.type === \"diffMatchPatch\")\n    return [\"patch\", \"diffMatchPatch\", id, path, [op.value]];\n  if (op.type === \"inc\" || op.type === \"dec\")\n    return [\"patch\", op.type, id, path, [op.amount]];\n  if (op.type === \"set\")\n    return [\"patch\", op.type, id, path, [op.value]];\n  if (op.type === \"setIfMissing\")\n    return [\"patch\", op.type, id, path, [op.value]];\n  if (op.type === \"insert\")\n    return [\n      \"patch\",\n      \"insert\",\n      id,\n      path,\n      [op.position, encodeItemRef$1(op.referenceItem), op.items]\n    ];\n  if (op.type === \"upsert\")\n    return [\n      \"patch\",\n      \"upsert\",\n      id,\n      path,\n      [op.position, encodeItemRef$1(op.referenceItem), op.items]\n    ];\n  if (op.type === \"assign\")\n    return [\"patch\", \"assign\", id, path, [op.value]];\n  if (op.type === \"unassign\")\n    return [\"patch\", \"assign\", id, path, [op.keys]];\n  if (op.type === \"replace\")\n    return [\n      \"patch\",\n      \"replace\",\n      id,\n      path,\n      [encodeItemRef$1(op.referenceItem), op.items]\n    ];\n  if (op.type === \"truncate\")\n    return [\"patch\", \"truncate\", id, path, [op.startIndex, op.endIndex]];\n  if (op.type === \"remove\")\n    return [\"patch\", \"remove\", id, path, [encodeItemRef$1(op.referenceItem)]];\n  throw new Error(`Invalid operation type: ${op.type}`);\n}\nfunction maybeAddRevision(revision, mut) {\n  const [mutType, patchType, id, path, args] = mut;\n  return revision ? [mutType, patchType, id, path, args, revision] : mut;\n}\nvar index$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  decode,\n  encode\n}), index = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  decode: _chunks_es_decode_js__WEBPACK_IMPORTED_MODULE_2__.decode,\n  decodeAll: _chunks_es_decode_js__WEBPACK_IMPORTED_MODULE_2__.decodeAll,\n  encode: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encode,\n  encodeAll: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encodeAll,\n  encodeMutation: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encodeMutation,\n  encodeTransaction: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encodeTransaction\n});\nfunction format(mutations) {\n  return mutations.flatMap((m) => encodeMutation(m)).join(`\n`);\n}\nfunction encodeItemRef(ref) {\n  return typeof ref == \"number\" ? ref : ref._key;\n}\nfunction encodeMutation(mutation) {\n  if (mutation.type === \"create\" || mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return [mutation.type, \": \", JSON.stringify(mutation.document)].join(\"\");\n  if (mutation.type === \"delete\")\n    return [\"delete \", mutation.id].join(\": \");\n  if (mutation.type === \"patch\") {\n    const ifRevision = mutation.options?.ifRevision;\n    return [\n      \"patch\",\n      \" \",\n      `id=${mutation.id}`,\n      ifRevision ? ` (if revision==${ifRevision})` : \"\",\n      `:\n`,\n      mutation.patches.map((nodePatch) => `  ${formatPatchMutation(nodePatch)}`).join(`\n`)\n    ].join(\"\");\n  }\n  throw new Error(`Invalid mutation type: ${mutation.type}`);\n}\nfunction formatPatchMutation(patch2) {\n  const { op } = patch2, path = (0,_chunks_es_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(patch2.path);\n  if (op.type === \"unset\")\n    return [path, \"unset()\"].join(\": \");\n  if (op.type === \"diffMatchPatch\")\n    return [path, `diffMatchPatch(${op.value})`].join(\": \");\n  if (op.type === \"inc\" || op.type === \"dec\")\n    return [path, `${op.type}(${op.amount})`].join(\": \");\n  if (op.type === \"set\" || op.type === \"setIfMissing\")\n    return [path, `${op.type}(${JSON.stringify(op.value)})`].join(\": \");\n  if (op.type === \"assign\")\n    return [path, `${op.type}(${JSON.stringify(op.value)})`].join(\": \");\n  if (op.type === \"unassign\")\n    return [path, `${op.type}(${JSON.stringify(op.keys)})`].join(\": \");\n  if (op.type === \"insert\" || op.type === \"upsert\")\n    return [\n      path,\n      `${op.type}(${op.position}, ${encodeItemRef(\n        op.referenceItem\n      )}, ${JSON.stringify(op.items)})`\n    ].join(\": \");\n  if (op.type === \"replace\")\n    return [\n      path,\n      `replace(${encodeItemRef(op.referenceItem)}, ${JSON.stringify(\n        op.items\n      )})`\n    ].join(\": \");\n  if (op.type === \"truncate\")\n    return [path, `truncate(${op.startIndex}, ${op.endIndex}`].join(\": \");\n  if (op.type === \"remove\")\n    return [path, `remove(${encodeItemRef(op.referenceItem)})`].join(\": \");\n  throw new Error(`Invalid operation type: ${op.type}`);\n}\nvar compact = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  format\n});\nconst set = (value) => ({ type: \"set\", value }), assign = (value) => ({\n  type: \"assign\",\n  value\n}), unassign = (keys) => ({\n  type: \"unassign\",\n  keys\n}), setIfMissing = (value) => ({\n  type: \"setIfMissing\",\n  value\n}), unset = () => ({ type: \"unset\" }), inc = (amount = 1) => ({\n  type: \"inc\",\n  amount\n}), dec = (amount = 1) => ({\n  type: \"dec\",\n  amount\n}), diffMatchPatch = (value) => ({\n  type: \"diffMatchPatch\",\n  value\n});\nfunction insert(items, position, indexOrReferenceItem) {\n  return {\n    type: \"insert\",\n    referenceItem: indexOrReferenceItem,\n    position,\n    items: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(items)\n  };\n}\nfunction append(items) {\n  return insert(items, \"after\", -1);\n}\nfunction prepend(items) {\n  return insert(items, \"before\", 0);\n}\nfunction insertBefore(items, indexOrReferenceItem) {\n  return insert(items, \"before\", indexOrReferenceItem);\n}\nconst insertAfter = (items, indexOrReferenceItem) => insert(items, \"after\", indexOrReferenceItem);\nfunction truncate(startIndex, endIndex) {\n  return {\n    type: \"truncate\",\n    startIndex,\n    endIndex\n  };\n}\nfunction replace(items, referenceItem) {\n  return {\n    type: \"replace\",\n    referenceItem,\n    items: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(items)\n  };\n}\nfunction remove(referenceItem) {\n  return {\n    type: \"remove\",\n    referenceItem\n  };\n}\nfunction upsert(items, position, referenceItem) {\n  return {\n    type: \"upsert\",\n    items: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(items),\n    referenceItem,\n    position\n  };\n}\nfunction autoKeys(generateKey) {\n  const ensureKeys = createEnsureKeys(generateKey), insert$1 = (position, referenceItem, items) => insert(ensureKeys(items), position, referenceItem), upsert$1 = (items, position, referenceItem) => upsert(ensureKeys(items), position, referenceItem), replace$1 = (items, position, referenceItem) => replace(ensureKeys(items), referenceItem), insertBefore2 = (ref, items) => insert$1(\"before\", ref, items);\n  return { insert: insert$1, upsert: upsert$1, replace: replace$1, insertBefore: insertBefore2, prepend: (items) => insertBefore2(0, items), insertAfter: (ref, items) => insert$1(\"after\", ref, items), append: (items) => insert$1(\"after\", -1, items) };\n}\nfunction hasKey(item) {\n  return \"_key\" in item;\n}\nfunction createEnsureKeys(generateKey) {\n  return (array) => {\n    let didModify = !1;\n    const withKeys = array.map((item) => needsKey(item) ? (didModify = !0, { ...item, _key: generateKey(item) }) : item);\n    return didModify ? withKeys : array;\n  };\n}\nfunction needsKey(arrayItem) {\n  return (0,_chunks_es_isObject_js__WEBPACK_IMPORTED_MODULE_5__.isObject)(arrayItem) && !hasKey(arrayItem);\n}\nfunction create(document) {\n  return { type: \"create\", document };\n}\nfunction patch(id, patches, options) {\n  return {\n    type: \"patch\",\n    id,\n    patches: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(patches),\n    ...options ? { options } : {}\n  };\n}\nfunction at(path, operation) {\n  return {\n    path: typeof path == \"string\" ? (0,_chunks_es_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path) : path,\n    op: operation\n  };\n}\nfunction createIfNotExists(document) {\n  return { type: \"createIfNotExists\", document };\n}\nfunction createOrReplace(document) {\n  return { type: \"createOrReplace\", document };\n}\nfunction delete_(id) {\n  return { type: \"delete\", id };\n}\nconst del = delete_, destroy = delete_;\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/visual-editing/node_modules/@sanity/mutate/dist/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/config.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/config.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataset: () => (/* binding */ dataset),\n/* harmony export */   defaultConfig: () => (/* binding */ defaultConfig),\n/* harmony export */   hasDataset: () => (/* binding */ hasDataset),\n/* harmony export */   initConfig: () => (/* binding */ initConfig),\n/* harmony export */   printCdnPreviewDraftsWarning: () => (/* binding */ printCdnPreviewDraftsWarning),\n/* harmony export */   printNoDefaultExport: () => (/* binding */ printNoDefaultExport),\n/* harmony export */   printPreviewDraftsDeprecationWarning: () => (/* binding */ printPreviewDraftsDeprecationWarning),\n/* harmony export */   requestTag: () => (/* binding */ requestTag),\n/* harmony export */   requireDocumentId: () => (/* binding */ requireDocumentId),\n/* harmony export */   requireDocumentType: () => (/* binding */ requireDocumentType),\n/* harmony export */   resourceConfig: () => (/* binding */ resourceConfig),\n/* harmony export */   resourceGuard: () => (/* binding */ resourceGuard),\n/* harmony export */   validateApiPerspective: () => (/* binding */ validateApiPerspective),\n/* harmony export */   validateAssetType: () => (/* binding */ validateAssetType),\n/* harmony export */   validateDocumentId: () => (/* binding */ validateDocumentId),\n/* harmony export */   validateInsert: () => (/* binding */ validateInsert),\n/* harmony export */   validateObject: () => (/* binding */ validateObject),\n/* harmony export */   validateVersionIdMatch: () => (/* binding */ validateVersionIdMatch)\n/* harmony export */ });\nconst BASE_URL = \"https://www.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nconst VALID_ASSET_TYPES = [\"image\", \"file\"], VALID_INSERT_LOCATIONS = [\"before\", \"after\", \"replace\"], dataset = (name) => {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name))\n    throw new Error(\n      \"Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters\"\n    );\n}, projectId = (id) => {\n  if (!/^[-a-z0-9]+$/i.test(id))\n    throw new Error(\"`projectId` can only contain only a-z, 0-9 and dashes\");\n}, validateAssetType = (type) => {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1)\n    throw new Error(`Invalid asset type: ${type}. Must be one of ${VALID_ASSET_TYPES.join(\", \")}`);\n}, validateObject = (op, val) => {\n  if (val === null || typeof val != \"object\" || Array.isArray(val))\n    throw new Error(`${op}() takes an object of properties`);\n}, validateDocumentId = (op, id) => {\n  if (typeof id != \"string\" || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes(\"..\"))\n    throw new Error(`${op}(): \"${id}\" is not a valid document ID`);\n}, requireDocumentId = (op, doc) => {\n  if (!doc._id)\n    throw new Error(`${op}() requires that the document contains an ID (\"_id\" property)`);\n  validateDocumentId(op, doc._id);\n}, validateDocumentType = (op, type) => {\n  if (typeof type != \"string\")\n    throw new Error(`\\`${op}()\\`: \\`${type}\\` is not a valid document type`);\n}, requireDocumentType = (op, doc) => {\n  if (!doc._type)\n    throw new Error(`\\`${op}()\\` requires that the document contains a type (\\`_type\\` property)`);\n  validateDocumentType(op, doc._type);\n}, validateVersionIdMatch = (builtVersionId, document) => {\n  if (document._id && document._id !== builtVersionId)\n    throw new Error(\n      `The provided document ID (\\`${document._id}\\`) does not match the generated version ID (\\`${builtVersionId}\\`)`\n    );\n}, validateInsert = (at, selector, items) => {\n  const signature = \"insert(at, selector, items)\";\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    const valid = VALID_INSERT_LOCATIONS.map((loc) => `\"${loc}\"`).join(\", \");\n    throw new Error(`${signature} takes an \"at\"-argument which is one of: ${valid}`);\n  }\n  if (typeof selector != \"string\")\n    throw new Error(`${signature} takes a \"selector\"-argument which must be a string`);\n  if (!Array.isArray(items))\n    throw new Error(`${signature} takes an \"items\"-argument which must be an array`);\n}, hasDataset = (config) => {\n  if (!config.dataset)\n    throw new Error(\"`dataset` must be provided to perform queries\");\n  return config.dataset || \"\";\n}, requestTag = (tag) => {\n  if (typeof tag != \"string\" || !/^[a-z0-9._-]{1,75}$/i.test(tag))\n    throw new Error(\n      \"Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.\"\n    );\n  return tag;\n}, resourceConfig = (config) => {\n  if (!config[\"~experimental_resource\"])\n    throw new Error(\"`resource` must be provided to perform resource queries\");\n  const { type, id } = config[\"~experimental_resource\"];\n  switch (type) {\n    case \"dataset\": {\n      if (id.split(\".\").length !== 2)\n        throw new Error('Dataset resource ID must be in the format \"project.dataset\"');\n      return;\n    }\n    case \"dashboard\":\n    case \"media-library\":\n    case \"canvas\":\n      return;\n    default:\n      throw new Error(`Unsupported resource type: ${type.toString()}`);\n  }\n}, resourceGuard = (service, config) => {\n  if (config[\"~experimental_resource\"])\n    throw new Error(`\\`${service}\\` does not support resource-based operations`);\n};\nfunction once(fn) {\n  let didCall = !1, returnValue;\n  return (...args) => (didCall || (returnValue = fn(...args), didCall = !0), returnValue);\n}\nconst createWarningPrinter = (message) => (\n  // eslint-disable-next-line no-console\n  once((...args) => console.warn(message.join(\" \"), ...args))\n), printCdnAndWithCredentialsWarning = createWarningPrinter([\n  \"Because you set `withCredentials` to true, we will override your `useCdn`\",\n  \"setting to be false since (cookie-based) credentials are never set on the CDN\"\n]), printCdnWarning = createWarningPrinter([\n  \"Since you haven't set a value for `useCdn`, we will deliver content using our\",\n  \"global, edge-cached API-CDN. If you wish to have content delivered faster, set\",\n  \"`useCdn: false` to use the Live API. Note: You may incur higher costs using the live API.\"\n]), printCdnPreviewDraftsWarning = createWarningPrinter([\n  \"The Sanity client is configured with the `perspective` set to `drafts` or `previewDrafts`, which doesn't support the API-CDN.\",\n  \"The Live API will be used instead. Set `useCdn: false` in your configuration to hide this warning.\"\n]), printPreviewDraftsDeprecationWarning = createWarningPrinter([\n  \"The `previewDrafts` perspective has been renamed to  `drafts` and will be removed in a future API version\"\n]), printBrowserTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.\",\n  `See ${generateHelpUrl(\n    \"js-client-browser-token\"\n  )} for more information and how to hide this warning.`\n]), printCredentialedTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token, but also provided `withCredentials: true`.\",\n  \"This is no longer supported - only token will be used - remove `withCredentials: true`.\"\n]), printNoApiVersionSpecifiedWarning = createWarningPrinter([\n  \"Using the Sanity client without specifying an API version is deprecated.\",\n  `See ${generateHelpUrl(\"js-client-api-version\")}`\n]), printNoDefaultExport = createWarningPrinter([\n  \"The default export of @sanity/client has been deprecated. Use the named export `createClient` instead.\"\n]), defaultCdnHost = \"apicdn.sanity.io\", defaultConfig = {\n  apiHost: \"https://api.sanity.io\",\n  apiVersion: \"1\",\n  useProjectHostname: !0,\n  stega: { enabled: !1 }\n}, LOCALHOSTS = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"], isLocal = (host) => LOCALHOSTS.indexOf(host) !== -1;\nfunction validateApiVersion(apiVersion) {\n  if (apiVersion === \"1\" || apiVersion === \"X\")\n    return;\n  const apiDate = new Date(apiVersion);\n  if (!(/^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0))\n    throw new Error(\"Invalid API version string, expected `1` or date in format `YYYY-MM-DD`\");\n}\nfunction validateApiPerspective(perspective) {\n  if (Array.isArray(perspective) && perspective.length > 1 && perspective.includes(\"raw\"))\n    throw new TypeError(\n      'Invalid API perspective value: \"raw\". The raw-perspective can not be combined with other perspectives'\n    );\n}\nconst initConfig = (config, prevConfig) => {\n  const specifiedConfig = {\n    ...prevConfig,\n    ...config,\n    stega: {\n      ...typeof prevConfig.stega == \"boolean\" ? { enabled: prevConfig.stega } : prevConfig.stega || defaultConfig.stega,\n      ...typeof config.stega == \"boolean\" ? { enabled: config.stega } : config.stega || {}\n    }\n  };\n  specifiedConfig.apiVersion || printNoApiVersionSpecifiedWarning();\n  const newConfig = {\n    ...defaultConfig,\n    ...specifiedConfig\n  }, projectBased = newConfig.useProjectHostname && !newConfig[\"~experimental_resource\"];\n  if (typeof Promise > \"u\") {\n    const helpUrl = generateHelpUrl(\"js-client-promise-polyfill\");\n    throw new Error(`No native Promise-implementation found, polyfill needed - see ${helpUrl}`);\n  }\n  if (projectBased && !newConfig.projectId)\n    throw new Error(\"Configuration must contain `projectId`\");\n  if (newConfig[\"~experimental_resource\"] && resourceConfig(newConfig), typeof newConfig.perspective < \"u\" && validateApiPerspective(newConfig.perspective), \"encodeSourceMap\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMap' is not supported in '@sanity/client'. Did you mean 'stega.enabled'?\"\n    );\n  if (\"encodeSourceMapAtPath\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMapAtPath' is not supported in '@sanity/client'. Did you mean 'stega.filter'?\"\n    );\n  if (typeof newConfig.stega.enabled != \"boolean\")\n    throw new Error(`stega.enabled must be a boolean, received ${newConfig.stega.enabled}`);\n  if (newConfig.stega.enabled && newConfig.stega.studioUrl === void 0)\n    throw new Error(\"stega.studioUrl must be defined when stega.enabled is true\");\n  if (newConfig.stega.enabled && typeof newConfig.stega.studioUrl != \"string\" && typeof newConfig.stega.studioUrl != \"function\")\n    throw new Error(\n      `stega.studioUrl must be a string or a function, received ${newConfig.stega.studioUrl}`\n    );\n  const isBrowser = typeof window < \"u\" && window.location && window.location.hostname, isLocalhost = isBrowser && isLocal(window.location.hostname), hasToken = !!newConfig.token;\n  newConfig.withCredentials && hasToken && (printCredentialedTokenWarning(), newConfig.withCredentials = !1), isBrowser && isLocalhost && hasToken && newConfig.ignoreBrowserTokenWarning !== !0 ? printBrowserTokenWarning() : typeof newConfig.useCdn > \"u\" && printCdnWarning(), projectBased && projectId(newConfig.projectId), newConfig.dataset && dataset(newConfig.dataset), \"requestTagPrefix\" in newConfig && (newConfig.requestTagPrefix = newConfig.requestTagPrefix ? requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, \"\") : void 0), newConfig.apiVersion = `${newConfig.apiVersion}`.replace(/^v/, \"\"), newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost, newConfig.useCdn === !0 && newConfig.withCredentials && printCdnAndWithCredentialsWarning(), newConfig.useCdn = newConfig.useCdn !== !1 && !newConfig.withCredentials, validateApiVersion(newConfig.apiVersion);\n  const hostParts = newConfig.apiHost.split(\"://\", 2), protocol = hostParts[0], host = hostParts[1], cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n  return projectBased ? (newConfig.url = `${protocol}://${newConfig.projectId}.${host}/v${newConfig.apiVersion}`, newConfig.cdnUrl = `${protocol}://${newConfig.projectId}.${cdnHost}/v${newConfig.apiVersion}`) : (newConfig.url = `${newConfig.apiHost}/v${newConfig.apiVersion}`, newConfig.cdnUrl = newConfig.url), newConfig;\n};\n\n//# sourceMappingURL=config.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/config.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DRAFTS_FOLDER: () => (/* binding */ DRAFTS_FOLDER),\n/* harmony export */   VERSION_FOLDER: () => (/* binding */ VERSION_FOLDER),\n/* harmony export */   createEditUrl: () => (/* binding */ createEditUrl),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   getDraftId: () => (/* binding */ getDraftId),\n/* harmony export */   getPublishedId: () => (/* binding */ getPublishedId),\n/* harmony export */   getVersionFromId: () => (/* binding */ getVersionFromId),\n/* harmony export */   getVersionId: () => (/* binding */ getVersionId),\n/* harmony export */   isDraftId: () => (/* binding */ isDraftId),\n/* harmony export */   isPublishedId: () => (/* binding */ isPublishedId),\n/* harmony export */   isVersionId: () => (/* binding */ isVersionId),\n/* harmony export */   jsonPath: () => (/* binding */ jsonPath),\n/* harmony export */   jsonPathToStudioPath: () => (/* binding */ jsonPathToStudioPath),\n/* harmony export */   parseJsonPath: () => (/* binding */ parseJsonPath),\n/* harmony export */   reKeySegment: () => (/* binding */ reKeySegment),\n/* harmony export */   resolveEditInfo: () => (/* binding */ resolveEditInfo),\n/* harmony export */   resolveMapping: () => (/* binding */ resolveMapping),\n/* harmony export */   resolveStudioBaseRoute: () => (/* binding */ resolveStudioBaseRoute),\n/* harmony export */   studioPath: () => (/* binding */ studioPath),\n/* harmony export */   studioPathToJsonPath: () => (/* binding */ studioPathToJsonPath),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   walkMap: () => (/* binding */ walkMap)\n/* harmony export */ });\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, reIndexTuple = /^\\d*:\\d*$/;\nfunction isIndexSegment(segment) {\n  return typeof segment == \"number\" || typeof segment == \"string\" && /^\\[\\d+\\]$/.test(segment);\n}\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction isIndexTuple(segment) {\n  if (typeof segment == \"string\" && reIndexTuple.test(segment))\n    return !0;\n  if (!Array.isArray(segment) || segment.length !== 2)\n    return !1;\n  const [from, to] = segment;\n  return (typeof from == \"number\" || from === \"\") && (typeof to == \"number\" || to === \"\");\n}\nfunction get(obj, path, defaultVal) {\n  const select = typeof path == \"string\" ? fromString(path) : path;\n  if (!Array.isArray(select))\n    throw new Error(\"Path must be an array or a string\");\n  let acc = obj;\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i];\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc[segment];\n    }\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc.find((item) => item._key === segment._key);\n    }\n    if (typeof segment == \"string\" && (acc = typeof acc == \"object\" && acc !== null ? acc[segment] : void 0), typeof acc > \"u\")\n      return defaultVal;\n  }\n  return acc;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nfunction fromString(path) {\n  if (typeof path != \"string\")\n    throw new Error(\"Path is not a string\");\n  const segments = path.match(rePropName);\n  if (!segments)\n    throw new Error(\"Invalid path string\");\n  return segments.map(parsePathSegment);\n}\nfunction parsePathSegment(segment) {\n  return isIndexSegment(segment) ? parseIndexSegment(segment) : isKeySegment(segment) ? parseKeySegment(segment) : isIndexTuple(segment) ? parseIndexTupleSegment(segment) : segment;\n}\nfunction parseIndexSegment(segment) {\n  return Number(segment.replace(/[^\\d]/g, \"\"));\n}\nfunction parseKeySegment(segment) {\n  return { _key: segment.match(reKeySegment)[1] };\n}\nfunction parseIndexTupleSegment(segment) {\n  const [from, to] = segment.split(\":\").map((seg) => seg === \"\" ? seg : Number(seg));\n  return [from, to];\n}\nvar studioPath = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  fromString,\n  get,\n  isIndexSegment,\n  isIndexTuple,\n  isKeySegment,\n  reKeySegment,\n  toString\n});\nconst DRAFTS_FOLDER = \"drafts\", VERSION_FOLDER = \"versions\", PATH_SEPARATOR = \".\", DRAFTS_PREFIX = `${DRAFTS_FOLDER}${PATH_SEPARATOR}`, VERSION_PREFIX = `${VERSION_FOLDER}${PATH_SEPARATOR}`;\nfunction isDraftId(id) {\n  return id.startsWith(DRAFTS_PREFIX);\n}\nfunction isVersionId(id) {\n  return id.startsWith(VERSION_PREFIX);\n}\nfunction isPublishedId(id) {\n  return !isDraftId(id) && !isVersionId(id);\n}\nfunction getDraftId(id) {\n  if (isVersionId(id)) {\n    const publishedId = getPublishedId(id);\n    return DRAFTS_PREFIX + publishedId;\n  }\n  return isDraftId(id) ? id : DRAFTS_PREFIX + id;\n}\nfunction getVersionId(id, version) {\n  if (version === \"drafts\" || version === \"published\")\n    throw new Error('Version can not be \"published\" or \"drafts\"');\n  return `${VERSION_PREFIX}${version}${PATH_SEPARATOR}${getPublishedId(id)}`;\n}\nfunction getVersionFromId(id) {\n  if (!isVersionId(id)) return;\n  const [_versionPrefix, versionId, ..._publishedId] = id.split(PATH_SEPARATOR);\n  return versionId;\n}\nfunction getPublishedId(id) {\n  return isVersionId(id) ? id.split(PATH_SEPARATOR).slice(2).join(PATH_SEPARATOR) : isDraftId(id) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction studioPathToJsonPath(path) {\n  return (typeof path == \"string\" ? fromString(path) : path).map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (Array.isArray(segment))\n      throw new Error(`IndexTuple segments aren't supported:${JSON.stringify(segment)}`);\n    if (isContentSourceMapParsedPathKeyedSegment(segment))\n      return segment;\n    if (segment._key)\n      return { _key: segment._key, _index: -1 };\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction isContentSourceMapParsedPathKeyedSegment(segment) {\n  return typeof segment == \"object\" && \"_key\" in segment && \"_index\" in segment;\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  if (workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), isPublishedId(_id))\n    searchParams.set(\"perspective\", \"published\");\n  else if (isVersionId(_id)) {\n    const versionId = getVersionFromId(_id);\n    searchParams.set(\"perspective\", versionId);\n  }\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveEditInfo(options) {\n  const { resultSourceMap: csm, resultPath } = options, { mapping, pathSuffix } = resolveMapping(resultPath, csm) || {};\n  if (!mapping || mapping.source.type === \"literal\" || mapping.source.type === \"unknown\")\n    return;\n  const sourceDoc = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path];\n  if (sourceDoc && sourcePath) {\n    const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n      typeof options.studioUrl == \"function\" ? options.studioUrl(sourceDoc) : options.studioUrl\n    );\n    if (!baseUrl) return;\n    const { _id, _type, _projectId, _dataset } = sourceDoc;\n    return {\n      baseUrl,\n      workspace,\n      tool,\n      id: _id,\n      type: _type,\n      path: parseJsonPath(sourcePath + pathSuffix),\n      projectId: _projectId,\n      dataset: _dataset\n    };\n  }\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\n\n//# sourceMappingURL=resolveEditInfo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DRAFTS_FOLDER: () => (/* binding */ DRAFTS_FOLDER),\n/* harmony export */   VERSION_FOLDER: () => (/* binding */ VERSION_FOLDER),\n/* harmony export */   createEditUrl: () => (/* binding */ createEditUrl),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   getDraftId: () => (/* binding */ getDraftId),\n/* harmony export */   getPublishedId: () => (/* binding */ getPublishedId),\n/* harmony export */   getVersionFromId: () => (/* binding */ getVersionFromId),\n/* harmony export */   getVersionId: () => (/* binding */ getVersionId),\n/* harmony export */   isDraftId: () => (/* binding */ isDraftId),\n/* harmony export */   isPublishedId: () => (/* binding */ isPublishedId),\n/* harmony export */   isVersionId: () => (/* binding */ isVersionId),\n/* harmony export */   jsonPath: () => (/* binding */ jsonPath),\n/* harmony export */   jsonPathToStudioPath: () => (/* binding */ jsonPathToStudioPath),\n/* harmony export */   parseJsonPath: () => (/* binding */ parseJsonPath),\n/* harmony export */   reKeySegment: () => (/* binding */ reKeySegment),\n/* harmony export */   resolveEditInfo: () => (/* binding */ resolveEditInfo),\n/* harmony export */   resolveMapping: () => (/* binding */ resolveMapping),\n/* harmony export */   resolveStudioBaseRoute: () => (/* binding */ resolveStudioBaseRoute),\n/* harmony export */   studioPath: () => (/* binding */ studioPath),\n/* harmony export */   studioPathToJsonPath: () => (/* binding */ studioPathToJsonPath),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   walkMap: () => (/* binding */ walkMap)\n/* harmony export */ });\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, reIndexTuple = /^\\d*:\\d*$/;\nfunction isIndexSegment(segment) {\n  return typeof segment == \"number\" || typeof segment == \"string\" && /^\\[\\d+\\]$/.test(segment);\n}\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction isIndexTuple(segment) {\n  if (typeof segment == \"string\" && reIndexTuple.test(segment))\n    return !0;\n  if (!Array.isArray(segment) || segment.length !== 2)\n    return !1;\n  const [from, to] = segment;\n  return (typeof from == \"number\" || from === \"\") && (typeof to == \"number\" || to === \"\");\n}\nfunction get(obj, path, defaultVal) {\n  const select = typeof path == \"string\" ? fromString(path) : path;\n  if (!Array.isArray(select))\n    throw new Error(\"Path must be an array or a string\");\n  let acc = obj;\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i];\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc[segment];\n    }\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc.find((item) => item._key === segment._key);\n    }\n    if (typeof segment == \"string\" && (acc = typeof acc == \"object\" && acc !== null ? acc[segment] : void 0), typeof acc > \"u\")\n      return defaultVal;\n  }\n  return acc;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nfunction fromString(path) {\n  if (typeof path != \"string\")\n    throw new Error(\"Path is not a string\");\n  const segments = path.match(rePropName);\n  if (!segments)\n    throw new Error(\"Invalid path string\");\n  return segments.map(parsePathSegment);\n}\nfunction parsePathSegment(segment) {\n  return isIndexSegment(segment) ? parseIndexSegment(segment) : isKeySegment(segment) ? parseKeySegment(segment) : isIndexTuple(segment) ? parseIndexTupleSegment(segment) : segment;\n}\nfunction parseIndexSegment(segment) {\n  return Number(segment.replace(/[^\\d]/g, \"\"));\n}\nfunction parseKeySegment(segment) {\n  return { _key: segment.match(reKeySegment)[1] };\n}\nfunction parseIndexTupleSegment(segment) {\n  const [from, to] = segment.split(\":\").map((seg) => seg === \"\" ? seg : Number(seg));\n  return [from, to];\n}\nvar studioPath = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  fromString,\n  get,\n  isIndexSegment,\n  isIndexTuple,\n  isKeySegment,\n  reKeySegment,\n  toString\n});\nconst DRAFTS_FOLDER = \"drafts\", VERSION_FOLDER = \"versions\", PATH_SEPARATOR = \".\", DRAFTS_PREFIX = `${DRAFTS_FOLDER}${PATH_SEPARATOR}`, VERSION_PREFIX = `${VERSION_FOLDER}${PATH_SEPARATOR}`;\nfunction isDraftId(id) {\n  return id.startsWith(DRAFTS_PREFIX);\n}\nfunction isVersionId(id) {\n  return id.startsWith(VERSION_PREFIX);\n}\nfunction isPublishedId(id) {\n  return !isDraftId(id) && !isVersionId(id);\n}\nfunction getDraftId(id) {\n  if (isVersionId(id)) {\n    const publishedId = getPublishedId(id);\n    return DRAFTS_PREFIX + publishedId;\n  }\n  return isDraftId(id) ? id : DRAFTS_PREFIX + id;\n}\nfunction getVersionId(id, version) {\n  if (version === \"drafts\" || version === \"published\")\n    throw new Error('Version can not be \"published\" or \"drafts\"');\n  return `${VERSION_PREFIX}${version}${PATH_SEPARATOR}${getPublishedId(id)}`;\n}\nfunction getVersionFromId(id) {\n  if (!isVersionId(id)) return;\n  const [_versionPrefix, versionId, ..._publishedId] = id.split(PATH_SEPARATOR);\n  return versionId;\n}\nfunction getPublishedId(id) {\n  return isVersionId(id) ? id.split(PATH_SEPARATOR).slice(2).join(PATH_SEPARATOR) : isDraftId(id) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction studioPathToJsonPath(path) {\n  return (typeof path == \"string\" ? fromString(path) : path).map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (Array.isArray(segment))\n      throw new Error(`IndexTuple segments aren't supported:${JSON.stringify(segment)}`);\n    if (isContentSourceMapParsedPathKeyedSegment(segment))\n      return segment;\n    if (segment._key)\n      return { _key: segment._key, _index: -1 };\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction isContentSourceMapParsedPathKeyedSegment(segment) {\n  return typeof segment == \"object\" && \"_key\" in segment && \"_index\" in segment;\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  if (workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), isPublishedId(_id))\n    searchParams.set(\"perspective\", \"published\");\n  else if (isVersionId(_id)) {\n    const versionId = getVersionFromId(_id);\n    searchParams.set(\"perspective\", versionId);\n  }\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveEditInfo(options) {\n  const { resultSourceMap: csm, resultPath } = options, { mapping, pathSuffix } = resolveMapping(resultPath, csm) || {};\n  if (!mapping || mapping.source.type === \"literal\" || mapping.source.type === \"unknown\")\n    return;\n  const sourceDoc = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path];\n  if (sourceDoc && sourcePath) {\n    const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n      typeof options.studioUrl == \"function\" ? options.studioUrl(sourceDoc) : options.studioUrl\n    );\n    if (!baseUrl) return;\n    const { _id, _type, _projectId, _dataset } = sourceDoc;\n    return {\n      baseUrl,\n      workspace,\n      tool,\n      id: _id,\n      type: _type,\n      path: parseJsonPath(sourcePath + pathSuffix),\n      projectId: _projectId,\n      dataset: _dataset\n    };\n  }\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\n\n//# sourceMappingURL=resolveEditInfo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9fY2h1bmtzLWVzL3Jlc29sdmVFZGl0SW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtQkFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsT0FBTyxHQUFHLFFBQVE7QUFDbEM7QUFDQSxnQkFBZ0IsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFFBQVE7QUFDdEQ7QUFDQSxnQkFBZ0IsT0FBTyxVQUFVLGFBQWE7QUFDOUM7QUFDQTtBQUNBLGdCQUFnQixPQUFPLEdBQUcsS0FBSyxHQUFHLEdBQUc7QUFDckM7QUFDQSxrREFBa0Qsd0JBQXdCO0FBQzFFLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHNHQUFzRyxjQUFjLEVBQUUsZUFBZSx1QkFBdUIsZUFBZSxFQUFFLGVBQWU7QUFDNUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGVBQWUsRUFBRSxRQUFRLEVBQUUsZUFBZSxFQUFFLG1CQUFtQjtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHdEQUF3RCw0REFBNEQsdUNBQXVDLFFBQVEsMENBQTBDLHlEQUF5RCxXQUFXLGVBQWUsYUFBYTtBQUMxVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsdUNBQXVDO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLHVDQUF1Qyx3QkFBd0I7QUFDL0QsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCx3QkFBd0I7QUFDdEY7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLHVDQUF1Qyx3QkFBd0I7QUFDL0QsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHdCQUF3QjtBQUMvRCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELG1CQUFtQjtBQUN4RTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxHQUFHO0FBQ2IsWUFBWSxLQUFLO0FBQ2pCLFlBQVksb0NBQW9DO0FBQ2hEO0FBQ0EsMkNBQTJDLEtBQUssdUNBQXVDLG9CQUFvQixHQUFHLEdBQUcsYUFBYTtBQUM5SDtBQUNBO0FBQ0EsVUFBVSxtQ0FBbUMsYUFBYSxzQkFBc0I7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJCQUEyQjtBQUN2QztBQUNBO0FBQ0E7QUFDQSxZQUFZLG1DQUFtQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUdBQXFHLFVBQVUsSUFBSTtBQUNuSDtBQXdCRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFudGVjLy4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvY2xpZW50L2Rpc3QvX2NodW5rcy1lcy9yZXNvbHZlRWRpdEluZm8uanM/ZTMwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByZVByb3BOYW1lID0gL1teLltcXF1dK3xcXFsoPzooLT9cXGQrKD86XFwuXFxkKyk/KXwoW1wiJ10pKCg/Oig/IVxcMilbXlxcXFxdfFxcXFwuKSo/KVxcMilcXF18KD89KD86XFwufFxcW1xcXSkoPzpcXC58XFxbXFxdfCQpKS9nLCByZUtleVNlZ21lbnQgPSAvX2tleVxccyo9PVxccypbJ1wiXSguKilbJ1wiXS8sIHJlSW5kZXhUdXBsZSA9IC9eXFxkKjpcXGQqJC87XG5mdW5jdGlvbiBpc0luZGV4U2VnbWVudChzZWdtZW50KSB7XG4gIHJldHVybiB0eXBlb2Ygc2VnbWVudCA9PSBcIm51bWJlclwiIHx8IHR5cGVvZiBzZWdtZW50ID09IFwic3RyaW5nXCIgJiYgL15cXFtcXGQrXFxdJC8udGVzdChzZWdtZW50KTtcbn1cbmZ1bmN0aW9uIGlzS2V5U2VnbWVudChzZWdtZW50KSB7XG4gIHJldHVybiB0eXBlb2Ygc2VnbWVudCA9PSBcInN0cmluZ1wiID8gcmVLZXlTZWdtZW50LnRlc3Qoc2VnbWVudC50cmltKCkpIDogdHlwZW9mIHNlZ21lbnQgPT0gXCJvYmplY3RcIiAmJiBcIl9rZXlcIiBpbiBzZWdtZW50O1xufVxuZnVuY3Rpb24gaXNJbmRleFR1cGxlKHNlZ21lbnQpIHtcbiAgaWYgKHR5cGVvZiBzZWdtZW50ID09IFwic3RyaW5nXCIgJiYgcmVJbmRleFR1cGxlLnRlc3Qoc2VnbWVudCkpXG4gICAgcmV0dXJuICEwO1xuICBpZiAoIUFycmF5LmlzQXJyYXkoc2VnbWVudCkgfHwgc2VnbWVudC5sZW5ndGggIT09IDIpXG4gICAgcmV0dXJuICExO1xuICBjb25zdCBbZnJvbSwgdG9dID0gc2VnbWVudDtcbiAgcmV0dXJuICh0eXBlb2YgZnJvbSA9PSBcIm51bWJlclwiIHx8IGZyb20gPT09IFwiXCIpICYmICh0eXBlb2YgdG8gPT0gXCJudW1iZXJcIiB8fCB0byA9PT0gXCJcIik7XG59XG5mdW5jdGlvbiBnZXQob2JqLCBwYXRoLCBkZWZhdWx0VmFsKSB7XG4gIGNvbnN0IHNlbGVjdCA9IHR5cGVvZiBwYXRoID09IFwic3RyaW5nXCIgPyBmcm9tU3RyaW5nKHBhdGgpIDogcGF0aDtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHNlbGVjdCkpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiUGF0aCBtdXN0IGJlIGFuIGFycmF5IG9yIGEgc3RyaW5nXCIpO1xuICBsZXQgYWNjID0gb2JqO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHNlbGVjdC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHNlZ21lbnQgPSBzZWxlY3RbaV07XG4gICAgaWYgKGlzSW5kZXhTZWdtZW50KHNlZ21lbnQpKSB7XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkoYWNjKSlcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWw7XG4gICAgICBhY2MgPSBhY2Nbc2VnbWVudF07XG4gICAgfVxuICAgIGlmIChpc0tleVNlZ21lbnQoc2VnbWVudCkpIHtcbiAgICAgIGlmICghQXJyYXkuaXNBcnJheShhY2MpKVxuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbDtcbiAgICAgIGFjYyA9IGFjYy5maW5kKChpdGVtKSA9PiBpdGVtLl9rZXkgPT09IHNlZ21lbnQuX2tleSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygc2VnbWVudCA9PSBcInN0cmluZ1wiICYmIChhY2MgPSB0eXBlb2YgYWNjID09IFwib2JqZWN0XCIgJiYgYWNjICE9PSBudWxsID8gYWNjW3NlZ21lbnRdIDogdm9pZCAwKSwgdHlwZW9mIGFjYyA+IFwidVwiKVxuICAgICAgcmV0dXJuIGRlZmF1bHRWYWw7XG4gIH1cbiAgcmV0dXJuIGFjYztcbn1cbmZ1bmN0aW9uIHRvU3RyaW5nKHBhdGgpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHBhdGgpKVxuICAgIHRocm93IG5ldyBFcnJvcihcIlBhdGggaXMgbm90IGFuIGFycmF5XCIpO1xuICByZXR1cm4gcGF0aC5yZWR1Y2UoKHRhcmdldCwgc2VnbWVudCwgaSkgPT4ge1xuICAgIGNvbnN0IHNlZ21lbnRUeXBlID0gdHlwZW9mIHNlZ21lbnQ7XG4gICAgaWYgKHNlZ21lbnRUeXBlID09PSBcIm51bWJlclwiKVxuICAgICAgcmV0dXJuIGAke3RhcmdldH1bJHtzZWdtZW50fV1gO1xuICAgIGlmIChzZWdtZW50VHlwZSA9PT0gXCJzdHJpbmdcIilcbiAgICAgIHJldHVybiBgJHt0YXJnZXR9JHtpID09PSAwID8gXCJcIiA6IFwiLlwifSR7c2VnbWVudH1gO1xuICAgIGlmIChpc0tleVNlZ21lbnQoc2VnbWVudCkgJiYgc2VnbWVudC5fa2V5KVxuICAgICAgcmV0dXJuIGAke3RhcmdldH1bX2tleT09XCIke3NlZ21lbnQuX2tleX1cIl1gO1xuICAgIGlmIChBcnJheS5pc0FycmF5KHNlZ21lbnQpKSB7XG4gICAgICBjb25zdCBbZnJvbSwgdG9dID0gc2VnbWVudDtcbiAgICAgIHJldHVybiBgJHt0YXJnZXR9WyR7ZnJvbX06JHt0b31dYDtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBwYXRoIHNlZ21lbnQgXFxgJHtKU09OLnN0cmluZ2lmeShzZWdtZW50KX1cXGBgKTtcbiAgfSwgXCJcIik7XG59XG5mdW5jdGlvbiBmcm9tU3RyaW5nKHBhdGgpIHtcbiAgaWYgKHR5cGVvZiBwYXRoICE9IFwic3RyaW5nXCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiUGF0aCBpcyBub3QgYSBzdHJpbmdcIik7XG4gIGNvbnN0IHNlZ21lbnRzID0gcGF0aC5tYXRjaChyZVByb3BOYW1lKTtcbiAgaWYgKCFzZWdtZW50cylcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHBhdGggc3RyaW5nXCIpO1xuICByZXR1cm4gc2VnbWVudHMubWFwKHBhcnNlUGF0aFNlZ21lbnQpO1xufVxuZnVuY3Rpb24gcGFyc2VQYXRoU2VnbWVudChzZWdtZW50KSB7XG4gIHJldHVybiBpc0luZGV4U2VnbWVudChzZWdtZW50KSA/IHBhcnNlSW5kZXhTZWdtZW50KHNlZ21lbnQpIDogaXNLZXlTZWdtZW50KHNlZ21lbnQpID8gcGFyc2VLZXlTZWdtZW50KHNlZ21lbnQpIDogaXNJbmRleFR1cGxlKHNlZ21lbnQpID8gcGFyc2VJbmRleFR1cGxlU2VnbWVudChzZWdtZW50KSA6IHNlZ21lbnQ7XG59XG5mdW5jdGlvbiBwYXJzZUluZGV4U2VnbWVudChzZWdtZW50KSB7XG4gIHJldHVybiBOdW1iZXIoc2VnbWVudC5yZXBsYWNlKC9bXlxcZF0vZywgXCJcIikpO1xufVxuZnVuY3Rpb24gcGFyc2VLZXlTZWdtZW50KHNlZ21lbnQpIHtcbiAgcmV0dXJuIHsgX2tleTogc2VnbWVudC5tYXRjaChyZUtleVNlZ21lbnQpWzFdIH07XG59XG5mdW5jdGlvbiBwYXJzZUluZGV4VHVwbGVTZWdtZW50KHNlZ21lbnQpIHtcbiAgY29uc3QgW2Zyb20sIHRvXSA9IHNlZ21lbnQuc3BsaXQoXCI6XCIpLm1hcCgoc2VnKSA9PiBzZWcgPT09IFwiXCIgPyBzZWcgOiBOdW1iZXIoc2VnKSk7XG4gIHJldHVybiBbZnJvbSwgdG9dO1xufVxudmFyIHN0dWRpb1BhdGggPSAvKiBAX19QVVJFX18gKi8gT2JqZWN0LmZyZWV6ZSh7XG4gIF9fcHJvdG9fXzogbnVsbCxcbiAgZnJvbVN0cmluZyxcbiAgZ2V0LFxuICBpc0luZGV4U2VnbWVudCxcbiAgaXNJbmRleFR1cGxlLFxuICBpc0tleVNlZ21lbnQsXG4gIHJlS2V5U2VnbWVudCxcbiAgdG9TdHJpbmdcbn0pO1xuY29uc3QgRFJBRlRTX0ZPTERFUiA9IFwiZHJhZnRzXCIsIFZFUlNJT05fRk9MREVSID0gXCJ2ZXJzaW9uc1wiLCBQQVRIX1NFUEFSQVRPUiA9IFwiLlwiLCBEUkFGVFNfUFJFRklYID0gYCR7RFJBRlRTX0ZPTERFUn0ke1BBVEhfU0VQQVJBVE9SfWAsIFZFUlNJT05fUFJFRklYID0gYCR7VkVSU0lPTl9GT0xERVJ9JHtQQVRIX1NFUEFSQVRPUn1gO1xuZnVuY3Rpb24gaXNEcmFmdElkKGlkKSB7XG4gIHJldHVybiBpZC5zdGFydHNXaXRoKERSQUZUU19QUkVGSVgpO1xufVxuZnVuY3Rpb24gaXNWZXJzaW9uSWQoaWQpIHtcbiAgcmV0dXJuIGlkLnN0YXJ0c1dpdGgoVkVSU0lPTl9QUkVGSVgpO1xufVxuZnVuY3Rpb24gaXNQdWJsaXNoZWRJZChpZCkge1xuICByZXR1cm4gIWlzRHJhZnRJZChpZCkgJiYgIWlzVmVyc2lvbklkKGlkKTtcbn1cbmZ1bmN0aW9uIGdldERyYWZ0SWQoaWQpIHtcbiAgaWYgKGlzVmVyc2lvbklkKGlkKSkge1xuICAgIGNvbnN0IHB1Ymxpc2hlZElkID0gZ2V0UHVibGlzaGVkSWQoaWQpO1xuICAgIHJldHVybiBEUkFGVFNfUFJFRklYICsgcHVibGlzaGVkSWQ7XG4gIH1cbiAgcmV0dXJuIGlzRHJhZnRJZChpZCkgPyBpZCA6IERSQUZUU19QUkVGSVggKyBpZDtcbn1cbmZ1bmN0aW9uIGdldFZlcnNpb25JZChpZCwgdmVyc2lvbikge1xuICBpZiAodmVyc2lvbiA9PT0gXCJkcmFmdHNcIiB8fCB2ZXJzaW9uID09PSBcInB1Ymxpc2hlZFwiKVxuICAgIHRocm93IG5ldyBFcnJvcignVmVyc2lvbiBjYW4gbm90IGJlIFwicHVibGlzaGVkXCIgb3IgXCJkcmFmdHNcIicpO1xuICByZXR1cm4gYCR7VkVSU0lPTl9QUkVGSVh9JHt2ZXJzaW9ufSR7UEFUSF9TRVBBUkFUT1J9JHtnZXRQdWJsaXNoZWRJZChpZCl9YDtcbn1cbmZ1bmN0aW9uIGdldFZlcnNpb25Gcm9tSWQoaWQpIHtcbiAgaWYgKCFpc1ZlcnNpb25JZChpZCkpIHJldHVybjtcbiAgY29uc3QgW192ZXJzaW9uUHJlZml4LCB2ZXJzaW9uSWQsIC4uLl9wdWJsaXNoZWRJZF0gPSBpZC5zcGxpdChQQVRIX1NFUEFSQVRPUik7XG4gIHJldHVybiB2ZXJzaW9uSWQ7XG59XG5mdW5jdGlvbiBnZXRQdWJsaXNoZWRJZChpZCkge1xuICByZXR1cm4gaXNWZXJzaW9uSWQoaWQpID8gaWQuc3BsaXQoUEFUSF9TRVBBUkFUT1IpLnNsaWNlKDIpLmpvaW4oUEFUSF9TRVBBUkFUT1IpIDogaXNEcmFmdElkKGlkKSA/IGlkLnNsaWNlKERSQUZUU19QUkVGSVgubGVuZ3RoKSA6IGlkO1xufVxuY29uc3QgRVNDQVBFID0ge1xuICBcIlxcZlwiOiBcIlxcXFxmXCIsXG4gIFwiXFxuXCI6IFwiXFxcXG5cIixcbiAgXCJcXHJcIjogXCJcXFxcclwiLFxuICBcIlx0XCI6IFwiXFxcXHRcIixcbiAgXCInXCI6IFwiXFxcXCdcIixcbiAgXCJcXFxcXCI6IFwiXFxcXFxcXFxcIlxufSwgVU5FU0NBUEUgPSB7XG4gIFwiXFxcXGZcIjogXCJcXGZcIixcbiAgXCJcXFxcblwiOiBgXG5gLFxuICBcIlxcXFxyXCI6IFwiXFxyXCIsXG4gIFwiXFxcXHRcIjogXCJcdFwiLFxuICBcIlxcXFwnXCI6IFwiJ1wiLFxuICBcIlxcXFxcXFxcXCI6IFwiXFxcXFwiXG59O1xuZnVuY3Rpb24ganNvblBhdGgocGF0aCkge1xuICByZXR1cm4gYCQke3BhdGgubWFwKChzZWdtZW50KSA9PiB0eXBlb2Ygc2VnbWVudCA9PSBcInN0cmluZ1wiID8gYFsnJHtzZWdtZW50LnJlcGxhY2UoL1tcXGZcXG5cXHJcXHQnXFxcXF0vZywgKG1hdGNoKSA9PiBFU0NBUEVbbWF0Y2hdKX0nXWAgOiB0eXBlb2Ygc2VnbWVudCA9PSBcIm51bWJlclwiID8gYFske3NlZ21lbnR9XWAgOiBzZWdtZW50Ll9rZXkgIT09IFwiXCIgPyBgWz8oQC5fa2V5PT0nJHtzZWdtZW50Ll9rZXkucmVwbGFjZSgvWydcXFxcXS9nLCAobWF0Y2gpID0+IEVTQ0FQRVttYXRjaF0pfScpXWAgOiBgWyR7c2VnbWVudC5faW5kZXh9XWApLmpvaW4oXCJcIil9YDtcbn1cbmZ1bmN0aW9uIHBhcnNlSnNvblBhdGgocGF0aCkge1xuICBjb25zdCBwYXJzZWQgPSBbXSwgcGFyc2VSZSA9IC9cXFsnKC4qPyknXFxdfFxcWyhcXGQrKVxcXXxcXFtcXD9cXChAXFwuX2tleT09JyguKj8pJ1xcKVxcXS9nO1xuICBsZXQgbWF0Y2g7XG4gIGZvciAoOyAobWF0Y2ggPSBwYXJzZVJlLmV4ZWMocGF0aCkpICE9PSBudWxsOyApIHtcbiAgICBpZiAobWF0Y2hbMV0gIT09IHZvaWQgMCkge1xuICAgICAgY29uc3Qga2V5ID0gbWF0Y2hbMV0ucmVwbGFjZSgvXFxcXChcXFxcfGZ8bnxyfHR8JykvZywgKG0pID0+IFVORVNDQVBFW21dKTtcbiAgICAgIHBhcnNlZC5wdXNoKGtleSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKG1hdGNoWzJdICE9PSB2b2lkIDApIHtcbiAgICAgIHBhcnNlZC5wdXNoKHBhcnNlSW50KG1hdGNoWzJdLCAxMCkpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChtYXRjaFszXSAhPT0gdm9pZCAwKSB7XG4gICAgICBjb25zdCBfa2V5ID0gbWF0Y2hbM10ucmVwbGFjZSgvXFxcXChcXFxcJykvZywgKG0pID0+IFVORVNDQVBFW21dKTtcbiAgICAgIHBhcnNlZC5wdXNoKHtcbiAgICAgICAgX2tleSxcbiAgICAgICAgX2luZGV4OiAtMVxuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHBhcnNlZDtcbn1cbmZ1bmN0aW9uIGpzb25QYXRoVG9TdHVkaW9QYXRoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGgubWFwKChzZWdtZW50KSA9PiB7XG4gICAgaWYgKHR5cGVvZiBzZWdtZW50ID09IFwic3RyaW5nXCIgfHwgdHlwZW9mIHNlZ21lbnQgPT0gXCJudW1iZXJcIilcbiAgICAgIHJldHVybiBzZWdtZW50O1xuICAgIGlmIChzZWdtZW50Ll9rZXkgIT09IFwiXCIpXG4gICAgICByZXR1cm4geyBfa2V5OiBzZWdtZW50Ll9rZXkgfTtcbiAgICBpZiAoc2VnbWVudC5faW5kZXggIT09IC0xKVxuICAgICAgcmV0dXJuIHNlZ21lbnQuX2luZGV4O1xuICAgIHRocm93IG5ldyBFcnJvcihgaW52YWxpZCBzZWdtZW50OiR7SlNPTi5zdHJpbmdpZnkoc2VnbWVudCl9YCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gc3R1ZGlvUGF0aFRvSnNvblBhdGgocGF0aCkge1xuICByZXR1cm4gKHR5cGVvZiBwYXRoID09IFwic3RyaW5nXCIgPyBmcm9tU3RyaW5nKHBhdGgpIDogcGF0aCkubWFwKChzZWdtZW50KSA9PiB7XG4gICAgaWYgKHR5cGVvZiBzZWdtZW50ID09IFwic3RyaW5nXCIgfHwgdHlwZW9mIHNlZ21lbnQgPT0gXCJudW1iZXJcIilcbiAgICAgIHJldHVybiBzZWdtZW50O1xuICAgIGlmIChBcnJheS5pc0FycmF5KHNlZ21lbnQpKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbmRleFR1cGxlIHNlZ21lbnRzIGFyZW4ndCBzdXBwb3J0ZWQ6JHtKU09OLnN0cmluZ2lmeShzZWdtZW50KX1gKTtcbiAgICBpZiAoaXNDb250ZW50U291cmNlTWFwUGFyc2VkUGF0aEtleWVkU2VnbWVudChzZWdtZW50KSlcbiAgICAgIHJldHVybiBzZWdtZW50O1xuICAgIGlmIChzZWdtZW50Ll9rZXkpXG4gICAgICByZXR1cm4geyBfa2V5OiBzZWdtZW50Ll9rZXksIF9pbmRleDogLTEgfTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYGludmFsaWQgc2VnbWVudDoke0pTT04uc3RyaW5naWZ5KHNlZ21lbnQpfWApO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGlzQ29udGVudFNvdXJjZU1hcFBhcnNlZFBhdGhLZXllZFNlZ21lbnQoc2VnbWVudCkge1xuICByZXR1cm4gdHlwZW9mIHNlZ21lbnQgPT0gXCJvYmplY3RcIiAmJiBcIl9rZXlcIiBpbiBzZWdtZW50ICYmIFwiX2luZGV4XCIgaW4gc2VnbWVudDtcbn1cbmZ1bmN0aW9uIGpzb25QYXRoVG9NYXBwaW5nUGF0aChwYXRoKSB7XG4gIHJldHVybiBwYXRoLm1hcCgoc2VnbWVudCkgPT4ge1xuICAgIGlmICh0eXBlb2Ygc2VnbWVudCA9PSBcInN0cmluZ1wiIHx8IHR5cGVvZiBzZWdtZW50ID09IFwibnVtYmVyXCIpXG4gICAgICByZXR1cm4gc2VnbWVudDtcbiAgICBpZiAoc2VnbWVudC5faW5kZXggIT09IC0xKVxuICAgICAgcmV0dXJuIHNlZ21lbnQuX2luZGV4O1xuICAgIHRocm93IG5ldyBFcnJvcihgaW52YWxpZCBzZWdtZW50OiR7SlNPTi5zdHJpbmdpZnkoc2VnbWVudCl9YCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gcmVzb2x2ZU1hcHBpbmcocmVzdWx0UGF0aCwgY3NtKSB7XG4gIGlmICghY3NtPy5tYXBwaW5ncylcbiAgICByZXR1cm47XG4gIGNvbnN0IHJlc3VsdE1hcHBpbmdQYXRoID0ganNvblBhdGgoanNvblBhdGhUb01hcHBpbmdQYXRoKHJlc3VsdFBhdGgpKTtcbiAgaWYgKGNzbS5tYXBwaW5nc1tyZXN1bHRNYXBwaW5nUGF0aF0gIT09IHZvaWQgMClcbiAgICByZXR1cm4ge1xuICAgICAgbWFwcGluZzogY3NtLm1hcHBpbmdzW3Jlc3VsdE1hcHBpbmdQYXRoXSxcbiAgICAgIG1hdGNoZWRQYXRoOiByZXN1bHRNYXBwaW5nUGF0aCxcbiAgICAgIHBhdGhTdWZmaXg6IFwiXCJcbiAgICB9O1xuICBjb25zdCBtYXBwaW5ncyA9IE9iamVjdC5lbnRyaWVzKGNzbS5tYXBwaW5ncykuZmlsdGVyKChba2V5XSkgPT4gcmVzdWx0TWFwcGluZ1BhdGguc3RhcnRzV2l0aChrZXkpKS5zb3J0KChba2V5MV0sIFtrZXkyXSkgPT4ga2V5Mi5sZW5ndGggLSBrZXkxLmxlbmd0aCk7XG4gIGlmIChtYXBwaW5ncy5sZW5ndGggPT0gMClcbiAgICByZXR1cm47XG4gIGNvbnN0IFttYXRjaGVkUGF0aCwgbWFwcGluZ10gPSBtYXBwaW5nc1swXSwgcGF0aFN1ZmZpeCA9IHJlc3VsdE1hcHBpbmdQYXRoLnN1YnN0cmluZyhtYXRjaGVkUGF0aC5sZW5ndGgpO1xuICByZXR1cm4geyBtYXBwaW5nLCBtYXRjaGVkUGF0aCwgcGF0aFN1ZmZpeCB9O1xufVxuZnVuY3Rpb24gaXNBcnJheSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT09IG51bGwgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZSk7XG59XG5mdW5jdGlvbiBpc1JlY29yZCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09IFwib2JqZWN0XCIgJiYgdmFsdWUgIT09IG51bGw7XG59XG5mdW5jdGlvbiB3YWxrTWFwKHZhbHVlLCBtYXBwaW5nRm4sIHBhdGggPSBbXSkge1xuICBpZiAoaXNBcnJheSh2YWx1ZSkpXG4gICAgcmV0dXJuIHZhbHVlLm1hcCgodiwgaWR4KSA9PiB7XG4gICAgICBpZiAoaXNSZWNvcmQodikpIHtcbiAgICAgICAgY29uc3QgX2tleSA9IHYuX2tleTtcbiAgICAgICAgaWYgKHR5cGVvZiBfa2V5ID09IFwic3RyaW5nXCIpXG4gICAgICAgICAgcmV0dXJuIHdhbGtNYXAodiwgbWFwcGluZ0ZuLCBwYXRoLmNvbmNhdCh7IF9rZXksIF9pbmRleDogaWR4IH0pKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB3YWxrTWFwKHYsIG1hcHBpbmdGbiwgcGF0aC5jb25jYXQoaWR4KSk7XG4gICAgfSk7XG4gIGlmIChpc1JlY29yZCh2YWx1ZSkpIHtcbiAgICBpZiAodmFsdWUuX3R5cGUgPT09IFwiYmxvY2tcIiB8fCB2YWx1ZS5fdHlwZSA9PT0gXCJzcGFuXCIpIHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHsgLi4udmFsdWUgfTtcbiAgICAgIHJldHVybiB2YWx1ZS5fdHlwZSA9PT0gXCJibG9ja1wiID8gcmVzdWx0LmNoaWxkcmVuID0gd2Fsa01hcCh2YWx1ZS5jaGlsZHJlbiwgbWFwcGluZ0ZuLCBwYXRoLmNvbmNhdChcImNoaWxkcmVuXCIpKSA6IHZhbHVlLl90eXBlID09PSBcInNwYW5cIiAmJiAocmVzdWx0LnRleHQgPSB3YWxrTWFwKHZhbHVlLnRleHQsIG1hcHBpbmdGbiwgcGF0aC5jb25jYXQoXCJ0ZXh0XCIpKSksIHJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhcbiAgICAgIE9iamVjdC5lbnRyaWVzKHZhbHVlKS5tYXAoKFtrLCB2XSkgPT4gW2ssIHdhbGtNYXAodiwgbWFwcGluZ0ZuLCBwYXRoLmNvbmNhdChrKSldKVxuICAgICk7XG4gIH1cbiAgcmV0dXJuIG1hcHBpbmdGbih2YWx1ZSwgcGF0aCk7XG59XG5mdW5jdGlvbiBjcmVhdGVFZGl0VXJsKG9wdGlvbnMpIHtcbiAgY29uc3Qge1xuICAgIGJhc2VVcmwsXG4gICAgd29ya3NwYWNlOiBfd29ya3NwYWNlID0gXCJkZWZhdWx0XCIsXG4gICAgdG9vbDogX3Rvb2wgPSBcImRlZmF1bHRcIixcbiAgICBpZDogX2lkLFxuICAgIHR5cGUsXG4gICAgcGF0aCxcbiAgICBwcm9qZWN0SWQsXG4gICAgZGF0YXNldFxuICB9ID0gb3B0aW9ucztcbiAgaWYgKCFiYXNlVXJsKVxuICAgIHRocm93IG5ldyBFcnJvcihcImJhc2VVcmwgaXMgcmVxdWlyZWRcIik7XG4gIGlmICghcGF0aClcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJwYXRoIGlzIHJlcXVpcmVkXCIpO1xuICBpZiAoIV9pZClcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJpZCBpcyByZXF1aXJlZFwiKTtcbiAgaWYgKGJhc2VVcmwgIT09IFwiL1wiICYmIGJhc2VVcmwuZW5kc1dpdGgoXCIvXCIpKVxuICAgIHRocm93IG5ldyBFcnJvcihcImJhc2VVcmwgbXVzdCBub3QgZW5kIHdpdGggYSBzbGFzaFwiKTtcbiAgY29uc3Qgd29ya3NwYWNlID0gX3dvcmtzcGFjZSA9PT0gXCJkZWZhdWx0XCIgPyB2b2lkIDAgOiBfd29ya3NwYWNlLCB0b29sID0gX3Rvb2wgPT09IFwiZGVmYXVsdFwiID8gdm9pZCAwIDogX3Rvb2wsIGlkID0gZ2V0UHVibGlzaGVkSWQoX2lkKSwgc3RyaW5naWZpZWRQYXRoID0gQXJyYXkuaXNBcnJheShwYXRoKSA/IHRvU3RyaW5nKGpzb25QYXRoVG9TdHVkaW9QYXRoKHBhdGgpKSA6IHBhdGgsIHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgIGJhc2VVcmwsXG4gICAgaWQsXG4gICAgdHlwZSxcbiAgICBwYXRoOiBzdHJpbmdpZmllZFBhdGhcbiAgfSk7XG4gIGlmICh3b3Jrc3BhY2UgJiYgc2VhcmNoUGFyYW1zLnNldChcIndvcmtzcGFjZVwiLCB3b3Jrc3BhY2UpLCB0b29sICYmIHNlYXJjaFBhcmFtcy5zZXQoXCJ0b29sXCIsIHRvb2wpLCBwcm9qZWN0SWQgJiYgc2VhcmNoUGFyYW1zLnNldChcInByb2plY3RJZFwiLCBwcm9qZWN0SWQpLCBkYXRhc2V0ICYmIHNlYXJjaFBhcmFtcy5zZXQoXCJkYXRhc2V0XCIsIGRhdGFzZXQpLCBpc1B1Ymxpc2hlZElkKF9pZCkpXG4gICAgc2VhcmNoUGFyYW1zLnNldChcInBlcnNwZWN0aXZlXCIsIFwicHVibGlzaGVkXCIpO1xuICBlbHNlIGlmIChpc1ZlcnNpb25JZChfaWQpKSB7XG4gICAgY29uc3QgdmVyc2lvbklkID0gZ2V0VmVyc2lvbkZyb21JZChfaWQpO1xuICAgIHNlYXJjaFBhcmFtcy5zZXQoXCJwZXJzcGVjdGl2ZVwiLCB2ZXJzaW9uSWQpO1xuICB9XG4gIGNvbnN0IHNlZ21lbnRzID0gW2Jhc2VVcmwgPT09IFwiL1wiID8gXCJcIiA6IGJhc2VVcmxdO1xuICB3b3Jrc3BhY2UgJiYgc2VnbWVudHMucHVzaCh3b3Jrc3BhY2UpO1xuICBjb25zdCByb3V0ZXJQYXJhbXMgPSBbXG4gICAgXCJtb2RlPXByZXNlbnRhdGlvblwiLFxuICAgIGBpZD0ke2lkfWAsXG4gICAgYHR5cGU9JHt0eXBlfWAsXG4gICAgYHBhdGg9JHtlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZpZWRQYXRoKX1gXG4gIF07XG4gIHJldHVybiB0b29sICYmIHJvdXRlclBhcmFtcy5wdXNoKGB0b29sPSR7dG9vbH1gKSwgc2VnbWVudHMucHVzaChcImludGVudFwiLCBcImVkaXRcIiwgYCR7cm91dGVyUGFyYW1zLmpvaW4oXCI7XCIpfT8ke3NlYXJjaFBhcmFtc31gKSwgc2VnbWVudHMuam9pbihcIi9cIik7XG59XG5mdW5jdGlvbiByZXNvbHZlRWRpdEluZm8ob3B0aW9ucykge1xuICBjb25zdCB7IHJlc3VsdFNvdXJjZU1hcDogY3NtLCByZXN1bHRQYXRoIH0gPSBvcHRpb25zLCB7IG1hcHBpbmcsIHBhdGhTdWZmaXggfSA9IHJlc29sdmVNYXBwaW5nKHJlc3VsdFBhdGgsIGNzbSkgfHwge307XG4gIGlmICghbWFwcGluZyB8fCBtYXBwaW5nLnNvdXJjZS50eXBlID09PSBcImxpdGVyYWxcIiB8fCBtYXBwaW5nLnNvdXJjZS50eXBlID09PSBcInVua25vd25cIilcbiAgICByZXR1cm47XG4gIGNvbnN0IHNvdXJjZURvYyA9IGNzbS5kb2N1bWVudHNbbWFwcGluZy5zb3VyY2UuZG9jdW1lbnRdLCBzb3VyY2VQYXRoID0gY3NtLnBhdGhzW21hcHBpbmcuc291cmNlLnBhdGhdO1xuICBpZiAoc291cmNlRG9jICYmIHNvdXJjZVBhdGgpIHtcbiAgICBjb25zdCB7IGJhc2VVcmwsIHdvcmtzcGFjZSwgdG9vbCB9ID0gcmVzb2x2ZVN0dWRpb0Jhc2VSb3V0ZShcbiAgICAgIHR5cGVvZiBvcHRpb25zLnN0dWRpb1VybCA9PSBcImZ1bmN0aW9uXCIgPyBvcHRpb25zLnN0dWRpb1VybChzb3VyY2VEb2MpIDogb3B0aW9ucy5zdHVkaW9VcmxcbiAgICApO1xuICAgIGlmICghYmFzZVVybCkgcmV0dXJuO1xuICAgIGNvbnN0IHsgX2lkLCBfdHlwZSwgX3Byb2plY3RJZCwgX2RhdGFzZXQgfSA9IHNvdXJjZURvYztcbiAgICByZXR1cm4ge1xuICAgICAgYmFzZVVybCxcbiAgICAgIHdvcmtzcGFjZSxcbiAgICAgIHRvb2wsXG4gICAgICBpZDogX2lkLFxuICAgICAgdHlwZTogX3R5cGUsXG4gICAgICBwYXRoOiBwYXJzZUpzb25QYXRoKHNvdXJjZVBhdGggKyBwYXRoU3VmZml4KSxcbiAgICAgIHByb2plY3RJZDogX3Byb2plY3RJZCxcbiAgICAgIGRhdGFzZXQ6IF9kYXRhc2V0XG4gICAgfTtcbiAgfVxufVxuZnVuY3Rpb24gcmVzb2x2ZVN0dWRpb0Jhc2VSb3V0ZShzdHVkaW9VcmwpIHtcbiAgbGV0IGJhc2VVcmwgPSB0eXBlb2Ygc3R1ZGlvVXJsID09IFwic3RyaW5nXCIgPyBzdHVkaW9VcmwgOiBzdHVkaW9VcmwuYmFzZVVybDtcbiAgcmV0dXJuIGJhc2VVcmwgIT09IFwiL1wiICYmIChiYXNlVXJsID0gYmFzZVVybC5yZXBsYWNlKC9cXC8kLywgXCJcIikpLCB0eXBlb2Ygc3R1ZGlvVXJsID09IFwic3RyaW5nXCIgPyB7IGJhc2VVcmwgfSA6IHsgLi4uc3R1ZGlvVXJsLCBiYXNlVXJsIH07XG59XG5leHBvcnQge1xuICBEUkFGVFNfRk9MREVSLFxuICBWRVJTSU9OX0ZPTERFUixcbiAgY3JlYXRlRWRpdFVybCxcbiAgZ2V0LFxuICBnZXREcmFmdElkLFxuICBnZXRQdWJsaXNoZWRJZCxcbiAgZ2V0VmVyc2lvbkZyb21JZCxcbiAgZ2V0VmVyc2lvbklkLFxuICBpc0RyYWZ0SWQsXG4gIGlzUHVibGlzaGVkSWQsXG4gIGlzVmVyc2lvbklkLFxuICBqc29uUGF0aCxcbiAganNvblBhdGhUb1N0dWRpb1BhdGgsXG4gIHBhcnNlSnNvblBhdGgsXG4gIHJlS2V5U2VnbWVudCxcbiAgcmVzb2x2ZUVkaXRJbmZvLFxuICByZXNvbHZlTWFwcGluZyxcbiAgcmVzb2x2ZVN0dWRpb0Jhc2VSb3V0ZSxcbiAgc3R1ZGlvUGF0aCxcbiAgc3R1ZGlvUGF0aFRvSnNvblBhdGgsXG4gIHRvU3RyaW5nLFxuICB3YWxrTWFwXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzb2x2ZUVkaXRJbmZvLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ C),\n/* harmony export */   stegaClean: () => (/* binding */ stegaClean),\n/* harmony export */   vercelStegaCleanAll: () => (/* binding */ vercelStegaCleanAll)\n/* harmony export */ });\nvar s = { 0: 8203, 1: 8204, 2: 8205, 3: 8290, 4: 8291, 5: 8288, 6: 65279, 7: 8289, 8: 119155, 9: 119156, a: 119157, b: 119158, c: 119159, d: 119160, e: 119161, f: 119162 }, c = { 0: 8203, 1: 8204, 2: 8205, 3: 65279 }, u = new Array(4).fill(String.fromCodePoint(c[0])).join(\"\");\nfunction E(t) {\n  let e = JSON.stringify(t);\n  return `${u}${Array.from(e).map((r) => {\n    let n = r.charCodeAt(0);\n    if (n > 255) throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);\n    return Array.from(n.toString(4).padStart(4, \"0\")).map((o) => String.fromCodePoint(c[o])).join(\"\");\n  }).join(\"\")}`;\n}\nfunction I(t) {\n  return !Number.isNaN(Number(t)) || /[a-z]/i.test(t) && !/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t) ? !1 : !!Date.parse(t);\n}\nfunction T(t) {\n  try {\n    new URL(t, t.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction C(t, e, r = \"auto\") {\n  return r === !0 || r === \"auto\" && (I(t) || T(t)) ? t : `${t}${E(e)}`;\n}\nObject.fromEntries(Object.entries(c).map((t) => t.reverse()));\nObject.fromEntries(Object.entries(s).map((t) => t.reverse()));\nvar S = `${Object.values(s).map((t) => `\\\\u{${t.toString(16)}}`).join(\"\")}`, f = new RegExp(`[${S}]{4,}`, \"gu\");\nfunction _(t) {\n  var e;\n  return { cleaned: t.replace(f, \"\"), encoded: ((e = t.match(f)) == null ? void 0 : e[0]) || \"\" };\n}\nfunction O(t) {\n  return t && JSON.parse(_(JSON.stringify(t)).cleaned);\n}\nfunction stegaClean(result) {\n  return O(result);\n}\nconst vercelStegaCleanAll = stegaClean;\n\n//# sourceMappingURL=stegaClean.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2NsaWVudC9kaXN0L19jaHVua3MtZXMvc3RlZ2FDbGVhbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxVQUFVLGlLQUFpSyxRQUFRLHFDQUFxQztBQUN4TjtBQUNBO0FBQ0EsWUFBWSxFQUFFLEVBQUU7QUFDaEI7QUFDQSxvR0FBb0csR0FBRyxlQUFlLEdBQUcsR0FBRyxFQUFFO0FBQzlIO0FBQ0EsR0FBRyxXQUFXO0FBQ2Q7QUFDQTtBQUNBLDRFQUE0RSxFQUFFLHFCQUFxQixJQUFJO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsRUFBRSxFQUFFLEtBQUs7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQ0FBaUMsRUFBRSxnQkFBZ0IsWUFBWSxzQkFBc0IsRUFBRSxFQUFFLEdBQUc7QUFDdkc7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbnRlYy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2NsaWVudC9kaXN0L19jaHVua3MtZXMvc3RlZ2FDbGVhbi5qcz9jY2U0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBzID0geyAwOiA4MjAzLCAxOiA4MjA0LCAyOiA4MjA1LCAzOiA4MjkwLCA0OiA4MjkxLCA1OiA4Mjg4LCA2OiA2NTI3OSwgNzogODI4OSwgODogMTE5MTU1LCA5OiAxMTkxNTYsIGE6IDExOTE1NywgYjogMTE5MTU4LCBjOiAxMTkxNTksIGQ6IDExOTE2MCwgZTogMTE5MTYxLCBmOiAxMTkxNjIgfSwgYyA9IHsgMDogODIwMywgMTogODIwNCwgMjogODIwNSwgMzogNjUyNzkgfSwgdSA9IG5ldyBBcnJheSg0KS5maWxsKFN0cmluZy5mcm9tQ29kZVBvaW50KGNbMF0pKS5qb2luKFwiXCIpO1xuZnVuY3Rpb24gRSh0KSB7XG4gIGxldCBlID0gSlNPTi5zdHJpbmdpZnkodCk7XG4gIHJldHVybiBgJHt1fSR7QXJyYXkuZnJvbShlKS5tYXAoKHIpID0+IHtcbiAgICBsZXQgbiA9IHIuY2hhckNvZGVBdCgwKTtcbiAgICBpZiAobiA+IDI1NSkgdGhyb3cgbmV3IEVycm9yKGBPbmx5IEFTQ0lJIGVkaXQgaW5mbyBjYW4gYmUgZW5jb2RlZC4gRXJyb3IgYXR0ZW1wdGluZyB0byBlbmNvZGUgJHtlfSBvbiBjaGFyYWN0ZXIgJHtyfSAoJHtufSlgKTtcbiAgICByZXR1cm4gQXJyYXkuZnJvbShuLnRvU3RyaW5nKDQpLnBhZFN0YXJ0KDQsIFwiMFwiKSkubWFwKChvKSA9PiBTdHJpbmcuZnJvbUNvZGVQb2ludChjW29dKSkuam9pbihcIlwiKTtcbiAgfSkuam9pbihcIlwiKX1gO1xufVxuZnVuY3Rpb24gSSh0KSB7XG4gIHJldHVybiAhTnVtYmVyLmlzTmFOKE51bWJlcih0KSkgfHwgL1thLXpdL2kudGVzdCh0KSAmJiAhL1xcZCsoPzpbLTpcXC9dXFxkKyl7Mn0oPzpUXFxkKyg/OlstOlxcL11cXGQrKXsxLDJ9KFxcLlxcZCspP1o/KT8vLnRlc3QodCkgPyAhMSA6ICEhRGF0ZS5wYXJzZSh0KTtcbn1cbmZ1bmN0aW9uIFQodCkge1xuICB0cnkge1xuICAgIG5ldyBVUkwodCwgdC5zdGFydHNXaXRoKFwiL1wiKSA/IFwiaHR0cHM6Ly9hY21lLmNvbVwiIDogdm9pZCAwKTtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuICExO1xuICB9XG4gIHJldHVybiAhMDtcbn1cbmZ1bmN0aW9uIEModCwgZSwgciA9IFwiYXV0b1wiKSB7XG4gIHJldHVybiByID09PSAhMCB8fCByID09PSBcImF1dG9cIiAmJiAoSSh0KSB8fCBUKHQpKSA/IHQgOiBgJHt0fSR7RShlKX1gO1xufVxuT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKGMpLm1hcCgodCkgPT4gdC5yZXZlcnNlKCkpKTtcbk9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhzKS5tYXAoKHQpID0+IHQucmV2ZXJzZSgpKSk7XG52YXIgUyA9IGAke09iamVjdC52YWx1ZXMocykubWFwKCh0KSA9PiBgXFxcXHV7JHt0LnRvU3RyaW5nKDE2KX19YCkuam9pbihcIlwiKX1gLCBmID0gbmV3IFJlZ0V4cChgWyR7U31dezQsfWAsIFwiZ3VcIik7XG5mdW5jdGlvbiBfKHQpIHtcbiAgdmFyIGU7XG4gIHJldHVybiB7IGNsZWFuZWQ6IHQucmVwbGFjZShmLCBcIlwiKSwgZW5jb2RlZDogKChlID0gdC5tYXRjaChmKSkgPT0gbnVsbCA/IHZvaWQgMCA6IGVbMF0pIHx8IFwiXCIgfTtcbn1cbmZ1bmN0aW9uIE8odCkge1xuICByZXR1cm4gdCAmJiBKU09OLnBhcnNlKF8oSlNPTi5zdHJpbmdpZnkodCkpLmNsZWFuZWQpO1xufVxuZnVuY3Rpb24gc3RlZ2FDbGVhbihyZXN1bHQpIHtcbiAgcmV0dXJuIE8ocmVzdWx0KTtcbn1cbmNvbnN0IHZlcmNlbFN0ZWdhQ2xlYW5BbGwgPSBzdGVnYUNsZWFuO1xuZXhwb3J0IHtcbiAgQyxcbiAgc3RlZ2FDbGVhbixcbiAgdmVyY2VsU3RlZ2FDbGVhbkFsbFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0ZWdhQ2xlYW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ C),\n/* harmony export */   stegaClean: () => (/* binding */ stegaClean),\n/* harmony export */   vercelStegaCleanAll: () => (/* binding */ vercelStegaCleanAll)\n/* harmony export */ });\nvar s = { 0: 8203, 1: 8204, 2: 8205, 3: 8290, 4: 8291, 5: 8288, 6: 65279, 7: 8289, 8: 119155, 9: 119156, a: 119157, b: 119158, c: 119159, d: 119160, e: 119161, f: 119162 }, c = { 0: 8203, 1: 8204, 2: 8205, 3: 65279 }, u = new Array(4).fill(String.fromCodePoint(c[0])).join(\"\");\nfunction E(t) {\n  let e = JSON.stringify(t);\n  return `${u}${Array.from(e).map((r) => {\n    let n = r.charCodeAt(0);\n    if (n > 255) throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);\n    return Array.from(n.toString(4).padStart(4, \"0\")).map((o) => String.fromCodePoint(c[o])).join(\"\");\n  }).join(\"\")}`;\n}\nfunction I(t) {\n  return !Number.isNaN(Number(t)) || /[a-z]/i.test(t) && !/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t) ? !1 : !!Date.parse(t);\n}\nfunction T(t) {\n  try {\n    new URL(t, t.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction C(t, e, r = \"auto\") {\n  return r === !0 || r === \"auto\" && (I(t) || T(t)) ? t : `${t}${E(e)}`;\n}\nObject.fromEntries(Object.entries(c).map((t) => t.reverse()));\nObject.fromEntries(Object.entries(s).map((t) => t.reverse()));\nvar S = `${Object.values(s).map((t) => `\\\\u{${t.toString(16)}}`).join(\"\")}`, f = new RegExp(`[${S}]{4,}`, \"gu\");\nfunction _(t) {\n  var e;\n  return { cleaned: t.replace(f, \"\"), encoded: ((e = t.match(f)) == null ? void 0 : e[0]) || \"\" };\n}\nfunction O(t) {\n  return t && JSON.parse(_(JSON.stringify(t)).cleaned);\n}\nfunction stegaClean(result) {\n  return O(result);\n}\nconst vercelStegaCleanAll = stegaClean;\n\n//# sourceMappingURL=stegaClean.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9fY2h1bmtzLWVzL3N0ZWdhQ2xlYW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsVUFBVSxpS0FBaUssUUFBUSxxQ0FBcUM7QUFDeE47QUFDQTtBQUNBLFlBQVksRUFBRSxFQUFFO0FBQ2hCO0FBQ0Esb0dBQW9HLEdBQUcsZUFBZSxHQUFHLEdBQUcsRUFBRTtBQUM5SDtBQUNBLEdBQUcsV0FBVztBQUNkO0FBQ0E7QUFDQSw0RUFBNEUsRUFBRSxxQkFBcUIsSUFBSTtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELEVBQUUsRUFBRSxLQUFLO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUNBQWlDLEVBQUUsZ0JBQWdCLFlBQVksc0JBQXNCLEVBQUUsRUFBRSxHQUFHO0FBQ3ZHO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9fY2h1bmtzLWVzL3N0ZWdhQ2xlYW4uanM/NTdjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcyA9IHsgMDogODIwMywgMTogODIwNCwgMjogODIwNSwgMzogODI5MCwgNDogODI5MSwgNTogODI4OCwgNjogNjUyNzksIDc6IDgyODksIDg6IDExOTE1NSwgOTogMTE5MTU2LCBhOiAxMTkxNTcsIGI6IDExOTE1OCwgYzogMTE5MTU5LCBkOiAxMTkxNjAsIGU6IDExOTE2MSwgZjogMTE5MTYyIH0sIGMgPSB7IDA6IDgyMDMsIDE6IDgyMDQsIDI6IDgyMDUsIDM6IDY1Mjc5IH0sIHUgPSBuZXcgQXJyYXkoNCkuZmlsbChTdHJpbmcuZnJvbUNvZGVQb2ludChjWzBdKSkuam9pbihcIlwiKTtcbmZ1bmN0aW9uIEUodCkge1xuICBsZXQgZSA9IEpTT04uc3RyaW5naWZ5KHQpO1xuICByZXR1cm4gYCR7dX0ke0FycmF5LmZyb20oZSkubWFwKChyKSA9PiB7XG4gICAgbGV0IG4gPSByLmNoYXJDb2RlQXQoMCk7XG4gICAgaWYgKG4gPiAyNTUpIHRocm93IG5ldyBFcnJvcihgT25seSBBU0NJSSBlZGl0IGluZm8gY2FuIGJlIGVuY29kZWQuIEVycm9yIGF0dGVtcHRpbmcgdG8gZW5jb2RlICR7ZX0gb24gY2hhcmFjdGVyICR7cn0gKCR7bn0pYCk7XG4gICAgcmV0dXJuIEFycmF5LmZyb20obi50b1N0cmluZyg0KS5wYWRTdGFydCg0LCBcIjBcIikpLm1hcCgobykgPT4gU3RyaW5nLmZyb21Db2RlUG9pbnQoY1tvXSkpLmpvaW4oXCJcIik7XG4gIH0pLmpvaW4oXCJcIil9YDtcbn1cbmZ1bmN0aW9uIEkodCkge1xuICByZXR1cm4gIU51bWJlci5pc05hTihOdW1iZXIodCkpIHx8IC9bYS16XS9pLnRlc3QodCkgJiYgIS9cXGQrKD86Wy06XFwvXVxcZCspezJ9KD86VFxcZCsoPzpbLTpcXC9dXFxkKyl7MSwyfShcXC5cXGQrKT9aPyk/Ly50ZXN0KHQpID8gITEgOiAhIURhdGUucGFyc2UodCk7XG59XG5mdW5jdGlvbiBUKHQpIHtcbiAgdHJ5IHtcbiAgICBuZXcgVVJMKHQsIHQuc3RhcnRzV2l0aChcIi9cIikgPyBcImh0dHBzOi8vYWNtZS5jb21cIiA6IHZvaWQgMCk7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiAhMTtcbiAgfVxuICByZXR1cm4gITA7XG59XG5mdW5jdGlvbiBDKHQsIGUsIHIgPSBcImF1dG9cIikge1xuICByZXR1cm4gciA9PT0gITAgfHwgciA9PT0gXCJhdXRvXCIgJiYgKEkodCkgfHwgVCh0KSkgPyB0IDogYCR7dH0ke0UoZSl9YDtcbn1cbk9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhjKS5tYXAoKHQpID0+IHQucmV2ZXJzZSgpKSk7XG5PYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMocykubWFwKCh0KSA9PiB0LnJldmVyc2UoKSkpO1xudmFyIFMgPSBgJHtPYmplY3QudmFsdWVzKHMpLm1hcCgodCkgPT4gYFxcXFx1eyR7dC50b1N0cmluZygxNil9fWApLmpvaW4oXCJcIil9YCwgZiA9IG5ldyBSZWdFeHAoYFske1N9XXs0LH1gLCBcImd1XCIpO1xuZnVuY3Rpb24gXyh0KSB7XG4gIHZhciBlO1xuICByZXR1cm4geyBjbGVhbmVkOiB0LnJlcGxhY2UoZiwgXCJcIiksIGVuY29kZWQ6ICgoZSA9IHQubWF0Y2goZikpID09IG51bGwgPyB2b2lkIDAgOiBlWzBdKSB8fCBcIlwiIH07XG59XG5mdW5jdGlvbiBPKHQpIHtcbiAgcmV0dXJuIHQgJiYgSlNPTi5wYXJzZShfKEpTT04uc3RyaW5naWZ5KHQpKS5jbGVhbmVkKTtcbn1cbmZ1bmN0aW9uIHN0ZWdhQ2xlYW4ocmVzdWx0KSB7XG4gIHJldHVybiBPKHJlc3VsdCk7XG59XG5jb25zdCB2ZXJjZWxTdGVnYUNsZWFuQWxsID0gc3RlZ2FDbGVhbjtcbmV4cG9ydCB7XG4gIEMsXG4gIHN0ZWdhQ2xlYW4sXG4gIHZlcmNlbFN0ZWdhQ2xlYW5BbGxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGVnYUNsZWFuLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeIntoResult: () => (/* binding */ encodeIntoResult),\n/* harmony export */   stegaEncodeSourceMap: () => (/* binding */ stegaEncodeSourceMap),\n/* harmony export */   stegaEncodeSourceMap$1: () => (/* binding */ stegaEncodeSourceMap$1)\n/* harmony export */ });\n/* harmony import */ var _stegaClean_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stegaClean.js */ \"(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/;\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction encodeIntoResult(result, csm, encoder) {\n  return walkMap(result, (value, path) => {\n    if (typeof value != \"string\")\n      return value;\n    const resolveMappingResult = resolveMapping(path, csm);\n    if (!resolveMappingResult)\n      return value;\n    const { mapping, matchedPath } = resolveMappingResult;\n    if (mapping.type !== \"value\" || mapping.source.type !== \"documentValue\")\n      return value;\n    const sourceDocument = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path], matchPathSegments = parseJsonPath(matchedPath), fullSourceSegments = parseJsonPath(sourcePath).concat(path.slice(matchPathSegments.length));\n    return encoder({\n      sourcePath: fullSourceSegments,\n      sourceDocument,\n      resultPath: path,\n      value\n    });\n  });\n}\nconst DRAFTS_FOLDER = \"drafts\", VERSION_FOLDER = \"versions\", PATH_SEPARATOR = \".\", DRAFTS_PREFIX = `${DRAFTS_FOLDER}${PATH_SEPARATOR}`, VERSION_PREFIX = `${VERSION_FOLDER}${PATH_SEPARATOR}`;\nfunction isDraftId(id) {\n  return id.startsWith(DRAFTS_PREFIX);\n}\nfunction isVersionId(id) {\n  return id.startsWith(VERSION_PREFIX);\n}\nfunction isPublishedId(id) {\n  return !isDraftId(id) && !isVersionId(id);\n}\nfunction getVersionFromId(id) {\n  if (!isVersionId(id)) return;\n  const [_versionPrefix, versionId, ..._publishedId] = id.split(PATH_SEPARATOR);\n  return versionId;\n}\nfunction getPublishedId(id) {\n  return isVersionId(id) ? id.split(PATH_SEPARATOR).slice(2).join(PATH_SEPARATOR) : isDraftId(id) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  if (workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), isPublishedId(_id))\n    searchParams.set(\"perspective\", \"published\");\n  else if (isVersionId(_id)) {\n    const versionId = getVersionFromId(_id);\n    searchParams.set(\"perspective\", versionId);\n  }\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\nconst filterDefault = ({ sourcePath, resultPath, value }) => {\n  if (isValidDate(value) || isValidURL(value))\n    return !1;\n  const endPath = sourcePath.at(-1);\n  return !(sourcePath.at(-2) === \"slug\" && endPath === \"current\" || typeof endPath == \"string\" && (endPath.startsWith(\"_\") || endPath.endsWith(\"Id\")) || sourcePath.some(\n    (path) => path === \"meta\" || path === \"metadata\" || path === \"openGraph\" || path === \"seo\"\n  ) || hasTypeLike(sourcePath) || hasTypeLike(resultPath) || typeof endPath == \"string\" && denylist.has(endPath));\n}, denylist = /* @__PURE__ */ new Set([\n  \"color\",\n  \"colour\",\n  \"currency\",\n  \"email\",\n  \"format\",\n  \"gid\",\n  \"hex\",\n  \"href\",\n  \"hsl\",\n  \"hsla\",\n  \"icon\",\n  \"id\",\n  \"index\",\n  \"key\",\n  \"language\",\n  \"layout\",\n  \"link\",\n  \"linkAction\",\n  \"locale\",\n  \"lqip\",\n  \"page\",\n  \"path\",\n  \"ref\",\n  \"rgb\",\n  \"rgba\",\n  \"route\",\n  \"secret\",\n  \"slug\",\n  \"status\",\n  \"tag\",\n  \"template\",\n  \"theme\",\n  \"type\",\n  \"textTheme\",\n  \"unit\",\n  \"url\",\n  \"username\",\n  \"variant\",\n  \"website\"\n]);\nfunction isValidDate(dateString) {\n  return /^\\d{4}-\\d{2}-\\d{2}/.test(dateString) ? !!Date.parse(dateString) : !1;\n}\nfunction isValidURL(url) {\n  try {\n    new URL(url, url.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction hasTypeLike(path) {\n  return path.some((segment) => typeof segment == \"string\" && segment.match(/type/i) !== null);\n}\nconst TRUNCATE_LENGTH = 20;\nfunction stegaEncodeSourceMap(result, resultSourceMap, config) {\n  const { filter, logger, enabled } = config;\n  if (!enabled) {\n    const msg = \"config.enabled must be true, don't call this function otherwise\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  if (!resultSourceMap)\n    return logger?.error?.(\"[@sanity/client]: Missing Content Source Map from response body\", {\n      result,\n      resultSourceMap,\n      config\n    }), result;\n  if (!config.studioUrl) {\n    const msg = \"config.studioUrl must be defined\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  const report = {\n    encoded: [],\n    skipped: []\n  }, resultWithStega = encodeIntoResult(\n    result,\n    resultSourceMap,\n    ({ sourcePath, sourceDocument, resultPath, value }) => {\n      if ((typeof filter == \"function\" ? filter({ sourcePath, resultPath, filterDefault, sourceDocument, value }) : filterDefault({ sourcePath, resultPath, value })) === !1)\n        return logger && report.skipped.push({\n          path: prettyPathForLogging(sourcePath),\n          value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n          length: value.length\n        }), value;\n      logger && report.encoded.push({\n        path: prettyPathForLogging(sourcePath),\n        value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n        length: value.length\n      });\n      const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n        typeof config.studioUrl == \"function\" ? config.studioUrl(sourceDocument) : config.studioUrl\n      );\n      if (!baseUrl) return value;\n      const { _id: id, _type: type, _projectId: projectId, _dataset: dataset } = sourceDocument;\n      return (0,_stegaClean_js__WEBPACK_IMPORTED_MODULE_0__.C)(\n        value,\n        {\n          origin: \"sanity.io\",\n          href: createEditUrl({\n            baseUrl,\n            workspace,\n            tool,\n            id,\n            type,\n            path: sourcePath,\n            ...!config.omitCrossDatasetReferenceData && { dataset, projectId }\n          })\n        },\n        // We use custom logic to determine if we should skip encoding\n        !1\n      );\n    }\n  );\n  if (logger) {\n    const isSkipping = report.skipped.length, isEncoding = report.encoded.length;\n    if ((isSkipping || isEncoding) && ((logger?.groupCollapsed || logger.log)?.(\"[@sanity/client]: Encoding source map into result\"), logger.log?.(\n      `[@sanity/client]: Paths encoded: ${report.encoded.length}, skipped: ${report.skipped.length}`\n    )), report.encoded.length > 0 && (logger?.log?.(\"[@sanity/client]: Table of encoded paths\"), (logger?.table || logger.log)?.(report.encoded)), report.skipped.length > 0) {\n      const skipped = /* @__PURE__ */ new Set();\n      for (const { path } of report.skipped)\n        skipped.add(path.replace(reKeySegment, \"0\").replace(/\\[\\d+\\]/g, \"[]\"));\n      logger?.log?.(\"[@sanity/client]: List of skipped paths\", [...skipped.values()]);\n    }\n    (isSkipping || isEncoding) && logger?.groupEnd?.();\n  }\n  return resultWithStega;\n}\nfunction prettyPathForLogging(path) {\n  return toString(jsonPathToStudioPath(path));\n}\nvar stegaEncodeSourceMap$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  stegaEncodeSourceMap\n});\n\n//# sourceMappingURL=stegaEncodeSourceMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeIntoResult: () => (/* binding */ encodeIntoResult),\n/* harmony export */   stegaEncodeSourceMap: () => (/* binding */ stegaEncodeSourceMap),\n/* harmony export */   stegaEncodeSourceMap$1: () => (/* binding */ stegaEncodeSourceMap$1)\n/* harmony export */ });\n/* harmony import */ var _stegaClean_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stegaClean.js */ \"(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/;\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction encodeIntoResult(result, csm, encoder) {\n  return walkMap(result, (value, path) => {\n    if (typeof value != \"string\")\n      return value;\n    const resolveMappingResult = resolveMapping(path, csm);\n    if (!resolveMappingResult)\n      return value;\n    const { mapping, matchedPath } = resolveMappingResult;\n    if (mapping.type !== \"value\" || mapping.source.type !== \"documentValue\")\n      return value;\n    const sourceDocument = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path], matchPathSegments = parseJsonPath(matchedPath), fullSourceSegments = parseJsonPath(sourcePath).concat(path.slice(matchPathSegments.length));\n    return encoder({\n      sourcePath: fullSourceSegments,\n      sourceDocument,\n      resultPath: path,\n      value\n    });\n  });\n}\nconst DRAFTS_FOLDER = \"drafts\", VERSION_FOLDER = \"versions\", PATH_SEPARATOR = \".\", DRAFTS_PREFIX = `${DRAFTS_FOLDER}${PATH_SEPARATOR}`, VERSION_PREFIX = `${VERSION_FOLDER}${PATH_SEPARATOR}`;\nfunction isDraftId(id) {\n  return id.startsWith(DRAFTS_PREFIX);\n}\nfunction isVersionId(id) {\n  return id.startsWith(VERSION_PREFIX);\n}\nfunction isPublishedId(id) {\n  return !isDraftId(id) && !isVersionId(id);\n}\nfunction getVersionFromId(id) {\n  if (!isVersionId(id)) return;\n  const [_versionPrefix, versionId, ..._publishedId] = id.split(PATH_SEPARATOR);\n  return versionId;\n}\nfunction getPublishedId(id) {\n  return isVersionId(id) ? id.split(PATH_SEPARATOR).slice(2).join(PATH_SEPARATOR) : isDraftId(id) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  if (workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), isPublishedId(_id))\n    searchParams.set(\"perspective\", \"published\");\n  else if (isVersionId(_id)) {\n    const versionId = getVersionFromId(_id);\n    searchParams.set(\"perspective\", versionId);\n  }\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\nconst filterDefault = ({ sourcePath, resultPath, value }) => {\n  if (isValidDate(value) || isValidURL(value))\n    return !1;\n  const endPath = sourcePath.at(-1);\n  return !(sourcePath.at(-2) === \"slug\" && endPath === \"current\" || typeof endPath == \"string\" && (endPath.startsWith(\"_\") || endPath.endsWith(\"Id\")) || sourcePath.some(\n    (path) => path === \"meta\" || path === \"metadata\" || path === \"openGraph\" || path === \"seo\"\n  ) || hasTypeLike(sourcePath) || hasTypeLike(resultPath) || typeof endPath == \"string\" && denylist.has(endPath));\n}, denylist = /* @__PURE__ */ new Set([\n  \"color\",\n  \"colour\",\n  \"currency\",\n  \"email\",\n  \"format\",\n  \"gid\",\n  \"hex\",\n  \"href\",\n  \"hsl\",\n  \"hsla\",\n  \"icon\",\n  \"id\",\n  \"index\",\n  \"key\",\n  \"language\",\n  \"layout\",\n  \"link\",\n  \"linkAction\",\n  \"locale\",\n  \"lqip\",\n  \"page\",\n  \"path\",\n  \"ref\",\n  \"rgb\",\n  \"rgba\",\n  \"route\",\n  \"secret\",\n  \"slug\",\n  \"status\",\n  \"tag\",\n  \"template\",\n  \"theme\",\n  \"type\",\n  \"textTheme\",\n  \"unit\",\n  \"url\",\n  \"username\",\n  \"variant\",\n  \"website\"\n]);\nfunction isValidDate(dateString) {\n  return /^\\d{4}-\\d{2}-\\d{2}/.test(dateString) ? !!Date.parse(dateString) : !1;\n}\nfunction isValidURL(url) {\n  try {\n    new URL(url, url.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction hasTypeLike(path) {\n  return path.some((segment) => typeof segment == \"string\" && segment.match(/type/i) !== null);\n}\nconst TRUNCATE_LENGTH = 20;\nfunction stegaEncodeSourceMap(result, resultSourceMap, config) {\n  const { filter, logger, enabled } = config;\n  if (!enabled) {\n    const msg = \"config.enabled must be true, don't call this function otherwise\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  if (!resultSourceMap)\n    return logger?.error?.(\"[@sanity/client]: Missing Content Source Map from response body\", {\n      result,\n      resultSourceMap,\n      config\n    }), result;\n  if (!config.studioUrl) {\n    const msg = \"config.studioUrl must be defined\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  const report = {\n    encoded: [],\n    skipped: []\n  }, resultWithStega = encodeIntoResult(\n    result,\n    resultSourceMap,\n    ({ sourcePath, sourceDocument, resultPath, value }) => {\n      if ((typeof filter == \"function\" ? filter({ sourcePath, resultPath, filterDefault, sourceDocument, value }) : filterDefault({ sourcePath, resultPath, value })) === !1)\n        return logger && report.skipped.push({\n          path: prettyPathForLogging(sourcePath),\n          value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n          length: value.length\n        }), value;\n      logger && report.encoded.push({\n        path: prettyPathForLogging(sourcePath),\n        value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n        length: value.length\n      });\n      const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n        typeof config.studioUrl == \"function\" ? config.studioUrl(sourceDocument) : config.studioUrl\n      );\n      if (!baseUrl) return value;\n      const { _id: id, _type: type, _projectId: projectId, _dataset: dataset } = sourceDocument;\n      return (0,_stegaClean_js__WEBPACK_IMPORTED_MODULE_0__.C)(\n        value,\n        {\n          origin: \"sanity.io\",\n          href: createEditUrl({\n            baseUrl,\n            workspace,\n            tool,\n            id,\n            type,\n            path: sourcePath,\n            ...!config.omitCrossDatasetReferenceData && { dataset, projectId }\n          })\n        },\n        // We use custom logic to determine if we should skip encoding\n        !1\n      );\n    }\n  );\n  if (logger) {\n    const isSkipping = report.skipped.length, isEncoding = report.encoded.length;\n    if ((isSkipping || isEncoding) && ((logger?.groupCollapsed || logger.log)?.(\"[@sanity/client]: Encoding source map into result\"), logger.log?.(\n      `[@sanity/client]: Paths encoded: ${report.encoded.length}, skipped: ${report.skipped.length}`\n    )), report.encoded.length > 0 && (logger?.log?.(\"[@sanity/client]: Table of encoded paths\"), (logger?.table || logger.log)?.(report.encoded)), report.skipped.length > 0) {\n      const skipped = /* @__PURE__ */ new Set();\n      for (const { path } of report.skipped)\n        skipped.add(path.replace(reKeySegment, \"0\").replace(/\\[\\d+\\]/g, \"[]\"));\n      logger?.log?.(\"[@sanity/client]: List of skipped paths\", [...skipped.values()]);\n    }\n    (isSkipping || isEncoding) && logger?.groupEnd?.();\n  }\n  return resultWithStega;\n}\nfunction prettyPathForLogging(path) {\n  return toString(jsonPathToStudioPath(path));\n}\nvar stegaEncodeSourceMap$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  stegaEncodeSourceMap\n});\n\n//# sourceMappingURL=stegaEncodeSourceMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/client/dist/csm.js":
/*!*************************************************!*\
  !*** ./node_modules/@sanity/client/dist/csm.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DRAFTS_FOLDER: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.DRAFTS_FOLDER),\n/* harmony export */   VERSION_FOLDER: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.VERSION_FOLDER),\n/* harmony export */   applySourceDocuments: () => (/* binding */ applySourceDocuments),\n/* harmony export */   createEditUrl: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.createEditUrl),\n/* harmony export */   getDraftId: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.getDraftId),\n/* harmony export */   getPublishedId: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.getPublishedId),\n/* harmony export */   getVersionFromId: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.getVersionFromId),\n/* harmony export */   getVersionId: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.getVersionId),\n/* harmony export */   isDraftId: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.isDraftId),\n/* harmony export */   isPublishedId: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.isPublishedId),\n/* harmony export */   isVersionId: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.isVersionId),\n/* harmony export */   jsonPath: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.jsonPath),\n/* harmony export */   jsonPathToStudioPath: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.jsonPathToStudioPath),\n/* harmony export */   parseJsonPath: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.parseJsonPath),\n/* harmony export */   resolveEditInfo: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.resolveEditInfo),\n/* harmony export */   resolveEditUrl: () => (/* binding */ resolveEditUrl),\n/* harmony export */   resolveMapping: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.resolveMapping),\n/* harmony export */   resolvedKeyedSourcePath: () => (/* binding */ resolvedKeyedSourcePath),\n/* harmony export */   studioPath: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.studioPath),\n/* harmony export */   studioPathToJsonPath: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.studioPathToJsonPath),\n/* harmony export */   walkMap: () => (/* reexport safe */ _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.walkMap)\n/* harmony export */ });\n/* harmony import */ var _chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_chunks-es/resolveEditInfo.js */ \"(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var _chunks_es_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_chunks-es/config.js */ \"(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/config.js\");\n\n\n\nfunction resolvePerspectives(perspective) {\n  if ((0,_chunks_es_config_js__WEBPACK_IMPORTED_MODULE_0__.validateApiPerspective)(perspective), Array.isArray(perspective))\n    return perspective.includes(\"published\") ? perspective : [...perspective, \"published\"];\n  switch (perspective) {\n    case \"previewDrafts\":\n    case \"drafts\":\n      return [\"drafts\", \"published\"];\n    case \"published\":\n    default:\n      return [\"published\"];\n  }\n}\nfunction createSourceDocumentResolver(getCachedDocument, _perspective) {\n  const perspectives = resolvePerspectives(_perspective);\n  function findDocument(sourceDocument) {\n    for (const perspective of perspectives) {\n      let match = null;\n      if (perspective.startsWith(\"r\") && (match = getCachedDocument({\n        ...sourceDocument,\n        _id: (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.getVersionId)(sourceDocument._id, perspective)\n      })), perspective === \"drafts\" && (match = getCachedDocument({\n        ...sourceDocument,\n        _id: (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.getDraftId)(sourceDocument._id)\n      })), perspective === \"published\" && (match = getCachedDocument({\n        ...sourceDocument,\n        _id: (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.getPublishedId)(sourceDocument._id)\n      })), match)\n        return { ...match, _id: (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.getPublishedId)(match._id), _originalId: match._id };\n    }\n    return null;\n  }\n  return function(sourceDocument) {\n    return findDocument(sourceDocument);\n  };\n}\nfunction applySourceDocuments(result, resultSourceMap, getCachedDocument, updateFn, perspective) {\n  if (!resultSourceMap) return result;\n  const resolveDocument = createSourceDocumentResolver(getCachedDocument, perspective), cachedDocuments = resultSourceMap.documents?.map?.(resolveDocument) || [];\n  return (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.walkMap)(JSON.parse(JSON.stringify(result)), (value, path) => {\n    const resolveMappingResult = (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.resolveMapping)(path, resultSourceMap);\n    if (!resolveMappingResult)\n      return value;\n    const { mapping, pathSuffix } = resolveMappingResult;\n    if (mapping.type !== \"value\" || mapping.source.type !== \"documentValue\")\n      return value;\n    const sourceDocument = resultSourceMap.documents[mapping.source.document], sourcePath = resultSourceMap.paths[mapping.source.path];\n    if (sourceDocument) {\n      const parsedPath = (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.parseJsonPath)(sourcePath + pathSuffix), stringifiedPath = (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.toString)(parsedPath), cachedDocument = cachedDocuments[mapping.source.document];\n      if (!cachedDocument)\n        return value;\n      const changedValue = cachedDocument ? (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.get)(cachedDocument, stringifiedPath, value) : value;\n      return value === changedValue ? value : updateFn(changedValue, {\n        cachedDocument,\n        previousValue: value,\n        sourceDocument,\n        sourcePath: parsedPath\n      });\n    }\n    return value;\n  });\n}\nfunction resolvedKeyedSourcePath(options) {\n  const { keyedResultPath, pathSuffix, sourceBasePath } = options, inferredResultPath = pathSuffix === void 0 ? [] : (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.parseJsonPath)(pathSuffix), inferredPath = keyedResultPath.slice(keyedResultPath.length - inferredResultPath.length), inferredPathSuffix = inferredPath.length ? (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.jsonPath)(inferredPath).slice(1) : \"\";\n  return (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.parseJsonPath)(sourceBasePath + inferredPathSuffix);\n}\nfunction resolveEditUrl(options) {\n  const { resultSourceMap, studioUrl } = options, resultPath = (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.studioPathToJsonPath)(options.resultPath), editInfo = (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.resolveEditInfo)({\n    resultPath,\n    resultSourceMap,\n    studioUrl\n  });\n  if (editInfo)\n    return (0,_chunks_es_resolveEditInfo_js__WEBPACK_IMPORTED_MODULE_1__.createEditUrl)(editInfo);\n}\n\n//# sourceMappingURL=csm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2NsaWVudC9kaXN0L2NzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFrTjtBQUN2QztBQUMzRztBQUNoRTtBQUNBLE1BQU0sNEVBQXNCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDJFQUFZO0FBQ3pCLE9BQU87QUFDUDtBQUNBLGFBQWEseUVBQVU7QUFDdkIsT0FBTztBQUNQO0FBQ0EsYUFBYSw2RUFBYztBQUMzQixPQUFPO0FBQ1AsaUJBQWlCLGVBQWUsNkVBQWM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNFQUFPO0FBQ2hCLGlDQUFpQyw2RUFBYztBQUMvQztBQUNBO0FBQ0EsWUFBWSxzQkFBc0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNEVBQWEsNkNBQTZDLHVFQUFRO0FBQzNGO0FBQ0E7QUFDQSw0Q0FBNEMsa0VBQUc7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxVQUFVLDhDQUE4Qyw2REFBNkQsNEVBQWEsbUpBQW1KLHVFQUFRO0FBQzdSLFNBQVMsNEVBQWE7QUFDdEI7QUFDQTtBQUNBLFVBQVUsNkJBQTZCLHdCQUF3QixtRkFBb0IsaUNBQWlDLDhFQUFlO0FBQ25JO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLFdBQVcsNEVBQWE7QUFDeEI7QUF1QkU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbnRlYy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2NsaWVudC9kaXN0L2NzbS5qcz9iNThmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFZlcnNpb25JZCwgZ2V0RHJhZnRJZCwgZ2V0UHVibGlzaGVkSWQsIHdhbGtNYXAsIHJlc29sdmVNYXBwaW5nLCBwYXJzZUpzb25QYXRoLCB0b1N0cmluZywgZ2V0LCBqc29uUGF0aCwgc3R1ZGlvUGF0aFRvSnNvblBhdGgsIHJlc29sdmVFZGl0SW5mbywgY3JlYXRlRWRpdFVybCB9IGZyb20gXCIuL19jaHVua3MtZXMvcmVzb2x2ZUVkaXRJbmZvLmpzXCI7XG5pbXBvcnQgeyBEUkFGVFNfRk9MREVSLCBWRVJTSU9OX0ZPTERFUiwgZ2V0VmVyc2lvbkZyb21JZCwgaXNEcmFmdElkLCBpc1B1Ymxpc2hlZElkLCBpc1ZlcnNpb25JZCwganNvblBhdGhUb1N0dWRpb1BhdGgsIHN0dWRpb1BhdGggfSBmcm9tIFwiLi9fY2h1bmtzLWVzL3Jlc29sdmVFZGl0SW5mby5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGVBcGlQZXJzcGVjdGl2ZSB9IGZyb20gXCIuL19jaHVua3MtZXMvY29uZmlnLmpzXCI7XG5mdW5jdGlvbiByZXNvbHZlUGVyc3BlY3RpdmVzKHBlcnNwZWN0aXZlKSB7XG4gIGlmICh2YWxpZGF0ZUFwaVBlcnNwZWN0aXZlKHBlcnNwZWN0aXZlKSwgQXJyYXkuaXNBcnJheShwZXJzcGVjdGl2ZSkpXG4gICAgcmV0dXJuIHBlcnNwZWN0aXZlLmluY2x1ZGVzKFwicHVibGlzaGVkXCIpID8gcGVyc3BlY3RpdmUgOiBbLi4ucGVyc3BlY3RpdmUsIFwicHVibGlzaGVkXCJdO1xuICBzd2l0Y2ggKHBlcnNwZWN0aXZlKSB7XG4gICAgY2FzZSBcInByZXZpZXdEcmFmdHNcIjpcbiAgICBjYXNlIFwiZHJhZnRzXCI6XG4gICAgICByZXR1cm4gW1wiZHJhZnRzXCIsIFwicHVibGlzaGVkXCJdO1xuICAgIGNhc2UgXCJwdWJsaXNoZWRcIjpcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFtcInB1Ymxpc2hlZFwiXTtcbiAgfVxufVxuZnVuY3Rpb24gY3JlYXRlU291cmNlRG9jdW1lbnRSZXNvbHZlcihnZXRDYWNoZWREb2N1bWVudCwgX3BlcnNwZWN0aXZlKSB7XG4gIGNvbnN0IHBlcnNwZWN0aXZlcyA9IHJlc29sdmVQZXJzcGVjdGl2ZXMoX3BlcnNwZWN0aXZlKTtcbiAgZnVuY3Rpb24gZmluZERvY3VtZW50KHNvdXJjZURvY3VtZW50KSB7XG4gICAgZm9yIChjb25zdCBwZXJzcGVjdGl2ZSBvZiBwZXJzcGVjdGl2ZXMpIHtcbiAgICAgIGxldCBtYXRjaCA9IG51bGw7XG4gICAgICBpZiAocGVyc3BlY3RpdmUuc3RhcnRzV2l0aChcInJcIikgJiYgKG1hdGNoID0gZ2V0Q2FjaGVkRG9jdW1lbnQoe1xuICAgICAgICAuLi5zb3VyY2VEb2N1bWVudCxcbiAgICAgICAgX2lkOiBnZXRWZXJzaW9uSWQoc291cmNlRG9jdW1lbnQuX2lkLCBwZXJzcGVjdGl2ZSlcbiAgICAgIH0pKSwgcGVyc3BlY3RpdmUgPT09IFwiZHJhZnRzXCIgJiYgKG1hdGNoID0gZ2V0Q2FjaGVkRG9jdW1lbnQoe1xuICAgICAgICAuLi5zb3VyY2VEb2N1bWVudCxcbiAgICAgICAgX2lkOiBnZXREcmFmdElkKHNvdXJjZURvY3VtZW50Ll9pZClcbiAgICAgIH0pKSwgcGVyc3BlY3RpdmUgPT09IFwicHVibGlzaGVkXCIgJiYgKG1hdGNoID0gZ2V0Q2FjaGVkRG9jdW1lbnQoe1xuICAgICAgICAuLi5zb3VyY2VEb2N1bWVudCxcbiAgICAgICAgX2lkOiBnZXRQdWJsaXNoZWRJZChzb3VyY2VEb2N1bWVudC5faWQpXG4gICAgICB9KSksIG1hdGNoKVxuICAgICAgICByZXR1cm4geyAuLi5tYXRjaCwgX2lkOiBnZXRQdWJsaXNoZWRJZChtYXRjaC5faWQpLCBfb3JpZ2luYWxJZDogbWF0Y2guX2lkIH07XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBmdW5jdGlvbihzb3VyY2VEb2N1bWVudCkge1xuICAgIHJldHVybiBmaW5kRG9jdW1lbnQoc291cmNlRG9jdW1lbnQpO1xuICB9O1xufVxuZnVuY3Rpb24gYXBwbHlTb3VyY2VEb2N1bWVudHMocmVzdWx0LCByZXN1bHRTb3VyY2VNYXAsIGdldENhY2hlZERvY3VtZW50LCB1cGRhdGVGbiwgcGVyc3BlY3RpdmUpIHtcbiAgaWYgKCFyZXN1bHRTb3VyY2VNYXApIHJldHVybiByZXN1bHQ7XG4gIGNvbnN0IHJlc29sdmVEb2N1bWVudCA9IGNyZWF0ZVNvdXJjZURvY3VtZW50UmVzb2x2ZXIoZ2V0Q2FjaGVkRG9jdW1lbnQsIHBlcnNwZWN0aXZlKSwgY2FjaGVkRG9jdW1lbnRzID0gcmVzdWx0U291cmNlTWFwLmRvY3VtZW50cz8ubWFwPy4ocmVzb2x2ZURvY3VtZW50KSB8fCBbXTtcbiAgcmV0dXJuIHdhbGtNYXAoSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyZXN1bHQpKSwgKHZhbHVlLCBwYXRoKSA9PiB7XG4gICAgY29uc3QgcmVzb2x2ZU1hcHBpbmdSZXN1bHQgPSByZXNvbHZlTWFwcGluZyhwYXRoLCByZXN1bHRTb3VyY2VNYXApO1xuICAgIGlmICghcmVzb2x2ZU1hcHBpbmdSZXN1bHQpXG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgY29uc3QgeyBtYXBwaW5nLCBwYXRoU3VmZml4IH0gPSByZXNvbHZlTWFwcGluZ1Jlc3VsdDtcbiAgICBpZiAobWFwcGluZy50eXBlICE9PSBcInZhbHVlXCIgfHwgbWFwcGluZy5zb3VyY2UudHlwZSAhPT0gXCJkb2N1bWVudFZhbHVlXCIpXG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgY29uc3Qgc291cmNlRG9jdW1lbnQgPSByZXN1bHRTb3VyY2VNYXAuZG9jdW1lbnRzW21hcHBpbmcuc291cmNlLmRvY3VtZW50XSwgc291cmNlUGF0aCA9IHJlc3VsdFNvdXJjZU1hcC5wYXRoc1ttYXBwaW5nLnNvdXJjZS5wYXRoXTtcbiAgICBpZiAoc291cmNlRG9jdW1lbnQpIHtcbiAgICAgIGNvbnN0IHBhcnNlZFBhdGggPSBwYXJzZUpzb25QYXRoKHNvdXJjZVBhdGggKyBwYXRoU3VmZml4KSwgc3RyaW5naWZpZWRQYXRoID0gdG9TdHJpbmcocGFyc2VkUGF0aCksIGNhY2hlZERvY3VtZW50ID0gY2FjaGVkRG9jdW1lbnRzW21hcHBpbmcuc291cmNlLmRvY3VtZW50XTtcbiAgICAgIGlmICghY2FjaGVkRG9jdW1lbnQpXG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIGNvbnN0IGNoYW5nZWRWYWx1ZSA9IGNhY2hlZERvY3VtZW50ID8gZ2V0KGNhY2hlZERvY3VtZW50LCBzdHJpbmdpZmllZFBhdGgsIHZhbHVlKSA6IHZhbHVlO1xuICAgICAgcmV0dXJuIHZhbHVlID09PSBjaGFuZ2VkVmFsdWUgPyB2YWx1ZSA6IHVwZGF0ZUZuKGNoYW5nZWRWYWx1ZSwge1xuICAgICAgICBjYWNoZWREb2N1bWVudCxcbiAgICAgICAgcHJldmlvdXNWYWx1ZTogdmFsdWUsXG4gICAgICAgIHNvdXJjZURvY3VtZW50LFxuICAgICAgICBzb3VyY2VQYXRoOiBwYXJzZWRQYXRoXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9KTtcbn1cbmZ1bmN0aW9uIHJlc29sdmVkS2V5ZWRTb3VyY2VQYXRoKG9wdGlvbnMpIHtcbiAgY29uc3QgeyBrZXllZFJlc3VsdFBhdGgsIHBhdGhTdWZmaXgsIHNvdXJjZUJhc2VQYXRoIH0gPSBvcHRpb25zLCBpbmZlcnJlZFJlc3VsdFBhdGggPSBwYXRoU3VmZml4ID09PSB2b2lkIDAgPyBbXSA6IHBhcnNlSnNvblBhdGgocGF0aFN1ZmZpeCksIGluZmVycmVkUGF0aCA9IGtleWVkUmVzdWx0UGF0aC5zbGljZShrZXllZFJlc3VsdFBhdGgubGVuZ3RoIC0gaW5mZXJyZWRSZXN1bHRQYXRoLmxlbmd0aCksIGluZmVycmVkUGF0aFN1ZmZpeCA9IGluZmVycmVkUGF0aC5sZW5ndGggPyBqc29uUGF0aChpbmZlcnJlZFBhdGgpLnNsaWNlKDEpIDogXCJcIjtcbiAgcmV0dXJuIHBhcnNlSnNvblBhdGgoc291cmNlQmFzZVBhdGggKyBpbmZlcnJlZFBhdGhTdWZmaXgpO1xufVxuZnVuY3Rpb24gcmVzb2x2ZUVkaXRVcmwob3B0aW9ucykge1xuICBjb25zdCB7IHJlc3VsdFNvdXJjZU1hcCwgc3R1ZGlvVXJsIH0gPSBvcHRpb25zLCByZXN1bHRQYXRoID0gc3R1ZGlvUGF0aFRvSnNvblBhdGgob3B0aW9ucy5yZXN1bHRQYXRoKSwgZWRpdEluZm8gPSByZXNvbHZlRWRpdEluZm8oe1xuICAgIHJlc3VsdFBhdGgsXG4gICAgcmVzdWx0U291cmNlTWFwLFxuICAgIHN0dWRpb1VybFxuICB9KTtcbiAgaWYgKGVkaXRJbmZvKVxuICAgIHJldHVybiBjcmVhdGVFZGl0VXJsKGVkaXRJbmZvKTtcbn1cbmV4cG9ydCB7XG4gIERSQUZUU19GT0xERVIsXG4gIFZFUlNJT05fRk9MREVSLFxuICBhcHBseVNvdXJjZURvY3VtZW50cyxcbiAgY3JlYXRlRWRpdFVybCxcbiAgZ2V0RHJhZnRJZCxcbiAgZ2V0UHVibGlzaGVkSWQsXG4gIGdldFZlcnNpb25Gcm9tSWQsXG4gIGdldFZlcnNpb25JZCxcbiAgaXNEcmFmdElkLFxuICBpc1B1Ymxpc2hlZElkLFxuICBpc1ZlcnNpb25JZCxcbiAganNvblBhdGgsXG4gIGpzb25QYXRoVG9TdHVkaW9QYXRoLFxuICBwYXJzZUpzb25QYXRoLFxuICByZXNvbHZlRWRpdEluZm8sXG4gIHJlc29sdmVFZGl0VXJsLFxuICByZXNvbHZlTWFwcGluZyxcbiAgcmVzb2x2ZWRLZXllZFNvdXJjZVBhdGgsXG4gIHN0dWRpb1BhdGgsXG4gIHN0dWRpb1BhdGhUb0pzb25QYXRoLFxuICB3YWxrTWFwXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3NtLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/client/dist/csm.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/client/dist/index.browser.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sanity/client/dist/index.browser.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePatch: () => (/* binding */ BasePatch),\n/* harmony export */   BaseTransaction: () => (/* binding */ BaseTransaction),\n/* harmony export */   ChannelError: () => (/* binding */ ChannelError),\n/* harmony export */   ClientError: () => (/* binding */ ClientError),\n/* harmony export */   ConnectionFailedError: () => (/* binding */ ConnectionFailedError),\n/* harmony export */   CorsOriginError: () => (/* binding */ CorsOriginError),\n/* harmony export */   DisconnectError: () => (/* binding */ DisconnectError),\n/* harmony export */   MessageError: () => (/* binding */ MessageError),\n/* harmony export */   MessageParseError: () => (/* binding */ MessageParseError),\n/* harmony export */   ObservablePatch: () => (/* binding */ ObservablePatch),\n/* harmony export */   ObservableSanityClient: () => (/* binding */ ObservableSanityClient),\n/* harmony export */   ObservableTransaction: () => (/* binding */ ObservableTransaction),\n/* harmony export */   Patch: () => (/* binding */ Patch),\n/* harmony export */   SanityClient: () => (/* binding */ SanityClient),\n/* harmony export */   ServerError: () => (/* binding */ ServerError),\n/* harmony export */   Transaction: () => (/* binding */ Transaction),\n/* harmony export */   connectEventSource: () => (/* binding */ connectEventSource),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   \"default\": () => (/* binding */ deprecatedCreateClient),\n/* harmony export */   requester: () => (/* binding */ requester),\n/* harmony export */   unstable__adapter: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_0__.adapter),\n/* harmony export */   unstable__environment: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_0__.environment),\n/* harmony export */   validateApiPerspective: () => (/* binding */ validateApiPerspective)\n/* harmony export */ });\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-it */ \"(action-browser)/./node_modules/get-it/dist/index.react-server.js\");\n/* harmony import */ var get_it_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! get-it/middleware */ \"(action-browser)/./node_modules/get-it/dist/middleware.browser.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(action-browser)/./node_modules/rxjs/dist/esm5/index.js\");\n/* harmony import */ var _chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_chunks-es/stegaClean.js */ \"(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ \"(action-browser)/./node_modules/rxjs/dist/cjs/operators/index.js\");\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/client/csm */ \"(action-browser)/./node_modules/@sanity/client/dist/csm.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! nanoid */ \"(action-browser)/./node_modules/nanoid/index.js\");\n\n\n\n\n\n\n\n\nclass ClientError extends Error {\n  response;\n  statusCode = 400;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nclass ServerError extends Error {\n  response;\n  statusCode = 500;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nfunction extractErrorProps(res) {\n  const body = res.body, props = {\n    response: res,\n    statusCode: res.statusCode,\n    responseBody: stringifyBody(body, res),\n    message: \"\",\n    details: void 0\n  };\n  if (body.error && body.message)\n    return props.message = `${body.error} - ${body.message}`, props;\n  if (isMutationError(body) || isActionError(body)) {\n    const allItems = body.error.items || [], items = allItems.slice(0, 5).map((item) => item.error?.description).filter(Boolean);\n    let itemsStr = items.length ? `:\n- ${items.join(`\n- `)}` : \"\";\n    return allItems.length > 5 && (itemsStr += `\n...and ${allItems.length - 5} more`), props.message = `${body.error.description}${itemsStr}`, props.details = body.error, props;\n  }\n  return body.error && body.error.description ? (props.message = body.error.description, props.details = body.error, props) : (props.message = body.error || body.message || httpErrorMessage(res), props);\n}\nfunction isMutationError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"mutationError\" && typeof body.error.description == \"string\";\n}\nfunction isActionError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"actionError\" && typeof body.error.description == \"string\";\n}\nfunction isPlainObject(obj) {\n  return typeof obj == \"object\" && obj !== null && !Array.isArray(obj);\n}\nfunction httpErrorMessage(res) {\n  const statusMessage = res.statusMessage ? ` ${res.statusMessage}` : \"\";\n  return `${res.method}-request to ${res.url} resulted in HTTP ${res.statusCode}${statusMessage}`;\n}\nfunction stringifyBody(body, res) {\n  return (res.headers[\"content-type\"] || \"\").toLowerCase().indexOf(\"application/json\") !== -1 ? JSON.stringify(body, null, 2) : body;\n}\nclass CorsOriginError extends Error {\n  projectId;\n  addOriginUrl;\n  constructor({ projectId: projectId2 }) {\n    super(\"CorsOriginError\"), this.name = \"CorsOriginError\", this.projectId = projectId2;\n    const url = new URL(`https://sanity.io/manage/project/${projectId2}/api`);\n    if (typeof location < \"u\") {\n      const { origin } = location;\n      url.searchParams.set(\"cors\", \"add\"), url.searchParams.set(\"origin\", origin), this.addOriginUrl = url, this.message = `The current origin is not allowed to connect to the Live Content API. Add it here: ${url}`;\n    } else\n      this.message = `The current origin is not allowed to connect to the Live Content API. Change your configuration here: ${url}`;\n  }\n}\nconst httpError = {\n  onResponse: (res) => {\n    if (res.statusCode >= 500)\n      throw new ServerError(res);\n    if (res.statusCode >= 400)\n      throw new ClientError(res);\n    return res;\n  }\n};\nfunction printWarnings() {\n  const seen = {};\n  return {\n    onResponse: (res) => {\n      const warn = res.headers[\"x-sanity-warning\"], warnings = Array.isArray(warn) ? warn : [warn];\n      for (const msg of warnings)\n        !msg || seen[msg] || (seen[msg] = !0, console.warn(msg));\n      return res;\n    }\n  };\n}\nfunction defineHttpRequest(envMiddleware2) {\n  return (0,get_it__WEBPACK_IMPORTED_MODULE_0__.getIt)([\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry)({ shouldRetry }),\n    ...envMiddleware2,\n    printWarnings(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonRequest)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonResponse)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.progress)(),\n    httpError,\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.observable)({ implementation: rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable })\n  ]);\n}\nfunction shouldRetry(err, attempt, options) {\n  if (options.maxRetries === 0) return !1;\n  const isSafe = options.method === \"GET\" || options.method === \"HEAD\", isQuery2 = (options.uri || options.url).startsWith(\"/data/query\"), isRetriableResponse = err.response && (err.response.statusCode === 429 || err.response.statusCode === 502 || err.response.statusCode === 503);\n  return (isSafe || isQuery2) && isRetriableResponse ? !0 : get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry.shouldRetry(err, attempt, options);\n}\nconst BASE_URL = \"https://www.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nconst VALID_ASSET_TYPES = [\"image\", \"file\"], VALID_INSERT_LOCATIONS = [\"before\", \"after\", \"replace\"], dataset = (name) => {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name))\n    throw new Error(\n      \"Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters\"\n    );\n}, projectId = (id) => {\n  if (!/^[-a-z0-9]+$/i.test(id))\n    throw new Error(\"`projectId` can only contain only a-z, 0-9 and dashes\");\n}, validateAssetType = (type) => {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1)\n    throw new Error(`Invalid asset type: ${type}. Must be one of ${VALID_ASSET_TYPES.join(\", \")}`);\n}, validateObject = (op, val) => {\n  if (val === null || typeof val != \"object\" || Array.isArray(val))\n    throw new Error(`${op}() takes an object of properties`);\n}, validateDocumentId = (op, id) => {\n  if (typeof id != \"string\" || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes(\"..\"))\n    throw new Error(`${op}(): \"${id}\" is not a valid document ID`);\n}, requireDocumentId = (op, doc) => {\n  if (!doc._id)\n    throw new Error(`${op}() requires that the document contains an ID (\"_id\" property)`);\n  validateDocumentId(op, doc._id);\n}, validateDocumentType = (op, type) => {\n  if (typeof type != \"string\")\n    throw new Error(`\\`${op}()\\`: \\`${type}\\` is not a valid document type`);\n}, requireDocumentType = (op, doc) => {\n  if (!doc._type)\n    throw new Error(`\\`${op}()\\` requires that the document contains a type (\\`_type\\` property)`);\n  validateDocumentType(op, doc._type);\n}, validateVersionIdMatch = (builtVersionId, document) => {\n  if (document._id && document._id !== builtVersionId)\n    throw new Error(\n      `The provided document ID (\\`${document._id}\\`) does not match the generated version ID (\\`${builtVersionId}\\`)`\n    );\n}, validateInsert = (at, selector, items) => {\n  const signature = \"insert(at, selector, items)\";\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    const valid = VALID_INSERT_LOCATIONS.map((loc) => `\"${loc}\"`).join(\", \");\n    throw new Error(`${signature} takes an \"at\"-argument which is one of: ${valid}`);\n  }\n  if (typeof selector != \"string\")\n    throw new Error(`${signature} takes a \"selector\"-argument which must be a string`);\n  if (!Array.isArray(items))\n    throw new Error(`${signature} takes an \"items\"-argument which must be an array`);\n}, hasDataset = (config) => {\n  if (!config.dataset)\n    throw new Error(\"`dataset` must be provided to perform queries\");\n  return config.dataset || \"\";\n}, requestTag = (tag) => {\n  if (typeof tag != \"string\" || !/^[a-z0-9._-]{1,75}$/i.test(tag))\n    throw new Error(\n      \"Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.\"\n    );\n  return tag;\n}, resourceConfig = (config) => {\n  if (!config[\"~experimental_resource\"])\n    throw new Error(\"`resource` must be provided to perform resource queries\");\n  const { type, id } = config[\"~experimental_resource\"];\n  switch (type) {\n    case \"dataset\": {\n      if (id.split(\".\").length !== 2)\n        throw new Error('Dataset resource ID must be in the format \"project.dataset\"');\n      return;\n    }\n    case \"dashboard\":\n    case \"media-library\":\n    case \"canvas\":\n      return;\n    default:\n      throw new Error(`Unsupported resource type: ${type.toString()}`);\n  }\n}, resourceGuard = (service, config) => {\n  if (config[\"~experimental_resource\"])\n    throw new Error(`\\`${service}\\` does not support resource-based operations`);\n};\nfunction once(fn) {\n  let didCall = !1, returnValue;\n  return (...args) => (didCall || (returnValue = fn(...args), didCall = !0), returnValue);\n}\nconst createWarningPrinter = (message) => (\n  // eslint-disable-next-line no-console\n  once((...args) => console.warn(message.join(\" \"), ...args))\n), printCdnAndWithCredentialsWarning = createWarningPrinter([\n  \"Because you set `withCredentials` to true, we will override your `useCdn`\",\n  \"setting to be false since (cookie-based) credentials are never set on the CDN\"\n]), printCdnWarning = createWarningPrinter([\n  \"Since you haven't set a value for `useCdn`, we will deliver content using our\",\n  \"global, edge-cached API-CDN. If you wish to have content delivered faster, set\",\n  \"`useCdn: false` to use the Live API. Note: You may incur higher costs using the live API.\"\n]), printCdnPreviewDraftsWarning = createWarningPrinter([\n  \"The Sanity client is configured with the `perspective` set to `drafts` or `previewDrafts`, which doesn't support the API-CDN.\",\n  \"The Live API will be used instead. Set `useCdn: false` in your configuration to hide this warning.\"\n]), printPreviewDraftsDeprecationWarning = createWarningPrinter([\n  \"The `previewDrafts` perspective has been renamed to  `drafts` and will be removed in a future API version\"\n]), printBrowserTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.\",\n  `See ${generateHelpUrl(\n    \"js-client-browser-token\"\n  )} for more information and how to hide this warning.`\n]), printCredentialedTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token, but also provided `withCredentials: true`.\",\n  \"This is no longer supported - only token will be used - remove `withCredentials: true`.\"\n]), printNoApiVersionSpecifiedWarning = createWarningPrinter([\n  \"Using the Sanity client without specifying an API version is deprecated.\",\n  `See ${generateHelpUrl(\"js-client-api-version\")}`\n]), printNoDefaultExport = createWarningPrinter([\n  \"The default export of @sanity/client has been deprecated. Use the named export `createClient` instead.\"\n]), defaultCdnHost = \"apicdn.sanity.io\", defaultConfig = {\n  apiHost: \"https://api.sanity.io\",\n  apiVersion: \"1\",\n  useProjectHostname: !0,\n  stega: { enabled: !1 }\n}, LOCALHOSTS = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"], isLocal = (host) => LOCALHOSTS.indexOf(host) !== -1;\nfunction validateApiVersion(apiVersion) {\n  if (apiVersion === \"1\" || apiVersion === \"X\")\n    return;\n  const apiDate = new Date(apiVersion);\n  if (!(/^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0))\n    throw new Error(\"Invalid API version string, expected `1` or date in format `YYYY-MM-DD`\");\n}\nfunction validateApiPerspective(perspective) {\n  if (Array.isArray(perspective) && perspective.length > 1 && perspective.includes(\"raw\"))\n    throw new TypeError(\n      'Invalid API perspective value: \"raw\". The raw-perspective can not be combined with other perspectives'\n    );\n}\nconst initConfig = (config, prevConfig) => {\n  const specifiedConfig = {\n    ...prevConfig,\n    ...config,\n    stega: {\n      ...typeof prevConfig.stega == \"boolean\" ? { enabled: prevConfig.stega } : prevConfig.stega || defaultConfig.stega,\n      ...typeof config.stega == \"boolean\" ? { enabled: config.stega } : config.stega || {}\n    }\n  };\n  specifiedConfig.apiVersion || printNoApiVersionSpecifiedWarning();\n  const newConfig = {\n    ...defaultConfig,\n    ...specifiedConfig\n  }, projectBased = newConfig.useProjectHostname && !newConfig[\"~experimental_resource\"];\n  if (typeof Promise > \"u\") {\n    const helpUrl = generateHelpUrl(\"js-client-promise-polyfill\");\n    throw new Error(`No native Promise-implementation found, polyfill needed - see ${helpUrl}`);\n  }\n  if (projectBased && !newConfig.projectId)\n    throw new Error(\"Configuration must contain `projectId`\");\n  if (newConfig[\"~experimental_resource\"] && resourceConfig(newConfig), typeof newConfig.perspective < \"u\" && validateApiPerspective(newConfig.perspective), \"encodeSourceMap\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMap' is not supported in '@sanity/client'. Did you mean 'stega.enabled'?\"\n    );\n  if (\"encodeSourceMapAtPath\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMapAtPath' is not supported in '@sanity/client'. Did you mean 'stega.filter'?\"\n    );\n  if (typeof newConfig.stega.enabled != \"boolean\")\n    throw new Error(`stega.enabled must be a boolean, received ${newConfig.stega.enabled}`);\n  if (newConfig.stega.enabled && newConfig.stega.studioUrl === void 0)\n    throw new Error(\"stega.studioUrl must be defined when stega.enabled is true\");\n  if (newConfig.stega.enabled && typeof newConfig.stega.studioUrl != \"string\" && typeof newConfig.stega.studioUrl != \"function\")\n    throw new Error(\n      `stega.studioUrl must be a string or a function, received ${newConfig.stega.studioUrl}`\n    );\n  const isBrowser = typeof window < \"u\" && window.location && window.location.hostname, isLocalhost = isBrowser && isLocal(window.location.hostname), hasToken = !!newConfig.token;\n  newConfig.withCredentials && hasToken && (printCredentialedTokenWarning(), newConfig.withCredentials = !1), isBrowser && isLocalhost && hasToken && newConfig.ignoreBrowserTokenWarning !== !0 ? printBrowserTokenWarning() : typeof newConfig.useCdn > \"u\" && printCdnWarning(), projectBased && projectId(newConfig.projectId), newConfig.dataset && dataset(newConfig.dataset), \"requestTagPrefix\" in newConfig && (newConfig.requestTagPrefix = newConfig.requestTagPrefix ? requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, \"\") : void 0), newConfig.apiVersion = `${newConfig.apiVersion}`.replace(/^v/, \"\"), newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost, newConfig.useCdn === !0 && newConfig.withCredentials && printCdnAndWithCredentialsWarning(), newConfig.useCdn = newConfig.useCdn !== !1 && !newConfig.withCredentials, validateApiVersion(newConfig.apiVersion);\n  const hostParts = newConfig.apiHost.split(\"://\", 2), protocol = hostParts[0], host = hostParts[1], cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n  return projectBased ? (newConfig.url = `${protocol}://${newConfig.projectId}.${host}/v${newConfig.apiVersion}`, newConfig.cdnUrl = `${protocol}://${newConfig.projectId}.${cdnHost}/v${newConfig.apiVersion}`) : (newConfig.url = `${newConfig.apiHost}/v${newConfig.apiVersion}`, newConfig.cdnUrl = newConfig.url), newConfig;\n};\nclass ConnectionFailedError extends Error {\n  name = \"ConnectionFailedError\";\n}\nclass DisconnectError extends Error {\n  name = \"DisconnectError\";\n  reason;\n  constructor(message, reason, options = {}) {\n    super(message, options), this.reason = reason;\n  }\n}\nclass ChannelError extends Error {\n  name = \"ChannelError\";\n  data;\n  constructor(message, data) {\n    super(message), this.data = data;\n  }\n}\nclass MessageError extends Error {\n  name = \"MessageError\";\n  data;\n  constructor(message, data, options = {}) {\n    super(message, options), this.data = data;\n  }\n}\nclass MessageParseError extends Error {\n  name = \"MessageParseError\";\n}\nconst REQUIRED_EVENTS = [\"channelError\", \"disconnect\"];\nfunction connectEventSource(initEventSource, events) {\n  return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.defer)(() => {\n    const es = initEventSource();\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.isObservable)(es) ? es : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(es);\n  }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.mergeMap)((es) => connectWithESInstance(es, events)));\n}\nfunction connectWithESInstance(es, events) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const emitOpen = events.includes(\"open\"), emitReconnect = events.includes(\"reconnect\");\n    function onError(evt) {\n      if (\"data\" in evt) {\n        const [parseError, event] = parseEvent(evt);\n        observer.error(\n          parseError ? new MessageParseError(\"Unable to parse EventSource error message\", { cause: event }) : new MessageError((event?.data).message, event)\n        );\n        return;\n      }\n      es.readyState === es.CLOSED ? observer.error(new ConnectionFailedError(\"EventSource connection failed\")) : emitReconnect && observer.next({ type: \"reconnect\" });\n    }\n    function onOpen() {\n      observer.next({ type: \"open\" });\n    }\n    function onMessage(message) {\n      const [parseError, event] = parseEvent(message);\n      if (parseError) {\n        observer.error(\n          new MessageParseError(\"Unable to parse EventSource message\", { cause: parseError })\n        );\n        return;\n      }\n      if (message.type === \"channelError\") {\n        observer.error(new ChannelError(extractErrorMessage(event?.data), event.data));\n        return;\n      }\n      if (message.type === \"disconnect\") {\n        observer.error(\n          new DisconnectError(\n            `Server disconnected client: ${event.data?.reason || \"unknown error\"}`\n          )\n        );\n        return;\n      }\n      observer.next({\n        type: message.type,\n        id: message.lastEventId,\n        ...event.data ? { data: event.data } : {}\n      });\n    }\n    es.addEventListener(\"error\", onError), emitOpen && es.addEventListener(\"open\", onOpen);\n    const cleanedEvents = [.../* @__PURE__ */ new Set([...REQUIRED_EVENTS, ...events])].filter((type) => type !== \"error\" && type !== \"open\" && type !== \"reconnect\");\n    return cleanedEvents.forEach((type) => es.addEventListener(type, onMessage)), () => {\n      es.removeEventListener(\"error\", onError), emitOpen && es.removeEventListener(\"open\", onOpen), cleanedEvents.forEach((type) => es.removeEventListener(type, onMessage)), es.close();\n    };\n  });\n}\nfunction parseEvent(message) {\n  try {\n    const data = typeof message.data == \"string\" && JSON.parse(message.data);\n    return [\n      null,\n      {\n        type: message.type,\n        id: message.lastEventId,\n        ...isEmptyObject(data) ? {} : { data }\n      }\n    ];\n  } catch (err) {\n    return [err, null];\n  }\n}\nfunction extractErrorMessage(err) {\n  return err.error ? err.error.description ? err.error.description : typeof err.error == \"string\" ? err.error : JSON.stringify(err.error, null, 2) : err.message || \"Unknown listener error\";\n}\nfunction isEmptyObject(data) {\n  for (const _ in data)\n    return !1;\n  return !0;\n}\nfunction getSelection(sel) {\n  if (typeof sel == \"string\")\n    return { id: sel };\n  if (Array.isArray(sel))\n    return { query: \"*[_id in $ids]\", params: { ids: sel } };\n  if (typeof sel == \"object\" && sel !== null && \"query\" in sel && typeof sel.query == \"string\")\n    return \"params\" in sel && typeof sel.params == \"object\" && sel.params !== null ? { query: sel.query, params: sel.params } : { query: sel.query };\n  const selectionOpts = [\n    \"* Document ID (<docId>)\",\n    \"* Array of document IDs\",\n    \"* Object containing `query`\"\n  ].join(`\n`);\n  throw new Error(`Unknown selection - must be one of:\n\n${selectionOpts}`);\n}\nclass BasePatch {\n  selection;\n  operations;\n  constructor(selection, operations = {}) {\n    this.selection = selection, this.operations = operations;\n  }\n  /**\n   * Sets the given attributes to the document. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  set(attrs) {\n    return this._assign(\"set\", attrs);\n  }\n  /**\n   * Sets the given attributes to the document if they are not currently set. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  setIfMissing(attrs) {\n    return this._assign(\"setIfMissing\", attrs);\n  }\n  /**\n   * Performs a \"diff-match-patch\" operation on the string attributes provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to perform operation on. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"dmp\"\\}\n   */\n  diffMatchPatch(attrs) {\n    return validateObject(\"diffMatchPatch\", attrs), this._assign(\"diffMatchPatch\", attrs);\n  }\n  /**\n   * Unsets the attribute paths provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attribute paths to unset.\n   */\n  unset(attrs) {\n    if (!Array.isArray(attrs))\n      throw new Error(\"unset(attrs) takes an array of attributes to unset, non-array given\");\n    return this.operations = Object.assign({}, this.operations, { unset: attrs }), this;\n  }\n  /**\n   * Increment a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to increment, values representing the number to increment by.\n   */\n  inc(attrs) {\n    return this._assign(\"inc\", attrs);\n  }\n  /**\n   * Decrement a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to decrement, values representing the number to decrement by.\n   */\n  dec(attrs) {\n    return this._assign(\"dec\", attrs);\n  }\n  /**\n   * Provides methods for modifying arrays, by inserting, appending and replacing elements via a JSONPath expression.\n   *\n   * @param at - Location to insert at, relative to the given selector, or 'replace' the matched path\n   * @param selector - JSONPath expression, eg `comments[-1]` or `blocks[_key==\"abc123\"]`\n   * @param items - Array of items to insert/replace\n   */\n  insert(at, selector, items) {\n    return validateInsert(at, selector, items), this._assign(\"insert\", { [at]: selector, items });\n  }\n  /**\n   * Append the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to append to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to append to the array\n   */\n  append(selector, items) {\n    return this.insert(\"after\", `${selector}[-1]`, items);\n  }\n  /**\n   * Prepend the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to prepend to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to prepend to the array\n   */\n  prepend(selector, items) {\n    return this.insert(\"before\", `${selector}[0]`, items);\n  }\n  /**\n   * Change the contents of an array by removing existing elements and/or adding new elements.\n   *\n   * @param selector - Attribute or JSONPath expression for array\n   * @param start - Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.x\n   * @param deleteCount - An integer indicating the number of old array elements to remove.\n   * @param items - The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.\n   */\n  splice(selector, start, deleteCount, items) {\n    const delAll = typeof deleteCount > \"u\" || deleteCount === -1, startIndex = start < 0 ? start - 1 : start, delCount = delAll ? -1 : Math.max(0, start + deleteCount), delRange = startIndex < 0 && delCount >= 0 ? \"\" : delCount, rangeSelector = `${selector}[${startIndex}:${delRange}]`;\n    return this.insert(\"replace\", rangeSelector, items || []);\n  }\n  /**\n   * Adds a revision clause, preventing the document from being patched if the `_rev` property does not match the given value\n   *\n   * @param rev - Revision to lock the patch to\n   */\n  ifRevisionId(rev) {\n    return this.operations.ifRevisionID = rev, this;\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  serialize() {\n    return { ...getSelection(this.selection), ...this.operations };\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the patch of all operations\n   */\n  reset() {\n    return this.operations = {}, this;\n  }\n  _assign(op, props, merge2 = !0) {\n    return validateObject(op, props), this.operations = Object.assign({}, this.operations, {\n      [op]: Object.assign({}, merge2 && this.operations[op] || {}, props)\n    }), this;\n  }\n  _set(op, props) {\n    return this._assign(op, props, !1);\n  }\n}\nclass ObservablePatch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new ObservablePatch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nclass Patch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new Patch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nconst defaultMutateOptions = { returnDocuments: !1 };\nclass BaseTransaction {\n  operations;\n  trxId;\n  constructor(operations = [], transactionId) {\n    this.operations = operations, this.trxId = transactionId;\n  }\n  /**\n   * Creates a new Sanity document. If `_id` is provided and already exists, the mutation will fail. If no `_id` is given, one will automatically be generated by the database.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create. Requires a `_type` property.\n   */\n  create(doc) {\n    return validateObject(\"create\", doc), this._add({ create: doc });\n  }\n  /**\n   * Creates a new Sanity document. If a document with the same `_id` already exists, the create operation will be ignored.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */\n  createIfNotExists(doc) {\n    const op = \"createIfNotExists\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Creates a new Sanity document, or replaces an existing one if the same `_id` is already used.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create or replace. Requires `_id` and `_type` properties.\n   */\n  createOrReplace(doc) {\n    const op = \"createOrReplace\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Deletes the document with the given document ID\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to delete\n   */\n  delete(documentId) {\n    return validateDocumentId(\"delete\", documentId), this._add({ delete: { id: documentId } });\n  }\n  transactionId(id) {\n    return id ? (this.trxId = id, this) : this.trxId;\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  serialize() {\n    return [...this.operations];\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the transaction of all operations\n   */\n  reset() {\n    return this.operations = [], this;\n  }\n  _add(mut) {\n    return this.operations.push(mut), this;\n  }\n}\nclass Transaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new Transaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\", isPatch = typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof Patch, isMutationSelection = typeof patchOrDocumentId == \"object\" && (\"query\" in patchOrDocumentId || \"id\" in patchOrDocumentId);\n    if (isPatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new Patch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof Patch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    if (isMutationSelection) {\n      const patch = new Patch(patchOrDocumentId, patchOps || {}, this.#client);\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nclass ObservableTransaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new ObservableTransaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\";\n    if (typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof ObservablePatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new ObservablePatch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof ObservablePatch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nconst projectHeader = \"X-Sanity-Project-ID\";\nfunction requestOptions(config, overrides = {}) {\n  const headers = {}, token = overrides.token || config.token;\n  token && (headers.Authorization = `Bearer ${token}`), !overrides.useGlobalApi && !config.useProjectHostname && config.projectId && (headers[projectHeader] = config.projectId);\n  const withCredentials = !!(typeof overrides.withCredentials > \"u\" ? config.withCredentials : overrides.withCredentials), timeout = typeof overrides.timeout > \"u\" ? config.timeout : overrides.timeout;\n  return Object.assign({}, overrides, {\n    headers: Object.assign({}, headers, overrides.headers || {}),\n    timeout: typeof timeout > \"u\" ? 5 * 60 * 1e3 : timeout,\n    proxy: overrides.proxy || config.proxy,\n    json: !0,\n    withCredentials,\n    fetch: typeof overrides.fetch == \"object\" && typeof config.fetch == \"object\" ? { ...config.fetch, ...overrides.fetch } : overrides.fetch || config.fetch\n  });\n}\nconst encodeQueryString = ({\n  query,\n  params = {},\n  options = {}\n}) => {\n  const searchParams = new URLSearchParams(), { tag, includeMutations, returnQuery, ...opts } = options;\n  tag && searchParams.append(\"tag\", tag), searchParams.append(\"query\", query);\n  for (const [key, value] of Object.entries(params))\n    searchParams.append(`$${key}`, JSON.stringify(value));\n  for (const [key, value] of Object.entries(opts))\n    value && searchParams.append(key, `${value}`);\n  return returnQuery === !1 && searchParams.append(\"returnQuery\", \"false\"), includeMutations === !1 && searchParams.append(\"includeMutations\", \"false\"), `?${searchParams}`;\n}, excludeFalsey = (param, defValue) => param === !1 ? void 0 : typeof param > \"u\" ? defValue : param, getMutationQuery = (options = {}) => ({\n  dryRun: options.dryRun,\n  returnIds: !0,\n  returnDocuments: excludeFalsey(options.returnDocuments, !0),\n  visibility: options.visibility || \"sync\",\n  autoGenerateArrayKeys: options.autoGenerateArrayKeys,\n  skipCrossDatasetReferenceValidation: options.skipCrossDatasetReferenceValidation\n}), isResponse = (event) => event.type === \"response\", getBody = (event) => event.body, indexBy = (docs, attr) => docs.reduce((indexed, doc) => (indexed[attr(doc)] = doc, indexed), /* @__PURE__ */ Object.create(null)), getQuerySizeLimit = 11264;\nfunction _fetch(client, httpRequest, _stega, query, _params = {}, options = {}) {\n  const stega = \"stega\" in options ? {\n    ..._stega || {},\n    ...typeof options.stega == \"boolean\" ? { enabled: options.stega } : options.stega || {}\n  } : _stega, params = stega.enabled ? (0,_chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_3__.stegaClean)(_params) : _params, mapResponse = options.filterResponse === !1 ? (res) => res : (res) => res.result, { cache, next, ...opts } = {\n    // Opt out of setting a `signal` on an internal `fetch` if one isn't provided.\n    // This is necessary in React Server Components to avoid opting out of Request Memoization.\n    useAbortSignal: typeof options.signal < \"u\",\n    // Set `resultSourceMap' when stega is enabled, as it's required for encoding.\n    resultSourceMap: stega.enabled ? \"withKeyArraySelector\" : options.resultSourceMap,\n    ...options,\n    // Default to not returning the query, unless `filterResponse` is `false`,\n    // or `returnQuery` is explicitly set. `true` is the default in Content Lake, so skip if truthy\n    returnQuery: options.filterResponse === !1 && options.returnQuery !== !1\n  }, reqOpts = typeof cache < \"u\" || typeof next < \"u\" ? { ...opts, fetch: { cache, next } } : opts, $request = _dataRequest(client, httpRequest, \"query\", { query, params }, reqOpts);\n  return stega.enabled ? $request.pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.combineLatestWith)(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.from)(\n        __webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ./_chunks-es/stegaEncodeSourceMap.js */ \"(action-browser)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\")).then(function(n) {\n          return n.stegaEncodeSourceMap$1;\n        }).then(\n          ({ stegaEncodeSourceMap }) => stegaEncodeSourceMap\n        )\n      )\n    ),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(\n      ([res, stegaEncodeSourceMap]) => {\n        const result = stegaEncodeSourceMap(res.result, res.resultSourceMap, stega);\n        return mapResponse({ ...res, result });\n      }\n    )\n  ) : $request.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(mapResponse));\n}\nfunction _getDocument(client, httpRequest, id, opts = {}) {\n  const docId = (() => {\n    if (!opts.releaseId)\n      return id;\n    const versionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.getVersionFromId)(id);\n    if (!versionId) {\n      if ((0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.isDraftId)(id))\n        throw new Error(\n          `The document ID (\\`${id}\\`) is a draft, but \\`options.releaseId\\` is set as \\`${opts.releaseId}\\``\n        );\n      return (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.getVersionId)(id, opts.releaseId);\n    }\n    if (versionId !== opts.releaseId)\n      throw new Error(\n        `The document ID (\\`${id}\\`) is already a version of \\`${versionId}\\` release, but this does not match the provided \\`options.releaseId\\` (\\`${opts.releaseId}\\`)`\n      );\n    return id;\n  })(), options = {\n    uri: _getDataUrl(client, \"doc\", docId),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((event) => event.body.documents && event.body.documents[0])\n  );\n}\nfunction _getDocuments(client, httpRequest, ids, opts = {}) {\n  const options = {\n    uri: _getDataUrl(client, \"doc\", ids.join(\",\")),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((event) => {\n      const indexed = indexBy(event.body.documents || [], (doc) => doc._id);\n      return ids.map((id) => indexed[id] || null);\n    })\n  );\n}\nfunction _getReleaseDocuments(client, httpRequest, releaseId, opts = {}) {\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"query\",\n    {\n      query: \"*[sanity::partOfRelease($releaseId)]\",\n      params: {\n        releaseId\n      }\n    },\n    opts\n  );\n}\nfunction _createIfNotExists(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createIfNotExists\", doc), _create(client, httpRequest, doc, \"createIfNotExists\", options);\n}\nfunction _createOrReplace(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createOrReplace\", doc), _create(client, httpRequest, doc, \"createOrReplace\", options);\n}\nfunction _createVersion(client, httpRequest, doc, publishedId, options) {\n  return requireDocumentId(\"createVersion\", doc), requireDocumentType(\"createVersion\", doc), _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.create\",\n    publishedId,\n    document: doc\n  }, options);\n}\nfunction _delete(client, httpRequest, selection, options) {\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"mutate\",\n    { mutations: [{ delete: getSelection(selection) }] },\n    options\n  );\n}\nfunction _discardVersion(client, httpRequest, versionId, purge = !1, options) {\n  return _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.discard\",\n    versionId,\n    purge\n  }, options);\n}\nfunction _replaceVersion(client, httpRequest, doc, options) {\n  return requireDocumentId(\"replaceVersion\", doc), requireDocumentType(\"replaceVersion\", doc), _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.replace\",\n    document: doc\n  }, options);\n}\nfunction _unpublishVersion(client, httpRequest, versionId, publishedId, options) {\n  return _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.unpublish\",\n    versionId,\n    publishedId\n  }, options);\n}\nfunction _mutate(client, httpRequest, mutations, options) {\n  let mut;\n  mutations instanceof Patch || mutations instanceof ObservablePatch ? mut = { patch: mutations.serialize() } : mutations instanceof Transaction || mutations instanceof ObservableTransaction ? mut = mutations.serialize() : mut = mutations;\n  const muts = Array.isArray(mut) ? mut : [mut], transactionId = options && options.transactionId || void 0;\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: muts, transactionId }, options);\n}\nfunction _action(client, httpRequest, actions, options) {\n  const acts = Array.isArray(actions) ? actions : [actions], transactionId = options && options.transactionId || void 0, skipCrossDatasetReferenceValidation = options && options.skipCrossDatasetReferenceValidation || void 0, dryRun = options && options.dryRun || void 0;\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"actions\",\n    { actions: acts, transactionId, skipCrossDatasetReferenceValidation, dryRun },\n    options\n  );\n}\nfunction _dataRequest(client, httpRequest, endpoint, body, options = {}) {\n  const isMutation = endpoint === \"mutate\", isAction = endpoint === \"actions\", isQuery2 = endpoint === \"query\", strQuery = isMutation || isAction ? \"\" : encodeQueryString(body), useGet = !isMutation && !isAction && strQuery.length < getQuerySizeLimit, stringQuery = useGet ? strQuery : \"\", returnFirst = options.returnFirst, { timeout, token, tag, headers, returnQuery, lastLiveEventId, cacheMode } = options, uri = _getDataUrl(client, endpoint, stringQuery), reqOptions = {\n    method: useGet ? \"GET\" : \"POST\",\n    uri,\n    json: !0,\n    body: useGet ? void 0 : body,\n    query: isMutation && getMutationQuery(options),\n    timeout,\n    headers,\n    token,\n    tag,\n    returnQuery,\n    perspective: options.perspective,\n    resultSourceMap: options.resultSourceMap,\n    lastLiveEventId: Array.isArray(lastLiveEventId) ? lastLiveEventId[0] : lastLiveEventId,\n    cacheMode,\n    canUseCdn: isQuery2,\n    signal: options.signal,\n    fetch: options.fetch,\n    useAbortSignal: options.useAbortSignal,\n    useCdn: options.useCdn\n  };\n  return _requestObservable(client, httpRequest, reqOptions).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(getBody),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((res) => {\n      if (!isMutation)\n        return res;\n      const results = res.results || [];\n      if (options.returnDocuments)\n        return returnFirst ? results[0] && results[0].document : results.map((mut) => mut.document);\n      const key = returnFirst ? \"documentId\" : \"documentIds\", ids = returnFirst ? results[0] && results[0].id : results.map((mut) => mut.id);\n      return {\n        transactionId: res.transactionId,\n        results,\n        [key]: ids\n      };\n    })\n  );\n}\nfunction _create(client, httpRequest, doc, op, options = {}) {\n  const mutation = { [op]: doc }, opts = Object.assign({ returnFirst: !0, returnDocuments: !0 }, options);\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: [mutation] }, opts);\n}\nconst hasDataConfig = (client) => client.config().dataset !== void 0 && client.config().projectId !== void 0 || client.config()[\"~experimental_resource\"] !== void 0, isQuery = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"query\")), isMutate = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"mutate\")), isDoc = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"doc\", \"\")), isListener = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"listen\")), isHistory = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"history\", \"\")), isData = (client, uri) => uri.startsWith(\"/data/\") || isQuery(client, uri) || isMutate(client, uri) || isDoc(client, uri) || isListener(client, uri) || isHistory(client, uri);\nfunction _requestObservable(client, httpRequest, options) {\n  const uri = options.url || options.uri, config = client.config(), canUseCdn = typeof options.canUseCdn > \"u\" ? [\"GET\", \"HEAD\"].indexOf(options.method || \"GET\") >= 0 && isData(client, uri) : options.canUseCdn;\n  let useCdn = (options.useCdn ?? config.useCdn) && canUseCdn;\n  const tag = options.tag && config.requestTagPrefix ? [config.requestTagPrefix, options.tag].join(\".\") : options.tag || config.requestTagPrefix;\n  if (tag && options.tag !== null && (options.query = { tag: requestTag(tag), ...options.query }), [\"GET\", \"HEAD\", \"POST\"].indexOf(options.method || \"GET\") >= 0 && isQuery(client, uri)) {\n    const resultSourceMap = options.resultSourceMap ?? config.resultSourceMap;\n    resultSourceMap !== void 0 && resultSourceMap !== !1 && (options.query = { resultSourceMap, ...options.query });\n    const perspectiveOption = options.perspective || config.perspective;\n    typeof perspectiveOption < \"u\" && (perspectiveOption === \"previewDrafts\" && printPreviewDraftsDeprecationWarning(), validateApiPerspective(perspectiveOption), options.query = {\n      perspective: Array.isArray(perspectiveOption) ? perspectiveOption.join(\",\") : perspectiveOption,\n      ...options.query\n    }, (Array.isArray(perspectiveOption) && perspectiveOption.length > 0 || // previewDrafts was renamed to drafts, but keep for backwards compat\n    perspectiveOption === \"previewDrafts\" || perspectiveOption === \"drafts\") && useCdn && (useCdn = !1, printCdnPreviewDraftsWarning())), options.lastLiveEventId && (options.query = { ...options.query, lastLiveEventId: options.lastLiveEventId }), options.returnQuery === !1 && (options.query = { returnQuery: \"false\", ...options.query }), useCdn && options.cacheMode == \"noStale\" && (options.query = { cacheMode: \"noStale\", ...options.query });\n  }\n  const reqOptions = requestOptions(\n    config,\n    Object.assign({}, options, {\n      url: _getUrl(client, uri, useCdn)\n    })\n  ), request = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable(\n    (subscriber) => httpRequest(reqOptions, config.requester).subscribe(subscriber)\n  );\n  return options.signal ? request.pipe(_withAbortSignal(options.signal)) : request;\n}\nfunction _request(client, httpRequest, options) {\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)((event) => event.type === \"response\"),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((event) => event.body)\n  );\n}\nfunction _getDataUrl(client, operation, path) {\n  const config = client.config();\n  if (config[\"~experimental_resource\"]) {\n    resourceConfig(config);\n    const resourceBase = resourceDataBase(config), uri2 = path !== void 0 ? `${operation}/${path}` : operation;\n    return `${resourceBase}/${uri2}`.replace(/\\/($|\\?)/, \"$1\");\n  }\n  const catalog = hasDataset(config), baseUri = `/${operation}/${catalog}`;\n  return `/data${path !== void 0 ? `${baseUri}/${path}` : baseUri}`.replace(/\\/($|\\?)/, \"$1\");\n}\nfunction _getUrl(client, uri, canUseCdn = !1) {\n  const { url, cdnUrl } = client.config();\n  return `${canUseCdn ? cdnUrl : url}/${uri.replace(/^\\//, \"\")}`;\n}\nfunction _withAbortSignal(signal) {\n  return (input) => new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const abort = () => observer.error(_createAbortError(signal));\n    if (signal && signal.aborted) {\n      abort();\n      return;\n    }\n    const subscription = input.subscribe(observer);\n    return signal.addEventListener(\"abort\", abort), () => {\n      signal.removeEventListener(\"abort\", abort), subscription.unsubscribe();\n    };\n  });\n}\nconst isDomExceptionSupported = !!globalThis.DOMException;\nfunction _createAbortError(signal) {\n  if (isDomExceptionSupported)\n    return new DOMException(signal?.reason ?? \"The operation was aborted.\", \"AbortError\");\n  const error = new Error(signal?.reason ?? \"The operation was aborted.\");\n  return error.name = \"AbortError\", error;\n}\nconst resourceDataBase = (config) => {\n  if (!config[\"~experimental_resource\"])\n    throw new Error(\"`resource` must be provided to perform resource queries\");\n  const { type, id } = config[\"~experimental_resource\"];\n  switch (type) {\n    case \"dataset\": {\n      const segments = id.split(\".\");\n      if (segments.length !== 2)\n        throw new Error('Dataset ID must be in the format \"project.dataset\"');\n      return `/projects/${segments[0]}/datasets/${segments[1]}`;\n    }\n    case \"canvas\":\n      return `/canvases/${id}`;\n    case \"media-library\":\n      return `/media-libraries/${id}`;\n    case \"dashboard\":\n      return `/dashboards/${id}`;\n    default:\n      throw new Error(`Unsupported resource type: ${type.toString()}`);\n  }\n};\nfunction _generate(client, httpRequest, request) {\n  const dataset2 = hasDataset(client.config());\n  return _request(client, httpRequest, {\n    method: \"POST\",\n    uri: `/agent/action/generate/${dataset2}`,\n    body: request\n  });\n}\nfunction _transform(client, httpRequest, request) {\n  const dataset2 = hasDataset(client.config());\n  return _request(client, httpRequest, {\n    method: \"POST\",\n    uri: `/agent/action/transform/${dataset2}`,\n    body: request\n  });\n}\nfunction _translate(client, httpRequest, request) {\n  const dataset2 = hasDataset(client.config());\n  return _request(client, httpRequest, {\n    method: \"POST\",\n    uri: `/agent/action/translate/${dataset2}`,\n    body: request\n  });\n}\nclass ObservableAgentsActionClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Run an instruction to generate content in a target document.\n   * @param request - instruction request\n   */\n  generate(request) {\n    return _generate(this.#client, this.#httpRequest, request);\n  }\n  /**\n   * Transform a target document based on a source.\n   * @param request - translation request\n   */\n  transform(request) {\n    return _transform(this.#client, this.#httpRequest, request);\n  }\n  /**\n   * Translate a target document based on a source.\n   * @param request - translation request\n   */\n  translate(request) {\n    return _translate(this.#client, this.#httpRequest, request);\n  }\n}\nclass AgentActionsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Run an instruction to generate content in a target document.\n   * @param request - instruction request\n   */\n  generate(request) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_generate(this.#client, this.#httpRequest, request));\n  }\n  /**\n   * Transform a target document based on a source.\n   * @param request - translation request\n   */\n  transform(request) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_transform(this.#client, this.#httpRequest, request));\n  }\n  /**\n   * Translate a target document based on a source.\n   * @param request - translation request\n   */\n  translate(request) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_translate(this.#client, this.#httpRequest, request));\n  }\n}\nclass ObservableAssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    return _upload(this.#client, this.#httpRequest, assetType, body, options);\n  }\n}\nclass AssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    const observable2 = _upload(this.#client, this.#httpRequest, assetType, body, options);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      observable2.pipe(\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)((event) => event.type === \"response\"),\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(\n          (event) => event.body.document\n        )\n      )\n    );\n  }\n}\nfunction _upload(client, httpRequest, assetType, body, opts = {}) {\n  validateAssetType(assetType);\n  let meta = opts.extract || void 0;\n  meta && !meta.length && (meta = [\"none\"]);\n  const config = client.config(), options = optionsFromFile(opts, body), { tag, label, title, description, creditLine, filename, source } = options, query = {\n    label,\n    title,\n    description,\n    filename,\n    meta,\n    creditLine\n  };\n  return source && (query.sourceId = source.id, query.sourceName = source.name, query.sourceUrl = source.url), _requestObservable(client, httpRequest, {\n    tag,\n    method: \"POST\",\n    timeout: options.timeout || 0,\n    uri: buildAssetUploadUrl(config, assetType),\n    headers: options.contentType ? { \"Content-Type\": options.contentType } : {},\n    query,\n    body\n  });\n}\nfunction buildAssetUploadUrl(config, assetType) {\n  const assetTypeEndpoint = assetType === \"image\" ? \"images\" : \"files\";\n  if (config[\"~experimental_resource\"]) {\n    const { type, id } = config[\"~experimental_resource\"];\n    switch (type) {\n      case \"dataset\":\n        throw new Error(\n          \"Assets are not supported for dataset resources, yet. Configure the client with `{projectId: <projectId>, dataset: <datasetId>}` instead.\"\n        );\n      case \"canvas\":\n        return `/canvases/${id}/assets/${assetTypeEndpoint}`;\n      case \"media-library\":\n        return `/media-libraries/${id}/upload`;\n      case \"dashboard\":\n        return `/dashboards/${id}/assets/${assetTypeEndpoint}`;\n      default:\n        throw new Error(`Unsupported resource type: ${type.toString()}`);\n    }\n  }\n  const dataset2 = hasDataset(config);\n  return `assets/${assetTypeEndpoint}/${dataset2}`;\n}\nfunction optionsFromFile(opts, file) {\n  return typeof File > \"u\" || !(file instanceof File) ? opts : Object.assign(\n    {\n      filename: opts.preserveFilename === !1 ? void 0 : file.name,\n      contentType: file.type\n    },\n    opts\n  );\n}\nvar defaults = (obj, defaults2) => Object.keys(defaults2).concat(Object.keys(obj)).reduce((target, prop) => (target[prop] = typeof obj[prop] > \"u\" ? defaults2[prop] : obj[prop], target), {});\nconst pick = (obj, props) => props.reduce((selection, prop) => (typeof obj[prop] > \"u\" || (selection[prop] = obj[prop]), selection), {}), eventSourcePolyfill = (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.defer)(() => Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/eventsource\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @sanity/eventsource */ \"(action-browser)/./node_modules/@sanity/eventsource/node.js\", 19))).pipe(\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(({ default: EventSource2 }) => EventSource2),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.shareReplay)(1)\n);\nfunction reconnectOnConnectionFailure() {\n  return function(source) {\n    return source.pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.catchError)((err, caught) => err instanceof ConnectionFailedError ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.concat)((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)({ type: \"reconnect\" }), (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.timer)(1e3).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.mergeMap)(() => caught))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.throwError)(() => err))\n    );\n  };\n}\nconst MAX_URL_LENGTH = 14800, possibleOptions = [\n  \"includePreviousRevision\",\n  \"includeResult\",\n  \"includeMutations\",\n  \"includeAllVersions\",\n  \"visibility\",\n  \"effectFormat\",\n  \"tag\"\n], defaultOptions = {\n  includeResult: !0\n};\nfunction _listen(query, params, opts = {}) {\n  const { url, token, withCredentials, requestTagPrefix } = this.config(), tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join(\".\") : opts.tag, options = { ...defaults(opts, defaultOptions), tag }, listenOpts = pick(options, possibleOptions), qs = encodeQueryString({ query, params, options: { tag, ...listenOpts } }), uri = `${url}${_getDataUrl(this, \"listen\", qs)}`;\n  if (uri.length > MAX_URL_LENGTH)\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.throwError)(() => new Error(\"Query too large for listener\"));\n  const listenFor = options.events ? options.events : [\"mutation\"], esOptions = {};\n  return withCredentials && (esOptions.withCredentials = !0), token && (esOptions.headers = {\n    Authorization: `Bearer ${token}`\n  }), connectEventSource(() => (\n    // use polyfill if there is no global EventSource or if we need to set headers\n    (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((EventSource2) => new EventSource2(uri, esOptions)))\n  ), listenFor).pipe(\n    reconnectOnConnectionFailure(),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)((event) => listenFor.includes(event.type)),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(\n      (event) => ({\n        type: event.type,\n        ...\"data\" in event ? event.data : {}\n      })\n    )\n  );\n}\nfunction shareReplayLatest(configOrPredicate, config) {\n  return _shareReplayLatest(\n    typeof configOrPredicate == \"function\" ? { predicate: configOrPredicate, ...config } : configOrPredicate\n  );\n}\nfunction _shareReplayLatest(config) {\n  return (source) => {\n    let latest, emitted = !1;\n    const { predicate, ...shareConfig } = config, wrapped = source.pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.tap)((value) => {\n        config.predicate(value) && (emitted = !0, latest = value);\n      }),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.finalize)(() => {\n        emitted = !1, latest = void 0;\n      }),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.share)(shareConfig)\n    ), emitLatest = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((subscriber) => {\n      emitted && subscriber.next(\n        // this cast is safe because of the emitted check which asserts that we got T from the source\n        latest\n      ), subscriber.complete();\n    });\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.merge)(wrapped, emitLatest);\n  };\n}\nconst requiredApiVersion = \"2021-03-25\";\nclass LiveClient {\n  #client;\n  constructor(client) {\n    this.#client = client;\n  }\n  /**\n   * Requires `apiVersion` to be `2021-03-25` or later.\n   */\n  events({\n    includeDrafts = !1,\n    tag: _tag\n  } = {}) {\n    resourceGuard(\"live\", this.#client.config());\n    const {\n      projectId: projectId2,\n      apiVersion: _apiVersion,\n      token,\n      withCredentials,\n      requestTagPrefix\n    } = this.#client.config(), apiVersion = _apiVersion.replace(/^v/, \"\");\n    if (apiVersion !== \"X\" && apiVersion < requiredApiVersion)\n      throw new Error(\n        `The live events API requires API version ${requiredApiVersion} or later. The current API version is ${apiVersion}. Please update your API version to use this feature.`\n      );\n    if (includeDrafts && !token && !withCredentials)\n      throw new Error(\n        \"The live events API requires a token or withCredentials when 'includeDrafts: true'. Please update your client configuration. The token should have the lowest possible access role.\"\n      );\n    const path = _getDataUrl(this.#client, \"live/events\"), url = new URL(this.#client.getUrl(path, !1)), tag = _tag && requestTagPrefix ? [requestTagPrefix, _tag].join(\".\") : _tag;\n    tag && url.searchParams.set(\"tag\", tag), includeDrafts && url.searchParams.set(\"includeDrafts\", \"true\");\n    const esOptions = {};\n    includeDrafts && token && (esOptions.headers = {\n      Authorization: `Bearer ${token}`\n    }), includeDrafts && withCredentials && (esOptions.withCredentials = !0);\n    const key = `${url.href}::${JSON.stringify(esOptions)}`, existing = eventsCache.get(key);\n    if (existing)\n      return existing;\n    const events = connectEventSource(() => (\n      // use polyfill if there is no global EventSource or if we need to set headers\n      (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((EventSource2) => new EventSource2(url.href, esOptions)))\n    ), [\n      \"message\",\n      \"restart\",\n      \"welcome\",\n      \"reconnect\",\n      \"goaway\"\n    ]).pipe(\n      reconnectOnConnectionFailure(),\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((event) => {\n        if (event.type === \"message\") {\n          const { data, ...rest } = event;\n          return { ...rest, tags: data.tags };\n        }\n        return event;\n      })\n    ), checkCors = fetchObservable(url, {\n      method: \"OPTIONS\",\n      mode: \"cors\",\n      credentials: esOptions.withCredentials ? \"include\" : \"omit\",\n      headers: esOptions.headers\n    }).pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.mergeMap)(() => rxjs__WEBPACK_IMPORTED_MODULE_2__.EMPTY),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.catchError)(() => {\n        throw new CorsOriginError({ projectId: projectId2 });\n      })\n    ), observable2 = (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.concat)(checkCors, events).pipe(\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.finalize)(() => eventsCache.delete(key)),\n      shareReplayLatest({\n        predicate: (event) => event.type === \"welcome\"\n      })\n    );\n    return eventsCache.set(key, observable2), observable2;\n  }\n}\nfunction fetchObservable(url, init) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const controller = new AbortController(), signal = controller.signal;\n    return fetch(url, { ...init, signal: controller.signal }).then(\n      (response) => {\n        observer.next(response), observer.complete();\n      },\n      (err) => {\n        signal.aborted || observer.error(err);\n      }\n    ), () => controller.abort();\n  });\n}\nconst eventsCache = /* @__PURE__ */ new Map();\nclass ObservableDatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name, options) {\n    return _modify(this.#client, this.#httpRequest, \"PUT\", name, options);\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name, options) {\n    return _modify(this.#client, this.#httpRequest, \"PATCH\", name, options);\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name) {\n    return _modify(this.#client, this.#httpRequest, \"DELETE\", name);\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return _request(this.#client, this.#httpRequest, {\n      uri: \"/datasets\",\n      tag: null\n    });\n  }\n}\nclass DatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name, options) {\n    return resourceGuard(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PUT\", name, options)\n    );\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name, options) {\n    return resourceGuard(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PATCH\", name, options)\n    );\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name) {\n    return resourceGuard(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_modify(this.#client, this.#httpRequest, \"DELETE\", name));\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return resourceGuard(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: \"/datasets\", tag: null })\n    );\n  }\n}\nfunction _modify(client, httpRequest, method, name, options) {\n  return resourceGuard(\"dataset\", client.config()), dataset(name), _request(client, httpRequest, {\n    method,\n    uri: `/datasets/${name}`,\n    body: options,\n    tag: null\n  });\n}\nclass ObservableProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    resourceGuard(\"projects\", this.#client.config());\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return _request(this.#client, this.#httpRequest, { uri });\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return resourceGuard(\"projects\", this.#client.config()), _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId2}` });\n  }\n}\nclass ProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    resourceGuard(\"projects\", this.#client.config());\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_request(this.#client, this.#httpRequest, { uri }));\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return resourceGuard(\"projects\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId2}` })\n    );\n  }\n}\nconst generateReleaseId = (0,nanoid__WEBPACK_IMPORTED_MODULE_6__.customAlphabet)(\n  \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\n  8\n), getDocumentVersionId = (publishedId, releaseId) => releaseId ? (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.getVersionId)(publishedId, releaseId) : (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.getDraftId)(publishedId);\nfunction deriveDocumentVersionId(op, {\n  releaseId,\n  publishedId,\n  document\n}) {\n  if (publishedId && document._id) {\n    const versionId = getDocumentVersionId(publishedId, releaseId);\n    return validateVersionIdMatch(versionId, document), versionId;\n  }\n  if (document._id) {\n    const isDraft = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.isDraftId)(document._id), isVersion = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.isVersionId)(document._id);\n    if (!isDraft && !isVersion)\n      throw new Error(\n        `\\`${op}()\\` requires a document with an \\`_id\\` that is a version or draft ID`\n      );\n    if (releaseId) {\n      if (isDraft)\n        throw new Error(\n          `\\`${op}()\\` was called with a document ID (\\`${document._id}\\`) that is a draft ID, but a release ID (\\`${releaseId}\\`) was also provided.`\n        );\n      const builtVersionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.getVersionFromId)(document._id);\n      if (builtVersionId !== releaseId)\n        throw new Error(\n          `\\`${op}()\\` was called with a document ID (\\`${document._id}\\`) that is a version ID, but the release ID (\\`${releaseId}\\`) does not match the document's version ID (\\`${builtVersionId}\\`).`\n        );\n    }\n    return document._id;\n  }\n  if (publishedId)\n    return getDocumentVersionId(publishedId, releaseId);\n  throw new Error(`\\`${op}()\\` requires either a publishedId or a document with an \\`_id\\``);\n}\nconst getArgs = (releaseOrOptions, maybeOptions) => {\n  if (typeof releaseOrOptions == \"object\" && releaseOrOptions !== null && (\"releaseId\" in releaseOrOptions || \"metadata\" in releaseOrOptions)) {\n    const { releaseId = generateReleaseId(), metadata = {} } = releaseOrOptions;\n    return [releaseId, metadata, maybeOptions];\n  }\n  return [generateReleaseId(), {}, releaseOrOptions];\n}, createRelease = (releaseOrOptions, maybeOptions) => {\n  const [releaseId, metadata, options] = getArgs(releaseOrOptions, maybeOptions), finalMetadata = {\n    ...metadata,\n    releaseType: metadata.releaseType || \"undecided\"\n  };\n  return { action: {\n    actionType: \"sanity.action.release.create\",\n    releaseId,\n    metadata: finalMetadata\n  }, options };\n};\nclass ObservableReleasesClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * @public\n   *\n   * Retrieve a release by id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to retrieve.\n   * @param options - Additional query options including abort signal and query tag.\n   * @returns An observable that resolves to the release document {@link ReleaseDocument}.\n   *\n   * @example Retrieving a release by id\n   * ```ts\n   * client.observable.releases.get({releaseId: 'my-release'}).pipe(\n   *   tap((release) => console.log(release)),\n   *   // {\n   *   //   _id: '_.releases.my-release',\n   *   //   name: 'my-release'\n   *   //   _type: 'system.release',\n   *   //   metadata: {releaseType: 'asap'},\n   *   //   _createdAt: '2021-01-01T00:00:00.000Z',\n   *   //   ...\n   *   // }\n   * ).subscribe()\n   * ```\n   */\n  get({ releaseId }, options) {\n    return _getDocument(\n      this.#client,\n      this.#httpRequest,\n      `_.releases.${releaseId}`,\n      options\n    );\n  }\n  create(releaseOrOptions, maybeOptions) {\n    const { action, options } = createRelease(releaseOrOptions, maybeOptions), { releaseId, metadata } = action;\n    return _action(this.#client, this.#httpRequest, action, options).pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)((actionResult) => ({\n        ...actionResult,\n        releaseId,\n        metadata\n      }))\n    );\n  }\n  /**\n   * @public\n   *\n   * Edits an existing release, updating the metadata.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to edit.\n   *   - `patch` - The patch operation to apply on the release metadata {@link PatchMutationOperation}.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  edit({ releaseId, patch }, options) {\n    const editAction = {\n      actionType: \"sanity.action.release.edit\",\n      releaseId,\n      patch\n    };\n    return _action(this.#client, this.#httpRequest, editAction, options);\n  }\n  /**\n   * @public\n   *\n   * Publishes all documents in a release at once. For larger releases the effect of the publish\n   * will be visible immediately when querying but the removal of the `versions.<releasesId>.*`\n   * documents and creation of the corresponding published documents with the new content may\n   * take some time.\n   *\n   * During this period both the source and target documents are locked and cannot be\n   * modified through any other means.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to publish.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  publish({ releaseId }, options) {\n    const publishAction = {\n      actionType: \"sanity.action.release.publish\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, publishAction, options);\n  }\n  /**\n   * @public\n   *\n   * An archive action removes an active release. The documents that comprise the release\n   * are deleted and therefore no longer queryable.\n   *\n   * While the documents remain in retention the last version can still be accessed using document history endpoint.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to archive.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  archive({ releaseId }, options) {\n    const archiveAction = {\n      actionType: \"sanity.action.release.archive\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, archiveAction, options);\n  }\n  /**\n   * @public\n   *\n   * An unarchive action restores an archived release and all documents\n   * with the content they had just prior to archiving.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unarchive.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  unarchive({ releaseId }, options) {\n    const unarchiveAction = {\n      actionType: \"sanity.action.release.unarchive\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, unarchiveAction, options);\n  }\n  /**\n   * @public\n   *\n   * A schedule action queues a release for publishing at the given future time.\n   * The release is locked such that no documents in the release can be modified and\n   * no documents that it references can be deleted as this would make the publish fail.\n   * At the given time, the same logic as for the publish action is triggered.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to schedule.\n   *   - `publishAt` - The serialised date and time to publish the release. If the `publishAt` is in the past, the release will be published immediately.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  schedule({ releaseId, publishAt }, options) {\n    const scheduleAction = {\n      actionType: \"sanity.action.release.schedule\",\n      releaseId,\n      publishAt\n    };\n    return _action(this.#client, this.#httpRequest, scheduleAction, options);\n  }\n  /**\n   * @public\n   *\n   * An unschedule action stops a release from being published.\n   * The documents in the release are considered unlocked and can be edited again.\n   * This may fail if another release is scheduled to be published after this one and\n   * has a reference to a document created by this one.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unschedule.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  unschedule({ releaseId }, options) {\n    const unscheduleAction = {\n      actionType: \"sanity.action.release.unschedule\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, unscheduleAction, options);\n  }\n  /**\n   * @public\n   *\n   * A delete action removes a published or archived release.\n   * The backing system document will be removed from the dataset.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to delete.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  delete({ releaseId }, options) {\n    const deleteAction = {\n      actionType: \"sanity.action.release.delete\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, deleteAction, options);\n  }\n  /**\n   * @public\n   *\n   * Fetch the documents in a release by release id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to fetch documents for.\n   * @param options - Additional mutation options {@link BaseMutationOptions}.\n   * @returns An observable that resolves to the documents in the release.\n   */\n  fetchDocuments({ releaseId }, options) {\n    return _getReleaseDocuments(this.#client, this.#httpRequest, releaseId, options);\n  }\n}\nclass ReleasesClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * @public\n   *\n   * Retrieve a release by id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to retrieve.\n   * @param options - Additional query options including abort signal and query tag.\n   * @returns A promise that resolves to the release document {@link ReleaseDocument}.\n   *\n   * @example Retrieving a release by id\n   * ```ts\n   * const release = await client.releases.get({releaseId: 'my-release'})\n   * console.log(release)\n   * // {\n   * //   _id: '_.releases.my-release',\n   * //   name: 'my-release'\n   * //   _type: 'system.release',\n   * //   metadata: {releaseType: 'asap'},\n   * //   _createdAt: '2021-01-01T00:00:00.000Z',\n   * //   ...\n   * // }\n   * ```\n   */\n  get({ releaseId }, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _getDocument(\n        this.#client,\n        this.#httpRequest,\n        `_.releases.${releaseId}`,\n        options\n      )\n    );\n  }\n  async create(releaseOrOptions, maybeOptions) {\n    const { action, options } = createRelease(releaseOrOptions, maybeOptions), { releaseId, metadata } = action;\n    return { ...await (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _action(this.#client, this.#httpRequest, action, options)\n    ), releaseId, metadata };\n  }\n  /**\n   * @public\n   *\n   * Edits an existing release, updating the metadata.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to edit.\n   *   - `patch` - The patch operation to apply on the release metadata {@link PatchMutationOperation}.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  edit({ releaseId, patch }, options) {\n    const editAction = {\n      actionType: \"sanity.action.release.edit\",\n      releaseId,\n      patch\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_action(this.#client, this.#httpRequest, editAction, options));\n  }\n  /**\n   * @public\n   *\n   * Publishes all documents in a release at once. For larger releases the effect of the publish\n   * will be visible immediately when querying but the removal of the `versions.<releasesId>.*`\n   * documents and creation of the corresponding published documents with the new content may\n   * take some time.\n   *\n   * During this period both the source and target documents are locked and cannot be\n   * modified through any other means.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to publish.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  publish({ releaseId }, options) {\n    const publishAction = {\n      actionType: \"sanity.action.release.publish\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_action(this.#client, this.#httpRequest, publishAction, options));\n  }\n  /**\n   * @public\n   *\n   * An archive action removes an active release. The documents that comprise the release\n   * are deleted and therefore no longer queryable.\n   *\n   * While the documents remain in retention the last version can still be accessed using document history endpoint.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to archive.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  archive({ releaseId }, options) {\n    const archiveAction = {\n      actionType: \"sanity.action.release.archive\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_action(this.#client, this.#httpRequest, archiveAction, options));\n  }\n  /**\n   * @public\n   *\n   * An unarchive action restores an archived release and all documents\n   * with the content they had just prior to archiving.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unarchive.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  unarchive({ releaseId }, options) {\n    const unarchiveAction = {\n      actionType: \"sanity.action.release.unarchive\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_action(this.#client, this.#httpRequest, unarchiveAction, options));\n  }\n  /**\n   * @public\n   *\n   * A schedule action queues a release for publishing at the given future time.\n   * The release is locked such that no documents in the release can be modified and\n   * no documents that it references can be deleted as this would make the publish fail.\n   * At the given time, the same logic as for the publish action is triggered.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to schedule.\n   *   - `publishAt` - The serialised date and time to publish the release. If the `publishAt` is in the past, the release will be published immediately.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  schedule({ releaseId, publishAt }, options) {\n    const scheduleAction = {\n      actionType: \"sanity.action.release.schedule\",\n      releaseId,\n      publishAt\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_action(this.#client, this.#httpRequest, scheduleAction, options));\n  }\n  /**\n   * @public\n   *\n   * An unschedule action stops a release from being published.\n   * The documents in the release are considered unlocked and can be edited again.\n   * This may fail if another release is scheduled to be published after this one and\n   * has a reference to a document created by this one.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unschedule.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  unschedule({ releaseId }, options) {\n    const unscheduleAction = {\n      actionType: \"sanity.action.release.unschedule\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_action(this.#client, this.#httpRequest, unscheduleAction, options));\n  }\n  /**\n   * @public\n   *\n   * A delete action removes a published or archived release.\n   * The backing system document will be removed from the dataset.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to delete.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  delete({ releaseId }, options) {\n    const deleteAction = {\n      actionType: \"sanity.action.release.delete\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_action(this.#client, this.#httpRequest, deleteAction, options));\n  }\n  /**\n   * @public\n   *\n   * Fetch the documents in a release by release id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to fetch documents for.\n   * @param options - Additional mutation options {@link BaseMutationOptions}.\n   * @returns A promise that resolves to the documents in the release.\n   */\n  fetchDocuments({ releaseId }, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_getReleaseDocuments(this.#client, this.#httpRequest, releaseId, options));\n  }\n}\nclass ObservableUsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return _request(\n      this.#client,\n      this.#httpRequest,\n      { uri: `/users/${id}` }\n    );\n  }\n}\nclass UsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, {\n        uri: `/users/${id}`\n      })\n    );\n  }\n}\nclass ObservableSanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  agent;\n  releases;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new ObservableAssetsClient(this, this.#httpRequest), this.datasets = new ObservableDatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ObservableProjectsClient(this, this.#httpRequest), this.users = new ObservableUsersClient(this, this.#httpRequest), this.agent = {\n      action: new ObservableAgentsActionClient(this, this.#httpRequest)\n    }, this.releases = new ObservableReleasesClient(this, this.#httpRequest);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new ObservableSanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.#clientConfig = initConfig(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new ObservableSanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return _fetch(\n      this,\n      this.#httpRequest,\n      this.#clientConfig.stega,\n      query,\n      params,\n      options\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return _getDocument(this, this.#httpRequest, id, options);\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return _getDocuments(this, this.#httpRequest, ids, options);\n  }\n  create(document, options) {\n    return _create(this, this.#httpRequest, document, \"create\", options);\n  }\n  createIfNotExists(document, options) {\n    return _createIfNotExists(this, this.#httpRequest, document, options);\n  }\n  createOrReplace(document, options) {\n    return _createOrReplace(this, this.#httpRequest, document, options);\n  }\n  createVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"createVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId }, versionPublishedId = publishedId || (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.getPublishedId)(document._id);\n    return _createVersion(\n      this,\n      this.#httpRequest,\n      documentVersion,\n      versionPublishedId,\n      options\n    );\n  }\n  delete(selection, options) {\n    return _delete(this, this.#httpRequest, selection, options);\n  }\n  /**\n   * @public\n   *\n   * Deletes the draft or release version of a document.\n   *\n   * @remarks\n   * * Discarding a version with no `releaseId` will discard the draft version of the published document.\n   * * If the draft or release version does not exist, any error will throw.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to discard the document from.\n   *   - `publishedId` - The published ID of the document to discard.\n   * @param purge - if `true` the document history is also discarded.\n   * @param options - Additional action options.\n   * @returns an observable that resolves to the `transactionId`.\n   *\n   * @example Discarding a release version of a document\n   * ```ts\n   * client.observable.discardVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be discarded.\n   * ```\n   *\n   * @example Discarding a draft version of a document\n   * ```ts\n   * client.observable.discardVersion({publishedId: 'myDocument'})\n   * // The document with the ID `drafts.myDocument` will be discarded.\n   * ```\n   */\n  discardVersion({ releaseId, publishedId }, purge, options) {\n    const documentVersionId = getDocumentVersionId(publishedId, releaseId);\n    return _discardVersion(this, this.#httpRequest, documentVersionId, purge, options);\n  }\n  replaceVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"replaceVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId };\n    return _replaceVersion(this, this.#httpRequest, documentVersion, options);\n  }\n  /**\n   * @public\n   *\n   * Used to indicate when a document within a release should be unpublished when\n   * the release is run.\n   *\n   * @remarks\n   * * If the published document does not exist, an error will be thrown.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to unpublish the document from.\n   *   - `publishedId` - The published ID of the document to unpublish.\n   * @param options - Additional action options.\n   * @returns an observable that resolves to the `transactionId`.\n   *\n   * @example Unpublishing a release version of a published document\n   * ```ts\n   * client.observable.unpublishVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be unpublished. when `myRelease` is run.\n   * ```\n   */\n  unpublishVersion({ releaseId, publishedId }, options) {\n    const versionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.getVersionId)(publishedId, releaseId);\n    return _unpublishVersion(this, this.#httpRequest, versionId, publishedId, options);\n  }\n  mutate(operations, options) {\n    return _mutate(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection, operations) {\n    return new ObservablePatch(selection, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new ObservableTransaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return _action(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Perform an HTTP request against the Sanity API\n   *\n   * @param options - Request options\n   */\n  request(options) {\n    return _request(this, this.#httpRequest, options);\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nclass SanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  agent;\n  releases;\n  /**\n   * Observable version of the Sanity client, with the same configuration as the promise-based one\n   */\n  observable;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new AssetsClient(this, this.#httpRequest), this.datasets = new DatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ProjectsClient(this, this.#httpRequest), this.users = new UsersClient(this, this.#httpRequest), this.agent = {\n      action: new AgentActionsClient(this, this.#httpRequest)\n    }, this.releases = new ReleasesClient(this, this.#httpRequest), this.observable = new ObservableSanityClient(httpRequest, config);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new SanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.observable && this.observable.config(newConfig), this.#clientConfig = initConfig(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new SanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _fetch(\n        this,\n        this.#httpRequest,\n        this.#clientConfig.stega,\n        query,\n        params,\n        options\n      )\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_getDocument(this, this.#httpRequest, id, options));\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_getDocuments(this, this.#httpRequest, ids, options));\n  }\n  create(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _create(this, this.#httpRequest, document, \"create\", options)\n    );\n  }\n  createIfNotExists(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _createIfNotExists(this, this.#httpRequest, document, options)\n    );\n  }\n  createOrReplace(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _createOrReplace(this, this.#httpRequest, document, options)\n    );\n  }\n  createVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"createVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId }, versionPublishedId = publishedId || (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.getPublishedId)(document._id);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.firstValueFrom)(\n      _createVersion(\n        this,\n        this.#httpRequest,\n        documentVersion,\n        versionPublishedId,\n        options\n      )\n    );\n  }\n  delete(selection, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_delete(this, this.#httpRequest, selection, options));\n  }\n  /**\n   * @public\n   *\n   * Deletes the draft or release version of a document.\n   *\n   * @remarks\n   * * Discarding a version with no `releaseId` will discard the draft version of the published document.\n   * * If the draft or release version does not exist, any error will throw.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to discard the document from.\n   *   - `publishedId` - The published ID of the document to discard.\n   * @param purge - if `true` the document history is also discarded.\n   * @param options - Additional action options.\n   * @returns a promise that resolves to the `transactionId`.\n   *\n   * @example Discarding a release version of a document\n   * ```ts\n   * client.discardVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be discarded.\n   * ```\n   *\n   * @example Discarding a draft version of a document\n   * ```ts\n   * client.discardVersion({publishedId: 'myDocument'})\n   * // The document with the ID `drafts.myDocument` will be discarded.\n   * ```\n   */\n  discardVersion({ releaseId, publishedId }, purge, options) {\n    const documentVersionId = getDocumentVersionId(publishedId, releaseId);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _discardVersion(this, this.#httpRequest, documentVersionId, purge, options)\n    );\n  }\n  replaceVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"replaceVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.firstValueFrom)(\n      _replaceVersion(this, this.#httpRequest, documentVersion, options)\n    );\n  }\n  /**\n   * @public\n   *\n   * Used to indicate when a document within a release should be unpublished when\n   * the release is run.\n   *\n   * @remarks\n   * * If the published document does not exist, an error will be thrown.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to unpublish the document from.\n   *   - `publishedId` - The published ID of the document to unpublish.\n   * @param options - Additional action options.\n   * @returns a promise that resolves to the `transactionId`.\n   *\n   * @example Unpublishing a release version of a published document\n   * ```ts\n   * await client.unpublishVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be unpublished. when `myRelease` is run.\n   * ```\n   */\n  unpublishVersion({ releaseId, publishedId }, options) {\n    const versionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_5__.getVersionId)(publishedId, releaseId);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(\n      _unpublishVersion(this, this.#httpRequest, versionId, publishedId, options)\n    );\n  }\n  mutate(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_mutate(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId, operations) {\n    return new Patch(documentId, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new Transaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   * Returns a promise that resolves to the transaction result\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_action(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Perform a request against the Sanity API\n   * NOTE: Only use this for Sanity API endpoints, not for your own APIs!\n   *\n   * @param options - Request options\n   * @returns Promise resolving to the response body\n   */\n  request(options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_request(this, this.#httpRequest, options));\n  }\n  /**\n   * Perform an HTTP request a `/data` sub-endpoint\n   * NOTE: Considered internal, thus marked as deprecated. Use `request` instead.\n   *\n   * @deprecated - Use `request()` or your own HTTP library instead\n   * @param endpoint - Endpoint to hit (mutate, query etc)\n   * @param body - Request body\n   * @param options - Request options\n   * @internal\n   */\n  dataRequest(endpoint, body, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.lastValueFrom)(_dataRequest(this, this.#httpRequest, endpoint, body, options));\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nfunction defineCreateClientExports(envMiddleware2, ClassConstructor) {\n  return { requester: defineHttpRequest(envMiddleware2), createClient: (config) => {\n    const clientRequester = defineHttpRequest(envMiddleware2);\n    return new ClassConstructor(\n      (options, requester2) => (requester2 || clientRequester)({\n        maxRedirects: 0,\n        maxRetries: config.maxRetries,\n        retryDelay: config.retryDelay,\n        ...options\n      }),\n      config\n    );\n  } };\n}\nfunction defineDeprecatedCreateClient(createClient2) {\n  return function(config) {\n    return printNoDefaultExport(), createClient2(config);\n  };\n}\nvar envMiddleware = [];\nconst exp = defineCreateClientExports(envMiddleware, SanityClient), requester = exp.requester, createClient = exp.createClient, deprecatedCreateClient = defineDeprecatedCreateClient(createClient);\n\n//# sourceMappingURL=index.browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/client/dist/index.browser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/client/dist/index.browser.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sanity/client/dist/index.browser.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePatch: () => (/* binding */ BasePatch),\n/* harmony export */   BaseTransaction: () => (/* binding */ BaseTransaction),\n/* harmony export */   ChannelError: () => (/* binding */ ChannelError),\n/* harmony export */   ClientError: () => (/* binding */ ClientError),\n/* harmony export */   ConnectionFailedError: () => (/* binding */ ConnectionFailedError),\n/* harmony export */   CorsOriginError: () => (/* binding */ CorsOriginError),\n/* harmony export */   DisconnectError: () => (/* binding */ DisconnectError),\n/* harmony export */   MessageError: () => (/* binding */ MessageError),\n/* harmony export */   MessageParseError: () => (/* binding */ MessageParseError),\n/* harmony export */   ObservablePatch: () => (/* binding */ ObservablePatch),\n/* harmony export */   ObservableSanityClient: () => (/* binding */ ObservableSanityClient),\n/* harmony export */   ObservableTransaction: () => (/* binding */ ObservableTransaction),\n/* harmony export */   Patch: () => (/* binding */ Patch),\n/* harmony export */   SanityClient: () => (/* binding */ SanityClient),\n/* harmony export */   ServerError: () => (/* binding */ ServerError),\n/* harmony export */   Transaction: () => (/* binding */ Transaction),\n/* harmony export */   connectEventSource: () => (/* binding */ connectEventSource),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   \"default\": () => (/* binding */ deprecatedCreateClient),\n/* harmony export */   requester: () => (/* binding */ requester),\n/* harmony export */   unstable__adapter: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_0__.adapter),\n/* harmony export */   unstable__environment: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_0__.environment),\n/* harmony export */   validateApiPerspective: () => (/* binding */ validateApiPerspective)\n/* harmony export */ });\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-it */ \"(rsc)/./node_modules/get-it/dist/index.react-server.js\");\n/* harmony import */ var get_it_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! get-it/middleware */ \"(rsc)/./node_modules/get-it/dist/middleware.browser.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/util/isObservable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/operators/catchError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/concat.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/timer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/throwError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/operators/tap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/operators/finalize.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/operators/share.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/merge.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/firstValueFrom.js\");\n/* harmony import */ var _chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_chunks-es/stegaClean.js */ \"(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaClean.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ \"(rsc)/./node_modules/rxjs/dist/cjs/operators/index.js\");\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sanity/client/csm */ \"(rsc)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! nanoid */ \"(rsc)/./node_modules/nanoid/index.js\");\n\n\n\n\n\n\n\n\nclass ClientError extends Error {\n  response;\n  statusCode = 400;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nclass ServerError extends Error {\n  response;\n  statusCode = 500;\n  responseBody;\n  details;\n  constructor(res) {\n    const props = extractErrorProps(res);\n    super(props.message), Object.assign(this, props);\n  }\n}\nfunction extractErrorProps(res) {\n  const body = res.body, props = {\n    response: res,\n    statusCode: res.statusCode,\n    responseBody: stringifyBody(body, res),\n    message: \"\",\n    details: void 0\n  };\n  if (body.error && body.message)\n    return props.message = `${body.error} - ${body.message}`, props;\n  if (isMutationError(body) || isActionError(body)) {\n    const allItems = body.error.items || [], items = allItems.slice(0, 5).map((item) => item.error?.description).filter(Boolean);\n    let itemsStr = items.length ? `:\n- ${items.join(`\n- `)}` : \"\";\n    return allItems.length > 5 && (itemsStr += `\n...and ${allItems.length - 5} more`), props.message = `${body.error.description}${itemsStr}`, props.details = body.error, props;\n  }\n  return body.error && body.error.description ? (props.message = body.error.description, props.details = body.error, props) : (props.message = body.error || body.message || httpErrorMessage(res), props);\n}\nfunction isMutationError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"mutationError\" && typeof body.error.description == \"string\";\n}\nfunction isActionError(body) {\n  return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"actionError\" && typeof body.error.description == \"string\";\n}\nfunction isPlainObject(obj) {\n  return typeof obj == \"object\" && obj !== null && !Array.isArray(obj);\n}\nfunction httpErrorMessage(res) {\n  const statusMessage = res.statusMessage ? ` ${res.statusMessage}` : \"\";\n  return `${res.method}-request to ${res.url} resulted in HTTP ${res.statusCode}${statusMessage}`;\n}\nfunction stringifyBody(body, res) {\n  return (res.headers[\"content-type\"] || \"\").toLowerCase().indexOf(\"application/json\") !== -1 ? JSON.stringify(body, null, 2) : body;\n}\nclass CorsOriginError extends Error {\n  projectId;\n  addOriginUrl;\n  constructor({ projectId: projectId2 }) {\n    super(\"CorsOriginError\"), this.name = \"CorsOriginError\", this.projectId = projectId2;\n    const url = new URL(`https://sanity.io/manage/project/${projectId2}/api`);\n    if (typeof location < \"u\") {\n      const { origin } = location;\n      url.searchParams.set(\"cors\", \"add\"), url.searchParams.set(\"origin\", origin), this.addOriginUrl = url, this.message = `The current origin is not allowed to connect to the Live Content API. Add it here: ${url}`;\n    } else\n      this.message = `The current origin is not allowed to connect to the Live Content API. Change your configuration here: ${url}`;\n  }\n}\nconst httpError = {\n  onResponse: (res) => {\n    if (res.statusCode >= 500)\n      throw new ServerError(res);\n    if (res.statusCode >= 400)\n      throw new ClientError(res);\n    return res;\n  }\n};\nfunction printWarnings() {\n  const seen = {};\n  return {\n    onResponse: (res) => {\n      const warn = res.headers[\"x-sanity-warning\"], warnings = Array.isArray(warn) ? warn : [warn];\n      for (const msg of warnings)\n        !msg || seen[msg] || (seen[msg] = !0, console.warn(msg));\n      return res;\n    }\n  };\n}\nfunction defineHttpRequest(envMiddleware2) {\n  return (0,get_it__WEBPACK_IMPORTED_MODULE_0__.getIt)([\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry)({ shouldRetry }),\n    ...envMiddleware2,\n    printWarnings(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonRequest)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonResponse)(),\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.progress)(),\n    httpError,\n    (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.observable)({ implementation: rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable })\n  ]);\n}\nfunction shouldRetry(err, attempt, options) {\n  if (options.maxRetries === 0) return !1;\n  const isSafe = options.method === \"GET\" || options.method === \"HEAD\", isQuery2 = (options.uri || options.url).startsWith(\"/data/query\"), isRetriableResponse = err.response && (err.response.statusCode === 429 || err.response.statusCode === 502 || err.response.statusCode === 503);\n  return (isSafe || isQuery2) && isRetriableResponse ? !0 : get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry.shouldRetry(err, attempt, options);\n}\nconst BASE_URL = \"https://www.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nconst VALID_ASSET_TYPES = [\"image\", \"file\"], VALID_INSERT_LOCATIONS = [\"before\", \"after\", \"replace\"], dataset = (name) => {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name))\n    throw new Error(\n      \"Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters\"\n    );\n}, projectId = (id) => {\n  if (!/^[-a-z0-9]+$/i.test(id))\n    throw new Error(\"`projectId` can only contain only a-z, 0-9 and dashes\");\n}, validateAssetType = (type) => {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1)\n    throw new Error(`Invalid asset type: ${type}. Must be one of ${VALID_ASSET_TYPES.join(\", \")}`);\n}, validateObject = (op, val) => {\n  if (val === null || typeof val != \"object\" || Array.isArray(val))\n    throw new Error(`${op}() takes an object of properties`);\n}, validateDocumentId = (op, id) => {\n  if (typeof id != \"string\" || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes(\"..\"))\n    throw new Error(`${op}(): \"${id}\" is not a valid document ID`);\n}, requireDocumentId = (op, doc) => {\n  if (!doc._id)\n    throw new Error(`${op}() requires that the document contains an ID (\"_id\" property)`);\n  validateDocumentId(op, doc._id);\n}, validateDocumentType = (op, type) => {\n  if (typeof type != \"string\")\n    throw new Error(`\\`${op}()\\`: \\`${type}\\` is not a valid document type`);\n}, requireDocumentType = (op, doc) => {\n  if (!doc._type)\n    throw new Error(`\\`${op}()\\` requires that the document contains a type (\\`_type\\` property)`);\n  validateDocumentType(op, doc._type);\n}, validateVersionIdMatch = (builtVersionId, document) => {\n  if (document._id && document._id !== builtVersionId)\n    throw new Error(\n      `The provided document ID (\\`${document._id}\\`) does not match the generated version ID (\\`${builtVersionId}\\`)`\n    );\n}, validateInsert = (at, selector, items) => {\n  const signature = \"insert(at, selector, items)\";\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    const valid = VALID_INSERT_LOCATIONS.map((loc) => `\"${loc}\"`).join(\", \");\n    throw new Error(`${signature} takes an \"at\"-argument which is one of: ${valid}`);\n  }\n  if (typeof selector != \"string\")\n    throw new Error(`${signature} takes a \"selector\"-argument which must be a string`);\n  if (!Array.isArray(items))\n    throw new Error(`${signature} takes an \"items\"-argument which must be an array`);\n}, hasDataset = (config) => {\n  if (!config.dataset)\n    throw new Error(\"`dataset` must be provided to perform queries\");\n  return config.dataset || \"\";\n}, requestTag = (tag) => {\n  if (typeof tag != \"string\" || !/^[a-z0-9._-]{1,75}$/i.test(tag))\n    throw new Error(\n      \"Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.\"\n    );\n  return tag;\n}, resourceConfig = (config) => {\n  if (!config[\"~experimental_resource\"])\n    throw new Error(\"`resource` must be provided to perform resource queries\");\n  const { type, id } = config[\"~experimental_resource\"];\n  switch (type) {\n    case \"dataset\": {\n      if (id.split(\".\").length !== 2)\n        throw new Error('Dataset resource ID must be in the format \"project.dataset\"');\n      return;\n    }\n    case \"dashboard\":\n    case \"media-library\":\n    case \"canvas\":\n      return;\n    default:\n      throw new Error(`Unsupported resource type: ${type.toString()}`);\n  }\n}, resourceGuard = (service, config) => {\n  if (config[\"~experimental_resource\"])\n    throw new Error(`\\`${service}\\` does not support resource-based operations`);\n};\nfunction once(fn) {\n  let didCall = !1, returnValue;\n  return (...args) => (didCall || (returnValue = fn(...args), didCall = !0), returnValue);\n}\nconst createWarningPrinter = (message) => (\n  // eslint-disable-next-line no-console\n  once((...args) => console.warn(message.join(\" \"), ...args))\n), printCdnAndWithCredentialsWarning = createWarningPrinter([\n  \"Because you set `withCredentials` to true, we will override your `useCdn`\",\n  \"setting to be false since (cookie-based) credentials are never set on the CDN\"\n]), printCdnWarning = createWarningPrinter([\n  \"Since you haven't set a value for `useCdn`, we will deliver content using our\",\n  \"global, edge-cached API-CDN. If you wish to have content delivered faster, set\",\n  \"`useCdn: false` to use the Live API. Note: You may incur higher costs using the live API.\"\n]), printCdnPreviewDraftsWarning = createWarningPrinter([\n  \"The Sanity client is configured with the `perspective` set to `drafts` or `previewDrafts`, which doesn't support the API-CDN.\",\n  \"The Live API will be used instead. Set `useCdn: false` in your configuration to hide this warning.\"\n]), printPreviewDraftsDeprecationWarning = createWarningPrinter([\n  \"The `previewDrafts` perspective has been renamed to  `drafts` and will be removed in a future API version\"\n]), printBrowserTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.\",\n  `See ${generateHelpUrl(\n    \"js-client-browser-token\"\n  )} for more information and how to hide this warning.`\n]), printCredentialedTokenWarning = createWarningPrinter([\n  \"You have configured Sanity client to use a token, but also provided `withCredentials: true`.\",\n  \"This is no longer supported - only token will be used - remove `withCredentials: true`.\"\n]), printNoApiVersionSpecifiedWarning = createWarningPrinter([\n  \"Using the Sanity client without specifying an API version is deprecated.\",\n  `See ${generateHelpUrl(\"js-client-api-version\")}`\n]), printNoDefaultExport = createWarningPrinter([\n  \"The default export of @sanity/client has been deprecated. Use the named export `createClient` instead.\"\n]), defaultCdnHost = \"apicdn.sanity.io\", defaultConfig = {\n  apiHost: \"https://api.sanity.io\",\n  apiVersion: \"1\",\n  useProjectHostname: !0,\n  stega: { enabled: !1 }\n}, LOCALHOSTS = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"], isLocal = (host) => LOCALHOSTS.indexOf(host) !== -1;\nfunction validateApiVersion(apiVersion) {\n  if (apiVersion === \"1\" || apiVersion === \"X\")\n    return;\n  const apiDate = new Date(apiVersion);\n  if (!(/^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0))\n    throw new Error(\"Invalid API version string, expected `1` or date in format `YYYY-MM-DD`\");\n}\nfunction validateApiPerspective(perspective) {\n  if (Array.isArray(perspective) && perspective.length > 1 && perspective.includes(\"raw\"))\n    throw new TypeError(\n      'Invalid API perspective value: \"raw\". The raw-perspective can not be combined with other perspectives'\n    );\n}\nconst initConfig = (config, prevConfig) => {\n  const specifiedConfig = {\n    ...prevConfig,\n    ...config,\n    stega: {\n      ...typeof prevConfig.stega == \"boolean\" ? { enabled: prevConfig.stega } : prevConfig.stega || defaultConfig.stega,\n      ...typeof config.stega == \"boolean\" ? { enabled: config.stega } : config.stega || {}\n    }\n  };\n  specifiedConfig.apiVersion || printNoApiVersionSpecifiedWarning();\n  const newConfig = {\n    ...defaultConfig,\n    ...specifiedConfig\n  }, projectBased = newConfig.useProjectHostname && !newConfig[\"~experimental_resource\"];\n  if (typeof Promise > \"u\") {\n    const helpUrl = generateHelpUrl(\"js-client-promise-polyfill\");\n    throw new Error(`No native Promise-implementation found, polyfill needed - see ${helpUrl}`);\n  }\n  if (projectBased && !newConfig.projectId)\n    throw new Error(\"Configuration must contain `projectId`\");\n  if (newConfig[\"~experimental_resource\"] && resourceConfig(newConfig), typeof newConfig.perspective < \"u\" && validateApiPerspective(newConfig.perspective), \"encodeSourceMap\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMap' is not supported in '@sanity/client'. Did you mean 'stega.enabled'?\"\n    );\n  if (\"encodeSourceMapAtPath\" in newConfig)\n    throw new Error(\n      \"It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMapAtPath' is not supported in '@sanity/client'. Did you mean 'stega.filter'?\"\n    );\n  if (typeof newConfig.stega.enabled != \"boolean\")\n    throw new Error(`stega.enabled must be a boolean, received ${newConfig.stega.enabled}`);\n  if (newConfig.stega.enabled && newConfig.stega.studioUrl === void 0)\n    throw new Error(\"stega.studioUrl must be defined when stega.enabled is true\");\n  if (newConfig.stega.enabled && typeof newConfig.stega.studioUrl != \"string\" && typeof newConfig.stega.studioUrl != \"function\")\n    throw new Error(\n      `stega.studioUrl must be a string or a function, received ${newConfig.stega.studioUrl}`\n    );\n  const isBrowser = typeof window < \"u\" && window.location && window.location.hostname, isLocalhost = isBrowser && isLocal(window.location.hostname), hasToken = !!newConfig.token;\n  newConfig.withCredentials && hasToken && (printCredentialedTokenWarning(), newConfig.withCredentials = !1), isBrowser && isLocalhost && hasToken && newConfig.ignoreBrowserTokenWarning !== !0 ? printBrowserTokenWarning() : typeof newConfig.useCdn > \"u\" && printCdnWarning(), projectBased && projectId(newConfig.projectId), newConfig.dataset && dataset(newConfig.dataset), \"requestTagPrefix\" in newConfig && (newConfig.requestTagPrefix = newConfig.requestTagPrefix ? requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, \"\") : void 0), newConfig.apiVersion = `${newConfig.apiVersion}`.replace(/^v/, \"\"), newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost, newConfig.useCdn === !0 && newConfig.withCredentials && printCdnAndWithCredentialsWarning(), newConfig.useCdn = newConfig.useCdn !== !1 && !newConfig.withCredentials, validateApiVersion(newConfig.apiVersion);\n  const hostParts = newConfig.apiHost.split(\"://\", 2), protocol = hostParts[0], host = hostParts[1], cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n  return projectBased ? (newConfig.url = `${protocol}://${newConfig.projectId}.${host}/v${newConfig.apiVersion}`, newConfig.cdnUrl = `${protocol}://${newConfig.projectId}.${cdnHost}/v${newConfig.apiVersion}`) : (newConfig.url = `${newConfig.apiHost}/v${newConfig.apiVersion}`, newConfig.cdnUrl = newConfig.url), newConfig;\n};\nclass ConnectionFailedError extends Error {\n  name = \"ConnectionFailedError\";\n}\nclass DisconnectError extends Error {\n  name = \"DisconnectError\";\n  reason;\n  constructor(message, reason, options = {}) {\n    super(message, options), this.reason = reason;\n  }\n}\nclass ChannelError extends Error {\n  name = \"ChannelError\";\n  data;\n  constructor(message, data) {\n    super(message), this.data = data;\n  }\n}\nclass MessageError extends Error {\n  name = \"MessageError\";\n  data;\n  constructor(message, data, options = {}) {\n    super(message, options), this.data = data;\n  }\n}\nclass MessageParseError extends Error {\n  name = \"MessageParseError\";\n}\nconst REQUIRED_EVENTS = [\"channelError\", \"disconnect\"];\nfunction connectEventSource(initEventSource, events) {\n  return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.defer)(() => {\n    const es = initEventSource();\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.isObservable)(es) ? es : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(es);\n  }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)((es) => connectWithESInstance(es, events)));\n}\nfunction connectWithESInstance(es, events) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const emitOpen = events.includes(\"open\"), emitReconnect = events.includes(\"reconnect\");\n    function onError(evt) {\n      if (\"data\" in evt) {\n        const [parseError, event] = parseEvent(evt);\n        observer.error(\n          parseError ? new MessageParseError(\"Unable to parse EventSource error message\", { cause: event }) : new MessageError((event?.data).message, event)\n        );\n        return;\n      }\n      es.readyState === es.CLOSED ? observer.error(new ConnectionFailedError(\"EventSource connection failed\")) : emitReconnect && observer.next({ type: \"reconnect\" });\n    }\n    function onOpen() {\n      observer.next({ type: \"open\" });\n    }\n    function onMessage(message) {\n      const [parseError, event] = parseEvent(message);\n      if (parseError) {\n        observer.error(\n          new MessageParseError(\"Unable to parse EventSource message\", { cause: parseError })\n        );\n        return;\n      }\n      if (message.type === \"channelError\") {\n        observer.error(new ChannelError(extractErrorMessage(event?.data), event.data));\n        return;\n      }\n      if (message.type === \"disconnect\") {\n        observer.error(\n          new DisconnectError(\n            `Server disconnected client: ${event.data?.reason || \"unknown error\"}`\n          )\n        );\n        return;\n      }\n      observer.next({\n        type: message.type,\n        id: message.lastEventId,\n        ...event.data ? { data: event.data } : {}\n      });\n    }\n    es.addEventListener(\"error\", onError), emitOpen && es.addEventListener(\"open\", onOpen);\n    const cleanedEvents = [.../* @__PURE__ */ new Set([...REQUIRED_EVENTS, ...events])].filter((type) => type !== \"error\" && type !== \"open\" && type !== \"reconnect\");\n    return cleanedEvents.forEach((type) => es.addEventListener(type, onMessage)), () => {\n      es.removeEventListener(\"error\", onError), emitOpen && es.removeEventListener(\"open\", onOpen), cleanedEvents.forEach((type) => es.removeEventListener(type, onMessage)), es.close();\n    };\n  });\n}\nfunction parseEvent(message) {\n  try {\n    const data = typeof message.data == \"string\" && JSON.parse(message.data);\n    return [\n      null,\n      {\n        type: message.type,\n        id: message.lastEventId,\n        ...isEmptyObject(data) ? {} : { data }\n      }\n    ];\n  } catch (err) {\n    return [err, null];\n  }\n}\nfunction extractErrorMessage(err) {\n  return err.error ? err.error.description ? err.error.description : typeof err.error == \"string\" ? err.error : JSON.stringify(err.error, null, 2) : err.message || \"Unknown listener error\";\n}\nfunction isEmptyObject(data) {\n  for (const _ in data)\n    return !1;\n  return !0;\n}\nfunction getSelection(sel) {\n  if (typeof sel == \"string\")\n    return { id: sel };\n  if (Array.isArray(sel))\n    return { query: \"*[_id in $ids]\", params: { ids: sel } };\n  if (typeof sel == \"object\" && sel !== null && \"query\" in sel && typeof sel.query == \"string\")\n    return \"params\" in sel && typeof sel.params == \"object\" && sel.params !== null ? { query: sel.query, params: sel.params } : { query: sel.query };\n  const selectionOpts = [\n    \"* Document ID (<docId>)\",\n    \"* Array of document IDs\",\n    \"* Object containing `query`\"\n  ].join(`\n`);\n  throw new Error(`Unknown selection - must be one of:\n\n${selectionOpts}`);\n}\nclass BasePatch {\n  selection;\n  operations;\n  constructor(selection, operations = {}) {\n    this.selection = selection, this.operations = operations;\n  }\n  /**\n   * Sets the given attributes to the document. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  set(attrs) {\n    return this._assign(\"set\", attrs);\n  }\n  /**\n   * Sets the given attributes to the document if they are not currently set. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  setIfMissing(attrs) {\n    return this._assign(\"setIfMissing\", attrs);\n  }\n  /**\n   * Performs a \"diff-match-patch\" operation on the string attributes provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to perform operation on. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"dmp\"\\}\n   */\n  diffMatchPatch(attrs) {\n    return validateObject(\"diffMatchPatch\", attrs), this._assign(\"diffMatchPatch\", attrs);\n  }\n  /**\n   * Unsets the attribute paths provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attribute paths to unset.\n   */\n  unset(attrs) {\n    if (!Array.isArray(attrs))\n      throw new Error(\"unset(attrs) takes an array of attributes to unset, non-array given\");\n    return this.operations = Object.assign({}, this.operations, { unset: attrs }), this;\n  }\n  /**\n   * Increment a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to increment, values representing the number to increment by.\n   */\n  inc(attrs) {\n    return this._assign(\"inc\", attrs);\n  }\n  /**\n   * Decrement a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to decrement, values representing the number to decrement by.\n   */\n  dec(attrs) {\n    return this._assign(\"dec\", attrs);\n  }\n  /**\n   * Provides methods for modifying arrays, by inserting, appending and replacing elements via a JSONPath expression.\n   *\n   * @param at - Location to insert at, relative to the given selector, or 'replace' the matched path\n   * @param selector - JSONPath expression, eg `comments[-1]` or `blocks[_key==\"abc123\"]`\n   * @param items - Array of items to insert/replace\n   */\n  insert(at, selector, items) {\n    return validateInsert(at, selector, items), this._assign(\"insert\", { [at]: selector, items });\n  }\n  /**\n   * Append the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to append to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to append to the array\n   */\n  append(selector, items) {\n    return this.insert(\"after\", `${selector}[-1]`, items);\n  }\n  /**\n   * Prepend the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to prepend to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to prepend to the array\n   */\n  prepend(selector, items) {\n    return this.insert(\"before\", `${selector}[0]`, items);\n  }\n  /**\n   * Change the contents of an array by removing existing elements and/or adding new elements.\n   *\n   * @param selector - Attribute or JSONPath expression for array\n   * @param start - Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.x\n   * @param deleteCount - An integer indicating the number of old array elements to remove.\n   * @param items - The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.\n   */\n  splice(selector, start, deleteCount, items) {\n    const delAll = typeof deleteCount > \"u\" || deleteCount === -1, startIndex = start < 0 ? start - 1 : start, delCount = delAll ? -1 : Math.max(0, start + deleteCount), delRange = startIndex < 0 && delCount >= 0 ? \"\" : delCount, rangeSelector = `${selector}[${startIndex}:${delRange}]`;\n    return this.insert(\"replace\", rangeSelector, items || []);\n  }\n  /**\n   * Adds a revision clause, preventing the document from being patched if the `_rev` property does not match the given value\n   *\n   * @param rev - Revision to lock the patch to\n   */\n  ifRevisionId(rev) {\n    return this.operations.ifRevisionID = rev, this;\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  serialize() {\n    return { ...getSelection(this.selection), ...this.operations };\n  }\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the patch of all operations\n   */\n  reset() {\n    return this.operations = {}, this;\n  }\n  _assign(op, props, merge2 = !0) {\n    return validateObject(op, props), this.operations = Object.assign({}, this.operations, {\n      [op]: Object.assign({}, merge2 && this.operations[op] || {}, props)\n    }), this;\n  }\n  _set(op, props) {\n    return this._assign(op, props, !1);\n  }\n}\nclass ObservablePatch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new ObservablePatch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nclass Patch extends BasePatch {\n  #client;\n  constructor(selection, operations, client) {\n    super(selection, operations), this.#client = client;\n  }\n  /**\n   * Clones the patch\n   */\n  clone() {\n    return new Patch(this.selection, { ...this.operations }, this.#client);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\"\n      );\n    const returnFirst = typeof this.selection == \"string\", opts = Object.assign({ returnFirst, returnDocuments: !0 }, options);\n    return this.#client.mutate({ patch: this.serialize() }, opts);\n  }\n}\nconst defaultMutateOptions = { returnDocuments: !1 };\nclass BaseTransaction {\n  operations;\n  trxId;\n  constructor(operations = [], transactionId) {\n    this.operations = operations, this.trxId = transactionId;\n  }\n  /**\n   * Creates a new Sanity document. If `_id` is provided and already exists, the mutation will fail. If no `_id` is given, one will automatically be generated by the database.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create. Requires a `_type` property.\n   */\n  create(doc) {\n    return validateObject(\"create\", doc), this._add({ create: doc });\n  }\n  /**\n   * Creates a new Sanity document. If a document with the same `_id` already exists, the create operation will be ignored.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */\n  createIfNotExists(doc) {\n    const op = \"createIfNotExists\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Creates a new Sanity document, or replaces an existing one if the same `_id` is already used.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create or replace. Requires `_id` and `_type` properties.\n   */\n  createOrReplace(doc) {\n    const op = \"createOrReplace\";\n    return validateObject(op, doc), requireDocumentId(op, doc), this._add({ [op]: doc });\n  }\n  /**\n   * Deletes the document with the given document ID\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to delete\n   */\n  delete(documentId) {\n    return validateDocumentId(\"delete\", documentId), this._add({ delete: { id: documentId } });\n  }\n  transactionId(id) {\n    return id ? (this.trxId = id, this) : this.trxId;\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  serialize() {\n    return [...this.operations];\n  }\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  toJSON() {\n    return this.serialize();\n  }\n  /**\n   * Clears the transaction of all operations\n   */\n  reset() {\n    return this.operations = [], this;\n  }\n  _add(mut) {\n    return this.operations.push(mut), this;\n  }\n}\nclass Transaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new Transaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\", isPatch = typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof Patch, isMutationSelection = typeof patchOrDocumentId == \"object\" && (\"query\" in patchOrDocumentId || \"id\" in patchOrDocumentId);\n    if (isPatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new Patch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof Patch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    if (isMutationSelection) {\n      const patch = new Patch(patchOrDocumentId, patchOps || {}, this.#client);\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nclass ObservableTransaction extends BaseTransaction {\n  #client;\n  constructor(operations, client, transactionId) {\n    super(operations, transactionId), this.#client = client;\n  }\n  /**\n   * Clones the transaction\n   */\n  clone() {\n    return new ObservableTransaction([...this.operations], this.#client, this.trxId);\n  }\n  commit(options) {\n    if (!this.#client)\n      throw new Error(\n        \"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\"\n      );\n    return this.#client.mutate(\n      this.serialize(),\n      Object.assign({ transactionId: this.trxId }, defaultMutateOptions, options || {})\n    );\n  }\n  patch(patchOrDocumentId, patchOps) {\n    const isBuilder = typeof patchOps == \"function\";\n    if (typeof patchOrDocumentId != \"string\" && patchOrDocumentId instanceof ObservablePatch)\n      return this._add({ patch: patchOrDocumentId.serialize() });\n    if (isBuilder) {\n      const patch = patchOps(new ObservablePatch(patchOrDocumentId, {}, this.#client));\n      if (!(patch instanceof ObservablePatch))\n        throw new Error(\"function passed to `patch()` must return the patch\");\n      return this._add({ patch: patch.serialize() });\n    }\n    return this._add({ patch: { id: patchOrDocumentId, ...patchOps } });\n  }\n}\nconst projectHeader = \"X-Sanity-Project-ID\";\nfunction requestOptions(config, overrides = {}) {\n  const headers = {}, token = overrides.token || config.token;\n  token && (headers.Authorization = `Bearer ${token}`), !overrides.useGlobalApi && !config.useProjectHostname && config.projectId && (headers[projectHeader] = config.projectId);\n  const withCredentials = !!(typeof overrides.withCredentials > \"u\" ? config.withCredentials : overrides.withCredentials), timeout = typeof overrides.timeout > \"u\" ? config.timeout : overrides.timeout;\n  return Object.assign({}, overrides, {\n    headers: Object.assign({}, headers, overrides.headers || {}),\n    timeout: typeof timeout > \"u\" ? 5 * 60 * 1e3 : timeout,\n    proxy: overrides.proxy || config.proxy,\n    json: !0,\n    withCredentials,\n    fetch: typeof overrides.fetch == \"object\" && typeof config.fetch == \"object\" ? { ...config.fetch, ...overrides.fetch } : overrides.fetch || config.fetch\n  });\n}\nconst encodeQueryString = ({\n  query,\n  params = {},\n  options = {}\n}) => {\n  const searchParams = new URLSearchParams(), { tag, includeMutations, returnQuery, ...opts } = options;\n  tag && searchParams.append(\"tag\", tag), searchParams.append(\"query\", query);\n  for (const [key, value] of Object.entries(params))\n    searchParams.append(`$${key}`, JSON.stringify(value));\n  for (const [key, value] of Object.entries(opts))\n    value && searchParams.append(key, `${value}`);\n  return returnQuery === !1 && searchParams.append(\"returnQuery\", \"false\"), includeMutations === !1 && searchParams.append(\"includeMutations\", \"false\"), `?${searchParams}`;\n}, excludeFalsey = (param, defValue) => param === !1 ? void 0 : typeof param > \"u\" ? defValue : param, getMutationQuery = (options = {}) => ({\n  dryRun: options.dryRun,\n  returnIds: !0,\n  returnDocuments: excludeFalsey(options.returnDocuments, !0),\n  visibility: options.visibility || \"sync\",\n  autoGenerateArrayKeys: options.autoGenerateArrayKeys,\n  skipCrossDatasetReferenceValidation: options.skipCrossDatasetReferenceValidation\n}), isResponse = (event) => event.type === \"response\", getBody = (event) => event.body, indexBy = (docs, attr) => docs.reduce((indexed, doc) => (indexed[attr(doc)] = doc, indexed), /* @__PURE__ */ Object.create(null)), getQuerySizeLimit = 11264;\nfunction _fetch(client, httpRequest, _stega, query, _params = {}, options = {}) {\n  const stega = \"stega\" in options ? {\n    ..._stega || {},\n    ...typeof options.stega == \"boolean\" ? { enabled: options.stega } : options.stega || {}\n  } : _stega, params = stega.enabled ? (0,_chunks_es_stegaClean_js__WEBPACK_IMPORTED_MODULE_7__.stegaClean)(_params) : _params, mapResponse = options.filterResponse === !1 ? (res) => res : (res) => res.result, { cache, next, ...opts } = {\n    // Opt out of setting a `signal` on an internal `fetch` if one isn't provided.\n    // This is necessary in React Server Components to avoid opting out of Request Memoization.\n    useAbortSignal: typeof options.signal < \"u\",\n    // Set `resultSourceMap' when stega is enabled, as it's required for encoding.\n    resultSourceMap: stega.enabled ? \"withKeyArraySelector\" : options.resultSourceMap,\n    ...options,\n    // Default to not returning the query, unless `filterResponse` is `false`,\n    // or `returnQuery` is explicitly set. `true` is the default in Content Lake, so skip if truthy\n    returnQuery: options.filterResponse === !1 && options.returnQuery !== !1\n  }, reqOpts = typeof cache < \"u\" || typeof next < \"u\" ? { ...opts, fetch: { cache, next } } : opts, $request = _dataRequest(client, httpRequest, \"query\", { query, params }, reqOpts);\n  return stega.enabled ? $request.pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.combineLatestWith)(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.from)(\n        __webpack_require__.e(/*! import() */ \"vendor-chunks/@sanity\").then(__webpack_require__.bind(__webpack_require__, /*! ./_chunks-es/stegaEncodeSourceMap.js */ \"(rsc)/./node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js\")).then(function(n) {\n          return n.stegaEncodeSourceMap$1;\n        }).then(\n          ({ stegaEncodeSourceMap }) => stegaEncodeSourceMap\n        )\n      )\n    ),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n      ([res, stegaEncodeSourceMap]) => {\n        const result = stegaEncodeSourceMap(res.result, res.resultSourceMap, stega);\n        return mapResponse({ ...res, result });\n      }\n    )\n  ) : $request.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(mapResponse));\n}\nfunction _getDocument(client, httpRequest, id, opts = {}) {\n  const docId = (() => {\n    if (!opts.releaseId)\n      return id;\n    const versionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getVersionFromId)(id);\n    if (!versionId) {\n      if ((0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.isDraftId)(id))\n        throw new Error(\n          `The document ID (\\`${id}\\`) is a draft, but \\`options.releaseId\\` is set as \\`${opts.releaseId}\\``\n        );\n      return (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getVersionId)(id, opts.releaseId);\n    }\n    if (versionId !== opts.releaseId)\n      throw new Error(\n        `The document ID (\\`${id}\\`) is already a version of \\`${versionId}\\` release, but this does not match the provided \\`options.releaseId\\` (\\`${opts.releaseId}\\`)`\n      );\n    return id;\n  })(), options = {\n    uri: _getDataUrl(client, \"doc\", docId),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => event.body.documents && event.body.documents[0])\n  );\n}\nfunction _getDocuments(client, httpRequest, ids, opts = {}) {\n  const options = {\n    uri: _getDataUrl(client, \"doc\", ids.join(\",\")),\n    json: !0,\n    tag: opts.tag,\n    signal: opts.signal\n  };\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => {\n      const indexed = indexBy(event.body.documents || [], (doc) => doc._id);\n      return ids.map((id) => indexed[id] || null);\n    })\n  );\n}\nfunction _getReleaseDocuments(client, httpRequest, releaseId, opts = {}) {\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"query\",\n    {\n      query: \"*[sanity::partOfRelease($releaseId)]\",\n      params: {\n        releaseId\n      }\n    },\n    opts\n  );\n}\nfunction _createIfNotExists(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createIfNotExists\", doc), _create(client, httpRequest, doc, \"createIfNotExists\", options);\n}\nfunction _createOrReplace(client, httpRequest, doc, options) {\n  return requireDocumentId(\"createOrReplace\", doc), _create(client, httpRequest, doc, \"createOrReplace\", options);\n}\nfunction _createVersion(client, httpRequest, doc, publishedId, options) {\n  return requireDocumentId(\"createVersion\", doc), requireDocumentType(\"createVersion\", doc), _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.create\",\n    publishedId,\n    document: doc\n  }, options);\n}\nfunction _delete(client, httpRequest, selection, options) {\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"mutate\",\n    { mutations: [{ delete: getSelection(selection) }] },\n    options\n  );\n}\nfunction _discardVersion(client, httpRequest, versionId, purge = !1, options) {\n  return _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.discard\",\n    versionId,\n    purge\n  }, options);\n}\nfunction _replaceVersion(client, httpRequest, doc, options) {\n  return requireDocumentId(\"replaceVersion\", doc), requireDocumentType(\"replaceVersion\", doc), _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.replace\",\n    document: doc\n  }, options);\n}\nfunction _unpublishVersion(client, httpRequest, versionId, publishedId, options) {\n  return _action(client, httpRequest, {\n    actionType: \"sanity.action.document.version.unpublish\",\n    versionId,\n    publishedId\n  }, options);\n}\nfunction _mutate(client, httpRequest, mutations, options) {\n  let mut;\n  mutations instanceof Patch || mutations instanceof ObservablePatch ? mut = { patch: mutations.serialize() } : mutations instanceof Transaction || mutations instanceof ObservableTransaction ? mut = mutations.serialize() : mut = mutations;\n  const muts = Array.isArray(mut) ? mut : [mut], transactionId = options && options.transactionId || void 0;\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: muts, transactionId }, options);\n}\nfunction _action(client, httpRequest, actions, options) {\n  const acts = Array.isArray(actions) ? actions : [actions], transactionId = options && options.transactionId || void 0, skipCrossDatasetReferenceValidation = options && options.skipCrossDatasetReferenceValidation || void 0, dryRun = options && options.dryRun || void 0;\n  return _dataRequest(\n    client,\n    httpRequest,\n    \"actions\",\n    { actions: acts, transactionId, skipCrossDatasetReferenceValidation, dryRun },\n    options\n  );\n}\nfunction _dataRequest(client, httpRequest, endpoint, body, options = {}) {\n  const isMutation = endpoint === \"mutate\", isAction = endpoint === \"actions\", isQuery2 = endpoint === \"query\", strQuery = isMutation || isAction ? \"\" : encodeQueryString(body), useGet = !isMutation && !isAction && strQuery.length < getQuerySizeLimit, stringQuery = useGet ? strQuery : \"\", returnFirst = options.returnFirst, { timeout, token, tag, headers, returnQuery, lastLiveEventId, cacheMode } = options, uri = _getDataUrl(client, endpoint, stringQuery), reqOptions = {\n    method: useGet ? \"GET\" : \"POST\",\n    uri,\n    json: !0,\n    body: useGet ? void 0 : body,\n    query: isMutation && getMutationQuery(options),\n    timeout,\n    headers,\n    token,\n    tag,\n    returnQuery,\n    perspective: options.perspective,\n    resultSourceMap: options.resultSourceMap,\n    lastLiveEventId: Array.isArray(lastLiveEventId) ? lastLiveEventId[0] : lastLiveEventId,\n    cacheMode,\n    canUseCdn: isQuery2,\n    signal: options.signal,\n    fetch: options.fetch,\n    useAbortSignal: options.useAbortSignal,\n    useCdn: options.useCdn\n  };\n  return _requestObservable(client, httpRequest, reqOptions).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(isResponse),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(getBody),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((res) => {\n      if (!isMutation)\n        return res;\n      const results = res.results || [];\n      if (options.returnDocuments)\n        return returnFirst ? results[0] && results[0].document : results.map((mut) => mut.document);\n      const key = returnFirst ? \"documentId\" : \"documentIds\", ids = returnFirst ? results[0] && results[0].id : results.map((mut) => mut.id);\n      return {\n        transactionId: res.transactionId,\n        results,\n        [key]: ids\n      };\n    })\n  );\n}\nfunction _create(client, httpRequest, doc, op, options = {}) {\n  const mutation = { [op]: doc }, opts = Object.assign({ returnFirst: !0, returnDocuments: !0 }, options);\n  return _dataRequest(client, httpRequest, \"mutate\", { mutations: [mutation] }, opts);\n}\nconst hasDataConfig = (client) => client.config().dataset !== void 0 && client.config().projectId !== void 0 || client.config()[\"~experimental_resource\"] !== void 0, isQuery = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"query\")), isMutate = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"mutate\")), isDoc = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"doc\", \"\")), isListener = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"listen\")), isHistory = (client, uri) => hasDataConfig(client) && uri.startsWith(_getDataUrl(client, \"history\", \"\")), isData = (client, uri) => uri.startsWith(\"/data/\") || isQuery(client, uri) || isMutate(client, uri) || isDoc(client, uri) || isListener(client, uri) || isHistory(client, uri);\nfunction _requestObservable(client, httpRequest, options) {\n  const uri = options.url || options.uri, config = client.config(), canUseCdn = typeof options.canUseCdn > \"u\" ? [\"GET\", \"HEAD\"].indexOf(options.method || \"GET\") >= 0 && isData(client, uri) : options.canUseCdn;\n  let useCdn = (options.useCdn ?? config.useCdn) && canUseCdn;\n  const tag = options.tag && config.requestTagPrefix ? [config.requestTagPrefix, options.tag].join(\".\") : options.tag || config.requestTagPrefix;\n  if (tag && options.tag !== null && (options.query = { tag: requestTag(tag), ...options.query }), [\"GET\", \"HEAD\", \"POST\"].indexOf(options.method || \"GET\") >= 0 && isQuery(client, uri)) {\n    const resultSourceMap = options.resultSourceMap ?? config.resultSourceMap;\n    resultSourceMap !== void 0 && resultSourceMap !== !1 && (options.query = { resultSourceMap, ...options.query });\n    const perspectiveOption = options.perspective || config.perspective;\n    typeof perspectiveOption < \"u\" && (perspectiveOption === \"previewDrafts\" && printPreviewDraftsDeprecationWarning(), validateApiPerspective(perspectiveOption), options.query = {\n      perspective: Array.isArray(perspectiveOption) ? perspectiveOption.join(\",\") : perspectiveOption,\n      ...options.query\n    }, (Array.isArray(perspectiveOption) && perspectiveOption.length > 0 || // previewDrafts was renamed to drafts, but keep for backwards compat\n    perspectiveOption === \"previewDrafts\" || perspectiveOption === \"drafts\") && useCdn && (useCdn = !1, printCdnPreviewDraftsWarning())), options.lastLiveEventId && (options.query = { ...options.query, lastLiveEventId: options.lastLiveEventId }), options.returnQuery === !1 && (options.query = { returnQuery: \"false\", ...options.query }), useCdn && options.cacheMode == \"noStale\" && (options.query = { cacheMode: \"noStale\", ...options.query });\n  }\n  const reqOptions = requestOptions(\n    config,\n    Object.assign({}, options, {\n      url: _getUrl(client, uri, useCdn)\n    })\n  ), request = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable(\n    (subscriber) => httpRequest(reqOptions, config.requester).subscribe(subscriber)\n  );\n  return options.signal ? request.pipe(_withAbortSignal(options.signal)) : request;\n}\nfunction _request(client, httpRequest, options) {\n  return _requestObservable(client, httpRequest, options).pipe(\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => event.type === \"response\"),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => event.body)\n  );\n}\nfunction _getDataUrl(client, operation, path) {\n  const config = client.config();\n  if (config[\"~experimental_resource\"]) {\n    resourceConfig(config);\n    const resourceBase = resourceDataBase(config), uri2 = path !== void 0 ? `${operation}/${path}` : operation;\n    return `${resourceBase}/${uri2}`.replace(/\\/($|\\?)/, \"$1\");\n  }\n  const catalog = hasDataset(config), baseUri = `/${operation}/${catalog}`;\n  return `/data${path !== void 0 ? `${baseUri}/${path}` : baseUri}`.replace(/\\/($|\\?)/, \"$1\");\n}\nfunction _getUrl(client, uri, canUseCdn = !1) {\n  const { url, cdnUrl } = client.config();\n  return `${canUseCdn ? cdnUrl : url}/${uri.replace(/^\\//, \"\")}`;\n}\nfunction _withAbortSignal(signal) {\n  return (input) => new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const abort = () => observer.error(_createAbortError(signal));\n    if (signal && signal.aborted) {\n      abort();\n      return;\n    }\n    const subscription = input.subscribe(observer);\n    return signal.addEventListener(\"abort\", abort), () => {\n      signal.removeEventListener(\"abort\", abort), subscription.unsubscribe();\n    };\n  });\n}\nconst isDomExceptionSupported = !!globalThis.DOMException;\nfunction _createAbortError(signal) {\n  if (isDomExceptionSupported)\n    return new DOMException(signal?.reason ?? \"The operation was aborted.\", \"AbortError\");\n  const error = new Error(signal?.reason ?? \"The operation was aborted.\");\n  return error.name = \"AbortError\", error;\n}\nconst resourceDataBase = (config) => {\n  if (!config[\"~experimental_resource\"])\n    throw new Error(\"`resource` must be provided to perform resource queries\");\n  const { type, id } = config[\"~experimental_resource\"];\n  switch (type) {\n    case \"dataset\": {\n      const segments = id.split(\".\");\n      if (segments.length !== 2)\n        throw new Error('Dataset ID must be in the format \"project.dataset\"');\n      return `/projects/${segments[0]}/datasets/${segments[1]}`;\n    }\n    case \"canvas\":\n      return `/canvases/${id}`;\n    case \"media-library\":\n      return `/media-libraries/${id}`;\n    case \"dashboard\":\n      return `/dashboards/${id}`;\n    default:\n      throw new Error(`Unsupported resource type: ${type.toString()}`);\n  }\n};\nfunction _generate(client, httpRequest, request) {\n  const dataset2 = hasDataset(client.config());\n  return _request(client, httpRequest, {\n    method: \"POST\",\n    uri: `/agent/action/generate/${dataset2}`,\n    body: request\n  });\n}\nfunction _transform(client, httpRequest, request) {\n  const dataset2 = hasDataset(client.config());\n  return _request(client, httpRequest, {\n    method: \"POST\",\n    uri: `/agent/action/transform/${dataset2}`,\n    body: request\n  });\n}\nfunction _translate(client, httpRequest, request) {\n  const dataset2 = hasDataset(client.config());\n  return _request(client, httpRequest, {\n    method: \"POST\",\n    uri: `/agent/action/translate/${dataset2}`,\n    body: request\n  });\n}\nclass ObservableAgentsActionClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Run an instruction to generate content in a target document.\n   * @param request - instruction request\n   */\n  generate(request) {\n    return _generate(this.#client, this.#httpRequest, request);\n  }\n  /**\n   * Transform a target document based on a source.\n   * @param request - translation request\n   */\n  transform(request) {\n    return _transform(this.#client, this.#httpRequest, request);\n  }\n  /**\n   * Translate a target document based on a source.\n   * @param request - translation request\n   */\n  translate(request) {\n    return _translate(this.#client, this.#httpRequest, request);\n  }\n}\nclass AgentActionsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Run an instruction to generate content in a target document.\n   * @param request - instruction request\n   */\n  generate(request) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_generate(this.#client, this.#httpRequest, request));\n  }\n  /**\n   * Transform a target document based on a source.\n   * @param request - translation request\n   */\n  transform(request) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_transform(this.#client, this.#httpRequest, request));\n  }\n  /**\n   * Translate a target document based on a source.\n   * @param request - translation request\n   */\n  translate(request) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_translate(this.#client, this.#httpRequest, request));\n  }\n}\nclass ObservableAssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    return _upload(this.#client, this.#httpRequest, assetType, body, options);\n  }\n}\nclass AssetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  upload(assetType, body, options) {\n    const observable2 = _upload(this.#client, this.#httpRequest, assetType, body, options);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      observable2.pipe(\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => event.type === \"response\"),\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n          (event) => event.body.document\n        )\n      )\n    );\n  }\n}\nfunction _upload(client, httpRequest, assetType, body, opts = {}) {\n  validateAssetType(assetType);\n  let meta = opts.extract || void 0;\n  meta && !meta.length && (meta = [\"none\"]);\n  const config = client.config(), options = optionsFromFile(opts, body), { tag, label, title, description, creditLine, filename, source } = options, query = {\n    label,\n    title,\n    description,\n    filename,\n    meta,\n    creditLine\n  };\n  return source && (query.sourceId = source.id, query.sourceName = source.name, query.sourceUrl = source.url), _requestObservable(client, httpRequest, {\n    tag,\n    method: \"POST\",\n    timeout: options.timeout || 0,\n    uri: buildAssetUploadUrl(config, assetType),\n    headers: options.contentType ? { \"Content-Type\": options.contentType } : {},\n    query,\n    body\n  });\n}\nfunction buildAssetUploadUrl(config, assetType) {\n  const assetTypeEndpoint = assetType === \"image\" ? \"images\" : \"files\";\n  if (config[\"~experimental_resource\"]) {\n    const { type, id } = config[\"~experimental_resource\"];\n    switch (type) {\n      case \"dataset\":\n        throw new Error(\n          \"Assets are not supported for dataset resources, yet. Configure the client with `{projectId: <projectId>, dataset: <datasetId>}` instead.\"\n        );\n      case \"canvas\":\n        return `/canvases/${id}/assets/${assetTypeEndpoint}`;\n      case \"media-library\":\n        return `/media-libraries/${id}/upload`;\n      case \"dashboard\":\n        return `/dashboards/${id}/assets/${assetTypeEndpoint}`;\n      default:\n        throw new Error(`Unsupported resource type: ${type.toString()}`);\n    }\n  }\n  const dataset2 = hasDataset(config);\n  return `assets/${assetTypeEndpoint}/${dataset2}`;\n}\nfunction optionsFromFile(opts, file) {\n  return typeof File > \"u\" || !(file instanceof File) ? opts : Object.assign(\n    {\n      filename: opts.preserveFilename === !1 ? void 0 : file.name,\n      contentType: file.type\n    },\n    opts\n  );\n}\nvar defaults = (obj, defaults2) => Object.keys(defaults2).concat(Object.keys(obj)).reduce((target, prop) => (target[prop] = typeof obj[prop] > \"u\" ? defaults2[prop] : obj[prop], target), {});\nconst pick = (obj, props) => props.reduce((selection, prop) => (typeof obj[prop] > \"u\" || (selection[prop] = obj[prop]), selection), {}), eventSourcePolyfill = (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.defer)(() => Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/eventsource\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @sanity/eventsource */ \"(rsc)/./node_modules/@sanity/eventsource/node.js\", 19))).pipe(\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(({ default: EventSource2 }) => EventSource2),\n  (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.shareReplay)(1)\n);\nfunction reconnectOnConnectionFailure() {\n  return function(source) {\n    return source.pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.catchError)((err, caught) => err instanceof ConnectionFailedError ? (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.concat)((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)({ type: \"reconnect\" }), (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.timer)(1e3).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)(() => caught))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.throwError)(() => err))\n    );\n  };\n}\nconst MAX_URL_LENGTH = 14800, possibleOptions = [\n  \"includePreviousRevision\",\n  \"includeResult\",\n  \"includeMutations\",\n  \"includeAllVersions\",\n  \"visibility\",\n  \"effectFormat\",\n  \"tag\"\n], defaultOptions = {\n  includeResult: !0\n};\nfunction _listen(query, params, opts = {}) {\n  const { url, token, withCredentials, requestTagPrefix } = this.config(), tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join(\".\") : opts.tag, options = { ...defaults(opts, defaultOptions), tag }, listenOpts = pick(options, possibleOptions), qs = encodeQueryString({ query, params, options: { tag, ...listenOpts } }), uri = `${url}${_getDataUrl(this, \"listen\", qs)}`;\n  if (uri.length > MAX_URL_LENGTH)\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.throwError)(() => new Error(\"Query too large for listener\"));\n  const listenFor = options.events ? options.events : [\"mutation\"], esOptions = {};\n  return withCredentials && (esOptions.withCredentials = !0), token && (esOptions.headers = {\n    Authorization: `Bearer ${token}`\n  }), connectEventSource(() => (\n    // use polyfill if there is no global EventSource or if we need to set headers\n    (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((EventSource2) => new EventSource2(uri, esOptions)))\n  ), listenFor).pipe(\n    reconnectOnConnectionFailure(),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)((event) => listenFor.includes(event.type)),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(\n      (event) => ({\n        type: event.type,\n        ...\"data\" in event ? event.data : {}\n      })\n    )\n  );\n}\nfunction shareReplayLatest(configOrPredicate, config) {\n  return _shareReplayLatest(\n    typeof configOrPredicate == \"function\" ? { predicate: configOrPredicate, ...config } : configOrPredicate\n  );\n}\nfunction _shareReplayLatest(config) {\n  return (source) => {\n    let latest, emitted = !1;\n    const { predicate, ...shareConfig } = config, wrapped = source.pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.tap)((value) => {\n        config.predicate(value) && (emitted = !0, latest = value);\n      }),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_18__.finalize)(() => {\n        emitted = !1, latest = void 0;\n      }),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.share)(shareConfig)\n    ), emitLatest = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((subscriber) => {\n      emitted && subscriber.next(\n        // this cast is safe because of the emitted check which asserts that we got T from the source\n        latest\n      ), subscriber.complete();\n    });\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_20__.merge)(wrapped, emitLatest);\n  };\n}\nconst requiredApiVersion = \"2021-03-25\";\nclass LiveClient {\n  #client;\n  constructor(client) {\n    this.#client = client;\n  }\n  /**\n   * Requires `apiVersion` to be `2021-03-25` or later.\n   */\n  events({\n    includeDrafts = !1,\n    tag: _tag\n  } = {}) {\n    resourceGuard(\"live\", this.#client.config());\n    const {\n      projectId: projectId2,\n      apiVersion: _apiVersion,\n      token,\n      withCredentials,\n      requestTagPrefix\n    } = this.#client.config(), apiVersion = _apiVersion.replace(/^v/, \"\");\n    if (apiVersion !== \"X\" && apiVersion < requiredApiVersion)\n      throw new Error(\n        `The live events API requires API version ${requiredApiVersion} or later. The current API version is ${apiVersion}. Please update your API version to use this feature.`\n      );\n    if (includeDrafts && !token && !withCredentials)\n      throw new Error(\n        \"The live events API requires a token or withCredentials when 'includeDrafts: true'. Please update your client configuration. The token should have the lowest possible access role.\"\n      );\n    const path = _getDataUrl(this.#client, \"live/events\"), url = new URL(this.#client.getUrl(path, !1)), tag = _tag && requestTagPrefix ? [requestTagPrefix, _tag].join(\".\") : _tag;\n    tag && url.searchParams.set(\"tag\", tag), includeDrafts && url.searchParams.set(\"includeDrafts\", \"true\");\n    const esOptions = {};\n    includeDrafts && token && (esOptions.headers = {\n      Authorization: `Bearer ${token}`\n    }), includeDrafts && withCredentials && (esOptions.withCredentials = !0);\n    const key = `${url.href}::${JSON.stringify(esOptions)}`, existing = eventsCache.get(key);\n    if (existing)\n      return existing;\n    const events = connectEventSource(() => (\n      // use polyfill if there is no global EventSource or if we need to set headers\n      (typeof EventSource > \"u\" || esOptions.headers ? eventSourcePolyfill : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(EventSource)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((EventSource2) => new EventSource2(url.href, esOptions)))\n    ), [\n      \"message\",\n      \"restart\",\n      \"welcome\",\n      \"reconnect\",\n      \"goaway\"\n    ]).pipe(\n      reconnectOnConnectionFailure(),\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)((event) => {\n        if (event.type === \"message\") {\n          const { data, ...rest } = event;\n          return { ...rest, tags: data.tags };\n        }\n        return event;\n      })\n    ), checkCors = fetchObservable(url, {\n      method: \"OPTIONS\",\n      mode: \"cors\",\n      credentials: esOptions.withCredentials ? \"include\" : \"omit\",\n      headers: esOptions.headers\n    }).pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.mergeMap)(() => rxjs__WEBPACK_IMPORTED_MODULE_21__.EMPTY),\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.catchError)(() => {\n        throw new CorsOriginError({ projectId: projectId2 });\n      })\n    ), observable2 = (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.concat)(checkCors, events).pipe(\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.finalize)(() => eventsCache.delete(key)),\n      shareReplayLatest({\n        predicate: (event) => event.type === \"welcome\"\n      })\n    );\n    return eventsCache.set(key, observable2), observable2;\n  }\n}\nfunction fetchObservable(url, init) {\n  return new rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer) => {\n    const controller = new AbortController(), signal = controller.signal;\n    return fetch(url, { ...init, signal: controller.signal }).then(\n      (response) => {\n        observer.next(response), observer.complete();\n      },\n      (err) => {\n        signal.aborted || observer.error(err);\n      }\n    ), () => controller.abort();\n  });\n}\nconst eventsCache = /* @__PURE__ */ new Map();\nclass ObservableDatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name, options) {\n    return _modify(this.#client, this.#httpRequest, \"PUT\", name, options);\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name, options) {\n    return _modify(this.#client, this.#httpRequest, \"PATCH\", name, options);\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name) {\n    return _modify(this.#client, this.#httpRequest, \"DELETE\", name);\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return _request(this.#client, this.#httpRequest, {\n      uri: \"/datasets\",\n      tag: null\n    });\n  }\n}\nclass DatasetsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name, options) {\n    return resourceGuard(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PUT\", name, options)\n    );\n  }\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name, options) {\n    return resourceGuard(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _modify(this.#client, this.#httpRequest, \"PATCH\", name, options)\n    );\n  }\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name) {\n    return resourceGuard(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_modify(this.#client, this.#httpRequest, \"DELETE\", name));\n  }\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list() {\n    return resourceGuard(\"dataset\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: \"/datasets\", tag: null })\n    );\n  }\n}\nfunction _modify(client, httpRequest, method, name, options) {\n  return resourceGuard(\"dataset\", client.config()), dataset(name), _request(client, httpRequest, {\n    method,\n    uri: `/datasets/${name}`,\n    body: options,\n    tag: null\n  });\n}\nclass ObservableProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    resourceGuard(\"projects\", this.#client.config());\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return _request(this.#client, this.#httpRequest, { uri });\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return resourceGuard(\"projects\", this.#client.config()), _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId2}` });\n  }\n}\nclass ProjectsClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  list(options) {\n    resourceGuard(\"projects\", this.#client.config());\n    const uri = options?.includeMembers === !1 ? \"/projects?includeMembers=false\" : \"/projects\";\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_request(this.#client, this.#httpRequest, { uri }));\n  }\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId2) {\n    return resourceGuard(\"projects\", this.#client.config()), (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, { uri: `/projects/${projectId2}` })\n    );\n  }\n}\nconst generateReleaseId = (0,nanoid__WEBPACK_IMPORTED_MODULE_22__.customAlphabet)(\n  \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\n  8\n), getDocumentVersionId = (publishedId, releaseId) => releaseId ? (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getVersionId)(publishedId, releaseId) : (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getDraftId)(publishedId);\nfunction deriveDocumentVersionId(op, {\n  releaseId,\n  publishedId,\n  document\n}) {\n  if (publishedId && document._id) {\n    const versionId = getDocumentVersionId(publishedId, releaseId);\n    return validateVersionIdMatch(versionId, document), versionId;\n  }\n  if (document._id) {\n    const isDraft = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.isDraftId)(document._id), isVersion = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.isVersionId)(document._id);\n    if (!isDraft && !isVersion)\n      throw new Error(\n        `\\`${op}()\\` requires a document with an \\`_id\\` that is a version or draft ID`\n      );\n    if (releaseId) {\n      if (isDraft)\n        throw new Error(\n          `\\`${op}()\\` was called with a document ID (\\`${document._id}\\`) that is a draft ID, but a release ID (\\`${releaseId}\\`) was also provided.`\n        );\n      const builtVersionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getVersionFromId)(document._id);\n      if (builtVersionId !== releaseId)\n        throw new Error(\n          `\\`${op}()\\` was called with a document ID (\\`${document._id}\\`) that is a version ID, but the release ID (\\`${releaseId}\\`) does not match the document's version ID (\\`${builtVersionId}\\`).`\n        );\n    }\n    return document._id;\n  }\n  if (publishedId)\n    return getDocumentVersionId(publishedId, releaseId);\n  throw new Error(`\\`${op}()\\` requires either a publishedId or a document with an \\`_id\\``);\n}\nconst getArgs = (releaseOrOptions, maybeOptions) => {\n  if (typeof releaseOrOptions == \"object\" && releaseOrOptions !== null && (\"releaseId\" in releaseOrOptions || \"metadata\" in releaseOrOptions)) {\n    const { releaseId = generateReleaseId(), metadata = {} } = releaseOrOptions;\n    return [releaseId, metadata, maybeOptions];\n  }\n  return [generateReleaseId(), {}, releaseOrOptions];\n}, createRelease = (releaseOrOptions, maybeOptions) => {\n  const [releaseId, metadata, options] = getArgs(releaseOrOptions, maybeOptions), finalMetadata = {\n    ...metadata,\n    releaseType: metadata.releaseType || \"undecided\"\n  };\n  return { action: {\n    actionType: \"sanity.action.release.create\",\n    releaseId,\n    metadata: finalMetadata\n  }, options };\n};\nclass ObservableReleasesClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * @public\n   *\n   * Retrieve a release by id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to retrieve.\n   * @param options - Additional query options including abort signal and query tag.\n   * @returns An observable that resolves to the release document {@link ReleaseDocument}.\n   *\n   * @example Retrieving a release by id\n   * ```ts\n   * client.observable.releases.get({releaseId: 'my-release'}).pipe(\n   *   tap((release) => console.log(release)),\n   *   // {\n   *   //   _id: '_.releases.my-release',\n   *   //   name: 'my-release'\n   *   //   _type: 'system.release',\n   *   //   metadata: {releaseType: 'asap'},\n   *   //   _createdAt: '2021-01-01T00:00:00.000Z',\n   *   //   ...\n   *   // }\n   * ).subscribe()\n   * ```\n   */\n  get({ releaseId }, options) {\n    return _getDocument(\n      this.#client,\n      this.#httpRequest,\n      `_.releases.${releaseId}`,\n      options\n    );\n  }\n  create(releaseOrOptions, maybeOptions) {\n    const { action, options } = createRelease(releaseOrOptions, maybeOptions), { releaseId, metadata } = action;\n    return _action(this.#client, this.#httpRequest, action, options).pipe(\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_23__.map)((actionResult) => ({\n        ...actionResult,\n        releaseId,\n        metadata\n      }))\n    );\n  }\n  /**\n   * @public\n   *\n   * Edits an existing release, updating the metadata.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to edit.\n   *   - `patch` - The patch operation to apply on the release metadata {@link PatchMutationOperation}.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  edit({ releaseId, patch }, options) {\n    const editAction = {\n      actionType: \"sanity.action.release.edit\",\n      releaseId,\n      patch\n    };\n    return _action(this.#client, this.#httpRequest, editAction, options);\n  }\n  /**\n   * @public\n   *\n   * Publishes all documents in a release at once. For larger releases the effect of the publish\n   * will be visible immediately when querying but the removal of the `versions.<releasesId>.*`\n   * documents and creation of the corresponding published documents with the new content may\n   * take some time.\n   *\n   * During this period both the source and target documents are locked and cannot be\n   * modified through any other means.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to publish.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  publish({ releaseId }, options) {\n    const publishAction = {\n      actionType: \"sanity.action.release.publish\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, publishAction, options);\n  }\n  /**\n   * @public\n   *\n   * An archive action removes an active release. The documents that comprise the release\n   * are deleted and therefore no longer queryable.\n   *\n   * While the documents remain in retention the last version can still be accessed using document history endpoint.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to archive.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  archive({ releaseId }, options) {\n    const archiveAction = {\n      actionType: \"sanity.action.release.archive\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, archiveAction, options);\n  }\n  /**\n   * @public\n   *\n   * An unarchive action restores an archived release and all documents\n   * with the content they had just prior to archiving.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unarchive.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  unarchive({ releaseId }, options) {\n    const unarchiveAction = {\n      actionType: \"sanity.action.release.unarchive\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, unarchiveAction, options);\n  }\n  /**\n   * @public\n   *\n   * A schedule action queues a release for publishing at the given future time.\n   * The release is locked such that no documents in the release can be modified and\n   * no documents that it references can be deleted as this would make the publish fail.\n   * At the given time, the same logic as for the publish action is triggered.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to schedule.\n   *   - `publishAt` - The serialised date and time to publish the release. If the `publishAt` is in the past, the release will be published immediately.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  schedule({ releaseId, publishAt }, options) {\n    const scheduleAction = {\n      actionType: \"sanity.action.release.schedule\",\n      releaseId,\n      publishAt\n    };\n    return _action(this.#client, this.#httpRequest, scheduleAction, options);\n  }\n  /**\n   * @public\n   *\n   * An unschedule action stops a release from being published.\n   * The documents in the release are considered unlocked and can be edited again.\n   * This may fail if another release is scheduled to be published after this one and\n   * has a reference to a document created by this one.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unschedule.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  unschedule({ releaseId }, options) {\n    const unscheduleAction = {\n      actionType: \"sanity.action.release.unschedule\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, unscheduleAction, options);\n  }\n  /**\n   * @public\n   *\n   * A delete action removes a published or archived release.\n   * The backing system document will be removed from the dataset.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to delete.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  delete({ releaseId }, options) {\n    const deleteAction = {\n      actionType: \"sanity.action.release.delete\",\n      releaseId\n    };\n    return _action(this.#client, this.#httpRequest, deleteAction, options);\n  }\n  /**\n   * @public\n   *\n   * Fetch the documents in a release by release id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to fetch documents for.\n   * @param options - Additional mutation options {@link BaseMutationOptions}.\n   * @returns An observable that resolves to the documents in the release.\n   */\n  fetchDocuments({ releaseId }, options) {\n    return _getReleaseDocuments(this.#client, this.#httpRequest, releaseId, options);\n  }\n}\nclass ReleasesClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * @public\n   *\n   * Retrieve a release by id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to retrieve.\n   * @param options - Additional query options including abort signal and query tag.\n   * @returns A promise that resolves to the release document {@link ReleaseDocument}.\n   *\n   * @example Retrieving a release by id\n   * ```ts\n   * const release = await client.releases.get({releaseId: 'my-release'})\n   * console.log(release)\n   * // {\n   * //   _id: '_.releases.my-release',\n   * //   name: 'my-release'\n   * //   _type: 'system.release',\n   * //   metadata: {releaseType: 'asap'},\n   * //   _createdAt: '2021-01-01T00:00:00.000Z',\n   * //   ...\n   * // }\n   * ```\n   */\n  get({ releaseId }, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _getDocument(\n        this.#client,\n        this.#httpRequest,\n        `_.releases.${releaseId}`,\n        options\n      )\n    );\n  }\n  async create(releaseOrOptions, maybeOptions) {\n    const { action, options } = createRelease(releaseOrOptions, maybeOptions), { releaseId, metadata } = action;\n    return { ...await (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _action(this.#client, this.#httpRequest, action, options)\n    ), releaseId, metadata };\n  }\n  /**\n   * @public\n   *\n   * Edits an existing release, updating the metadata.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to edit.\n   *   - `patch` - The patch operation to apply on the release metadata {@link PatchMutationOperation}.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  edit({ releaseId, patch }, options) {\n    const editAction = {\n      actionType: \"sanity.action.release.edit\",\n      releaseId,\n      patch\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_action(this.#client, this.#httpRequest, editAction, options));\n  }\n  /**\n   * @public\n   *\n   * Publishes all documents in a release at once. For larger releases the effect of the publish\n   * will be visible immediately when querying but the removal of the `versions.<releasesId>.*`\n   * documents and creation of the corresponding published documents with the new content may\n   * take some time.\n   *\n   * During this period both the source and target documents are locked and cannot be\n   * modified through any other means.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to publish.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  publish({ releaseId }, options) {\n    const publishAction = {\n      actionType: \"sanity.action.release.publish\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_action(this.#client, this.#httpRequest, publishAction, options));\n  }\n  /**\n   * @public\n   *\n   * An archive action removes an active release. The documents that comprise the release\n   * are deleted and therefore no longer queryable.\n   *\n   * While the documents remain in retention the last version can still be accessed using document history endpoint.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to archive.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  archive({ releaseId }, options) {\n    const archiveAction = {\n      actionType: \"sanity.action.release.archive\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_action(this.#client, this.#httpRequest, archiveAction, options));\n  }\n  /**\n   * @public\n   *\n   * An unarchive action restores an archived release and all documents\n   * with the content they had just prior to archiving.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unarchive.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  unarchive({ releaseId }, options) {\n    const unarchiveAction = {\n      actionType: \"sanity.action.release.unarchive\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_action(this.#client, this.#httpRequest, unarchiveAction, options));\n  }\n  /**\n   * @public\n   *\n   * A schedule action queues a release for publishing at the given future time.\n   * The release is locked such that no documents in the release can be modified and\n   * no documents that it references can be deleted as this would make the publish fail.\n   * At the given time, the same logic as for the publish action is triggered.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to schedule.\n   *   - `publishAt` - The serialised date and time to publish the release. If the `publishAt` is in the past, the release will be published immediately.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  schedule({ releaseId, publishAt }, options) {\n    const scheduleAction = {\n      actionType: \"sanity.action.release.schedule\",\n      releaseId,\n      publishAt\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_action(this.#client, this.#httpRequest, scheduleAction, options));\n  }\n  /**\n   * @public\n   *\n   * An unschedule action stops a release from being published.\n   * The documents in the release are considered unlocked and can be edited again.\n   * This may fail if another release is scheduled to be published after this one and\n   * has a reference to a document created by this one.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unschedule.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  unschedule({ releaseId }, options) {\n    const unscheduleAction = {\n      actionType: \"sanity.action.release.unschedule\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_action(this.#client, this.#httpRequest, unscheduleAction, options));\n  }\n  /**\n   * @public\n   *\n   * A delete action removes a published or archived release.\n   * The backing system document will be removed from the dataset.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to delete.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  delete({ releaseId }, options) {\n    const deleteAction = {\n      actionType: \"sanity.action.release.delete\",\n      releaseId\n    };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_action(this.#client, this.#httpRequest, deleteAction, options));\n  }\n  /**\n   * @public\n   *\n   * Fetch the documents in a release by release id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to fetch documents for.\n   * @param options - Additional mutation options {@link BaseMutationOptions}.\n   * @returns A promise that resolves to the documents in the release.\n   */\n  fetchDocuments({ releaseId }, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_getReleaseDocuments(this.#client, this.#httpRequest, releaseId, options));\n  }\n}\nclass ObservableUsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return _request(\n      this.#client,\n      this.#httpRequest,\n      { uri: `/users/${id}` }\n    );\n  }\n}\nclass UsersClient {\n  #client;\n  #httpRequest;\n  constructor(client, httpRequest) {\n    this.#client = client, this.#httpRequest = httpRequest;\n  }\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById(id) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _request(this.#client, this.#httpRequest, {\n        uri: `/users/${id}`\n      })\n    );\n  }\n}\nclass ObservableSanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  agent;\n  releases;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new ObservableAssetsClient(this, this.#httpRequest), this.datasets = new ObservableDatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ObservableProjectsClient(this, this.#httpRequest), this.users = new ObservableUsersClient(this, this.#httpRequest), this.agent = {\n      action: new ObservableAgentsActionClient(this, this.#httpRequest)\n    }, this.releases = new ObservableReleasesClient(this, this.#httpRequest);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new ObservableSanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.#clientConfig = initConfig(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new ObservableSanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return _fetch(\n      this,\n      this.#httpRequest,\n      this.#clientConfig.stega,\n      query,\n      params,\n      options\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return _getDocument(this, this.#httpRequest, id, options);\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return _getDocuments(this, this.#httpRequest, ids, options);\n  }\n  create(document, options) {\n    return _create(this, this.#httpRequest, document, \"create\", options);\n  }\n  createIfNotExists(document, options) {\n    return _createIfNotExists(this, this.#httpRequest, document, options);\n  }\n  createOrReplace(document, options) {\n    return _createOrReplace(this, this.#httpRequest, document, options);\n  }\n  createVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"createVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId }, versionPublishedId = publishedId || (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getPublishedId)(document._id);\n    return _createVersion(\n      this,\n      this.#httpRequest,\n      documentVersion,\n      versionPublishedId,\n      options\n    );\n  }\n  delete(selection, options) {\n    return _delete(this, this.#httpRequest, selection, options);\n  }\n  /**\n   * @public\n   *\n   * Deletes the draft or release version of a document.\n   *\n   * @remarks\n   * * Discarding a version with no `releaseId` will discard the draft version of the published document.\n   * * If the draft or release version does not exist, any error will throw.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to discard the document from.\n   *   - `publishedId` - The published ID of the document to discard.\n   * @param purge - if `true` the document history is also discarded.\n   * @param options - Additional action options.\n   * @returns an observable that resolves to the `transactionId`.\n   *\n   * @example Discarding a release version of a document\n   * ```ts\n   * client.observable.discardVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be discarded.\n   * ```\n   *\n   * @example Discarding a draft version of a document\n   * ```ts\n   * client.observable.discardVersion({publishedId: 'myDocument'})\n   * // The document with the ID `drafts.myDocument` will be discarded.\n   * ```\n   */\n  discardVersion({ releaseId, publishedId }, purge, options) {\n    const documentVersionId = getDocumentVersionId(publishedId, releaseId);\n    return _discardVersion(this, this.#httpRequest, documentVersionId, purge, options);\n  }\n  replaceVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"replaceVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId };\n    return _replaceVersion(this, this.#httpRequest, documentVersion, options);\n  }\n  /**\n   * @public\n   *\n   * Used to indicate when a document within a release should be unpublished when\n   * the release is run.\n   *\n   * @remarks\n   * * If the published document does not exist, an error will be thrown.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to unpublish the document from.\n   *   - `publishedId` - The published ID of the document to unpublish.\n   * @param options - Additional action options.\n   * @returns an observable that resolves to the `transactionId`.\n   *\n   * @example Unpublishing a release version of a published document\n   * ```ts\n   * client.observable.unpublishVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be unpublished. when `myRelease` is run.\n   * ```\n   */\n  unpublishVersion({ releaseId, publishedId }, options) {\n    const versionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getVersionId)(publishedId, releaseId);\n    return _unpublishVersion(this, this.#httpRequest, versionId, publishedId, options);\n  }\n  mutate(operations, options) {\n    return _mutate(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection, operations) {\n    return new ObservablePatch(selection, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new ObservableTransaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return _action(this, this.#httpRequest, operations, options);\n  }\n  /**\n   * Perform an HTTP request against the Sanity API\n   *\n   * @param options - Request options\n   */\n  request(options) {\n    return _request(this, this.#httpRequest, options);\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nclass SanityClient {\n  assets;\n  datasets;\n  live;\n  projects;\n  users;\n  agent;\n  releases;\n  /**\n   * Observable version of the Sanity client, with the same configuration as the promise-based one\n   */\n  observable;\n  /**\n   * Private properties\n   */\n  #clientConfig;\n  #httpRequest;\n  /**\n   * Instance properties\n   */\n  listen = _listen;\n  constructor(httpRequest, config = defaultConfig) {\n    this.config(config), this.#httpRequest = httpRequest, this.assets = new AssetsClient(this, this.#httpRequest), this.datasets = new DatasetsClient(this, this.#httpRequest), this.live = new LiveClient(this), this.projects = new ProjectsClient(this, this.#httpRequest), this.users = new UsersClient(this, this.#httpRequest), this.agent = {\n      action: new AgentActionsClient(this, this.#httpRequest)\n    }, this.releases = new ReleasesClient(this, this.#httpRequest), this.observable = new ObservableSanityClient(httpRequest, config);\n  }\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone() {\n    return new SanityClient(this.#httpRequest, this.config());\n  }\n  config(newConfig) {\n    if (newConfig === void 0)\n      return { ...this.#clientConfig };\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === !1)\n      throw new Error(\n        \"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\"\n      );\n    return this.observable && this.observable.config(newConfig), this.#clientConfig = initConfig(newConfig, this.#clientConfig || {}), this;\n  }\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig) {\n    const thisConfig = this.config();\n    return new SanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...thisConfig.stega || {},\n        ...typeof newConfig?.stega == \"boolean\" ? { enabled: newConfig.stega } : newConfig?.stega || {}\n      }\n    });\n  }\n  fetch(query, params, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _fetch(\n        this,\n        this.#httpRequest,\n        this.#clientConfig.stega,\n        query,\n        params,\n        options\n      )\n    );\n  }\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument(id, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_getDocument(this, this.#httpRequest, id, options));\n  }\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments(ids, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_getDocuments(this, this.#httpRequest, ids, options));\n  }\n  create(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _create(this, this.#httpRequest, document, \"create\", options)\n    );\n  }\n  createIfNotExists(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _createIfNotExists(this, this.#httpRequest, document, options)\n    );\n  }\n  createOrReplace(document, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _createOrReplace(this, this.#httpRequest, document, options)\n    );\n  }\n  createVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"createVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId }, versionPublishedId = publishedId || (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getPublishedId)(document._id);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_24__.firstValueFrom)(\n      _createVersion(\n        this,\n        this.#httpRequest,\n        documentVersion,\n        versionPublishedId,\n        options\n      )\n    );\n  }\n  delete(selection, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_delete(this, this.#httpRequest, selection, options));\n  }\n  /**\n   * @public\n   *\n   * Deletes the draft or release version of a document.\n   *\n   * @remarks\n   * * Discarding a version with no `releaseId` will discard the draft version of the published document.\n   * * If the draft or release version does not exist, any error will throw.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to discard the document from.\n   *   - `publishedId` - The published ID of the document to discard.\n   * @param purge - if `true` the document history is also discarded.\n   * @param options - Additional action options.\n   * @returns a promise that resolves to the `transactionId`.\n   *\n   * @example Discarding a release version of a document\n   * ```ts\n   * client.discardVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be discarded.\n   * ```\n   *\n   * @example Discarding a draft version of a document\n   * ```ts\n   * client.discardVersion({publishedId: 'myDocument'})\n   * // The document with the ID `drafts.myDocument` will be discarded.\n   * ```\n   */\n  discardVersion({ releaseId, publishedId }, purge, options) {\n    const documentVersionId = getDocumentVersionId(publishedId, releaseId);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _discardVersion(this, this.#httpRequest, documentVersionId, purge, options)\n    );\n  }\n  replaceVersion({\n    document,\n    publishedId,\n    releaseId\n  }, options) {\n    const documentVersionId = deriveDocumentVersionId(\"replaceVersion\", {\n      document,\n      publishedId,\n      releaseId\n    }), documentVersion = { ...document, _id: documentVersionId };\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_24__.firstValueFrom)(\n      _replaceVersion(this, this.#httpRequest, documentVersion, options)\n    );\n  }\n  /**\n   * @public\n   *\n   * Used to indicate when a document within a release should be unpublished when\n   * the release is run.\n   *\n   * @remarks\n   * * If the published document does not exist, an error will be thrown.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to unpublish the document from.\n   *   - `publishedId` - The published ID of the document to unpublish.\n   * @param options - Additional action options.\n   * @returns a promise that resolves to the `transactionId`.\n   *\n   * @example Unpublishing a release version of a published document\n   * ```ts\n   * await client.unpublishVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be unpublished. when `myRelease` is run.\n   * ```\n   */\n  unpublishVersion({ releaseId, publishedId }, options) {\n    const versionId = (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_10__.getVersionId)(publishedId, releaseId);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(\n      _unpublishVersion(this, this.#httpRequest, versionId, publishedId, options)\n    );\n  }\n  mutate(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_mutate(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId, operations) {\n    return new Patch(documentId, operations, this);\n  }\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction(operations) {\n    return new Transaction(operations, this);\n  }\n  /**\n   * Perform action operations against the configured dataset\n   * Returns a promise that resolves to the transaction result\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(operations, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_action(this, this.#httpRequest, operations, options));\n  }\n  /**\n   * Perform a request against the Sanity API\n   * NOTE: Only use this for Sanity API endpoints, not for your own APIs!\n   *\n   * @param options - Request options\n   * @returns Promise resolving to the response body\n   */\n  request(options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_request(this, this.#httpRequest, options));\n  }\n  /**\n   * Perform an HTTP request a `/data` sub-endpoint\n   * NOTE: Considered internal, thus marked as deprecated. Use `request` instead.\n   *\n   * @deprecated - Use `request()` or your own HTTP library instead\n   * @param endpoint - Endpoint to hit (mutate, query etc)\n   * @param body - Request body\n   * @param options - Request options\n   * @internal\n   */\n  dataRequest(endpoint, body, options) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.lastValueFrom)(_dataRequest(this, this.#httpRequest, endpoint, body, options));\n  }\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri, canUseCdn) {\n    return _getUrl(this, uri, canUseCdn);\n  }\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation, path) {\n    return _getDataUrl(this, operation, path);\n  }\n}\nfunction defineCreateClientExports(envMiddleware2, ClassConstructor) {\n  return { requester: defineHttpRequest(envMiddleware2), createClient: (config) => {\n    const clientRequester = defineHttpRequest(envMiddleware2);\n    return new ClassConstructor(\n      (options, requester2) => (requester2 || clientRequester)({\n        maxRedirects: 0,\n        maxRetries: config.maxRetries,\n        retryDelay: config.retryDelay,\n        ...options\n      }),\n      config\n    );\n  } };\n}\nfunction defineDeprecatedCreateClient(createClient2) {\n  return function(config) {\n    return printNoDefaultExport(), createClient2(config);\n  };\n}\nvar envMiddleware = [];\nconst exp = defineCreateClientExports(envMiddleware, SanityClient), requester = exp.requester, createClient = exp.createClient, deprecatedCreateClient = defineDeprecatedCreateClient(createClient);\n\n//# sourceMappingURL=index.browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9pbmRleC5icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUErQjtBQUNlO0FBQzZDO0FBQ3FIO0FBQ3hKO0FBQ2dDO0FBQ2dDO0FBQ2hGO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsWUFBWSxJQUFJLGFBQWE7QUFDM0Q7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLEtBQUs7QUFDTDtBQUNBLFNBQVMscUJBQXFCLDJCQUEyQix1QkFBdUIsRUFBRSxTQUFTO0FBQzNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELGtCQUFrQjtBQUNsRSxZQUFZLFdBQVcsY0FBYyxTQUFTLG1CQUFtQixlQUFlLEVBQUUsY0FBYztBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1QkFBdUI7QUFDdkM7QUFDQSw0REFBNEQsV0FBVztBQUN2RTtBQUNBLGNBQWMsU0FBUztBQUN2QixpTkFBaU4sSUFBSTtBQUNyTixNQUFNO0FBQ04sOEhBQThILElBQUk7QUFDbEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsNkNBQUs7QUFDZCxJQUFJLHdEQUFLLEdBQUcsYUFBYTtBQUN6QjtBQUNBO0FBQ0EsSUFBSSw4REFBVztBQUNmLElBQUksK0RBQVk7QUFDaEIsSUFBSSwyREFBUTtBQUNaO0FBQ0EsSUFBSSw2REFBVSxHQUFHLGdCQUFnQiw0Q0FBVSxFQUFFO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsb0RBQUs7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLEVBQUUsTUFBTSxLQUFLLFVBQVUsRUFBRSxNQUFNLEtBQUs7QUFDeEQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwyQ0FBMkMsS0FBSyxtQkFBbUIsNkJBQTZCO0FBQ2hHLENBQUM7QUFDRDtBQUNBLHVCQUF1QixHQUFHO0FBQzFCLENBQUM7QUFDRCx1REFBdUQsTUFBTTtBQUM3RCx1QkFBdUIsR0FBRyxPQUFPLEdBQUc7QUFDcEMsQ0FBQztBQUNEO0FBQ0EsdUJBQXVCLEdBQUc7QUFDMUI7QUFDQSxDQUFDO0FBQ0Q7QUFDQSx5QkFBeUIsR0FBRyxVQUFVLEtBQUs7QUFDM0MsQ0FBQztBQUNEO0FBQ0EseUJBQXlCLEdBQUc7QUFDNUI7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLHFDQUFxQyxhQUFhLGlEQUFpRCxlQUFlO0FBQ2xIO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSwwREFBMEQsSUFBSTtBQUM5RCx1QkFBdUIsV0FBVywwQ0FBMEMsTUFBTTtBQUNsRjtBQUNBO0FBQ0EsdUJBQXVCLFdBQVc7QUFDbEM7QUFDQSx1QkFBdUIsV0FBVztBQUNsQyxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELCtDQUErQyxLQUFLO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxVQUFVLFdBQVc7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxnQkFBZ0I7QUFDcEU7QUFDQSxDQUFDO0FBQ0Q7QUFDQSx5QkFBeUIsUUFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx5Q0FBeUM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELDRCQUE0QjtBQUM5RSw4Q0FBOEMsd0JBQXdCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EscUZBQXFGLFFBQVE7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLHdCQUF3QjtBQUN6RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSwwQkFBMEI7QUFDNUY7QUFDQTtBQUNBLG1qQkFBbWpCLHFCQUFxQjtBQUN4a0I7QUFDQSw0Q0FBNEMsU0FBUyxLQUFLLG9CQUFvQixHQUFHLEtBQUssSUFBSSxxQkFBcUIseUJBQXlCLFNBQVMsS0FBSyxvQkFBb0IsR0FBRyxRQUFRLElBQUkscUJBQXFCLHlCQUF5QixrQkFBa0IsSUFBSSxxQkFBcUI7QUFDbFI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMkNBQUs7QUFDZDtBQUNBLFdBQVcsa0RBQVksWUFBWSx3Q0FBRTtBQUNyQyxHQUFHLE9BQU8sOENBQVE7QUFDbEI7QUFDQTtBQUNBLGFBQWEsNENBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRGQUE0RixjQUFjO0FBQzFHO0FBQ0E7QUFDQTtBQUNBLGtKQUFrSixtQkFBbUI7QUFDcks7QUFDQTtBQUNBLHNCQUFzQixjQUFjO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsbUJBQW1CO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHNDQUFzQztBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixtQkFBbUI7QUFDN0MsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsSUFBSTtBQUN4QztBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYSxtQ0FBbUM7QUFDaEQ7QUFDQSx1RkFBdUYsdUNBQXVDLElBQUk7QUFDbEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxjQUFjO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFGQUFxRjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzR0FBc0c7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMscUJBQXFCLGNBQWM7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsdUJBQXVCO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsU0FBUztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLFNBQVM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5UEFBeVAsU0FBUyxHQUFHLFdBQVcsR0FBRyxTQUFTO0FBQzVSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0Esd0VBQXdFO0FBQ3hFLDRCQUE0QixxQ0FBcUM7QUFDakUsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsb0JBQW9CO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtGQUFrRixrQ0FBa0M7QUFDcEgsaUNBQWlDLHlCQUF5QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLG9CQUFvQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRkFBa0Ysa0NBQWtDO0FBQ3BILGlDQUFpQyx5QkFBeUI7QUFDMUQ7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxhQUFhO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxXQUFXO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxXQUFXO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsVUFBVSxrQkFBa0I7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyQkFBMkIscUNBQXFDO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsc0NBQXNDO0FBQy9EO0FBQ0EsNERBQTREO0FBQzVEO0FBQ0E7QUFDQSx5QkFBeUIsMEJBQTBCO0FBQ25EO0FBQ0E7QUFDQSwrREFBK0Q7QUFDL0QseUJBQXlCLDBCQUEwQjtBQUNuRDtBQUNBLHVCQUF1QixTQUFTLHNDQUFzQztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJCQUEyQixxQ0FBcUM7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixzQ0FBc0M7QUFDL0Q7QUFDQSxzRUFBc0U7QUFDdEU7QUFDQTtBQUNBLHlCQUF5QiwwQkFBMEI7QUFDbkQ7QUFDQSx1QkFBdUIsU0FBUyxzQ0FBc0M7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDLG9CQUFvQjtBQUNwQiw4Q0FBOEMsTUFBTTtBQUNwRDtBQUNBLHlCQUF5QjtBQUN6Qiw2QkFBNkIsa0NBQWtDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUZBQXFGLHNDQUFzQztBQUMzSCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsQ0FBQztBQUNELGdEQUFnRCw4Q0FBOEM7QUFDOUY7QUFDQTtBQUNBLDRCQUE0QixJQUFJO0FBQ2hDO0FBQ0EseUNBQXlDLE1BQU07QUFDL0MsNkpBQTZKLGFBQWE7QUFDMUssQ0FBQyxzSUFBc0k7QUFDdkk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGdFQUFnRSxjQUFjO0FBQzlFO0FBQ0EsbUJBQW1CO0FBQ25CLDZDQUE2Qyx5QkFBeUI7QUFDdEUsSUFBSSxtQ0FBbUMsb0VBQVUseUdBQXlHLHVCQUF1QjtBQUNqTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLHdEQUF3RCxrQkFBa0IsZ0JBQWdCLGdFQUFnRSxlQUFlO0FBQzVLO0FBQ0EsSUFBSSxpRUFBaUI7QUFDckIsTUFBTSwwQ0FBSTtBQUNWLFFBQVEsNk9BQThDO0FBQ3REO0FBQ0EsU0FBUztBQUNULGFBQWEsc0JBQXNCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLElBQUksbURBQUc7QUFDUDtBQUNBO0FBQ0EsNkJBQTZCLGdCQUFnQjtBQUM3QztBQUNBO0FBQ0Esb0JBQW9CLG1EQUFHO0FBQ3ZCO0FBQ0Esd0RBQXdEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixxRUFBZ0I7QUFDdEM7QUFDQSxVQUFVLDhEQUFTO0FBQ25CO0FBQ0EsZ0NBQWdDLEdBQUcsd0RBQXdELGVBQWU7QUFDMUc7QUFDQSxhQUFhLGlFQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixHQUFHLGdDQUFnQyxVQUFVLDRFQUE0RSxlQUFlO0FBQ3RLO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxzREFBTTtBQUNWLElBQUksbURBQUc7QUFDUDtBQUNBO0FBQ0EsMERBQTBEO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxzREFBTTtBQUNWLElBQUksbURBQUc7QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx1RUFBdUU7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxjQUFjLGlDQUFpQyxHQUFHO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsK0VBQStFLCtCQUErQjtBQUM5RztBQUNBLHVEQUF1RCxnQ0FBZ0M7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDJFQUEyRTtBQUNqRjtBQUNBO0FBQ0E7QUFDQSx1RUFBdUU7QUFDdkUsdVVBQXVVLHdFQUF3RTtBQUMvWTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHNEQUFNO0FBQ1YsSUFBSSxtREFBRztBQUNQLElBQUksbURBQUc7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0QscUJBQXFCLFdBQVcseUJBQXlCLHNDQUFzQztBQUMvRix1REFBdUQsdUJBQXVCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCx3Q0FBd0M7QUFDaEc7QUFDQSwrRUFBK0UsbUNBQW1DO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHdMQUF3TCw0REFBNEQsb0RBQW9ELHdDQUF3QyxrRUFBa0Usd0NBQXdDO0FBQzFiO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBLEtBQUs7QUFDTCxtQkFBbUIsNENBQVU7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxzREFBTTtBQUNWLElBQUksbURBQUc7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0UsVUFBVSxHQUFHLEtBQUs7QUFDakcsY0FBYyxhQUFhLEdBQUcsS0FBSztBQUNuQztBQUNBLG9EQUFvRCxVQUFVLEdBQUcsUUFBUTtBQUN6RSxpQkFBaUIscUJBQXFCLFFBQVEsR0FBRyxLQUFLLFlBQVk7QUFDbEU7QUFDQTtBQUNBLFVBQVUsY0FBYztBQUN4QixZQUFZLHlCQUF5QixHQUFHLHVCQUF1QjtBQUMvRDtBQUNBO0FBQ0Esd0JBQXdCLDRDQUFVO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxXQUFXO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsWUFBWSxZQUFZLFlBQVk7QUFDOUQ7QUFDQTtBQUNBLDBCQUEwQixHQUFHO0FBQzdCO0FBQ0EsaUNBQWlDLEdBQUc7QUFDcEM7QUFDQSw0QkFBNEIsR0FBRztBQUMvQjtBQUNBLG9EQUFvRCxnQkFBZ0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLFNBQVM7QUFDNUM7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxTQUFTO0FBQzdDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsU0FBUztBQUM3QztBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0EsUUFBUSxzREFBTTtBQUNkLFFBQVEsbURBQUc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLCtEQUErRDtBQUMxSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsc0NBQXNDLElBQUk7QUFDL0U7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksV0FBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQSw0RkFBNEYsNkNBQTZDO0FBQ3pJO0FBQ0E7QUFDQSw0QkFBNEIsR0FBRyxVQUFVLGtCQUFrQjtBQUMzRDtBQUNBLG1DQUFtQyxHQUFHO0FBQ3RDO0FBQ0EsOEJBQThCLEdBQUcsVUFBVSxrQkFBa0I7QUFDN0Q7QUFDQSxzREFBc0QsZ0JBQWdCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrQkFBa0IsR0FBRyxTQUFTO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSw2TEFBNkw7QUFDN0wsdUlBQXVJLHlCQUF5QiwyQ0FBSyxPQUFPLHlRQUE2QjtBQUN6TSxFQUFFLG1EQUFHLElBQUksdUJBQXVCO0FBQ2hDLEVBQUUsa0RBQVc7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0saURBQVUseURBQXlELDZDQUFNLENBQUMsd0NBQUUsR0FBRyxtQkFBbUIsR0FBRyw0Q0FBSyxXQUFXLDhDQUFRLG1CQUFtQixpREFBVTtBQUNoSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDLFVBQVUsZ0RBQWdELHFIQUFxSCx3Q0FBd0Msd0VBQXdFLDBCQUEwQixzQkFBc0IsWUFBWSxJQUFJLEVBQUUsZ0NBQWdDO0FBQ2pZO0FBQ0EsV0FBVyxpREFBVTtBQUNyQjtBQUNBO0FBQ0EsNkJBQTZCLE1BQU07QUFDbkMsR0FBRztBQUNIO0FBQ0EsMkVBQTJFLHdDQUFFLG9CQUFvQixtREFBRztBQUNwRztBQUNBO0FBQ0EsSUFBSSxzREFBTTtBQUNWLElBQUksbURBQUc7QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQywwQ0FBMEM7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNEJBQTRCO0FBQ3hDLE1BQU0sMENBQUc7QUFDVDtBQUNBLE9BQU87QUFDUCxNQUFNLCtDQUFRO0FBQ2Q7QUFDQSxPQUFPO0FBQ1AsTUFBTSw0Q0FBSztBQUNYLHdCQUF3Qiw0Q0FBVTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxXQUFXLDRDQUFLO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLElBQUk7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0Esb0RBQW9ELG9CQUFvQix1Q0FBdUMsV0FBVztBQUMxSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsTUFBTTtBQUNyQyxLQUFLO0FBQ0wsbUJBQW1CLFNBQVMsSUFBSSwwQkFBMEI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsd0NBQUUsb0JBQW9CLG1EQUFHO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLG1EQUFHO0FBQ1Q7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsTUFBTSw4Q0FBUSxPQUFPLHdDQUFLO0FBQzFCLE1BQU0saURBQVU7QUFDaEIsb0NBQW9DLHVCQUF1QjtBQUMzRCxPQUFPO0FBQ1AscUJBQXFCLDZDQUFNO0FBQzNCLE1BQU0sd0RBQVU7QUFDaEI7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw0Q0FBVTtBQUN2QjtBQUNBLHdCQUF3QixvQ0FBb0M7QUFDNUQ7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxvREFBYTtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxvREFBYTtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsb0RBQWE7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxvREFBYTtBQUN6RSxrREFBa0QsNkJBQTZCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixLQUFLO0FBQzNCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsS0FBSztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlHQUF5RyxrQkFBa0IsV0FBVyxHQUFHO0FBQ3pJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhLDZDQUE2QyxLQUFLO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELG9EQUFhO0FBQzFFLGtEQUFrRCxrQkFBa0IsV0FBVyxHQUFHO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix1REFBYztBQUN4QztBQUNBO0FBQ0Esa0VBQWtFLGlFQUFZLDJCQUEyQiwrREFBVTtBQUNuSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDhEQUFTLDRCQUE0QixnRUFBVztBQUNwRTtBQUNBO0FBQ0EsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxHQUFHLHdDQUF3QyxhQUFhLDhDQUE4QyxVQUFVO0FBQy9IO0FBQ0EsNkJBQTZCLHFFQUFnQjtBQUM3QztBQUNBO0FBQ0EsZUFBZSxHQUFHLHdDQUF3QyxhQUFhLGtEQUFrRCxVQUFVLGtEQUFrRCxlQUFlO0FBQ3BNO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixHQUFHO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLFlBQVksaURBQWlEO0FBQzdEO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLHNCQUFzQjtBQUN6RjtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsd0JBQXdCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0JBQW9CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsV0FBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsVUFBVTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0JBQWtCLG1EQUFtRCxzQkFBc0I7QUFDdkc7QUFDQSxNQUFNLDBDQUFLO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsNkJBQTZCO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBLFNBQVMsa0JBQWtCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxXQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksV0FBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsV0FBVztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxXQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxXQUFXO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCwwQkFBMEI7QUFDN0U7QUFDQTtBQUNBLG1CQUFtQixXQUFXO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELHNCQUFzQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Qsd0JBQXdCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0JBQW9CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLFdBQVc7QUFDbkIsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsVUFBVTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrQkFBa0IsbURBQW1ELHNCQUFzQjtBQUN2RyxhQUFhLFNBQVMsb0RBQWE7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLDZCQUE2QjtBQUN0RztBQUNBO0FBQ0E7QUFDQSxTQUFTLGtCQUFrQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksV0FBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFdBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFdBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsV0FBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsV0FBVztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsMEJBQTBCO0FBQzdFO0FBQ0E7QUFDQSxtQkFBbUIsV0FBVztBQUM5QixXQUFXLG9EQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGVBQWUsR0FBRztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0EsdUJBQXVCLEdBQUc7QUFDMUIsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQyxvREFBb0QsMkJBQTJCO0FBQy9FO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssdUJBQXVCLHFDQUFxQyxzQ0FBc0MsbUVBQWM7QUFDckg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxrREFBa0Q7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QywwQkFBMEI7QUFDakU7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdCQUF3QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssdUJBQXVCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGtEQUFrRDtBQUMzRjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsd0JBQXdCO0FBQzdDLHNCQUFzQixpRUFBWTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9JQUFvSTtBQUNwSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsb0RBQW9ELDJCQUEyQjtBQUMvRTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyx1QkFBdUIscUNBQXFDLHNDQUFzQyxtRUFBYztBQUNySCxXQUFXLHFEQUFjO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixrREFBa0Q7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwwQkFBMEI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdCQUF3QjtBQUMzQztBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLHVCQUF1QjtBQUM1QixXQUFXLHFEQUFjO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msa0RBQWtEO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix3QkFBd0I7QUFDN0Msc0JBQXNCLGlFQUFZO0FBQ2xDLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBeUJFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW50ZWMvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9pbmRleC5icm93c2VyLmpzPzBjZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0SXQgfSBmcm9tIFwiZ2V0LWl0XCI7XG5pbXBvcnQgeyBhZGFwdGVyLCBlbnZpcm9ubWVudCB9IGZyb20gXCJnZXQtaXRcIjtcbmltcG9ydCB7IHJldHJ5LCBqc29uUmVxdWVzdCwganNvblJlc3BvbnNlLCBwcm9ncmVzcywgb2JzZXJ2YWJsZSB9IGZyb20gXCJnZXQtaXQvbWlkZGxld2FyZVwiO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgZGVmZXIsIG9mLCBpc09ic2VydmFibGUsIG1lcmdlTWFwLCBmcm9tLCBsYXN0VmFsdWVGcm9tLCBzaGFyZVJlcGxheSwgY2F0Y2hFcnJvciwgY29uY2F0LCB0aHJvd0Vycm9yLCB0aW1lciwgdGFwLCBmaW5hbGl6ZSwgc2hhcmUsIG1lcmdlLCBFTVBUWSwgbWFwIGFzIG1hcCQxLCBmaXJzdFZhbHVlRnJvbSB9IGZyb20gXCJyeGpzXCI7XG5pbXBvcnQgeyBzdGVnYUNsZWFuIH0gZnJvbSBcIi4vX2NodW5rcy1lcy9zdGVnYUNsZWFuLmpzXCI7XG5pbXBvcnQgeyBjb21iaW5lTGF0ZXN0V2l0aCwgbWFwLCBmaWx0ZXIsIGZpbmFsaXplIGFzIGZpbmFsaXplJDEgfSBmcm9tIFwicnhqcy9vcGVyYXRvcnNcIjtcbmltcG9ydCB7IGdldFZlcnNpb25Gcm9tSWQsIGlzRHJhZnRJZCwgZ2V0VmVyc2lvbklkLCBnZXREcmFmdElkLCBpc1ZlcnNpb25JZCwgZ2V0UHVibGlzaGVkSWQgfSBmcm9tIFwiQHNhbml0eS9jbGllbnQvY3NtXCI7XG5pbXBvcnQgeyBjdXN0b21BbHBoYWJldCB9IGZyb20gXCJuYW5vaWRcIjtcbmNsYXNzIENsaWVudEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICByZXNwb25zZTtcbiAgc3RhdHVzQ29kZSA9IDQwMDtcbiAgcmVzcG9uc2VCb2R5O1xuICBkZXRhaWxzO1xuICBjb25zdHJ1Y3RvcihyZXMpIHtcbiAgICBjb25zdCBwcm9wcyA9IGV4dHJhY3RFcnJvclByb3BzKHJlcyk7XG4gICAgc3VwZXIocHJvcHMubWVzc2FnZSksIE9iamVjdC5hc3NpZ24odGhpcywgcHJvcHMpO1xuICB9XG59XG5jbGFzcyBTZXJ2ZXJFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgcmVzcG9uc2U7XG4gIHN0YXR1c0NvZGUgPSA1MDA7XG4gIHJlc3BvbnNlQm9keTtcbiAgZGV0YWlscztcbiAgY29uc3RydWN0b3IocmVzKSB7XG4gICAgY29uc3QgcHJvcHMgPSBleHRyYWN0RXJyb3JQcm9wcyhyZXMpO1xuICAgIHN1cGVyKHByb3BzLm1lc3NhZ2UpLCBPYmplY3QuYXNzaWduKHRoaXMsIHByb3BzKTtcbiAgfVxufVxuZnVuY3Rpb24gZXh0cmFjdEVycm9yUHJvcHMocmVzKSB7XG4gIGNvbnN0IGJvZHkgPSByZXMuYm9keSwgcHJvcHMgPSB7XG4gICAgcmVzcG9uc2U6IHJlcyxcbiAgICBzdGF0dXNDb2RlOiByZXMuc3RhdHVzQ29kZSxcbiAgICByZXNwb25zZUJvZHk6IHN0cmluZ2lmeUJvZHkoYm9keSwgcmVzKSxcbiAgICBtZXNzYWdlOiBcIlwiLFxuICAgIGRldGFpbHM6IHZvaWQgMFxuICB9O1xuICBpZiAoYm9keS5lcnJvciAmJiBib2R5Lm1lc3NhZ2UpXG4gICAgcmV0dXJuIHByb3BzLm1lc3NhZ2UgPSBgJHtib2R5LmVycm9yfSAtICR7Ym9keS5tZXNzYWdlfWAsIHByb3BzO1xuICBpZiAoaXNNdXRhdGlvbkVycm9yKGJvZHkpIHx8IGlzQWN0aW9uRXJyb3IoYm9keSkpIHtcbiAgICBjb25zdCBhbGxJdGVtcyA9IGJvZHkuZXJyb3IuaXRlbXMgfHwgW10sIGl0ZW1zID0gYWxsSXRlbXMuc2xpY2UoMCwgNSkubWFwKChpdGVtKSA9PiBpdGVtLmVycm9yPy5kZXNjcmlwdGlvbikuZmlsdGVyKEJvb2xlYW4pO1xuICAgIGxldCBpdGVtc1N0ciA9IGl0ZW1zLmxlbmd0aCA/IGA6XG4tICR7aXRlbXMuam9pbihgXG4tIGApfWAgOiBcIlwiO1xuICAgIHJldHVybiBhbGxJdGVtcy5sZW5ndGggPiA1ICYmIChpdGVtc1N0ciArPSBgXG4uLi5hbmQgJHthbGxJdGVtcy5sZW5ndGggLSA1fSBtb3JlYCksIHByb3BzLm1lc3NhZ2UgPSBgJHtib2R5LmVycm9yLmRlc2NyaXB0aW9ufSR7aXRlbXNTdHJ9YCwgcHJvcHMuZGV0YWlscyA9IGJvZHkuZXJyb3IsIHByb3BzO1xuICB9XG4gIHJldHVybiBib2R5LmVycm9yICYmIGJvZHkuZXJyb3IuZGVzY3JpcHRpb24gPyAocHJvcHMubWVzc2FnZSA9IGJvZHkuZXJyb3IuZGVzY3JpcHRpb24sIHByb3BzLmRldGFpbHMgPSBib2R5LmVycm9yLCBwcm9wcykgOiAocHJvcHMubWVzc2FnZSA9IGJvZHkuZXJyb3IgfHwgYm9keS5tZXNzYWdlIHx8IGh0dHBFcnJvck1lc3NhZ2UocmVzKSwgcHJvcHMpO1xufVxuZnVuY3Rpb24gaXNNdXRhdGlvbkVycm9yKGJvZHkpIHtcbiAgcmV0dXJuIGlzUGxhaW5PYmplY3QoYm9keSkgJiYgaXNQbGFpbk9iamVjdChib2R5LmVycm9yKSAmJiBib2R5LmVycm9yLnR5cGUgPT09IFwibXV0YXRpb25FcnJvclwiICYmIHR5cGVvZiBib2R5LmVycm9yLmRlc2NyaXB0aW9uID09IFwic3RyaW5nXCI7XG59XG5mdW5jdGlvbiBpc0FjdGlvbkVycm9yKGJvZHkpIHtcbiAgcmV0dXJuIGlzUGxhaW5PYmplY3QoYm9keSkgJiYgaXNQbGFpbk9iamVjdChib2R5LmVycm9yKSAmJiBib2R5LmVycm9yLnR5cGUgPT09IFwiYWN0aW9uRXJyb3JcIiAmJiB0eXBlb2YgYm9keS5lcnJvci5kZXNjcmlwdGlvbiA9PSBcInN0cmluZ1wiO1xufVxuZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmogPT0gXCJvYmplY3RcIiAmJiBvYmogIT09IG51bGwgJiYgIUFycmF5LmlzQXJyYXkob2JqKTtcbn1cbmZ1bmN0aW9uIGh0dHBFcnJvck1lc3NhZ2UocmVzKSB7XG4gIGNvbnN0IHN0YXR1c01lc3NhZ2UgPSByZXMuc3RhdHVzTWVzc2FnZSA/IGAgJHtyZXMuc3RhdHVzTWVzc2FnZX1gIDogXCJcIjtcbiAgcmV0dXJuIGAke3Jlcy5tZXRob2R9LXJlcXVlc3QgdG8gJHtyZXMudXJsfSByZXN1bHRlZCBpbiBIVFRQICR7cmVzLnN0YXR1c0NvZGV9JHtzdGF0dXNNZXNzYWdlfWA7XG59XG5mdW5jdGlvbiBzdHJpbmdpZnlCb2R5KGJvZHksIHJlcykge1xuICByZXR1cm4gKHJlcy5oZWFkZXJzW1wiY29udGVudC10eXBlXCJdIHx8IFwiXCIpLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihcImFwcGxpY2F0aW9uL2pzb25cIikgIT09IC0xID8gSlNPTi5zdHJpbmdpZnkoYm9keSwgbnVsbCwgMikgOiBib2R5O1xufVxuY2xhc3MgQ29yc09yaWdpbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBwcm9qZWN0SWQ7XG4gIGFkZE9yaWdpblVybDtcbiAgY29uc3RydWN0b3IoeyBwcm9qZWN0SWQ6IHByb2plY3RJZDIgfSkge1xuICAgIHN1cGVyKFwiQ29yc09yaWdpbkVycm9yXCIpLCB0aGlzLm5hbWUgPSBcIkNvcnNPcmlnaW5FcnJvclwiLCB0aGlzLnByb2plY3RJZCA9IHByb2plY3RJZDI7XG4gICAgY29uc3QgdXJsID0gbmV3IFVSTChgaHR0cHM6Ly9zYW5pdHkuaW8vbWFuYWdlL3Byb2plY3QvJHtwcm9qZWN0SWQyfS9hcGlgKTtcbiAgICBpZiAodHlwZW9mIGxvY2F0aW9uIDwgXCJ1XCIpIHtcbiAgICAgIGNvbnN0IHsgb3JpZ2luIH0gPSBsb2NhdGlvbjtcbiAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KFwiY29yc1wiLCBcImFkZFwiKSwgdXJsLnNlYXJjaFBhcmFtcy5zZXQoXCJvcmlnaW5cIiwgb3JpZ2luKSwgdGhpcy5hZGRPcmlnaW5VcmwgPSB1cmwsIHRoaXMubWVzc2FnZSA9IGBUaGUgY3VycmVudCBvcmlnaW4gaXMgbm90IGFsbG93ZWQgdG8gY29ubmVjdCB0byB0aGUgTGl2ZSBDb250ZW50IEFQSS4gQWRkIGl0IGhlcmU6ICR7dXJsfWA7XG4gICAgfSBlbHNlXG4gICAgICB0aGlzLm1lc3NhZ2UgPSBgVGhlIGN1cnJlbnQgb3JpZ2luIGlzIG5vdCBhbGxvd2VkIHRvIGNvbm5lY3QgdG8gdGhlIExpdmUgQ29udGVudCBBUEkuIENoYW5nZSB5b3VyIGNvbmZpZ3VyYXRpb24gaGVyZTogJHt1cmx9YDtcbiAgfVxufVxuY29uc3QgaHR0cEVycm9yID0ge1xuICBvblJlc3BvbnNlOiAocmVzKSA9PiB7XG4gICAgaWYgKHJlcy5zdGF0dXNDb2RlID49IDUwMClcbiAgICAgIHRocm93IG5ldyBTZXJ2ZXJFcnJvcihyZXMpO1xuICAgIGlmIChyZXMuc3RhdHVzQ29kZSA+PSA0MDApXG4gICAgICB0aHJvdyBuZXcgQ2xpZW50RXJyb3IocmVzKTtcbiAgICByZXR1cm4gcmVzO1xuICB9XG59O1xuZnVuY3Rpb24gcHJpbnRXYXJuaW5ncygpIHtcbiAgY29uc3Qgc2VlbiA9IHt9O1xuICByZXR1cm4ge1xuICAgIG9uUmVzcG9uc2U6IChyZXMpID0+IHtcbiAgICAgIGNvbnN0IHdhcm4gPSByZXMuaGVhZGVyc1tcIngtc2FuaXR5LXdhcm5pbmdcIl0sIHdhcm5pbmdzID0gQXJyYXkuaXNBcnJheSh3YXJuKSA/IHdhcm4gOiBbd2Fybl07XG4gICAgICBmb3IgKGNvbnN0IG1zZyBvZiB3YXJuaW5ncylcbiAgICAgICAgIW1zZyB8fCBzZWVuW21zZ10gfHwgKHNlZW5bbXNnXSA9ICEwLCBjb25zb2xlLndhcm4obXNnKSk7XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIGRlZmluZUh0dHBSZXF1ZXN0KGVudk1pZGRsZXdhcmUyKSB7XG4gIHJldHVybiBnZXRJdChbXG4gICAgcmV0cnkoeyBzaG91bGRSZXRyeSB9KSxcbiAgICAuLi5lbnZNaWRkbGV3YXJlMixcbiAgICBwcmludFdhcm5pbmdzKCksXG4gICAganNvblJlcXVlc3QoKSxcbiAgICBqc29uUmVzcG9uc2UoKSxcbiAgICBwcm9ncmVzcygpLFxuICAgIGh0dHBFcnJvcixcbiAgICBvYnNlcnZhYmxlKHsgaW1wbGVtZW50YXRpb246IE9ic2VydmFibGUgfSlcbiAgXSk7XG59XG5mdW5jdGlvbiBzaG91bGRSZXRyeShlcnIsIGF0dGVtcHQsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMubWF4UmV0cmllcyA9PT0gMCkgcmV0dXJuICExO1xuICBjb25zdCBpc1NhZmUgPSBvcHRpb25zLm1ldGhvZCA9PT0gXCJHRVRcIiB8fCBvcHRpb25zLm1ldGhvZCA9PT0gXCJIRUFEXCIsIGlzUXVlcnkyID0gKG9wdGlvbnMudXJpIHx8IG9wdGlvbnMudXJsKS5zdGFydHNXaXRoKFwiL2RhdGEvcXVlcnlcIiksIGlzUmV0cmlhYmxlUmVzcG9uc2UgPSBlcnIucmVzcG9uc2UgJiYgKGVyci5yZXNwb25zZS5zdGF0dXNDb2RlID09PSA0MjkgfHwgZXJyLnJlc3BvbnNlLnN0YXR1c0NvZGUgPT09IDUwMiB8fCBlcnIucmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gNTAzKTtcbiAgcmV0dXJuIChpc1NhZmUgfHwgaXNRdWVyeTIpICYmIGlzUmV0cmlhYmxlUmVzcG9uc2UgPyAhMCA6IHJldHJ5LnNob3VsZFJldHJ5KGVyciwgYXR0ZW1wdCwgb3B0aW9ucyk7XG59XG5jb25zdCBCQVNFX1VSTCA9IFwiaHR0cHM6Ly93d3cuc2FuaXR5LmlvL2hlbHAvXCI7XG5mdW5jdGlvbiBnZW5lcmF0ZUhlbHBVcmwoc2x1Zykge1xuICByZXR1cm4gQkFTRV9VUkwgKyBzbHVnO1xufVxuY29uc3QgVkFMSURfQVNTRVRfVFlQRVMgPSBbXCJpbWFnZVwiLCBcImZpbGVcIl0sIFZBTElEX0lOU0VSVF9MT0NBVElPTlMgPSBbXCJiZWZvcmVcIiwgXCJhZnRlclwiLCBcInJlcGxhY2VcIl0sIGRhdGFzZXQgPSAobmFtZSkgPT4ge1xuICBpZiAoIS9eKH5bYS16MC05XXsxfVstXFx3XXswLDYzfXxbYS16MC05XXsxfVstXFx3XXswLDYzfSkkLy50ZXN0KG5hbWUpKVxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiRGF0YXNldHMgY2FuIG9ubHkgY29udGFpbiBsb3dlcmNhc2UgY2hhcmFjdGVycywgbnVtYmVycywgdW5kZXJzY29yZXMgYW5kIGRhc2hlcywgYW5kIHN0YXJ0IHdpdGggdGlsZGUsIGFuZCBiZSBtYXhpbXVtIDY0IGNoYXJhY3RlcnNcIlxuICAgICk7XG59LCBwcm9qZWN0SWQgPSAoaWQpID0+IHtcbiAgaWYgKCEvXlstYS16MC05XSskL2kudGVzdChpZCkpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYHByb2plY3RJZGAgY2FuIG9ubHkgY29udGFpbiBvbmx5IGEteiwgMC05IGFuZCBkYXNoZXNcIik7XG59LCB2YWxpZGF0ZUFzc2V0VHlwZSA9ICh0eXBlKSA9PiB7XG4gIGlmIChWQUxJRF9BU1NFVF9UWVBFUy5pbmRleE9mKHR5cGUpID09PSAtMSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgYXNzZXQgdHlwZTogJHt0eXBlfS4gTXVzdCBiZSBvbmUgb2YgJHtWQUxJRF9BU1NFVF9UWVBFUy5qb2luKFwiLCBcIil9YCk7XG59LCB2YWxpZGF0ZU9iamVjdCA9IChvcCwgdmFsKSA9PiB7XG4gIGlmICh2YWwgPT09IG51bGwgfHwgdHlwZW9mIHZhbCAhPSBcIm9iamVjdFwiIHx8IEFycmF5LmlzQXJyYXkodmFsKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7b3B9KCkgdGFrZXMgYW4gb2JqZWN0IG9mIHByb3BlcnRpZXNgKTtcbn0sIHZhbGlkYXRlRG9jdW1lbnRJZCA9IChvcCwgaWQpID0+IHtcbiAgaWYgKHR5cGVvZiBpZCAhPSBcInN0cmluZ1wiIHx8ICEvXlthLXowLTlfXVthLXowLTlfLi1dezAsMTI3fSQvaS50ZXN0KGlkKSB8fCBpZC5pbmNsdWRlcyhcIi4uXCIpKVxuICAgIHRocm93IG5ldyBFcnJvcihgJHtvcH0oKTogXCIke2lkfVwiIGlzIG5vdCBhIHZhbGlkIGRvY3VtZW50IElEYCk7XG59LCByZXF1aXJlRG9jdW1lbnRJZCA9IChvcCwgZG9jKSA9PiB7XG4gIGlmICghZG9jLl9pZClcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7b3B9KCkgcmVxdWlyZXMgdGhhdCB0aGUgZG9jdW1lbnQgY29udGFpbnMgYW4gSUQgKFwiX2lkXCIgcHJvcGVydHkpYCk7XG4gIHZhbGlkYXRlRG9jdW1lbnRJZChvcCwgZG9jLl9pZCk7XG59LCB2YWxpZGF0ZURvY3VtZW50VHlwZSA9IChvcCwgdHlwZSkgPT4ge1xuICBpZiAodHlwZW9mIHR5cGUgIT0gXCJzdHJpbmdcIilcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFxcYCR7b3B9KClcXGA6IFxcYCR7dHlwZX1cXGAgaXMgbm90IGEgdmFsaWQgZG9jdW1lbnQgdHlwZWApO1xufSwgcmVxdWlyZURvY3VtZW50VHlwZSA9IChvcCwgZG9jKSA9PiB7XG4gIGlmICghZG9jLl90eXBlKVxuICAgIHRocm93IG5ldyBFcnJvcihgXFxgJHtvcH0oKVxcYCByZXF1aXJlcyB0aGF0IHRoZSBkb2N1bWVudCBjb250YWlucyBhIHR5cGUgKFxcYF90eXBlXFxgIHByb3BlcnR5KWApO1xuICB2YWxpZGF0ZURvY3VtZW50VHlwZShvcCwgZG9jLl90eXBlKTtcbn0sIHZhbGlkYXRlVmVyc2lvbklkTWF0Y2ggPSAoYnVpbHRWZXJzaW9uSWQsIGRvY3VtZW50KSA9PiB7XG4gIGlmIChkb2N1bWVudC5faWQgJiYgZG9jdW1lbnQuX2lkICE9PSBidWlsdFZlcnNpb25JZClcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgVGhlIHByb3ZpZGVkIGRvY3VtZW50IElEIChcXGAke2RvY3VtZW50Ll9pZH1cXGApIGRvZXMgbm90IG1hdGNoIHRoZSBnZW5lcmF0ZWQgdmVyc2lvbiBJRCAoXFxgJHtidWlsdFZlcnNpb25JZH1cXGApYFxuICAgICk7XG59LCB2YWxpZGF0ZUluc2VydCA9IChhdCwgc2VsZWN0b3IsIGl0ZW1zKSA9PiB7XG4gIGNvbnN0IHNpZ25hdHVyZSA9IFwiaW5zZXJ0KGF0LCBzZWxlY3RvciwgaXRlbXMpXCI7XG4gIGlmIChWQUxJRF9JTlNFUlRfTE9DQVRJT05TLmluZGV4T2YoYXQpID09PSAtMSkge1xuICAgIGNvbnN0IHZhbGlkID0gVkFMSURfSU5TRVJUX0xPQ0FUSU9OUy5tYXAoKGxvYykgPT4gYFwiJHtsb2N9XCJgKS5qb2luKFwiLCBcIik7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke3NpZ25hdHVyZX0gdGFrZXMgYW4gXCJhdFwiLWFyZ3VtZW50IHdoaWNoIGlzIG9uZSBvZjogJHt2YWxpZH1gKTtcbiAgfVxuICBpZiAodHlwZW9mIHNlbGVjdG9yICE9IFwic3RyaW5nXCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKGAke3NpZ25hdHVyZX0gdGFrZXMgYSBcInNlbGVjdG9yXCItYXJndW1lbnQgd2hpY2ggbXVzdCBiZSBhIHN0cmluZ2ApO1xuICBpZiAoIUFycmF5LmlzQXJyYXkoaXRlbXMpKVxuICAgIHRocm93IG5ldyBFcnJvcihgJHtzaWduYXR1cmV9IHRha2VzIGFuIFwiaXRlbXNcIi1hcmd1bWVudCB3aGljaCBtdXN0IGJlIGFuIGFycmF5YCk7XG59LCBoYXNEYXRhc2V0ID0gKGNvbmZpZykgPT4ge1xuICBpZiAoIWNvbmZpZy5kYXRhc2V0KVxuICAgIHRocm93IG5ldyBFcnJvcihcImBkYXRhc2V0YCBtdXN0IGJlIHByb3ZpZGVkIHRvIHBlcmZvcm0gcXVlcmllc1wiKTtcbiAgcmV0dXJuIGNvbmZpZy5kYXRhc2V0IHx8IFwiXCI7XG59LCByZXF1ZXN0VGFnID0gKHRhZykgPT4ge1xuICBpZiAodHlwZW9mIHRhZyAhPSBcInN0cmluZ1wiIHx8ICEvXlthLXowLTkuXy1dezEsNzV9JC9pLnRlc3QodGFnKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIlRhZyBjYW4gb25seSBjb250YWluIGFscGhhbnVtZXJpYyBjaGFyYWN0ZXJzLCB1bmRlcnNjb3JlcywgZGFzaGVzIGFuZCBkb3RzLCBhbmQgYmUgYmV0d2VlbiBvbmUgYW5kIDc1IGNoYXJhY3RlcnMgbG9uZy5cIlxuICAgICk7XG4gIHJldHVybiB0YWc7XG59LCByZXNvdXJjZUNvbmZpZyA9IChjb25maWcpID0+IHtcbiAgaWYgKCFjb25maWdbXCJ+ZXhwZXJpbWVudGFsX3Jlc291cmNlXCJdKVxuICAgIHRocm93IG5ldyBFcnJvcihcImByZXNvdXJjZWAgbXVzdCBiZSBwcm92aWRlZCB0byBwZXJmb3JtIHJlc291cmNlIHF1ZXJpZXNcIik7XG4gIGNvbnN0IHsgdHlwZSwgaWQgfSA9IGNvbmZpZ1tcIn5leHBlcmltZW50YWxfcmVzb3VyY2VcIl07XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgXCJkYXRhc2V0XCI6IHtcbiAgICAgIGlmIChpZC5zcGxpdChcIi5cIikubGVuZ3RoICE9PSAyKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0RhdGFzZXQgcmVzb3VyY2UgSUQgbXVzdCBiZSBpbiB0aGUgZm9ybWF0IFwicHJvamVjdC5kYXRhc2V0XCInKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY2FzZSBcImRhc2hib2FyZFwiOlxuICAgIGNhc2UgXCJtZWRpYS1saWJyYXJ5XCI6XG4gICAgY2FzZSBcImNhbnZhc1wiOlxuICAgICAgcmV0dXJuO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIHJlc291cmNlIHR5cGU6ICR7dHlwZS50b1N0cmluZygpfWApO1xuICB9XG59LCByZXNvdXJjZUd1YXJkID0gKHNlcnZpY2UsIGNvbmZpZykgPT4ge1xuICBpZiAoY29uZmlnW1wifmV4cGVyaW1lbnRhbF9yZXNvdXJjZVwiXSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFxcYCR7c2VydmljZX1cXGAgZG9lcyBub3Qgc3VwcG9ydCByZXNvdXJjZS1iYXNlZCBvcGVyYXRpb25zYCk7XG59O1xuZnVuY3Rpb24gb25jZShmbikge1xuICBsZXQgZGlkQ2FsbCA9ICExLCByZXR1cm5WYWx1ZTtcbiAgcmV0dXJuICguLi5hcmdzKSA9PiAoZGlkQ2FsbCB8fCAocmV0dXJuVmFsdWUgPSBmbiguLi5hcmdzKSwgZGlkQ2FsbCA9ICEwKSwgcmV0dXJuVmFsdWUpO1xufVxuY29uc3QgY3JlYXRlV2FybmluZ1ByaW50ZXIgPSAobWVzc2FnZSkgPT4gKFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBvbmNlKCguLi5hcmdzKSA9PiBjb25zb2xlLndhcm4obWVzc2FnZS5qb2luKFwiIFwiKSwgLi4uYXJncykpXG4pLCBwcmludENkbkFuZFdpdGhDcmVkZW50aWFsc1dhcm5pbmcgPSBjcmVhdGVXYXJuaW5nUHJpbnRlcihbXG4gIFwiQmVjYXVzZSB5b3Ugc2V0IGB3aXRoQ3JlZGVudGlhbHNgIHRvIHRydWUsIHdlIHdpbGwgb3ZlcnJpZGUgeW91ciBgdXNlQ2RuYFwiLFxuICBcInNldHRpbmcgdG8gYmUgZmFsc2Ugc2luY2UgKGNvb2tpZS1iYXNlZCkgY3JlZGVudGlhbHMgYXJlIG5ldmVyIHNldCBvbiB0aGUgQ0ROXCJcbl0pLCBwcmludENkbldhcm5pbmcgPSBjcmVhdGVXYXJuaW5nUHJpbnRlcihbXG4gIFwiU2luY2UgeW91IGhhdmVuJ3Qgc2V0IGEgdmFsdWUgZm9yIGB1c2VDZG5gLCB3ZSB3aWxsIGRlbGl2ZXIgY29udGVudCB1c2luZyBvdXJcIixcbiAgXCJnbG9iYWwsIGVkZ2UtY2FjaGVkIEFQSS1DRE4uIElmIHlvdSB3aXNoIHRvIGhhdmUgY29udGVudCBkZWxpdmVyZWQgZmFzdGVyLCBzZXRcIixcbiAgXCJgdXNlQ2RuOiBmYWxzZWAgdG8gdXNlIHRoZSBMaXZlIEFQSS4gTm90ZTogWW91IG1heSBpbmN1ciBoaWdoZXIgY29zdHMgdXNpbmcgdGhlIGxpdmUgQVBJLlwiXG5dKSwgcHJpbnRDZG5QcmV2aWV3RHJhZnRzV2FybmluZyA9IGNyZWF0ZVdhcm5pbmdQcmludGVyKFtcbiAgXCJUaGUgU2FuaXR5IGNsaWVudCBpcyBjb25maWd1cmVkIHdpdGggdGhlIGBwZXJzcGVjdGl2ZWAgc2V0IHRvIGBkcmFmdHNgIG9yIGBwcmV2aWV3RHJhZnRzYCwgd2hpY2ggZG9lc24ndCBzdXBwb3J0IHRoZSBBUEktQ0ROLlwiLFxuICBcIlRoZSBMaXZlIEFQSSB3aWxsIGJlIHVzZWQgaW5zdGVhZC4gU2V0IGB1c2VDZG46IGZhbHNlYCBpbiB5b3VyIGNvbmZpZ3VyYXRpb24gdG8gaGlkZSB0aGlzIHdhcm5pbmcuXCJcbl0pLCBwcmludFByZXZpZXdEcmFmdHNEZXByZWNhdGlvbldhcm5pbmcgPSBjcmVhdGVXYXJuaW5nUHJpbnRlcihbXG4gIFwiVGhlIGBwcmV2aWV3RHJhZnRzYCBwZXJzcGVjdGl2ZSBoYXMgYmVlbiByZW5hbWVkIHRvICBgZHJhZnRzYCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGEgZnV0dXJlIEFQSSB2ZXJzaW9uXCJcbl0pLCBwcmludEJyb3dzZXJUb2tlbldhcm5pbmcgPSBjcmVhdGVXYXJuaW5nUHJpbnRlcihbXG4gIFwiWW91IGhhdmUgY29uZmlndXJlZCBTYW5pdHkgY2xpZW50IHRvIHVzZSBhIHRva2VuIGluIHRoZSBicm93c2VyLiBUaGlzIG1heSBjYXVzZSB1bmludGVudGlvbmFsIHNlY3VyaXR5IGlzc3Vlcy5cIixcbiAgYFNlZSAke2dlbmVyYXRlSGVscFVybChcbiAgICBcImpzLWNsaWVudC1icm93c2VyLXRva2VuXCJcbiAgKX0gZm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGhvdyB0byBoaWRlIHRoaXMgd2FybmluZy5gXG5dKSwgcHJpbnRDcmVkZW50aWFsZWRUb2tlbldhcm5pbmcgPSBjcmVhdGVXYXJuaW5nUHJpbnRlcihbXG4gIFwiWW91IGhhdmUgY29uZmlndXJlZCBTYW5pdHkgY2xpZW50IHRvIHVzZSBhIHRva2VuLCBidXQgYWxzbyBwcm92aWRlZCBgd2l0aENyZWRlbnRpYWxzOiB0cnVlYC5cIixcbiAgXCJUaGlzIGlzIG5vIGxvbmdlciBzdXBwb3J0ZWQgLSBvbmx5IHRva2VuIHdpbGwgYmUgdXNlZCAtIHJlbW92ZSBgd2l0aENyZWRlbnRpYWxzOiB0cnVlYC5cIlxuXSksIHByaW50Tm9BcGlWZXJzaW9uU3BlY2lmaWVkV2FybmluZyA9IGNyZWF0ZVdhcm5pbmdQcmludGVyKFtcbiAgXCJVc2luZyB0aGUgU2FuaXR5IGNsaWVudCB3aXRob3V0IHNwZWNpZnlpbmcgYW4gQVBJIHZlcnNpb24gaXMgZGVwcmVjYXRlZC5cIixcbiAgYFNlZSAke2dlbmVyYXRlSGVscFVybChcImpzLWNsaWVudC1hcGktdmVyc2lvblwiKX1gXG5dKSwgcHJpbnROb0RlZmF1bHRFeHBvcnQgPSBjcmVhdGVXYXJuaW5nUHJpbnRlcihbXG4gIFwiVGhlIGRlZmF1bHQgZXhwb3J0IG9mIEBzYW5pdHkvY2xpZW50IGhhcyBiZWVuIGRlcHJlY2F0ZWQuIFVzZSB0aGUgbmFtZWQgZXhwb3J0IGBjcmVhdGVDbGllbnRgIGluc3RlYWQuXCJcbl0pLCBkZWZhdWx0Q2RuSG9zdCA9IFwiYXBpY2RuLnNhbml0eS5pb1wiLCBkZWZhdWx0Q29uZmlnID0ge1xuICBhcGlIb3N0OiBcImh0dHBzOi8vYXBpLnNhbml0eS5pb1wiLFxuICBhcGlWZXJzaW9uOiBcIjFcIixcbiAgdXNlUHJvamVjdEhvc3RuYW1lOiAhMCxcbiAgc3RlZ2E6IHsgZW5hYmxlZDogITEgfVxufSwgTE9DQUxIT1NUUyA9IFtcImxvY2FsaG9zdFwiLCBcIjEyNy4wLjAuMVwiLCBcIjAuMC4wLjBcIl0sIGlzTG9jYWwgPSAoaG9zdCkgPT4gTE9DQUxIT1NUUy5pbmRleE9mKGhvc3QpICE9PSAtMTtcbmZ1bmN0aW9uIHZhbGlkYXRlQXBpVmVyc2lvbihhcGlWZXJzaW9uKSB7XG4gIGlmIChhcGlWZXJzaW9uID09PSBcIjFcIiB8fCBhcGlWZXJzaW9uID09PSBcIlhcIilcbiAgICByZXR1cm47XG4gIGNvbnN0IGFwaURhdGUgPSBuZXcgRGF0ZShhcGlWZXJzaW9uKTtcbiAgaWYgKCEoL15cXGR7NH0tXFxkezJ9LVxcZHsyfSQvLnRlc3QoYXBpVmVyc2lvbikgJiYgYXBpRGF0ZSBpbnN0YW5jZW9mIERhdGUgJiYgYXBpRGF0ZS5nZXRUaW1lKCkgPiAwKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIEFQSSB2ZXJzaW9uIHN0cmluZywgZXhwZWN0ZWQgYDFgIG9yIGRhdGUgaW4gZm9ybWF0IGBZWVlZLU1NLUREYFwiKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlQXBpUGVyc3BlY3RpdmUocGVyc3BlY3RpdmUpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkocGVyc3BlY3RpdmUpICYmIHBlcnNwZWN0aXZlLmxlbmd0aCA+IDEgJiYgcGVyc3BlY3RpdmUuaW5jbHVkZXMoXCJyYXdcIikpXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICdJbnZhbGlkIEFQSSBwZXJzcGVjdGl2ZSB2YWx1ZTogXCJyYXdcIi4gVGhlIHJhdy1wZXJzcGVjdGl2ZSBjYW4gbm90IGJlIGNvbWJpbmVkIHdpdGggb3RoZXIgcGVyc3BlY3RpdmVzJ1xuICAgICk7XG59XG5jb25zdCBpbml0Q29uZmlnID0gKGNvbmZpZywgcHJldkNvbmZpZykgPT4ge1xuICBjb25zdCBzcGVjaWZpZWRDb25maWcgPSB7XG4gICAgLi4ucHJldkNvbmZpZyxcbiAgICAuLi5jb25maWcsXG4gICAgc3RlZ2E6IHtcbiAgICAgIC4uLnR5cGVvZiBwcmV2Q29uZmlnLnN0ZWdhID09IFwiYm9vbGVhblwiID8geyBlbmFibGVkOiBwcmV2Q29uZmlnLnN0ZWdhIH0gOiBwcmV2Q29uZmlnLnN0ZWdhIHx8IGRlZmF1bHRDb25maWcuc3RlZ2EsXG4gICAgICAuLi50eXBlb2YgY29uZmlnLnN0ZWdhID09IFwiYm9vbGVhblwiID8geyBlbmFibGVkOiBjb25maWcuc3RlZ2EgfSA6IGNvbmZpZy5zdGVnYSB8fCB7fVxuICAgIH1cbiAgfTtcbiAgc3BlY2lmaWVkQ29uZmlnLmFwaVZlcnNpb24gfHwgcHJpbnROb0FwaVZlcnNpb25TcGVjaWZpZWRXYXJuaW5nKCk7XG4gIGNvbnN0IG5ld0NvbmZpZyA9IHtcbiAgICAuLi5kZWZhdWx0Q29uZmlnLFxuICAgIC4uLnNwZWNpZmllZENvbmZpZ1xuICB9LCBwcm9qZWN0QmFzZWQgPSBuZXdDb25maWcudXNlUHJvamVjdEhvc3RuYW1lICYmICFuZXdDb25maWdbXCJ+ZXhwZXJpbWVudGFsX3Jlc291cmNlXCJdO1xuICBpZiAodHlwZW9mIFByb21pc2UgPiBcInVcIikge1xuICAgIGNvbnN0IGhlbHBVcmwgPSBnZW5lcmF0ZUhlbHBVcmwoXCJqcy1jbGllbnQtcHJvbWlzZS1wb2x5ZmlsbFwiKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE5vIG5hdGl2ZSBQcm9taXNlLWltcGxlbWVudGF0aW9uIGZvdW5kLCBwb2x5ZmlsbCBuZWVkZWQgLSBzZWUgJHtoZWxwVXJsfWApO1xuICB9XG4gIGlmIChwcm9qZWN0QmFzZWQgJiYgIW5ld0NvbmZpZy5wcm9qZWN0SWQpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ29uZmlndXJhdGlvbiBtdXN0IGNvbnRhaW4gYHByb2plY3RJZGBcIik7XG4gIGlmIChuZXdDb25maWdbXCJ+ZXhwZXJpbWVudGFsX3Jlc291cmNlXCJdICYmIHJlc291cmNlQ29uZmlnKG5ld0NvbmZpZyksIHR5cGVvZiBuZXdDb25maWcucGVyc3BlY3RpdmUgPCBcInVcIiAmJiB2YWxpZGF0ZUFwaVBlcnNwZWN0aXZlKG5ld0NvbmZpZy5wZXJzcGVjdGl2ZSksIFwiZW5jb2RlU291cmNlTWFwXCIgaW4gbmV3Q29uZmlnKVxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiSXQgbG9va3MgbGlrZSB5b3UncmUgdXNpbmcgb3B0aW9ucyBtZWFudCBmb3IgJ0BzYW5pdHkvcHJldmlldy1raXQvY2xpZW50Jy4gJ2VuY29kZVNvdXJjZU1hcCcgaXMgbm90IHN1cHBvcnRlZCBpbiAnQHNhbml0eS9jbGllbnQnLiBEaWQgeW91IG1lYW4gJ3N0ZWdhLmVuYWJsZWQnP1wiXG4gICAgKTtcbiAgaWYgKFwiZW5jb2RlU291cmNlTWFwQXRQYXRoXCIgaW4gbmV3Q29uZmlnKVxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiSXQgbG9va3MgbGlrZSB5b3UncmUgdXNpbmcgb3B0aW9ucyBtZWFudCBmb3IgJ0BzYW5pdHkvcHJldmlldy1raXQvY2xpZW50Jy4gJ2VuY29kZVNvdXJjZU1hcEF0UGF0aCcgaXMgbm90IHN1cHBvcnRlZCBpbiAnQHNhbml0eS9jbGllbnQnLiBEaWQgeW91IG1lYW4gJ3N0ZWdhLmZpbHRlcic/XCJcbiAgICApO1xuICBpZiAodHlwZW9mIG5ld0NvbmZpZy5zdGVnYS5lbmFibGVkICE9IFwiYm9vbGVhblwiKVxuICAgIHRocm93IG5ldyBFcnJvcihgc3RlZ2EuZW5hYmxlZCBtdXN0IGJlIGEgYm9vbGVhbiwgcmVjZWl2ZWQgJHtuZXdDb25maWcuc3RlZ2EuZW5hYmxlZH1gKTtcbiAgaWYgKG5ld0NvbmZpZy5zdGVnYS5lbmFibGVkICYmIG5ld0NvbmZpZy5zdGVnYS5zdHVkaW9VcmwgPT09IHZvaWQgMClcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJzdGVnYS5zdHVkaW9VcmwgbXVzdCBiZSBkZWZpbmVkIHdoZW4gc3RlZ2EuZW5hYmxlZCBpcyB0cnVlXCIpO1xuICBpZiAobmV3Q29uZmlnLnN0ZWdhLmVuYWJsZWQgJiYgdHlwZW9mIG5ld0NvbmZpZy5zdGVnYS5zdHVkaW9VcmwgIT0gXCJzdHJpbmdcIiAmJiB0eXBlb2YgbmV3Q29uZmlnLnN0ZWdhLnN0dWRpb1VybCAhPSBcImZ1bmN0aW9uXCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYHN0ZWdhLnN0dWRpb1VybCBtdXN0IGJlIGEgc3RyaW5nIG9yIGEgZnVuY3Rpb24sIHJlY2VpdmVkICR7bmV3Q29uZmlnLnN0ZWdhLnN0dWRpb1VybH1gXG4gICAgKTtcbiAgY29uc3QgaXNCcm93c2VyID0gdHlwZW9mIHdpbmRvdyA8IFwidVwiICYmIHdpbmRvdy5sb2NhdGlvbiAmJiB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUsIGlzTG9jYWxob3N0ID0gaXNCcm93c2VyICYmIGlzTG9jYWwod2luZG93LmxvY2F0aW9uLmhvc3RuYW1lKSwgaGFzVG9rZW4gPSAhIW5ld0NvbmZpZy50b2tlbjtcbiAgbmV3Q29uZmlnLndpdGhDcmVkZW50aWFscyAmJiBoYXNUb2tlbiAmJiAocHJpbnRDcmVkZW50aWFsZWRUb2tlbldhcm5pbmcoKSwgbmV3Q29uZmlnLndpdGhDcmVkZW50aWFscyA9ICExKSwgaXNCcm93c2VyICYmIGlzTG9jYWxob3N0ICYmIGhhc1Rva2VuICYmIG5ld0NvbmZpZy5pZ25vcmVCcm93c2VyVG9rZW5XYXJuaW5nICE9PSAhMCA/IHByaW50QnJvd3NlclRva2VuV2FybmluZygpIDogdHlwZW9mIG5ld0NvbmZpZy51c2VDZG4gPiBcInVcIiAmJiBwcmludENkbldhcm5pbmcoKSwgcHJvamVjdEJhc2VkICYmIHByb2plY3RJZChuZXdDb25maWcucHJvamVjdElkKSwgbmV3Q29uZmlnLmRhdGFzZXQgJiYgZGF0YXNldChuZXdDb25maWcuZGF0YXNldCksIFwicmVxdWVzdFRhZ1ByZWZpeFwiIGluIG5ld0NvbmZpZyAmJiAobmV3Q29uZmlnLnJlcXVlc3RUYWdQcmVmaXggPSBuZXdDb25maWcucmVxdWVzdFRhZ1ByZWZpeCA/IHJlcXVlc3RUYWcobmV3Q29uZmlnLnJlcXVlc3RUYWdQcmVmaXgpLnJlcGxhY2UoL1xcLiskLywgXCJcIikgOiB2b2lkIDApLCBuZXdDb25maWcuYXBpVmVyc2lvbiA9IGAke25ld0NvbmZpZy5hcGlWZXJzaW9ufWAucmVwbGFjZSgvXnYvLCBcIlwiKSwgbmV3Q29uZmlnLmlzRGVmYXVsdEFwaSA9IG5ld0NvbmZpZy5hcGlIb3N0ID09PSBkZWZhdWx0Q29uZmlnLmFwaUhvc3QsIG5ld0NvbmZpZy51c2VDZG4gPT09ICEwICYmIG5ld0NvbmZpZy53aXRoQ3JlZGVudGlhbHMgJiYgcHJpbnRDZG5BbmRXaXRoQ3JlZGVudGlhbHNXYXJuaW5nKCksIG5ld0NvbmZpZy51c2VDZG4gPSBuZXdDb25maWcudXNlQ2RuICE9PSAhMSAmJiAhbmV3Q29uZmlnLndpdGhDcmVkZW50aWFscywgdmFsaWRhdGVBcGlWZXJzaW9uKG5ld0NvbmZpZy5hcGlWZXJzaW9uKTtcbiAgY29uc3QgaG9zdFBhcnRzID0gbmV3Q29uZmlnLmFwaUhvc3Quc3BsaXQoXCI6Ly9cIiwgMiksIHByb3RvY29sID0gaG9zdFBhcnRzWzBdLCBob3N0ID0gaG9zdFBhcnRzWzFdLCBjZG5Ib3N0ID0gbmV3Q29uZmlnLmlzRGVmYXVsdEFwaSA/IGRlZmF1bHRDZG5Ib3N0IDogaG9zdDtcbiAgcmV0dXJuIHByb2plY3RCYXNlZCA/IChuZXdDb25maWcudXJsID0gYCR7cHJvdG9jb2x9Oi8vJHtuZXdDb25maWcucHJvamVjdElkfS4ke2hvc3R9L3Yke25ld0NvbmZpZy5hcGlWZXJzaW9ufWAsIG5ld0NvbmZpZy5jZG5VcmwgPSBgJHtwcm90b2NvbH06Ly8ke25ld0NvbmZpZy5wcm9qZWN0SWR9LiR7Y2RuSG9zdH0vdiR7bmV3Q29uZmlnLmFwaVZlcnNpb259YCkgOiAobmV3Q29uZmlnLnVybCA9IGAke25ld0NvbmZpZy5hcGlIb3N0fS92JHtuZXdDb25maWcuYXBpVmVyc2lvbn1gLCBuZXdDb25maWcuY2RuVXJsID0gbmV3Q29uZmlnLnVybCksIG5ld0NvbmZpZztcbn07XG5jbGFzcyBDb25uZWN0aW9uRmFpbGVkRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIG5hbWUgPSBcIkNvbm5lY3Rpb25GYWlsZWRFcnJvclwiO1xufVxuY2xhc3MgRGlzY29ubmVjdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBuYW1lID0gXCJEaXNjb25uZWN0RXJyb3JcIjtcbiAgcmVhc29uO1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlLCByZWFzb24sIG9wdGlvbnMgPSB7fSkge1xuICAgIHN1cGVyKG1lc3NhZ2UsIG9wdGlvbnMpLCB0aGlzLnJlYXNvbiA9IHJlYXNvbjtcbiAgfVxufVxuY2xhc3MgQ2hhbm5lbEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBuYW1lID0gXCJDaGFubmVsRXJyb3JcIjtcbiAgZGF0YTtcbiAgY29uc3RydWN0b3IobWVzc2FnZSwgZGF0YSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpLCB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG59XG5jbGFzcyBNZXNzYWdlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIG5hbWUgPSBcIk1lc3NhZ2VFcnJvclwiO1xuICBkYXRhO1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBkYXRhLCBvcHRpb25zID0ge30pIHtcbiAgICBzdXBlcihtZXNzYWdlLCBvcHRpb25zKSwgdGhpcy5kYXRhID0gZGF0YTtcbiAgfVxufVxuY2xhc3MgTWVzc2FnZVBhcnNlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIG5hbWUgPSBcIk1lc3NhZ2VQYXJzZUVycm9yXCI7XG59XG5jb25zdCBSRVFVSVJFRF9FVkVOVFMgPSBbXCJjaGFubmVsRXJyb3JcIiwgXCJkaXNjb25uZWN0XCJdO1xuZnVuY3Rpb24gY29ubmVjdEV2ZW50U291cmNlKGluaXRFdmVudFNvdXJjZSwgZXZlbnRzKSB7XG4gIHJldHVybiBkZWZlcigoKSA9PiB7XG4gICAgY29uc3QgZXMgPSBpbml0RXZlbnRTb3VyY2UoKTtcbiAgICByZXR1cm4gaXNPYnNlcnZhYmxlKGVzKSA/IGVzIDogb2YoZXMpO1xuICB9KS5waXBlKG1lcmdlTWFwKChlcykgPT4gY29ubmVjdFdpdGhFU0luc3RhbmNlKGVzLCBldmVudHMpKSk7XG59XG5mdW5jdGlvbiBjb25uZWN0V2l0aEVTSW5zdGFuY2UoZXMsIGV2ZW50cykge1xuICByZXR1cm4gbmV3IE9ic2VydmFibGUoKG9ic2VydmVyKSA9PiB7XG4gICAgY29uc3QgZW1pdE9wZW4gPSBldmVudHMuaW5jbHVkZXMoXCJvcGVuXCIpLCBlbWl0UmVjb25uZWN0ID0gZXZlbnRzLmluY2x1ZGVzKFwicmVjb25uZWN0XCIpO1xuICAgIGZ1bmN0aW9uIG9uRXJyb3IoZXZ0KSB7XG4gICAgICBpZiAoXCJkYXRhXCIgaW4gZXZ0KSB7XG4gICAgICAgIGNvbnN0IFtwYXJzZUVycm9yLCBldmVudF0gPSBwYXJzZUV2ZW50KGV2dCk7XG4gICAgICAgIG9ic2VydmVyLmVycm9yKFxuICAgICAgICAgIHBhcnNlRXJyb3IgPyBuZXcgTWVzc2FnZVBhcnNlRXJyb3IoXCJVbmFibGUgdG8gcGFyc2UgRXZlbnRTb3VyY2UgZXJyb3IgbWVzc2FnZVwiLCB7IGNhdXNlOiBldmVudCB9KSA6IG5ldyBNZXNzYWdlRXJyb3IoKGV2ZW50Py5kYXRhKS5tZXNzYWdlLCBldmVudClcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgZXMucmVhZHlTdGF0ZSA9PT0gZXMuQ0xPU0VEID8gb2JzZXJ2ZXIuZXJyb3IobmV3IENvbm5lY3Rpb25GYWlsZWRFcnJvcihcIkV2ZW50U291cmNlIGNvbm5lY3Rpb24gZmFpbGVkXCIpKSA6IGVtaXRSZWNvbm5lY3QgJiYgb2JzZXJ2ZXIubmV4dCh7IHR5cGU6IFwicmVjb25uZWN0XCIgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uT3BlbigpIHtcbiAgICAgIG9ic2VydmVyLm5leHQoeyB0eXBlOiBcIm9wZW5cIiB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb25NZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICAgIGNvbnN0IFtwYXJzZUVycm9yLCBldmVudF0gPSBwYXJzZUV2ZW50KG1lc3NhZ2UpO1xuICAgICAgaWYgKHBhcnNlRXJyb3IpIHtcbiAgICAgICAgb2JzZXJ2ZXIuZXJyb3IoXG4gICAgICAgICAgbmV3IE1lc3NhZ2VQYXJzZUVycm9yKFwiVW5hYmxlIHRvIHBhcnNlIEV2ZW50U291cmNlIG1lc3NhZ2VcIiwgeyBjYXVzZTogcGFyc2VFcnJvciB9KVxuICAgICAgICApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAobWVzc2FnZS50eXBlID09PSBcImNoYW5uZWxFcnJvclwiKSB7XG4gICAgICAgIG9ic2VydmVyLmVycm9yKG5ldyBDaGFubmVsRXJyb3IoZXh0cmFjdEVycm9yTWVzc2FnZShldmVudD8uZGF0YSksIGV2ZW50LmRhdGEpKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKG1lc3NhZ2UudHlwZSA9PT0gXCJkaXNjb25uZWN0XCIpIHtcbiAgICAgICAgb2JzZXJ2ZXIuZXJyb3IoXG4gICAgICAgICAgbmV3IERpc2Nvbm5lY3RFcnJvcihcbiAgICAgICAgICAgIGBTZXJ2ZXIgZGlzY29ubmVjdGVkIGNsaWVudDogJHtldmVudC5kYXRhPy5yZWFzb24gfHwgXCJ1bmtub3duIGVycm9yXCJ9YFxuICAgICAgICAgIClcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgb2JzZXJ2ZXIubmV4dCh7XG4gICAgICAgIHR5cGU6IG1lc3NhZ2UudHlwZSxcbiAgICAgICAgaWQ6IG1lc3NhZ2UubGFzdEV2ZW50SWQsXG4gICAgICAgIC4uLmV2ZW50LmRhdGEgPyB7IGRhdGE6IGV2ZW50LmRhdGEgfSA6IHt9XG4gICAgICB9KTtcbiAgICB9XG4gICAgZXMuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsIG9uRXJyb3IpLCBlbWl0T3BlbiAmJiBlcy5hZGRFdmVudExpc3RlbmVyKFwib3BlblwiLCBvbk9wZW4pO1xuICAgIGNvbnN0IGNsZWFuZWRFdmVudHMgPSBbLi4uLyogQF9fUFVSRV9fICovIG5ldyBTZXQoWy4uLlJFUVVJUkVEX0VWRU5UUywgLi4uZXZlbnRzXSldLmZpbHRlcigodHlwZSkgPT4gdHlwZSAhPT0gXCJlcnJvclwiICYmIHR5cGUgIT09IFwib3BlblwiICYmIHR5cGUgIT09IFwicmVjb25uZWN0XCIpO1xuICAgIHJldHVybiBjbGVhbmVkRXZlbnRzLmZvckVhY2goKHR5cGUpID0+IGVzLmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgb25NZXNzYWdlKSksICgpID0+IHtcbiAgICAgIGVzLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLCBvbkVycm9yKSwgZW1pdE9wZW4gJiYgZXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9wZW5cIiwgb25PcGVuKSwgY2xlYW5lZEV2ZW50cy5mb3JFYWNoKCh0eXBlKSA9PiBlcy5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIG9uTWVzc2FnZSkpLCBlcy5jbG9zZSgpO1xuICAgIH07XG4gIH0pO1xufVxuZnVuY3Rpb24gcGFyc2VFdmVudChtZXNzYWdlKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgZGF0YSA9IHR5cGVvZiBtZXNzYWdlLmRhdGEgPT0gXCJzdHJpbmdcIiAmJiBKU09OLnBhcnNlKG1lc3NhZ2UuZGF0YSk7XG4gICAgcmV0dXJuIFtcbiAgICAgIG51bGwsXG4gICAgICB7XG4gICAgICAgIHR5cGU6IG1lc3NhZ2UudHlwZSxcbiAgICAgICAgaWQ6IG1lc3NhZ2UubGFzdEV2ZW50SWQsXG4gICAgICAgIC4uLmlzRW1wdHlPYmplY3QoZGF0YSkgPyB7fSA6IHsgZGF0YSB9XG4gICAgICB9XG4gICAgXTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIFtlcnIsIG51bGxdO1xuICB9XG59XG5mdW5jdGlvbiBleHRyYWN0RXJyb3JNZXNzYWdlKGVycikge1xuICByZXR1cm4gZXJyLmVycm9yID8gZXJyLmVycm9yLmRlc2NyaXB0aW9uID8gZXJyLmVycm9yLmRlc2NyaXB0aW9uIDogdHlwZW9mIGVyci5lcnJvciA9PSBcInN0cmluZ1wiID8gZXJyLmVycm9yIDogSlNPTi5zdHJpbmdpZnkoZXJyLmVycm9yLCBudWxsLCAyKSA6IGVyci5tZXNzYWdlIHx8IFwiVW5rbm93biBsaXN0ZW5lciBlcnJvclwiO1xufVxuZnVuY3Rpb24gaXNFbXB0eU9iamVjdChkYXRhKSB7XG4gIGZvciAoY29uc3QgXyBpbiBkYXRhKVxuICAgIHJldHVybiAhMTtcbiAgcmV0dXJuICEwO1xufVxuZnVuY3Rpb24gZ2V0U2VsZWN0aW9uKHNlbCkge1xuICBpZiAodHlwZW9mIHNlbCA9PSBcInN0cmluZ1wiKVxuICAgIHJldHVybiB7IGlkOiBzZWwgfTtcbiAgaWYgKEFycmF5LmlzQXJyYXkoc2VsKSlcbiAgICByZXR1cm4geyBxdWVyeTogXCIqW19pZCBpbiAkaWRzXVwiLCBwYXJhbXM6IHsgaWRzOiBzZWwgfSB9O1xuICBpZiAodHlwZW9mIHNlbCA9PSBcIm9iamVjdFwiICYmIHNlbCAhPT0gbnVsbCAmJiBcInF1ZXJ5XCIgaW4gc2VsICYmIHR5cGVvZiBzZWwucXVlcnkgPT0gXCJzdHJpbmdcIilcbiAgICByZXR1cm4gXCJwYXJhbXNcIiBpbiBzZWwgJiYgdHlwZW9mIHNlbC5wYXJhbXMgPT0gXCJvYmplY3RcIiAmJiBzZWwucGFyYW1zICE9PSBudWxsID8geyBxdWVyeTogc2VsLnF1ZXJ5LCBwYXJhbXM6IHNlbC5wYXJhbXMgfSA6IHsgcXVlcnk6IHNlbC5xdWVyeSB9O1xuICBjb25zdCBzZWxlY3Rpb25PcHRzID0gW1xuICAgIFwiKiBEb2N1bWVudCBJRCAoPGRvY0lkPilcIixcbiAgICBcIiogQXJyYXkgb2YgZG9jdW1lbnQgSURzXCIsXG4gICAgXCIqIE9iamVjdCBjb250YWluaW5nIGBxdWVyeWBcIlxuICBdLmpvaW4oYFxuYCk7XG4gIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBzZWxlY3Rpb24gLSBtdXN0IGJlIG9uZSBvZjpcblxuJHtzZWxlY3Rpb25PcHRzfWApO1xufVxuY2xhc3MgQmFzZVBhdGNoIHtcbiAgc2VsZWN0aW9uO1xuICBvcGVyYXRpb25zO1xuICBjb25zdHJ1Y3RvcihzZWxlY3Rpb24sIG9wZXJhdGlvbnMgPSB7fSkge1xuICAgIHRoaXMuc2VsZWN0aW9uID0gc2VsZWN0aW9uLCB0aGlzLm9wZXJhdGlvbnMgPSBvcGVyYXRpb25zO1xuICB9XG4gIC8qKlxuICAgKiBTZXRzIHRoZSBnaXZlbiBhdHRyaWJ1dGVzIHRvIHRoZSBkb2N1bWVudC4gRG9lcyBOT1QgbWVyZ2Ugb2JqZWN0cy5cbiAgICogVGhlIG9wZXJhdGlvbiBpcyBhZGRlZCB0byB0aGUgY3VycmVudCBwYXRjaCwgcmVhZHkgdG8gYmUgY29tbWl0ZWQgYnkgYGNvbW1pdCgpYFxuICAgKlxuICAgKiBAcGFyYW0gYXR0cnMgLSBBdHRyaWJ1dGVzIHRvIHNldC4gVG8gc2V0IGEgZGVlcCBhdHRyaWJ1dGUsIHVzZSBKU09OTWF0Y2gsIGVnOiBcXHtcIm5lc3RlZC5wcm9wXCI6IFwidmFsdWVcIlxcfVxuICAgKi9cbiAgc2V0KGF0dHJzKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Fzc2lnbihcInNldFwiLCBhdHRycyk7XG4gIH1cbiAgLyoqXG4gICAqIFNldHMgdGhlIGdpdmVuIGF0dHJpYnV0ZXMgdG8gdGhlIGRvY3VtZW50IGlmIHRoZXkgYXJlIG5vdCBjdXJyZW50bHkgc2V0LiBEb2VzIE5PVCBtZXJnZSBvYmplY3RzLlxuICAgKiBUaGUgb3BlcmF0aW9uIGlzIGFkZGVkIHRvIHRoZSBjdXJyZW50IHBhdGNoLCByZWFkeSB0byBiZSBjb21taXRlZCBieSBgY29tbWl0KClgXG4gICAqXG4gICAqIEBwYXJhbSBhdHRycyAtIEF0dHJpYnV0ZXMgdG8gc2V0LiBUbyBzZXQgYSBkZWVwIGF0dHJpYnV0ZSwgdXNlIEpTT05NYXRjaCwgZWc6IFxce1wibmVzdGVkLnByb3BcIjogXCJ2YWx1ZVwiXFx9XG4gICAqL1xuICBzZXRJZk1pc3NpbmcoYXR0cnMpIHtcbiAgICByZXR1cm4gdGhpcy5fYXNzaWduKFwic2V0SWZNaXNzaW5nXCIsIGF0dHJzKTtcbiAgfVxuICAvKipcbiAgICogUGVyZm9ybXMgYSBcImRpZmYtbWF0Y2gtcGF0Y2hcIiBvcGVyYXRpb24gb24gdGhlIHN0cmluZyBhdHRyaWJ1dGVzIHByb3ZpZGVkLlxuICAgKiBUaGUgb3BlcmF0aW9uIGlzIGFkZGVkIHRvIHRoZSBjdXJyZW50IHBhdGNoLCByZWFkeSB0byBiZSBjb21taXRlZCBieSBgY29tbWl0KClgXG4gICAqXG4gICAqIEBwYXJhbSBhdHRycyAtIEF0dHJpYnV0ZXMgdG8gcGVyZm9ybSBvcGVyYXRpb24gb24uIFRvIHNldCBhIGRlZXAgYXR0cmlidXRlLCB1c2UgSlNPTk1hdGNoLCBlZzogXFx7XCJuZXN0ZWQucHJvcFwiOiBcImRtcFwiXFx9XG4gICAqL1xuICBkaWZmTWF0Y2hQYXRjaChhdHRycykge1xuICAgIHJldHVybiB2YWxpZGF0ZU9iamVjdChcImRpZmZNYXRjaFBhdGNoXCIsIGF0dHJzKSwgdGhpcy5fYXNzaWduKFwiZGlmZk1hdGNoUGF0Y2hcIiwgYXR0cnMpO1xuICB9XG4gIC8qKlxuICAgKiBVbnNldHMgdGhlIGF0dHJpYnV0ZSBwYXRocyBwcm92aWRlZC5cbiAgICogVGhlIG9wZXJhdGlvbiBpcyBhZGRlZCB0byB0aGUgY3VycmVudCBwYXRjaCwgcmVhZHkgdG8gYmUgY29tbWl0ZWQgYnkgYGNvbW1pdCgpYFxuICAgKlxuICAgKiBAcGFyYW0gYXR0cnMgLSBBdHRyaWJ1dGUgcGF0aHMgdG8gdW5zZXQuXG4gICAqL1xuICB1bnNldChhdHRycykge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShhdHRycykpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1bnNldChhdHRycykgdGFrZXMgYW4gYXJyYXkgb2YgYXR0cmlidXRlcyB0byB1bnNldCwgbm9uLWFycmF5IGdpdmVuXCIpO1xuICAgIHJldHVybiB0aGlzLm9wZXJhdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLm9wZXJhdGlvbnMsIHsgdW5zZXQ6IGF0dHJzIH0pLCB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBJbmNyZW1lbnQgYSBudW1lcmljIHZhbHVlLiBFYWNoIGVudHJ5IGluIHRoZSBhcmd1bWVudCBpcyBlaXRoZXIgYW4gYXR0cmlidXRlIG9yIGEgSlNPTiBwYXRoLiBUaGUgdmFsdWUgbWF5IGJlIGEgcG9zaXRpdmUgb3IgbmVnYXRpdmUgaW50ZWdlciBvciBmbG9hdGluZy1wb2ludCB2YWx1ZS4gVGhlIG9wZXJhdGlvbiB3aWxsIGZhaWwgaWYgdGFyZ2V0IHZhbHVlIGlzIG5vdCBhIG51bWVyaWMgdmFsdWUsIG9yIGRvZXNuJ3QgZXhpc3QuXG4gICAqXG4gICAqIEBwYXJhbSBhdHRycyAtIE9iamVjdCBvZiBhdHRyaWJ1dGUgcGF0aHMgdG8gaW5jcmVtZW50LCB2YWx1ZXMgcmVwcmVzZW50aW5nIHRoZSBudW1iZXIgdG8gaW5jcmVtZW50IGJ5LlxuICAgKi9cbiAgaW5jKGF0dHJzKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Fzc2lnbihcImluY1wiLCBhdHRycyk7XG4gIH1cbiAgLyoqXG4gICAqIERlY3JlbWVudCBhIG51bWVyaWMgdmFsdWUuIEVhY2ggZW50cnkgaW4gdGhlIGFyZ3VtZW50IGlzIGVpdGhlciBhbiBhdHRyaWJ1dGUgb3IgYSBKU09OIHBhdGguIFRoZSB2YWx1ZSBtYXkgYmUgYSBwb3NpdGl2ZSBvciBuZWdhdGl2ZSBpbnRlZ2VyIG9yIGZsb2F0aW5nLXBvaW50IHZhbHVlLiBUaGUgb3BlcmF0aW9uIHdpbGwgZmFpbCBpZiB0YXJnZXQgdmFsdWUgaXMgbm90IGEgbnVtZXJpYyB2YWx1ZSwgb3IgZG9lc24ndCBleGlzdC5cbiAgICpcbiAgICogQHBhcmFtIGF0dHJzIC0gT2JqZWN0IG9mIGF0dHJpYnV0ZSBwYXRocyB0byBkZWNyZW1lbnQsIHZhbHVlcyByZXByZXNlbnRpbmcgdGhlIG51bWJlciB0byBkZWNyZW1lbnQgYnkuXG4gICAqL1xuICBkZWMoYXR0cnMpIHtcbiAgICByZXR1cm4gdGhpcy5fYXNzaWduKFwiZGVjXCIsIGF0dHJzKTtcbiAgfVxuICAvKipcbiAgICogUHJvdmlkZXMgbWV0aG9kcyBmb3IgbW9kaWZ5aW5nIGFycmF5cywgYnkgaW5zZXJ0aW5nLCBhcHBlbmRpbmcgYW5kIHJlcGxhY2luZyBlbGVtZW50cyB2aWEgYSBKU09OUGF0aCBleHByZXNzaW9uLlxuICAgKlxuICAgKiBAcGFyYW0gYXQgLSBMb2NhdGlvbiB0byBpbnNlcnQgYXQsIHJlbGF0aXZlIHRvIHRoZSBnaXZlbiBzZWxlY3Rvciwgb3IgJ3JlcGxhY2UnIHRoZSBtYXRjaGVkIHBhdGhcbiAgICogQHBhcmFtIHNlbGVjdG9yIC0gSlNPTlBhdGggZXhwcmVzc2lvbiwgZWcgYGNvbW1lbnRzWy0xXWAgb3IgYGJsb2Nrc1tfa2V5PT1cImFiYzEyM1wiXWBcbiAgICogQHBhcmFtIGl0ZW1zIC0gQXJyYXkgb2YgaXRlbXMgdG8gaW5zZXJ0L3JlcGxhY2VcbiAgICovXG4gIGluc2VydChhdCwgc2VsZWN0b3IsIGl0ZW1zKSB7XG4gICAgcmV0dXJuIHZhbGlkYXRlSW5zZXJ0KGF0LCBzZWxlY3RvciwgaXRlbXMpLCB0aGlzLl9hc3NpZ24oXCJpbnNlcnRcIiwgeyBbYXRdOiBzZWxlY3RvciwgaXRlbXMgfSk7XG4gIH1cbiAgLyoqXG4gICAqIEFwcGVuZCB0aGUgZ2l2ZW4gaXRlbXMgdG8gdGhlIGFycmF5IGF0IHRoZSBnaXZlbiBKU09OUGF0aFxuICAgKlxuICAgKiBAcGFyYW0gc2VsZWN0b3IgLSBBdHRyaWJ1dGUvcGF0aCB0byBhcHBlbmQgdG8sIGVnIGBjb21tZW50c2Agb3IgYHBlcnNvbi5ob2JiaWVzYFxuICAgKiBAcGFyYW0gaXRlbXMgLSBBcnJheSBvZiBpdGVtcyB0byBhcHBlbmQgdG8gdGhlIGFycmF5XG4gICAqL1xuICBhcHBlbmQoc2VsZWN0b3IsIGl0ZW1zKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5zZXJ0KFwiYWZ0ZXJcIiwgYCR7c2VsZWN0b3J9Wy0xXWAsIGl0ZW1zKTtcbiAgfVxuICAvKipcbiAgICogUHJlcGVuZCB0aGUgZ2l2ZW4gaXRlbXMgdG8gdGhlIGFycmF5IGF0IHRoZSBnaXZlbiBKU09OUGF0aFxuICAgKlxuICAgKiBAcGFyYW0gc2VsZWN0b3IgLSBBdHRyaWJ1dGUvcGF0aCB0byBwcmVwZW5kIHRvLCBlZyBgY29tbWVudHNgIG9yIGBwZXJzb24uaG9iYmllc2BcbiAgICogQHBhcmFtIGl0ZW1zIC0gQXJyYXkgb2YgaXRlbXMgdG8gcHJlcGVuZCB0byB0aGUgYXJyYXlcbiAgICovXG4gIHByZXBlbmQoc2VsZWN0b3IsIGl0ZW1zKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5zZXJ0KFwiYmVmb3JlXCIsIGAke3NlbGVjdG9yfVswXWAsIGl0ZW1zKTtcbiAgfVxuICAvKipcbiAgICogQ2hhbmdlIHRoZSBjb250ZW50cyBvZiBhbiBhcnJheSBieSByZW1vdmluZyBleGlzdGluZyBlbGVtZW50cyBhbmQvb3IgYWRkaW5nIG5ldyBlbGVtZW50cy5cbiAgICpcbiAgICogQHBhcmFtIHNlbGVjdG9yIC0gQXR0cmlidXRlIG9yIEpTT05QYXRoIGV4cHJlc3Npb24gZm9yIGFycmF5XG4gICAqIEBwYXJhbSBzdGFydCAtIEluZGV4IGF0IHdoaWNoIHRvIHN0YXJ0IGNoYW5naW5nIHRoZSBhcnJheSAod2l0aCBvcmlnaW4gMCkuIElmIGdyZWF0ZXIgdGhhbiB0aGUgbGVuZ3RoIG9mIHRoZSBhcnJheSwgYWN0dWFsIHN0YXJ0aW5nIGluZGV4IHdpbGwgYmUgc2V0IHRvIHRoZSBsZW5ndGggb2YgdGhlIGFycmF5LiBJZiBuZWdhdGl2ZSwgd2lsbCBiZWdpbiB0aGF0IG1hbnkgZWxlbWVudHMgZnJvbSB0aGUgZW5kIG9mIHRoZSBhcnJheSAod2l0aCBvcmlnaW4gLTEpIGFuZCB3aWxsIGJlIHNldCB0byAwIGlmIGFic29sdXRlIHZhbHVlIGlzIGdyZWF0ZXIgdGhhbiB0aGUgbGVuZ3RoIG9mIHRoZSBhcnJheS54XG4gICAqIEBwYXJhbSBkZWxldGVDb3VudCAtIEFuIGludGVnZXIgaW5kaWNhdGluZyB0aGUgbnVtYmVyIG9mIG9sZCBhcnJheSBlbGVtZW50cyB0byByZW1vdmUuXG4gICAqIEBwYXJhbSBpdGVtcyAtIFRoZSBlbGVtZW50cyB0byBhZGQgdG8gdGhlIGFycmF5LCBiZWdpbm5pbmcgYXQgdGhlIHN0YXJ0IGluZGV4LiBJZiB5b3UgZG9uJ3Qgc3BlY2lmeSBhbnkgZWxlbWVudHMsIHNwbGljZSgpIHdpbGwgb25seSByZW1vdmUgZWxlbWVudHMgZnJvbSB0aGUgYXJyYXkuXG4gICAqL1xuICBzcGxpY2Uoc2VsZWN0b3IsIHN0YXJ0LCBkZWxldGVDb3VudCwgaXRlbXMpIHtcbiAgICBjb25zdCBkZWxBbGwgPSB0eXBlb2YgZGVsZXRlQ291bnQgPiBcInVcIiB8fCBkZWxldGVDb3VudCA9PT0gLTEsIHN0YXJ0SW5kZXggPSBzdGFydCA8IDAgPyBzdGFydCAtIDEgOiBzdGFydCwgZGVsQ291bnQgPSBkZWxBbGwgPyAtMSA6IE1hdGgubWF4KDAsIHN0YXJ0ICsgZGVsZXRlQ291bnQpLCBkZWxSYW5nZSA9IHN0YXJ0SW5kZXggPCAwICYmIGRlbENvdW50ID49IDAgPyBcIlwiIDogZGVsQ291bnQsIHJhbmdlU2VsZWN0b3IgPSBgJHtzZWxlY3Rvcn1bJHtzdGFydEluZGV4fToke2RlbFJhbmdlfV1gO1xuICAgIHJldHVybiB0aGlzLmluc2VydChcInJlcGxhY2VcIiwgcmFuZ2VTZWxlY3RvciwgaXRlbXMgfHwgW10pO1xuICB9XG4gIC8qKlxuICAgKiBBZGRzIGEgcmV2aXNpb24gY2xhdXNlLCBwcmV2ZW50aW5nIHRoZSBkb2N1bWVudCBmcm9tIGJlaW5nIHBhdGNoZWQgaWYgdGhlIGBfcmV2YCBwcm9wZXJ0eSBkb2VzIG5vdCBtYXRjaCB0aGUgZ2l2ZW4gdmFsdWVcbiAgICpcbiAgICogQHBhcmFtIHJldiAtIFJldmlzaW9uIHRvIGxvY2sgdGhlIHBhdGNoIHRvXG4gICAqL1xuICBpZlJldmlzaW9uSWQocmV2KSB7XG4gICAgcmV0dXJuIHRoaXMub3BlcmF0aW9ucy5pZlJldmlzaW9uSUQgPSByZXYsIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybiBhIHBsYWluIEpTT04gcmVwcmVzZW50YXRpb24gb2YgdGhlIHBhdGNoXG4gICAqL1xuICBzZXJpYWxpemUoKSB7XG4gICAgcmV0dXJuIHsgLi4uZ2V0U2VsZWN0aW9uKHRoaXMuc2VsZWN0aW9uKSwgLi4udGhpcy5vcGVyYXRpb25zIH07XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybiBhIHBsYWluIEpTT04gcmVwcmVzZW50YXRpb24gb2YgdGhlIHBhdGNoXG4gICAqL1xuICB0b0pTT04oKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VyaWFsaXplKCk7XG4gIH1cbiAgLyoqXG4gICAqIENsZWFycyB0aGUgcGF0Y2ggb2YgYWxsIG9wZXJhdGlvbnNcbiAgICovXG4gIHJlc2V0KCkge1xuICAgIHJldHVybiB0aGlzLm9wZXJhdGlvbnMgPSB7fSwgdGhpcztcbiAgfVxuICBfYXNzaWduKG9wLCBwcm9wcywgbWVyZ2UyID0gITApIHtcbiAgICByZXR1cm4gdmFsaWRhdGVPYmplY3Qob3AsIHByb3BzKSwgdGhpcy5vcGVyYXRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5vcGVyYXRpb25zLCB7XG4gICAgICBbb3BdOiBPYmplY3QuYXNzaWduKHt9LCBtZXJnZTIgJiYgdGhpcy5vcGVyYXRpb25zW29wXSB8fCB7fSwgcHJvcHMpXG4gICAgfSksIHRoaXM7XG4gIH1cbiAgX3NldChvcCwgcHJvcHMpIHtcbiAgICByZXR1cm4gdGhpcy5fYXNzaWduKG9wLCBwcm9wcywgITEpO1xuICB9XG59XG5jbGFzcyBPYnNlcnZhYmxlUGF0Y2ggZXh0ZW5kcyBCYXNlUGF0Y2gge1xuICAjY2xpZW50O1xuICBjb25zdHJ1Y3RvcihzZWxlY3Rpb24sIG9wZXJhdGlvbnMsIGNsaWVudCkge1xuICAgIHN1cGVyKHNlbGVjdGlvbiwgb3BlcmF0aW9ucyksIHRoaXMuI2NsaWVudCA9IGNsaWVudDtcbiAgfVxuICAvKipcbiAgICogQ2xvbmVzIHRoZSBwYXRjaFxuICAgKi9cbiAgY2xvbmUoKSB7XG4gICAgcmV0dXJuIG5ldyBPYnNlcnZhYmxlUGF0Y2godGhpcy5zZWxlY3Rpb24sIHsgLi4udGhpcy5vcGVyYXRpb25zIH0sIHRoaXMuI2NsaWVudCk7XG4gIH1cbiAgY29tbWl0KG9wdGlvbnMpIHtcbiAgICBpZiAoIXRoaXMuI2NsaWVudClcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJObyBgY2xpZW50YCBwYXNzZWQgdG8gcGF0Y2gsIGVpdGhlciBwcm92aWRlIG9uZSBvciBwYXNzIHRoZSBwYXRjaCB0byBhIGNsaWVudHMgYG11dGF0ZSgpYCBtZXRob2RcIlxuICAgICAgKTtcbiAgICBjb25zdCByZXR1cm5GaXJzdCA9IHR5cGVvZiB0aGlzLnNlbGVjdGlvbiA9PSBcInN0cmluZ1wiLCBvcHRzID0gT2JqZWN0LmFzc2lnbih7IHJldHVybkZpcnN0LCByZXR1cm5Eb2N1bWVudHM6ICEwIH0sIG9wdGlvbnMpO1xuICAgIHJldHVybiB0aGlzLiNjbGllbnQubXV0YXRlKHsgcGF0Y2g6IHRoaXMuc2VyaWFsaXplKCkgfSwgb3B0cyk7XG4gIH1cbn1cbmNsYXNzIFBhdGNoIGV4dGVuZHMgQmFzZVBhdGNoIHtcbiAgI2NsaWVudDtcbiAgY29uc3RydWN0b3Ioc2VsZWN0aW9uLCBvcGVyYXRpb25zLCBjbGllbnQpIHtcbiAgICBzdXBlcihzZWxlY3Rpb24sIG9wZXJhdGlvbnMpLCB0aGlzLiNjbGllbnQgPSBjbGllbnQ7XG4gIH1cbiAgLyoqXG4gICAqIENsb25lcyB0aGUgcGF0Y2hcbiAgICovXG4gIGNsb25lKCkge1xuICAgIHJldHVybiBuZXcgUGF0Y2godGhpcy5zZWxlY3Rpb24sIHsgLi4udGhpcy5vcGVyYXRpb25zIH0sIHRoaXMuI2NsaWVudCk7XG4gIH1cbiAgY29tbWl0KG9wdGlvbnMpIHtcbiAgICBpZiAoIXRoaXMuI2NsaWVudClcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJObyBgY2xpZW50YCBwYXNzZWQgdG8gcGF0Y2gsIGVpdGhlciBwcm92aWRlIG9uZSBvciBwYXNzIHRoZSBwYXRjaCB0byBhIGNsaWVudHMgYG11dGF0ZSgpYCBtZXRob2RcIlxuICAgICAgKTtcbiAgICBjb25zdCByZXR1cm5GaXJzdCA9IHR5cGVvZiB0aGlzLnNlbGVjdGlvbiA9PSBcInN0cmluZ1wiLCBvcHRzID0gT2JqZWN0LmFzc2lnbih7IHJldHVybkZpcnN0LCByZXR1cm5Eb2N1bWVudHM6ICEwIH0sIG9wdGlvbnMpO1xuICAgIHJldHVybiB0aGlzLiNjbGllbnQubXV0YXRlKHsgcGF0Y2g6IHRoaXMuc2VyaWFsaXplKCkgfSwgb3B0cyk7XG4gIH1cbn1cbmNvbnN0IGRlZmF1bHRNdXRhdGVPcHRpb25zID0geyByZXR1cm5Eb2N1bWVudHM6ICExIH07XG5jbGFzcyBCYXNlVHJhbnNhY3Rpb24ge1xuICBvcGVyYXRpb25zO1xuICB0cnhJZDtcbiAgY29uc3RydWN0b3Iob3BlcmF0aW9ucyA9IFtdLCB0cmFuc2FjdGlvbklkKSB7XG4gICAgdGhpcy5vcGVyYXRpb25zID0gb3BlcmF0aW9ucywgdGhpcy50cnhJZCA9IHRyYW5zYWN0aW9uSWQ7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBuZXcgU2FuaXR5IGRvY3VtZW50LiBJZiBgX2lkYCBpcyBwcm92aWRlZCBhbmQgYWxyZWFkeSBleGlzdHMsIHRoZSBtdXRhdGlvbiB3aWxsIGZhaWwuIElmIG5vIGBfaWRgIGlzIGdpdmVuLCBvbmUgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIGdlbmVyYXRlZCBieSB0aGUgZGF0YWJhc2UuXG4gICAqIFRoZSBvcGVyYXRpb24gaXMgYWRkZWQgdG8gdGhlIGN1cnJlbnQgdHJhbnNhY3Rpb24sIHJlYWR5IHRvIGJlIGNvbW1pdGVkIGJ5IGBjb21taXQoKWBcbiAgICpcbiAgICogQHBhcmFtIGRvYyAtIERvY3VtZW50IHRvIGNyZWF0ZS4gUmVxdWlyZXMgYSBgX3R5cGVgIHByb3BlcnR5LlxuICAgKi9cbiAgY3JlYXRlKGRvYykge1xuICAgIHJldHVybiB2YWxpZGF0ZU9iamVjdChcImNyZWF0ZVwiLCBkb2MpLCB0aGlzLl9hZGQoeyBjcmVhdGU6IGRvYyB9KTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBTYW5pdHkgZG9jdW1lbnQuIElmIGEgZG9jdW1lbnQgd2l0aCB0aGUgc2FtZSBgX2lkYCBhbHJlYWR5IGV4aXN0cywgdGhlIGNyZWF0ZSBvcGVyYXRpb24gd2lsbCBiZSBpZ25vcmVkLlxuICAgKiBUaGUgb3BlcmF0aW9uIGlzIGFkZGVkIHRvIHRoZSBjdXJyZW50IHRyYW5zYWN0aW9uLCByZWFkeSB0byBiZSBjb21taXRlZCBieSBgY29tbWl0KClgXG4gICAqXG4gICAqIEBwYXJhbSBkb2MgLSBEb2N1bWVudCB0byBjcmVhdGUgaWYgaXQgZG9lcyBub3QgYWxyZWFkeSBleGlzdC4gUmVxdWlyZXMgYF9pZGAgYW5kIGBfdHlwZWAgcHJvcGVydGllcy5cbiAgICovXG4gIGNyZWF0ZUlmTm90RXhpc3RzKGRvYykge1xuICAgIGNvbnN0IG9wID0gXCJjcmVhdGVJZk5vdEV4aXN0c1wiO1xuICAgIHJldHVybiB2YWxpZGF0ZU9iamVjdChvcCwgZG9jKSwgcmVxdWlyZURvY3VtZW50SWQob3AsIGRvYyksIHRoaXMuX2FkZCh7IFtvcF06IGRvYyB9KTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBTYW5pdHkgZG9jdW1lbnQsIG9yIHJlcGxhY2VzIGFuIGV4aXN0aW5nIG9uZSBpZiB0aGUgc2FtZSBgX2lkYCBpcyBhbHJlYWR5IHVzZWQuXG4gICAqIFRoZSBvcGVyYXRpb24gaXMgYWRkZWQgdG8gdGhlIGN1cnJlbnQgdHJhbnNhY3Rpb24sIHJlYWR5IHRvIGJlIGNvbW1pdGVkIGJ5IGBjb21taXQoKWBcbiAgICpcbiAgICogQHBhcmFtIGRvYyAtIERvY3VtZW50IHRvIGNyZWF0ZSBvciByZXBsYWNlLiBSZXF1aXJlcyBgX2lkYCBhbmQgYF90eXBlYCBwcm9wZXJ0aWVzLlxuICAgKi9cbiAgY3JlYXRlT3JSZXBsYWNlKGRvYykge1xuICAgIGNvbnN0IG9wID0gXCJjcmVhdGVPclJlcGxhY2VcIjtcbiAgICByZXR1cm4gdmFsaWRhdGVPYmplY3Qob3AsIGRvYyksIHJlcXVpcmVEb2N1bWVudElkKG9wLCBkb2MpLCB0aGlzLl9hZGQoeyBbb3BdOiBkb2MgfSk7XG4gIH1cbiAgLyoqXG4gICAqIERlbGV0ZXMgdGhlIGRvY3VtZW50IHdpdGggdGhlIGdpdmVuIGRvY3VtZW50IElEXG4gICAqIFRoZSBvcGVyYXRpb24gaXMgYWRkZWQgdG8gdGhlIGN1cnJlbnQgdHJhbnNhY3Rpb24sIHJlYWR5IHRvIGJlIGNvbW1pdGVkIGJ5IGBjb21taXQoKWBcbiAgICpcbiAgICogQHBhcmFtIGRvY3VtZW50SWQgLSBEb2N1bWVudCBJRCB0byBkZWxldGVcbiAgICovXG4gIGRlbGV0ZShkb2N1bWVudElkKSB7XG4gICAgcmV0dXJuIHZhbGlkYXRlRG9jdW1lbnRJZChcImRlbGV0ZVwiLCBkb2N1bWVudElkKSwgdGhpcy5fYWRkKHsgZGVsZXRlOiB7IGlkOiBkb2N1bWVudElkIH0gfSk7XG4gIH1cbiAgdHJhbnNhY3Rpb25JZChpZCkge1xuICAgIHJldHVybiBpZCA/ICh0aGlzLnRyeElkID0gaWQsIHRoaXMpIDogdGhpcy50cnhJZDtcbiAgfVxuICAvKipcbiAgICogUmV0dXJuIGEgcGxhaW4gSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb25cbiAgICovXG4gIHNlcmlhbGl6ZSgpIHtcbiAgICByZXR1cm4gWy4uLnRoaXMub3BlcmF0aW9uc107XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybiBhIHBsYWluIEpTT04gcmVwcmVzZW50YXRpb24gb2YgdGhlIHRyYW5zYWN0aW9uXG4gICAqL1xuICB0b0pTT04oKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VyaWFsaXplKCk7XG4gIH1cbiAgLyoqXG4gICAqIENsZWFycyB0aGUgdHJhbnNhY3Rpb24gb2YgYWxsIG9wZXJhdGlvbnNcbiAgICovXG4gIHJlc2V0KCkge1xuICAgIHJldHVybiB0aGlzLm9wZXJhdGlvbnMgPSBbXSwgdGhpcztcbiAgfVxuICBfYWRkKG11dCkge1xuICAgIHJldHVybiB0aGlzLm9wZXJhdGlvbnMucHVzaChtdXQpLCB0aGlzO1xuICB9XG59XG5jbGFzcyBUcmFuc2FjdGlvbiBleHRlbmRzIEJhc2VUcmFuc2FjdGlvbiB7XG4gICNjbGllbnQ7XG4gIGNvbnN0cnVjdG9yKG9wZXJhdGlvbnMsIGNsaWVudCwgdHJhbnNhY3Rpb25JZCkge1xuICAgIHN1cGVyKG9wZXJhdGlvbnMsIHRyYW5zYWN0aW9uSWQpLCB0aGlzLiNjbGllbnQgPSBjbGllbnQ7XG4gIH1cbiAgLyoqXG4gICAqIENsb25lcyB0aGUgdHJhbnNhY3Rpb25cbiAgICovXG4gIGNsb25lKCkge1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb24oWy4uLnRoaXMub3BlcmF0aW9uc10sIHRoaXMuI2NsaWVudCwgdGhpcy50cnhJZCk7XG4gIH1cbiAgY29tbWl0KG9wdGlvbnMpIHtcbiAgICBpZiAoIXRoaXMuI2NsaWVudClcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJObyBgY2xpZW50YCBwYXNzZWQgdG8gdHJhbnNhY3Rpb24sIGVpdGhlciBwcm92aWRlIG9uZSBvciBwYXNzIHRoZSB0cmFuc2FjdGlvbiB0byBhIGNsaWVudHMgYG11dGF0ZSgpYCBtZXRob2RcIlxuICAgICAgKTtcbiAgICByZXR1cm4gdGhpcy4jY2xpZW50Lm11dGF0ZShcbiAgICAgIHRoaXMuc2VyaWFsaXplKCksXG4gICAgICBPYmplY3QuYXNzaWduKHsgdHJhbnNhY3Rpb25JZDogdGhpcy50cnhJZCB9LCBkZWZhdWx0TXV0YXRlT3B0aW9ucywgb3B0aW9ucyB8fCB7fSlcbiAgICApO1xuICB9XG4gIHBhdGNoKHBhdGNoT3JEb2N1bWVudElkLCBwYXRjaE9wcykge1xuICAgIGNvbnN0IGlzQnVpbGRlciA9IHR5cGVvZiBwYXRjaE9wcyA9PSBcImZ1bmN0aW9uXCIsIGlzUGF0Y2ggPSB0eXBlb2YgcGF0Y2hPckRvY3VtZW50SWQgIT0gXCJzdHJpbmdcIiAmJiBwYXRjaE9yRG9jdW1lbnRJZCBpbnN0YW5jZW9mIFBhdGNoLCBpc011dGF0aW9uU2VsZWN0aW9uID0gdHlwZW9mIHBhdGNoT3JEb2N1bWVudElkID09IFwib2JqZWN0XCIgJiYgKFwicXVlcnlcIiBpbiBwYXRjaE9yRG9jdW1lbnRJZCB8fCBcImlkXCIgaW4gcGF0Y2hPckRvY3VtZW50SWQpO1xuICAgIGlmIChpc1BhdGNoKVxuICAgICAgcmV0dXJuIHRoaXMuX2FkZCh7IHBhdGNoOiBwYXRjaE9yRG9jdW1lbnRJZC5zZXJpYWxpemUoKSB9KTtcbiAgICBpZiAoaXNCdWlsZGVyKSB7XG4gICAgICBjb25zdCBwYXRjaCA9IHBhdGNoT3BzKG5ldyBQYXRjaChwYXRjaE9yRG9jdW1lbnRJZCwge30sIHRoaXMuI2NsaWVudCkpO1xuICAgICAgaWYgKCEocGF0Y2ggaW5zdGFuY2VvZiBQYXRjaCkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImZ1bmN0aW9uIHBhc3NlZCB0byBgcGF0Y2goKWAgbXVzdCByZXR1cm4gdGhlIHBhdGNoXCIpO1xuICAgICAgcmV0dXJuIHRoaXMuX2FkZCh7IHBhdGNoOiBwYXRjaC5zZXJpYWxpemUoKSB9KTtcbiAgICB9XG4gICAgaWYgKGlzTXV0YXRpb25TZWxlY3Rpb24pIHtcbiAgICAgIGNvbnN0IHBhdGNoID0gbmV3IFBhdGNoKHBhdGNoT3JEb2N1bWVudElkLCBwYXRjaE9wcyB8fCB7fSwgdGhpcy4jY2xpZW50KTtcbiAgICAgIHJldHVybiB0aGlzLl9hZGQoeyBwYXRjaDogcGF0Y2guc2VyaWFsaXplKCkgfSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl9hZGQoeyBwYXRjaDogeyBpZDogcGF0Y2hPckRvY3VtZW50SWQsIC4uLnBhdGNoT3BzIH0gfSk7XG4gIH1cbn1cbmNsYXNzIE9ic2VydmFibGVUcmFuc2FjdGlvbiBleHRlbmRzIEJhc2VUcmFuc2FjdGlvbiB7XG4gICNjbGllbnQ7XG4gIGNvbnN0cnVjdG9yKG9wZXJhdGlvbnMsIGNsaWVudCwgdHJhbnNhY3Rpb25JZCkge1xuICAgIHN1cGVyKG9wZXJhdGlvbnMsIHRyYW5zYWN0aW9uSWQpLCB0aGlzLiNjbGllbnQgPSBjbGllbnQ7XG4gIH1cbiAgLyoqXG4gICAqIENsb25lcyB0aGUgdHJhbnNhY3Rpb25cbiAgICovXG4gIGNsb25lKCkge1xuICAgIHJldHVybiBuZXcgT2JzZXJ2YWJsZVRyYW5zYWN0aW9uKFsuLi50aGlzLm9wZXJhdGlvbnNdLCB0aGlzLiNjbGllbnQsIHRoaXMudHJ4SWQpO1xuICB9XG4gIGNvbW1pdChvcHRpb25zKSB7XG4gICAgaWYgKCF0aGlzLiNjbGllbnQpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiTm8gYGNsaWVudGAgcGFzc2VkIHRvIHRyYW5zYWN0aW9uLCBlaXRoZXIgcHJvdmlkZSBvbmUgb3IgcGFzcyB0aGUgdHJhbnNhY3Rpb24gdG8gYSBjbGllbnRzIGBtdXRhdGUoKWAgbWV0aG9kXCJcbiAgICAgICk7XG4gICAgcmV0dXJuIHRoaXMuI2NsaWVudC5tdXRhdGUoXG4gICAgICB0aGlzLnNlcmlhbGl6ZSgpLFxuICAgICAgT2JqZWN0LmFzc2lnbih7IHRyYW5zYWN0aW9uSWQ6IHRoaXMudHJ4SWQgfSwgZGVmYXVsdE11dGF0ZU9wdGlvbnMsIG9wdGlvbnMgfHwge30pXG4gICAgKTtcbiAgfVxuICBwYXRjaChwYXRjaE9yRG9jdW1lbnRJZCwgcGF0Y2hPcHMpIHtcbiAgICBjb25zdCBpc0J1aWxkZXIgPSB0eXBlb2YgcGF0Y2hPcHMgPT0gXCJmdW5jdGlvblwiO1xuICAgIGlmICh0eXBlb2YgcGF0Y2hPckRvY3VtZW50SWQgIT0gXCJzdHJpbmdcIiAmJiBwYXRjaE9yRG9jdW1lbnRJZCBpbnN0YW5jZW9mIE9ic2VydmFibGVQYXRjaClcbiAgICAgIHJldHVybiB0aGlzLl9hZGQoeyBwYXRjaDogcGF0Y2hPckRvY3VtZW50SWQuc2VyaWFsaXplKCkgfSk7XG4gICAgaWYgKGlzQnVpbGRlcikge1xuICAgICAgY29uc3QgcGF0Y2ggPSBwYXRjaE9wcyhuZXcgT2JzZXJ2YWJsZVBhdGNoKHBhdGNoT3JEb2N1bWVudElkLCB7fSwgdGhpcy4jY2xpZW50KSk7XG4gICAgICBpZiAoIShwYXRjaCBpbnN0YW5jZW9mIE9ic2VydmFibGVQYXRjaCkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImZ1bmN0aW9uIHBhc3NlZCB0byBgcGF0Y2goKWAgbXVzdCByZXR1cm4gdGhlIHBhdGNoXCIpO1xuICAgICAgcmV0dXJuIHRoaXMuX2FkZCh7IHBhdGNoOiBwYXRjaC5zZXJpYWxpemUoKSB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX2FkZCh7IHBhdGNoOiB7IGlkOiBwYXRjaE9yRG9jdW1lbnRJZCwgLi4ucGF0Y2hPcHMgfSB9KTtcbiAgfVxufVxuY29uc3QgcHJvamVjdEhlYWRlciA9IFwiWC1TYW5pdHktUHJvamVjdC1JRFwiO1xuZnVuY3Rpb24gcmVxdWVzdE9wdGlvbnMoY29uZmlnLCBvdmVycmlkZXMgPSB7fSkge1xuICBjb25zdCBoZWFkZXJzID0ge30sIHRva2VuID0gb3ZlcnJpZGVzLnRva2VuIHx8IGNvbmZpZy50b2tlbjtcbiAgdG9rZW4gJiYgKGhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IGBCZWFyZXIgJHt0b2tlbn1gKSwgIW92ZXJyaWRlcy51c2VHbG9iYWxBcGkgJiYgIWNvbmZpZy51c2VQcm9qZWN0SG9zdG5hbWUgJiYgY29uZmlnLnByb2plY3RJZCAmJiAoaGVhZGVyc1twcm9qZWN0SGVhZGVyXSA9IGNvbmZpZy5wcm9qZWN0SWQpO1xuICBjb25zdCB3aXRoQ3JlZGVudGlhbHMgPSAhISh0eXBlb2Ygb3ZlcnJpZGVzLndpdGhDcmVkZW50aWFscyA+IFwidVwiID8gY29uZmlnLndpdGhDcmVkZW50aWFscyA6IG92ZXJyaWRlcy53aXRoQ3JlZGVudGlhbHMpLCB0aW1lb3V0ID0gdHlwZW9mIG92ZXJyaWRlcy50aW1lb3V0ID4gXCJ1XCIgPyBjb25maWcudGltZW91dCA6IG92ZXJyaWRlcy50aW1lb3V0O1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgb3ZlcnJpZGVzLCB7XG4gICAgaGVhZGVyczogT2JqZWN0LmFzc2lnbih7fSwgaGVhZGVycywgb3ZlcnJpZGVzLmhlYWRlcnMgfHwge30pLFxuICAgIHRpbWVvdXQ6IHR5cGVvZiB0aW1lb3V0ID4gXCJ1XCIgPyA1ICogNjAgKiAxZTMgOiB0aW1lb3V0LFxuICAgIHByb3h5OiBvdmVycmlkZXMucHJveHkgfHwgY29uZmlnLnByb3h5LFxuICAgIGpzb246ICEwLFxuICAgIHdpdGhDcmVkZW50aWFscyxcbiAgICBmZXRjaDogdHlwZW9mIG92ZXJyaWRlcy5mZXRjaCA9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBjb25maWcuZmV0Y2ggPT0gXCJvYmplY3RcIiA/IHsgLi4uY29uZmlnLmZldGNoLCAuLi5vdmVycmlkZXMuZmV0Y2ggfSA6IG92ZXJyaWRlcy5mZXRjaCB8fCBjb25maWcuZmV0Y2hcbiAgfSk7XG59XG5jb25zdCBlbmNvZGVRdWVyeVN0cmluZyA9ICh7XG4gIHF1ZXJ5LFxuICBwYXJhbXMgPSB7fSxcbiAgb3B0aW9ucyA9IHt9XG59KSA9PiB7XG4gIGNvbnN0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKSwgeyB0YWcsIGluY2x1ZGVNdXRhdGlvbnMsIHJldHVyblF1ZXJ5LCAuLi5vcHRzIH0gPSBvcHRpb25zO1xuICB0YWcgJiYgc2VhcmNoUGFyYW1zLmFwcGVuZChcInRhZ1wiLCB0YWcpLCBzZWFyY2hQYXJhbXMuYXBwZW5kKFwicXVlcnlcIiwgcXVlcnkpO1xuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwYXJhbXMpKVxuICAgIHNlYXJjaFBhcmFtcy5hcHBlbmQoYCQke2tleX1gLCBKU09OLnN0cmluZ2lmeSh2YWx1ZSkpO1xuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhvcHRzKSlcbiAgICB2YWx1ZSAmJiBzZWFyY2hQYXJhbXMuYXBwZW5kKGtleSwgYCR7dmFsdWV9YCk7XG4gIHJldHVybiByZXR1cm5RdWVyeSA9PT0gITEgJiYgc2VhcmNoUGFyYW1zLmFwcGVuZChcInJldHVyblF1ZXJ5XCIsIFwiZmFsc2VcIiksIGluY2x1ZGVNdXRhdGlvbnMgPT09ICExICYmIHNlYXJjaFBhcmFtcy5hcHBlbmQoXCJpbmNsdWRlTXV0YXRpb25zXCIsIFwiZmFsc2VcIiksIGA/JHtzZWFyY2hQYXJhbXN9YDtcbn0sIGV4Y2x1ZGVGYWxzZXkgPSAocGFyYW0sIGRlZlZhbHVlKSA9PiBwYXJhbSA9PT0gITEgPyB2b2lkIDAgOiB0eXBlb2YgcGFyYW0gPiBcInVcIiA/IGRlZlZhbHVlIDogcGFyYW0sIGdldE11dGF0aW9uUXVlcnkgPSAob3B0aW9ucyA9IHt9KSA9PiAoe1xuICBkcnlSdW46IG9wdGlvbnMuZHJ5UnVuLFxuICByZXR1cm5JZHM6ICEwLFxuICByZXR1cm5Eb2N1bWVudHM6IGV4Y2x1ZGVGYWxzZXkob3B0aW9ucy5yZXR1cm5Eb2N1bWVudHMsICEwKSxcbiAgdmlzaWJpbGl0eTogb3B0aW9ucy52aXNpYmlsaXR5IHx8IFwic3luY1wiLFxuICBhdXRvR2VuZXJhdGVBcnJheUtleXM6IG9wdGlvbnMuYXV0b0dlbmVyYXRlQXJyYXlLZXlzLFxuICBza2lwQ3Jvc3NEYXRhc2V0UmVmZXJlbmNlVmFsaWRhdGlvbjogb3B0aW9ucy5za2lwQ3Jvc3NEYXRhc2V0UmVmZXJlbmNlVmFsaWRhdGlvblxufSksIGlzUmVzcG9uc2UgPSAoZXZlbnQpID0+IGV2ZW50LnR5cGUgPT09IFwicmVzcG9uc2VcIiwgZ2V0Qm9keSA9IChldmVudCkgPT4gZXZlbnQuYm9keSwgaW5kZXhCeSA9IChkb2NzLCBhdHRyKSA9PiBkb2NzLnJlZHVjZSgoaW5kZXhlZCwgZG9jKSA9PiAoaW5kZXhlZFthdHRyKGRvYyldID0gZG9jLCBpbmRleGVkKSwgLyogQF9fUFVSRV9fICovIE9iamVjdC5jcmVhdGUobnVsbCkpLCBnZXRRdWVyeVNpemVMaW1pdCA9IDExMjY0O1xuZnVuY3Rpb24gX2ZldGNoKGNsaWVudCwgaHR0cFJlcXVlc3QsIF9zdGVnYSwgcXVlcnksIF9wYXJhbXMgPSB7fSwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHN0ZWdhID0gXCJzdGVnYVwiIGluIG9wdGlvbnMgPyB7XG4gICAgLi4uX3N0ZWdhIHx8IHt9LFxuICAgIC4uLnR5cGVvZiBvcHRpb25zLnN0ZWdhID09IFwiYm9vbGVhblwiID8geyBlbmFibGVkOiBvcHRpb25zLnN0ZWdhIH0gOiBvcHRpb25zLnN0ZWdhIHx8IHt9XG4gIH0gOiBfc3RlZ2EsIHBhcmFtcyA9IHN0ZWdhLmVuYWJsZWQgPyBzdGVnYUNsZWFuKF9wYXJhbXMpIDogX3BhcmFtcywgbWFwUmVzcG9uc2UgPSBvcHRpb25zLmZpbHRlclJlc3BvbnNlID09PSAhMSA/IChyZXMpID0+IHJlcyA6IChyZXMpID0+IHJlcy5yZXN1bHQsIHsgY2FjaGUsIG5leHQsIC4uLm9wdHMgfSA9IHtcbiAgICAvLyBPcHQgb3V0IG9mIHNldHRpbmcgYSBgc2lnbmFsYCBvbiBhbiBpbnRlcm5hbCBgZmV0Y2hgIGlmIG9uZSBpc24ndCBwcm92aWRlZC5cbiAgICAvLyBUaGlzIGlzIG5lY2Vzc2FyeSBpbiBSZWFjdCBTZXJ2ZXIgQ29tcG9uZW50cyB0byBhdm9pZCBvcHRpbmcgb3V0IG9mIFJlcXVlc3QgTWVtb2l6YXRpb24uXG4gICAgdXNlQWJvcnRTaWduYWw6IHR5cGVvZiBvcHRpb25zLnNpZ25hbCA8IFwidVwiLFxuICAgIC8vIFNldCBgcmVzdWx0U291cmNlTWFwJyB3aGVuIHN0ZWdhIGlzIGVuYWJsZWQsIGFzIGl0J3MgcmVxdWlyZWQgZm9yIGVuY29kaW5nLlxuICAgIHJlc3VsdFNvdXJjZU1hcDogc3RlZ2EuZW5hYmxlZCA/IFwid2l0aEtleUFycmF5U2VsZWN0b3JcIiA6IG9wdGlvbnMucmVzdWx0U291cmNlTWFwLFxuICAgIC4uLm9wdGlvbnMsXG4gICAgLy8gRGVmYXVsdCB0byBub3QgcmV0dXJuaW5nIHRoZSBxdWVyeSwgdW5sZXNzIGBmaWx0ZXJSZXNwb25zZWAgaXMgYGZhbHNlYCxcbiAgICAvLyBvciBgcmV0dXJuUXVlcnlgIGlzIGV4cGxpY2l0bHkgc2V0LiBgdHJ1ZWAgaXMgdGhlIGRlZmF1bHQgaW4gQ29udGVudCBMYWtlLCBzbyBza2lwIGlmIHRydXRoeVxuICAgIHJldHVyblF1ZXJ5OiBvcHRpb25zLmZpbHRlclJlc3BvbnNlID09PSAhMSAmJiBvcHRpb25zLnJldHVyblF1ZXJ5ICE9PSAhMVxuICB9LCByZXFPcHRzID0gdHlwZW9mIGNhY2hlIDwgXCJ1XCIgfHwgdHlwZW9mIG5leHQgPCBcInVcIiA/IHsgLi4ub3B0cywgZmV0Y2g6IHsgY2FjaGUsIG5leHQgfSB9IDogb3B0cywgJHJlcXVlc3QgPSBfZGF0YVJlcXVlc3QoY2xpZW50LCBodHRwUmVxdWVzdCwgXCJxdWVyeVwiLCB7IHF1ZXJ5LCBwYXJhbXMgfSwgcmVxT3B0cyk7XG4gIHJldHVybiBzdGVnYS5lbmFibGVkID8gJHJlcXVlc3QucGlwZShcbiAgICBjb21iaW5lTGF0ZXN0V2l0aChcbiAgICAgIGZyb20oXG4gICAgICAgIGltcG9ydChcIi4vX2NodW5rcy1lcy9zdGVnYUVuY29kZVNvdXJjZU1hcC5qc1wiKS50aGVuKGZ1bmN0aW9uKG4pIHtcbiAgICAgICAgICByZXR1cm4gbi5zdGVnYUVuY29kZVNvdXJjZU1hcCQxO1xuICAgICAgICB9KS50aGVuKFxuICAgICAgICAgICh7IHN0ZWdhRW5jb2RlU291cmNlTWFwIH0pID0+IHN0ZWdhRW5jb2RlU291cmNlTWFwXG4gICAgICAgIClcbiAgICAgIClcbiAgICApLFxuICAgIG1hcChcbiAgICAgIChbcmVzLCBzdGVnYUVuY29kZVNvdXJjZU1hcF0pID0+IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3RlZ2FFbmNvZGVTb3VyY2VNYXAocmVzLnJlc3VsdCwgcmVzLnJlc3VsdFNvdXJjZU1hcCwgc3RlZ2EpO1xuICAgICAgICByZXR1cm4gbWFwUmVzcG9uc2UoeyAuLi5yZXMsIHJlc3VsdCB9KTtcbiAgICAgIH1cbiAgICApXG4gICkgOiAkcmVxdWVzdC5waXBlKG1hcChtYXBSZXNwb25zZSkpO1xufVxuZnVuY3Rpb24gX2dldERvY3VtZW50KGNsaWVudCwgaHR0cFJlcXVlc3QsIGlkLCBvcHRzID0ge30pIHtcbiAgY29uc3QgZG9jSWQgPSAoKCkgPT4ge1xuICAgIGlmICghb3B0cy5yZWxlYXNlSWQpXG4gICAgICByZXR1cm4gaWQ7XG4gICAgY29uc3QgdmVyc2lvbklkID0gZ2V0VmVyc2lvbkZyb21JZChpZCk7XG4gICAgaWYgKCF2ZXJzaW9uSWQpIHtcbiAgICAgIGlmIChpc0RyYWZ0SWQoaWQpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgYFRoZSBkb2N1bWVudCBJRCAoXFxgJHtpZH1cXGApIGlzIGEgZHJhZnQsIGJ1dCBcXGBvcHRpb25zLnJlbGVhc2VJZFxcYCBpcyBzZXQgYXMgXFxgJHtvcHRzLnJlbGVhc2VJZH1cXGBgXG4gICAgICAgICk7XG4gICAgICByZXR1cm4gZ2V0VmVyc2lvbklkKGlkLCBvcHRzLnJlbGVhc2VJZCk7XG4gICAgfVxuICAgIGlmICh2ZXJzaW9uSWQgIT09IG9wdHMucmVsZWFzZUlkKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgVGhlIGRvY3VtZW50IElEIChcXGAke2lkfVxcYCkgaXMgYWxyZWFkeSBhIHZlcnNpb24gb2YgXFxgJHt2ZXJzaW9uSWR9XFxgIHJlbGVhc2UsIGJ1dCB0aGlzIGRvZXMgbm90IG1hdGNoIHRoZSBwcm92aWRlZCBcXGBvcHRpb25zLnJlbGVhc2VJZFxcYCAoXFxgJHtvcHRzLnJlbGVhc2VJZH1cXGApYFxuICAgICAgKTtcbiAgICByZXR1cm4gaWQ7XG4gIH0pKCksIG9wdGlvbnMgPSB7XG4gICAgdXJpOiBfZ2V0RGF0YVVybChjbGllbnQsIFwiZG9jXCIsIGRvY0lkKSxcbiAgICBqc29uOiAhMCxcbiAgICB0YWc6IG9wdHMudGFnLFxuICAgIHNpZ25hbDogb3B0cy5zaWduYWxcbiAgfTtcbiAgcmV0dXJuIF9yZXF1ZXN0T2JzZXJ2YWJsZShjbGllbnQsIGh0dHBSZXF1ZXN0LCBvcHRpb25zKS5waXBlKFxuICAgIGZpbHRlcihpc1Jlc3BvbnNlKSxcbiAgICBtYXAoKGV2ZW50KSA9PiBldmVudC5ib2R5LmRvY3VtZW50cyAmJiBldmVudC5ib2R5LmRvY3VtZW50c1swXSlcbiAgKTtcbn1cbmZ1bmN0aW9uIF9nZXREb2N1bWVudHMoY2xpZW50LCBodHRwUmVxdWVzdCwgaWRzLCBvcHRzID0ge30pIHtcbiAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICB1cmk6IF9nZXREYXRhVXJsKGNsaWVudCwgXCJkb2NcIiwgaWRzLmpvaW4oXCIsXCIpKSxcbiAgICBqc29uOiAhMCxcbiAgICB0YWc6IG9wdHMudGFnLFxuICAgIHNpZ25hbDogb3B0cy5zaWduYWxcbiAgfTtcbiAgcmV0dXJuIF9yZXF1ZXN0T2JzZXJ2YWJsZShjbGllbnQsIGh0dHBSZXF1ZXN0LCBvcHRpb25zKS5waXBlKFxuICAgIGZpbHRlcihpc1Jlc3BvbnNlKSxcbiAgICBtYXAoKGV2ZW50KSA9PiB7XG4gICAgICBjb25zdCBpbmRleGVkID0gaW5kZXhCeShldmVudC5ib2R5LmRvY3VtZW50cyB8fCBbXSwgKGRvYykgPT4gZG9jLl9pZCk7XG4gICAgICByZXR1cm4gaWRzLm1hcCgoaWQpID0+IGluZGV4ZWRbaWRdIHx8IG51bGwpO1xuICAgIH0pXG4gICk7XG59XG5mdW5jdGlvbiBfZ2V0UmVsZWFzZURvY3VtZW50cyhjbGllbnQsIGh0dHBSZXF1ZXN0LCByZWxlYXNlSWQsIG9wdHMgPSB7fSkge1xuICByZXR1cm4gX2RhdGFSZXF1ZXN0KFxuICAgIGNsaWVudCxcbiAgICBodHRwUmVxdWVzdCxcbiAgICBcInF1ZXJ5XCIsXG4gICAge1xuICAgICAgcXVlcnk6IFwiKltzYW5pdHk6OnBhcnRPZlJlbGVhc2UoJHJlbGVhc2VJZCldXCIsXG4gICAgICBwYXJhbXM6IHtcbiAgICAgICAgcmVsZWFzZUlkXG4gICAgICB9XG4gICAgfSxcbiAgICBvcHRzXG4gICk7XG59XG5mdW5jdGlvbiBfY3JlYXRlSWZOb3RFeGlzdHMoY2xpZW50LCBodHRwUmVxdWVzdCwgZG9jLCBvcHRpb25zKSB7XG4gIHJldHVybiByZXF1aXJlRG9jdW1lbnRJZChcImNyZWF0ZUlmTm90RXhpc3RzXCIsIGRvYyksIF9jcmVhdGUoY2xpZW50LCBodHRwUmVxdWVzdCwgZG9jLCBcImNyZWF0ZUlmTm90RXhpc3RzXCIsIG9wdGlvbnMpO1xufVxuZnVuY3Rpb24gX2NyZWF0ZU9yUmVwbGFjZShjbGllbnQsIGh0dHBSZXF1ZXN0LCBkb2MsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHJlcXVpcmVEb2N1bWVudElkKFwiY3JlYXRlT3JSZXBsYWNlXCIsIGRvYyksIF9jcmVhdGUoY2xpZW50LCBodHRwUmVxdWVzdCwgZG9jLCBcImNyZWF0ZU9yUmVwbGFjZVwiLCBvcHRpb25zKTtcbn1cbmZ1bmN0aW9uIF9jcmVhdGVWZXJzaW9uKGNsaWVudCwgaHR0cFJlcXVlc3QsIGRvYywgcHVibGlzaGVkSWQsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHJlcXVpcmVEb2N1bWVudElkKFwiY3JlYXRlVmVyc2lvblwiLCBkb2MpLCByZXF1aXJlRG9jdW1lbnRUeXBlKFwiY3JlYXRlVmVyc2lvblwiLCBkb2MpLCBfYWN0aW9uKGNsaWVudCwgaHR0cFJlcXVlc3QsIHtcbiAgICBhY3Rpb25UeXBlOiBcInNhbml0eS5hY3Rpb24uZG9jdW1lbnQudmVyc2lvbi5jcmVhdGVcIixcbiAgICBwdWJsaXNoZWRJZCxcbiAgICBkb2N1bWVudDogZG9jXG4gIH0sIG9wdGlvbnMpO1xufVxuZnVuY3Rpb24gX2RlbGV0ZShjbGllbnQsIGh0dHBSZXF1ZXN0LCBzZWxlY3Rpb24sIG9wdGlvbnMpIHtcbiAgcmV0dXJuIF9kYXRhUmVxdWVzdChcbiAgICBjbGllbnQsXG4gICAgaHR0cFJlcXVlc3QsXG4gICAgXCJtdXRhdGVcIixcbiAgICB7IG11dGF0aW9uczogW3sgZGVsZXRlOiBnZXRTZWxlY3Rpb24oc2VsZWN0aW9uKSB9XSB9LFxuICAgIG9wdGlvbnNcbiAgKTtcbn1cbmZ1bmN0aW9uIF9kaXNjYXJkVmVyc2lvbihjbGllbnQsIGh0dHBSZXF1ZXN0LCB2ZXJzaW9uSWQsIHB1cmdlID0gITEsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIF9hY3Rpb24oY2xpZW50LCBodHRwUmVxdWVzdCwge1xuICAgIGFjdGlvblR5cGU6IFwic2FuaXR5LmFjdGlvbi5kb2N1bWVudC52ZXJzaW9uLmRpc2NhcmRcIixcbiAgICB2ZXJzaW9uSWQsXG4gICAgcHVyZ2VcbiAgfSwgb3B0aW9ucyk7XG59XG5mdW5jdGlvbiBfcmVwbGFjZVZlcnNpb24oY2xpZW50LCBodHRwUmVxdWVzdCwgZG9jLCBvcHRpb25zKSB7XG4gIHJldHVybiByZXF1aXJlRG9jdW1lbnRJZChcInJlcGxhY2VWZXJzaW9uXCIsIGRvYyksIHJlcXVpcmVEb2N1bWVudFR5cGUoXCJyZXBsYWNlVmVyc2lvblwiLCBkb2MpLCBfYWN0aW9uKGNsaWVudCwgaHR0cFJlcXVlc3QsIHtcbiAgICBhY3Rpb25UeXBlOiBcInNhbml0eS5hY3Rpb24uZG9jdW1lbnQudmVyc2lvbi5yZXBsYWNlXCIsXG4gICAgZG9jdW1lbnQ6IGRvY1xuICB9LCBvcHRpb25zKTtcbn1cbmZ1bmN0aW9uIF91bnB1Ymxpc2hWZXJzaW9uKGNsaWVudCwgaHR0cFJlcXVlc3QsIHZlcnNpb25JZCwgcHVibGlzaGVkSWQsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIF9hY3Rpb24oY2xpZW50LCBodHRwUmVxdWVzdCwge1xuICAgIGFjdGlvblR5cGU6IFwic2FuaXR5LmFjdGlvbi5kb2N1bWVudC52ZXJzaW9uLnVucHVibGlzaFwiLFxuICAgIHZlcnNpb25JZCxcbiAgICBwdWJsaXNoZWRJZFxuICB9LCBvcHRpb25zKTtcbn1cbmZ1bmN0aW9uIF9tdXRhdGUoY2xpZW50LCBodHRwUmVxdWVzdCwgbXV0YXRpb25zLCBvcHRpb25zKSB7XG4gIGxldCBtdXQ7XG4gIG11dGF0aW9ucyBpbnN0YW5jZW9mIFBhdGNoIHx8IG11dGF0aW9ucyBpbnN0YW5jZW9mIE9ic2VydmFibGVQYXRjaCA/IG11dCA9IHsgcGF0Y2g6IG11dGF0aW9ucy5zZXJpYWxpemUoKSB9IDogbXV0YXRpb25zIGluc3RhbmNlb2YgVHJhbnNhY3Rpb24gfHwgbXV0YXRpb25zIGluc3RhbmNlb2YgT2JzZXJ2YWJsZVRyYW5zYWN0aW9uID8gbXV0ID0gbXV0YXRpb25zLnNlcmlhbGl6ZSgpIDogbXV0ID0gbXV0YXRpb25zO1xuICBjb25zdCBtdXRzID0gQXJyYXkuaXNBcnJheShtdXQpID8gbXV0IDogW211dF0sIHRyYW5zYWN0aW9uSWQgPSBvcHRpb25zICYmIG9wdGlvbnMudHJhbnNhY3Rpb25JZCB8fCB2b2lkIDA7XG4gIHJldHVybiBfZGF0YVJlcXVlc3QoY2xpZW50LCBodHRwUmVxdWVzdCwgXCJtdXRhdGVcIiwgeyBtdXRhdGlvbnM6IG11dHMsIHRyYW5zYWN0aW9uSWQgfSwgb3B0aW9ucyk7XG59XG5mdW5jdGlvbiBfYWN0aW9uKGNsaWVudCwgaHR0cFJlcXVlc3QsIGFjdGlvbnMsIG9wdGlvbnMpIHtcbiAgY29uc3QgYWN0cyA9IEFycmF5LmlzQXJyYXkoYWN0aW9ucykgPyBhY3Rpb25zIDogW2FjdGlvbnNdLCB0cmFuc2FjdGlvbklkID0gb3B0aW9ucyAmJiBvcHRpb25zLnRyYW5zYWN0aW9uSWQgfHwgdm9pZCAwLCBza2lwQ3Jvc3NEYXRhc2V0UmVmZXJlbmNlVmFsaWRhdGlvbiA9IG9wdGlvbnMgJiYgb3B0aW9ucy5za2lwQ3Jvc3NEYXRhc2V0UmVmZXJlbmNlVmFsaWRhdGlvbiB8fCB2b2lkIDAsIGRyeVJ1biA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kcnlSdW4gfHwgdm9pZCAwO1xuICByZXR1cm4gX2RhdGFSZXF1ZXN0KFxuICAgIGNsaWVudCxcbiAgICBodHRwUmVxdWVzdCxcbiAgICBcImFjdGlvbnNcIixcbiAgICB7IGFjdGlvbnM6IGFjdHMsIHRyYW5zYWN0aW9uSWQsIHNraXBDcm9zc0RhdGFzZXRSZWZlcmVuY2VWYWxpZGF0aW9uLCBkcnlSdW4gfSxcbiAgICBvcHRpb25zXG4gICk7XG59XG5mdW5jdGlvbiBfZGF0YVJlcXVlc3QoY2xpZW50LCBodHRwUmVxdWVzdCwgZW5kcG9pbnQsIGJvZHksIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBpc011dGF0aW9uID0gZW5kcG9pbnQgPT09IFwibXV0YXRlXCIsIGlzQWN0aW9uID0gZW5kcG9pbnQgPT09IFwiYWN0aW9uc1wiLCBpc1F1ZXJ5MiA9IGVuZHBvaW50ID09PSBcInF1ZXJ5XCIsIHN0clF1ZXJ5ID0gaXNNdXRhdGlvbiB8fCBpc0FjdGlvbiA/IFwiXCIgOiBlbmNvZGVRdWVyeVN0cmluZyhib2R5KSwgdXNlR2V0ID0gIWlzTXV0YXRpb24gJiYgIWlzQWN0aW9uICYmIHN0clF1ZXJ5Lmxlbmd0aCA8IGdldFF1ZXJ5U2l6ZUxpbWl0LCBzdHJpbmdRdWVyeSA9IHVzZUdldCA/IHN0clF1ZXJ5IDogXCJcIiwgcmV0dXJuRmlyc3QgPSBvcHRpb25zLnJldHVybkZpcnN0LCB7IHRpbWVvdXQsIHRva2VuLCB0YWcsIGhlYWRlcnMsIHJldHVyblF1ZXJ5LCBsYXN0TGl2ZUV2ZW50SWQsIGNhY2hlTW9kZSB9ID0gb3B0aW9ucywgdXJpID0gX2dldERhdGFVcmwoY2xpZW50LCBlbmRwb2ludCwgc3RyaW5nUXVlcnkpLCByZXFPcHRpb25zID0ge1xuICAgIG1ldGhvZDogdXNlR2V0ID8gXCJHRVRcIiA6IFwiUE9TVFwiLFxuICAgIHVyaSxcbiAgICBqc29uOiAhMCxcbiAgICBib2R5OiB1c2VHZXQgPyB2b2lkIDAgOiBib2R5LFxuICAgIHF1ZXJ5OiBpc011dGF0aW9uICYmIGdldE11dGF0aW9uUXVlcnkob3B0aW9ucyksXG4gICAgdGltZW91dCxcbiAgICBoZWFkZXJzLFxuICAgIHRva2VuLFxuICAgIHRhZyxcbiAgICByZXR1cm5RdWVyeSxcbiAgICBwZXJzcGVjdGl2ZTogb3B0aW9ucy5wZXJzcGVjdGl2ZSxcbiAgICByZXN1bHRTb3VyY2VNYXA6IG9wdGlvbnMucmVzdWx0U291cmNlTWFwLFxuICAgIGxhc3RMaXZlRXZlbnRJZDogQXJyYXkuaXNBcnJheShsYXN0TGl2ZUV2ZW50SWQpID8gbGFzdExpdmVFdmVudElkWzBdIDogbGFzdExpdmVFdmVudElkLFxuICAgIGNhY2hlTW9kZSxcbiAgICBjYW5Vc2VDZG46IGlzUXVlcnkyLFxuICAgIHNpZ25hbDogb3B0aW9ucy5zaWduYWwsXG4gICAgZmV0Y2g6IG9wdGlvbnMuZmV0Y2gsXG4gICAgdXNlQWJvcnRTaWduYWw6IG9wdGlvbnMudXNlQWJvcnRTaWduYWwsXG4gICAgdXNlQ2RuOiBvcHRpb25zLnVzZUNkblxuICB9O1xuICByZXR1cm4gX3JlcXVlc3RPYnNlcnZhYmxlKGNsaWVudCwgaHR0cFJlcXVlc3QsIHJlcU9wdGlvbnMpLnBpcGUoXG4gICAgZmlsdGVyKGlzUmVzcG9uc2UpLFxuICAgIG1hcChnZXRCb2R5KSxcbiAgICBtYXAoKHJlcykgPT4ge1xuICAgICAgaWYgKCFpc011dGF0aW9uKVxuICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgY29uc3QgcmVzdWx0cyA9IHJlcy5yZXN1bHRzIHx8IFtdO1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuRG9jdW1lbnRzKVxuICAgICAgICByZXR1cm4gcmV0dXJuRmlyc3QgPyByZXN1bHRzWzBdICYmIHJlc3VsdHNbMF0uZG9jdW1lbnQgOiByZXN1bHRzLm1hcCgobXV0KSA9PiBtdXQuZG9jdW1lbnQpO1xuICAgICAgY29uc3Qga2V5ID0gcmV0dXJuRmlyc3QgPyBcImRvY3VtZW50SWRcIiA6IFwiZG9jdW1lbnRJZHNcIiwgaWRzID0gcmV0dXJuRmlyc3QgPyByZXN1bHRzWzBdICYmIHJlc3VsdHNbMF0uaWQgOiByZXN1bHRzLm1hcCgobXV0KSA9PiBtdXQuaWQpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHJhbnNhY3Rpb25JZDogcmVzLnRyYW5zYWN0aW9uSWQsXG4gICAgICAgIHJlc3VsdHMsXG4gICAgICAgIFtrZXldOiBpZHNcbiAgICAgIH07XG4gICAgfSlcbiAgKTtcbn1cbmZ1bmN0aW9uIF9jcmVhdGUoY2xpZW50LCBodHRwUmVxdWVzdCwgZG9jLCBvcCwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IG11dGF0aW9uID0geyBbb3BdOiBkb2MgfSwgb3B0cyA9IE9iamVjdC5hc3NpZ24oeyByZXR1cm5GaXJzdDogITAsIHJldHVybkRvY3VtZW50czogITAgfSwgb3B0aW9ucyk7XG4gIHJldHVybiBfZGF0YVJlcXVlc3QoY2xpZW50LCBodHRwUmVxdWVzdCwgXCJtdXRhdGVcIiwgeyBtdXRhdGlvbnM6IFttdXRhdGlvbl0gfSwgb3B0cyk7XG59XG5jb25zdCBoYXNEYXRhQ29uZmlnID0gKGNsaWVudCkgPT4gY2xpZW50LmNvbmZpZygpLmRhdGFzZXQgIT09IHZvaWQgMCAmJiBjbGllbnQuY29uZmlnKCkucHJvamVjdElkICE9PSB2b2lkIDAgfHwgY2xpZW50LmNvbmZpZygpW1wifmV4cGVyaW1lbnRhbF9yZXNvdXJjZVwiXSAhPT0gdm9pZCAwLCBpc1F1ZXJ5ID0gKGNsaWVudCwgdXJpKSA9PiBoYXNEYXRhQ29uZmlnKGNsaWVudCkgJiYgdXJpLnN0YXJ0c1dpdGgoX2dldERhdGFVcmwoY2xpZW50LCBcInF1ZXJ5XCIpKSwgaXNNdXRhdGUgPSAoY2xpZW50LCB1cmkpID0+IGhhc0RhdGFDb25maWcoY2xpZW50KSAmJiB1cmkuc3RhcnRzV2l0aChfZ2V0RGF0YVVybChjbGllbnQsIFwibXV0YXRlXCIpKSwgaXNEb2MgPSAoY2xpZW50LCB1cmkpID0+IGhhc0RhdGFDb25maWcoY2xpZW50KSAmJiB1cmkuc3RhcnRzV2l0aChfZ2V0RGF0YVVybChjbGllbnQsIFwiZG9jXCIsIFwiXCIpKSwgaXNMaXN0ZW5lciA9IChjbGllbnQsIHVyaSkgPT4gaGFzRGF0YUNvbmZpZyhjbGllbnQpICYmIHVyaS5zdGFydHNXaXRoKF9nZXREYXRhVXJsKGNsaWVudCwgXCJsaXN0ZW5cIikpLCBpc0hpc3RvcnkgPSAoY2xpZW50LCB1cmkpID0+IGhhc0RhdGFDb25maWcoY2xpZW50KSAmJiB1cmkuc3RhcnRzV2l0aChfZ2V0RGF0YVVybChjbGllbnQsIFwiaGlzdG9yeVwiLCBcIlwiKSksIGlzRGF0YSA9IChjbGllbnQsIHVyaSkgPT4gdXJpLnN0YXJ0c1dpdGgoXCIvZGF0YS9cIikgfHwgaXNRdWVyeShjbGllbnQsIHVyaSkgfHwgaXNNdXRhdGUoY2xpZW50LCB1cmkpIHx8IGlzRG9jKGNsaWVudCwgdXJpKSB8fCBpc0xpc3RlbmVyKGNsaWVudCwgdXJpKSB8fCBpc0hpc3RvcnkoY2xpZW50LCB1cmkpO1xuZnVuY3Rpb24gX3JlcXVlc3RPYnNlcnZhYmxlKGNsaWVudCwgaHR0cFJlcXVlc3QsIG9wdGlvbnMpIHtcbiAgY29uc3QgdXJpID0gb3B0aW9ucy51cmwgfHwgb3B0aW9ucy51cmksIGNvbmZpZyA9IGNsaWVudC5jb25maWcoKSwgY2FuVXNlQ2RuID0gdHlwZW9mIG9wdGlvbnMuY2FuVXNlQ2RuID4gXCJ1XCIgPyBbXCJHRVRcIiwgXCJIRUFEXCJdLmluZGV4T2Yob3B0aW9ucy5tZXRob2QgfHwgXCJHRVRcIikgPj0gMCAmJiBpc0RhdGEoY2xpZW50LCB1cmkpIDogb3B0aW9ucy5jYW5Vc2VDZG47XG4gIGxldCB1c2VDZG4gPSAob3B0aW9ucy51c2VDZG4gPz8gY29uZmlnLnVzZUNkbikgJiYgY2FuVXNlQ2RuO1xuICBjb25zdCB0YWcgPSBvcHRpb25zLnRhZyAmJiBjb25maWcucmVxdWVzdFRhZ1ByZWZpeCA/IFtjb25maWcucmVxdWVzdFRhZ1ByZWZpeCwgb3B0aW9ucy50YWddLmpvaW4oXCIuXCIpIDogb3B0aW9ucy50YWcgfHwgY29uZmlnLnJlcXVlc3RUYWdQcmVmaXg7XG4gIGlmICh0YWcgJiYgb3B0aW9ucy50YWcgIT09IG51bGwgJiYgKG9wdGlvbnMucXVlcnkgPSB7IHRhZzogcmVxdWVzdFRhZyh0YWcpLCAuLi5vcHRpb25zLnF1ZXJ5IH0pLCBbXCJHRVRcIiwgXCJIRUFEXCIsIFwiUE9TVFwiXS5pbmRleE9mKG9wdGlvbnMubWV0aG9kIHx8IFwiR0VUXCIpID49IDAgJiYgaXNRdWVyeShjbGllbnQsIHVyaSkpIHtcbiAgICBjb25zdCByZXN1bHRTb3VyY2VNYXAgPSBvcHRpb25zLnJlc3VsdFNvdXJjZU1hcCA/PyBjb25maWcucmVzdWx0U291cmNlTWFwO1xuICAgIHJlc3VsdFNvdXJjZU1hcCAhPT0gdm9pZCAwICYmIHJlc3VsdFNvdXJjZU1hcCAhPT0gITEgJiYgKG9wdGlvbnMucXVlcnkgPSB7IHJlc3VsdFNvdXJjZU1hcCwgLi4ub3B0aW9ucy5xdWVyeSB9KTtcbiAgICBjb25zdCBwZXJzcGVjdGl2ZU9wdGlvbiA9IG9wdGlvbnMucGVyc3BlY3RpdmUgfHwgY29uZmlnLnBlcnNwZWN0aXZlO1xuICAgIHR5cGVvZiBwZXJzcGVjdGl2ZU9wdGlvbiA8IFwidVwiICYmIChwZXJzcGVjdGl2ZU9wdGlvbiA9PT0gXCJwcmV2aWV3RHJhZnRzXCIgJiYgcHJpbnRQcmV2aWV3RHJhZnRzRGVwcmVjYXRpb25XYXJuaW5nKCksIHZhbGlkYXRlQXBpUGVyc3BlY3RpdmUocGVyc3BlY3RpdmVPcHRpb24pLCBvcHRpb25zLnF1ZXJ5ID0ge1xuICAgICAgcGVyc3BlY3RpdmU6IEFycmF5LmlzQXJyYXkocGVyc3BlY3RpdmVPcHRpb24pID8gcGVyc3BlY3RpdmVPcHRpb24uam9pbihcIixcIikgOiBwZXJzcGVjdGl2ZU9wdGlvbixcbiAgICAgIC4uLm9wdGlvbnMucXVlcnlcbiAgICB9LCAoQXJyYXkuaXNBcnJheShwZXJzcGVjdGl2ZU9wdGlvbikgJiYgcGVyc3BlY3RpdmVPcHRpb24ubGVuZ3RoID4gMCB8fCAvLyBwcmV2aWV3RHJhZnRzIHdhcyByZW5hbWVkIHRvIGRyYWZ0cywgYnV0IGtlZXAgZm9yIGJhY2t3YXJkcyBjb21wYXRcbiAgICBwZXJzcGVjdGl2ZU9wdGlvbiA9PT0gXCJwcmV2aWV3RHJhZnRzXCIgfHwgcGVyc3BlY3RpdmVPcHRpb24gPT09IFwiZHJhZnRzXCIpICYmIHVzZUNkbiAmJiAodXNlQ2RuID0gITEsIHByaW50Q2RuUHJldmlld0RyYWZ0c1dhcm5pbmcoKSkpLCBvcHRpb25zLmxhc3RMaXZlRXZlbnRJZCAmJiAob3B0aW9ucy5xdWVyeSA9IHsgLi4ub3B0aW9ucy5xdWVyeSwgbGFzdExpdmVFdmVudElkOiBvcHRpb25zLmxhc3RMaXZlRXZlbnRJZCB9KSwgb3B0aW9ucy5yZXR1cm5RdWVyeSA9PT0gITEgJiYgKG9wdGlvbnMucXVlcnkgPSB7IHJldHVyblF1ZXJ5OiBcImZhbHNlXCIsIC4uLm9wdGlvbnMucXVlcnkgfSksIHVzZUNkbiAmJiBvcHRpb25zLmNhY2hlTW9kZSA9PSBcIm5vU3RhbGVcIiAmJiAob3B0aW9ucy5xdWVyeSA9IHsgY2FjaGVNb2RlOiBcIm5vU3RhbGVcIiwgLi4ub3B0aW9ucy5xdWVyeSB9KTtcbiAgfVxuICBjb25zdCByZXFPcHRpb25zID0gcmVxdWVzdE9wdGlvbnMoXG4gICAgY29uZmlnLFxuICAgIE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMsIHtcbiAgICAgIHVybDogX2dldFVybChjbGllbnQsIHVyaSwgdXNlQ2RuKVxuICAgIH0pXG4gICksIHJlcXVlc3QgPSBuZXcgT2JzZXJ2YWJsZShcbiAgICAoc3Vic2NyaWJlcikgPT4gaHR0cFJlcXVlc3QocmVxT3B0aW9ucywgY29uZmlnLnJlcXVlc3Rlcikuc3Vic2NyaWJlKHN1YnNjcmliZXIpXG4gICk7XG4gIHJldHVybiBvcHRpb25zLnNpZ25hbCA/IHJlcXVlc3QucGlwZShfd2l0aEFib3J0U2lnbmFsKG9wdGlvbnMuc2lnbmFsKSkgOiByZXF1ZXN0O1xufVxuZnVuY3Rpb24gX3JlcXVlc3QoY2xpZW50LCBodHRwUmVxdWVzdCwgb3B0aW9ucykge1xuICByZXR1cm4gX3JlcXVlc3RPYnNlcnZhYmxlKGNsaWVudCwgaHR0cFJlcXVlc3QsIG9wdGlvbnMpLnBpcGUoXG4gICAgZmlsdGVyKChldmVudCkgPT4gZXZlbnQudHlwZSA9PT0gXCJyZXNwb25zZVwiKSxcbiAgICBtYXAoKGV2ZW50KSA9PiBldmVudC5ib2R5KVxuICApO1xufVxuZnVuY3Rpb24gX2dldERhdGFVcmwoY2xpZW50LCBvcGVyYXRpb24sIHBhdGgpIHtcbiAgY29uc3QgY29uZmlnID0gY2xpZW50LmNvbmZpZygpO1xuICBpZiAoY29uZmlnW1wifmV4cGVyaW1lbnRhbF9yZXNvdXJjZVwiXSkge1xuICAgIHJlc291cmNlQ29uZmlnKGNvbmZpZyk7XG4gICAgY29uc3QgcmVzb3VyY2VCYXNlID0gcmVzb3VyY2VEYXRhQmFzZShjb25maWcpLCB1cmkyID0gcGF0aCAhPT0gdm9pZCAwID8gYCR7b3BlcmF0aW9ufS8ke3BhdGh9YCA6IG9wZXJhdGlvbjtcbiAgICByZXR1cm4gYCR7cmVzb3VyY2VCYXNlfS8ke3VyaTJ9YC5yZXBsYWNlKC9cXC8oJHxcXD8pLywgXCIkMVwiKTtcbiAgfVxuICBjb25zdCBjYXRhbG9nID0gaGFzRGF0YXNldChjb25maWcpLCBiYXNlVXJpID0gYC8ke29wZXJhdGlvbn0vJHtjYXRhbG9nfWA7XG4gIHJldHVybiBgL2RhdGEke3BhdGggIT09IHZvaWQgMCA/IGAke2Jhc2VVcml9LyR7cGF0aH1gIDogYmFzZVVyaX1gLnJlcGxhY2UoL1xcLygkfFxcPykvLCBcIiQxXCIpO1xufVxuZnVuY3Rpb24gX2dldFVybChjbGllbnQsIHVyaSwgY2FuVXNlQ2RuID0gITEpIHtcbiAgY29uc3QgeyB1cmwsIGNkblVybCB9ID0gY2xpZW50LmNvbmZpZygpO1xuICByZXR1cm4gYCR7Y2FuVXNlQ2RuID8gY2RuVXJsIDogdXJsfS8ke3VyaS5yZXBsYWNlKC9eXFwvLywgXCJcIil9YDtcbn1cbmZ1bmN0aW9uIF93aXRoQWJvcnRTaWduYWwoc2lnbmFsKSB7XG4gIHJldHVybiAoaW5wdXQpID0+IG5ldyBPYnNlcnZhYmxlKChvYnNlcnZlcikgPT4ge1xuICAgIGNvbnN0IGFib3J0ID0gKCkgPT4gb2JzZXJ2ZXIuZXJyb3IoX2NyZWF0ZUFib3J0RXJyb3Ioc2lnbmFsKSk7XG4gICAgaWYgKHNpZ25hbCAmJiBzaWduYWwuYWJvcnRlZCkge1xuICAgICAgYWJvcnQoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gaW5wdXQuc3Vic2NyaWJlKG9ic2VydmVyKTtcbiAgICByZXR1cm4gc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBhYm9ydCksICgpID0+IHtcbiAgICAgIHNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgYWJvcnQpLCBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9KTtcbn1cbmNvbnN0IGlzRG9tRXhjZXB0aW9uU3VwcG9ydGVkID0gISFnbG9iYWxUaGlzLkRPTUV4Y2VwdGlvbjtcbmZ1bmN0aW9uIF9jcmVhdGVBYm9ydEVycm9yKHNpZ25hbCkge1xuICBpZiAoaXNEb21FeGNlcHRpb25TdXBwb3J0ZWQpXG4gICAgcmV0dXJuIG5ldyBET01FeGNlcHRpb24oc2lnbmFsPy5yZWFzb24gPz8gXCJUaGUgb3BlcmF0aW9uIHdhcyBhYm9ydGVkLlwiLCBcIkFib3J0RXJyb3JcIik7XG4gIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKHNpZ25hbD8ucmVhc29uID8/IFwiVGhlIG9wZXJhdGlvbiB3YXMgYWJvcnRlZC5cIik7XG4gIHJldHVybiBlcnJvci5uYW1lID0gXCJBYm9ydEVycm9yXCIsIGVycm9yO1xufVxuY29uc3QgcmVzb3VyY2VEYXRhQmFzZSA9IChjb25maWcpID0+IHtcbiAgaWYgKCFjb25maWdbXCJ+ZXhwZXJpbWVudGFsX3Jlc291cmNlXCJdKVxuICAgIHRocm93IG5ldyBFcnJvcihcImByZXNvdXJjZWAgbXVzdCBiZSBwcm92aWRlZCB0byBwZXJmb3JtIHJlc291cmNlIHF1ZXJpZXNcIik7XG4gIGNvbnN0IHsgdHlwZSwgaWQgfSA9IGNvbmZpZ1tcIn5leHBlcmltZW50YWxfcmVzb3VyY2VcIl07XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgXCJkYXRhc2V0XCI6IHtcbiAgICAgIGNvbnN0IHNlZ21lbnRzID0gaWQuc3BsaXQoXCIuXCIpO1xuICAgICAgaWYgKHNlZ21lbnRzLmxlbmd0aCAhPT0gMilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdEYXRhc2V0IElEIG11c3QgYmUgaW4gdGhlIGZvcm1hdCBcInByb2plY3QuZGF0YXNldFwiJyk7XG4gICAgICByZXR1cm4gYC9wcm9qZWN0cy8ke3NlZ21lbnRzWzBdfS9kYXRhc2V0cy8ke3NlZ21lbnRzWzFdfWA7XG4gICAgfVxuICAgIGNhc2UgXCJjYW52YXNcIjpcbiAgICAgIHJldHVybiBgL2NhbnZhc2VzLyR7aWR9YDtcbiAgICBjYXNlIFwibWVkaWEtbGlicmFyeVwiOlxuICAgICAgcmV0dXJuIGAvbWVkaWEtbGlicmFyaWVzLyR7aWR9YDtcbiAgICBjYXNlIFwiZGFzaGJvYXJkXCI6XG4gICAgICByZXR1cm4gYC9kYXNoYm9hcmRzLyR7aWR9YDtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCByZXNvdXJjZSB0eXBlOiAke3R5cGUudG9TdHJpbmcoKX1gKTtcbiAgfVxufTtcbmZ1bmN0aW9uIF9nZW5lcmF0ZShjbGllbnQsIGh0dHBSZXF1ZXN0LCByZXF1ZXN0KSB7XG4gIGNvbnN0IGRhdGFzZXQyID0gaGFzRGF0YXNldChjbGllbnQuY29uZmlnKCkpO1xuICByZXR1cm4gX3JlcXVlc3QoY2xpZW50LCBodHRwUmVxdWVzdCwge1xuICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgdXJpOiBgL2FnZW50L2FjdGlvbi9nZW5lcmF0ZS8ke2RhdGFzZXQyfWAsXG4gICAgYm9keTogcmVxdWVzdFxuICB9KTtcbn1cbmZ1bmN0aW9uIF90cmFuc2Zvcm0oY2xpZW50LCBodHRwUmVxdWVzdCwgcmVxdWVzdCkge1xuICBjb25zdCBkYXRhc2V0MiA9IGhhc0RhdGFzZXQoY2xpZW50LmNvbmZpZygpKTtcbiAgcmV0dXJuIF9yZXF1ZXN0KGNsaWVudCwgaHR0cFJlcXVlc3QsIHtcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgIHVyaTogYC9hZ2VudC9hY3Rpb24vdHJhbnNmb3JtLyR7ZGF0YXNldDJ9YCxcbiAgICBib2R5OiByZXF1ZXN0XG4gIH0pO1xufVxuZnVuY3Rpb24gX3RyYW5zbGF0ZShjbGllbnQsIGh0dHBSZXF1ZXN0LCByZXF1ZXN0KSB7XG4gIGNvbnN0IGRhdGFzZXQyID0gaGFzRGF0YXNldChjbGllbnQuY29uZmlnKCkpO1xuICByZXR1cm4gX3JlcXVlc3QoY2xpZW50LCBodHRwUmVxdWVzdCwge1xuICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgdXJpOiBgL2FnZW50L2FjdGlvbi90cmFuc2xhdGUvJHtkYXRhc2V0Mn1gLFxuICAgIGJvZHk6IHJlcXVlc3RcbiAgfSk7XG59XG5jbGFzcyBPYnNlcnZhYmxlQWdlbnRzQWN0aW9uQ2xpZW50IHtcbiAgI2NsaWVudDtcbiAgI2h0dHBSZXF1ZXN0O1xuICBjb25zdHJ1Y3RvcihjbGllbnQsIGh0dHBSZXF1ZXN0KSB7XG4gICAgdGhpcy4jY2xpZW50ID0gY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCA9IGh0dHBSZXF1ZXN0O1xuICB9XG4gIC8qKlxuICAgKiBSdW4gYW4gaW5zdHJ1Y3Rpb24gdG8gZ2VuZXJhdGUgY29udGVudCBpbiBhIHRhcmdldCBkb2N1bWVudC5cbiAgICogQHBhcmFtIHJlcXVlc3QgLSBpbnN0cnVjdGlvbiByZXF1ZXN0XG4gICAqL1xuICBnZW5lcmF0ZShyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIF9nZW5lcmF0ZSh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCByZXF1ZXN0KTtcbiAgfVxuICAvKipcbiAgICogVHJhbnNmb3JtIGEgdGFyZ2V0IGRvY3VtZW50IGJhc2VkIG9uIGEgc291cmNlLlxuICAgKiBAcGFyYW0gcmVxdWVzdCAtIHRyYW5zbGF0aW9uIHJlcXVlc3RcbiAgICovXG4gIHRyYW5zZm9ybShyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIF90cmFuc2Zvcm0odGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgcmVxdWVzdCk7XG4gIH1cbiAgLyoqXG4gICAqIFRyYW5zbGF0ZSBhIHRhcmdldCBkb2N1bWVudCBiYXNlZCBvbiBhIHNvdXJjZS5cbiAgICogQHBhcmFtIHJlcXVlc3QgLSB0cmFuc2xhdGlvbiByZXF1ZXN0XG4gICAqL1xuICB0cmFuc2xhdGUocmVxdWVzdCkge1xuICAgIHJldHVybiBfdHJhbnNsYXRlKHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIHJlcXVlc3QpO1xuICB9XG59XG5jbGFzcyBBZ2VudEFjdGlvbnNDbGllbnQge1xuICAjY2xpZW50O1xuICAjaHR0cFJlcXVlc3Q7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCwgaHR0cFJlcXVlc3QpIHtcbiAgICB0aGlzLiNjbGllbnQgPSBjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0ID0gaHR0cFJlcXVlc3Q7XG4gIH1cbiAgLyoqXG4gICAqIFJ1biBhbiBpbnN0cnVjdGlvbiB0byBnZW5lcmF0ZSBjb250ZW50IGluIGEgdGFyZ2V0IGRvY3VtZW50LlxuICAgKiBAcGFyYW0gcmVxdWVzdCAtIGluc3RydWN0aW9uIHJlcXVlc3RcbiAgICovXG4gIGdlbmVyYXRlKHJlcXVlc3QpIHtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShfZ2VuZXJhdGUodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgcmVxdWVzdCkpO1xuICB9XG4gIC8qKlxuICAgKiBUcmFuc2Zvcm0gYSB0YXJnZXQgZG9jdW1lbnQgYmFzZWQgb24gYSBzb3VyY2UuXG4gICAqIEBwYXJhbSByZXF1ZXN0IC0gdHJhbnNsYXRpb24gcmVxdWVzdFxuICAgKi9cbiAgdHJhbnNmb3JtKHJlcXVlc3QpIHtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShfdHJhbnNmb3JtKHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIHJlcXVlc3QpKTtcbiAgfVxuICAvKipcbiAgICogVHJhbnNsYXRlIGEgdGFyZ2V0IGRvY3VtZW50IGJhc2VkIG9uIGEgc291cmNlLlxuICAgKiBAcGFyYW0gcmVxdWVzdCAtIHRyYW5zbGF0aW9uIHJlcXVlc3RcbiAgICovXG4gIHRyYW5zbGF0ZShyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oX3RyYW5zbGF0ZSh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCByZXF1ZXN0KSk7XG4gIH1cbn1cbmNsYXNzIE9ic2VydmFibGVBc3NldHNDbGllbnQge1xuICAjY2xpZW50O1xuICAjaHR0cFJlcXVlc3Q7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCwgaHR0cFJlcXVlc3QpIHtcbiAgICB0aGlzLiNjbGllbnQgPSBjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0ID0gaHR0cFJlcXVlc3Q7XG4gIH1cbiAgdXBsb2FkKGFzc2V0VHlwZSwgYm9keSwgb3B0aW9ucykge1xuICAgIHJldHVybiBfdXBsb2FkKHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIGFzc2V0VHlwZSwgYm9keSwgb3B0aW9ucyk7XG4gIH1cbn1cbmNsYXNzIEFzc2V0c0NsaWVudCB7XG4gICNjbGllbnQ7XG4gICNodHRwUmVxdWVzdDtcbiAgY29uc3RydWN0b3IoY2xpZW50LCBodHRwUmVxdWVzdCkge1xuICAgIHRoaXMuI2NsaWVudCA9IGNsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QgPSBodHRwUmVxdWVzdDtcbiAgfVxuICB1cGxvYWQoYXNzZXRUeXBlLCBib2R5LCBvcHRpb25zKSB7XG4gICAgY29uc3Qgb2JzZXJ2YWJsZTIgPSBfdXBsb2FkKHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIGFzc2V0VHlwZSwgYm9keSwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oXG4gICAgICBvYnNlcnZhYmxlMi5waXBlKFxuICAgICAgICBmaWx0ZXIoKGV2ZW50KSA9PiBldmVudC50eXBlID09PSBcInJlc3BvbnNlXCIpLFxuICAgICAgICBtYXAoXG4gICAgICAgICAgKGV2ZW50KSA9PiBldmVudC5ib2R5LmRvY3VtZW50XG4gICAgICAgIClcbiAgICAgIClcbiAgICApO1xuICB9XG59XG5mdW5jdGlvbiBfdXBsb2FkKGNsaWVudCwgaHR0cFJlcXVlc3QsIGFzc2V0VHlwZSwgYm9keSwgb3B0cyA9IHt9KSB7XG4gIHZhbGlkYXRlQXNzZXRUeXBlKGFzc2V0VHlwZSk7XG4gIGxldCBtZXRhID0gb3B0cy5leHRyYWN0IHx8IHZvaWQgMDtcbiAgbWV0YSAmJiAhbWV0YS5sZW5ndGggJiYgKG1ldGEgPSBbXCJub25lXCJdKTtcbiAgY29uc3QgY29uZmlnID0gY2xpZW50LmNvbmZpZygpLCBvcHRpb25zID0gb3B0aW9uc0Zyb21GaWxlKG9wdHMsIGJvZHkpLCB7IHRhZywgbGFiZWwsIHRpdGxlLCBkZXNjcmlwdGlvbiwgY3JlZGl0TGluZSwgZmlsZW5hbWUsIHNvdXJjZSB9ID0gb3B0aW9ucywgcXVlcnkgPSB7XG4gICAgbGFiZWwsXG4gICAgdGl0bGUsXG4gICAgZGVzY3JpcHRpb24sXG4gICAgZmlsZW5hbWUsXG4gICAgbWV0YSxcbiAgICBjcmVkaXRMaW5lXG4gIH07XG4gIHJldHVybiBzb3VyY2UgJiYgKHF1ZXJ5LnNvdXJjZUlkID0gc291cmNlLmlkLCBxdWVyeS5zb3VyY2VOYW1lID0gc291cmNlLm5hbWUsIHF1ZXJ5LnNvdXJjZVVybCA9IHNvdXJjZS51cmwpLCBfcmVxdWVzdE9ic2VydmFibGUoY2xpZW50LCBodHRwUmVxdWVzdCwge1xuICAgIHRhZyxcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgIHRpbWVvdXQ6IG9wdGlvbnMudGltZW91dCB8fCAwLFxuICAgIHVyaTogYnVpbGRBc3NldFVwbG9hZFVybChjb25maWcsIGFzc2V0VHlwZSksXG4gICAgaGVhZGVyczogb3B0aW9ucy5jb250ZW50VHlwZSA/IHsgXCJDb250ZW50LVR5cGVcIjogb3B0aW9ucy5jb250ZW50VHlwZSB9IDoge30sXG4gICAgcXVlcnksXG4gICAgYm9keVxuICB9KTtcbn1cbmZ1bmN0aW9uIGJ1aWxkQXNzZXRVcGxvYWRVcmwoY29uZmlnLCBhc3NldFR5cGUpIHtcbiAgY29uc3QgYXNzZXRUeXBlRW5kcG9pbnQgPSBhc3NldFR5cGUgPT09IFwiaW1hZ2VcIiA/IFwiaW1hZ2VzXCIgOiBcImZpbGVzXCI7XG4gIGlmIChjb25maWdbXCJ+ZXhwZXJpbWVudGFsX3Jlc291cmNlXCJdKSB7XG4gICAgY29uc3QgeyB0eXBlLCBpZCB9ID0gY29uZmlnW1wifmV4cGVyaW1lbnRhbF9yZXNvdXJjZVwiXTtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgXCJkYXRhc2V0XCI6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBcIkFzc2V0cyBhcmUgbm90IHN1cHBvcnRlZCBmb3IgZGF0YXNldCByZXNvdXJjZXMsIHlldC4gQ29uZmlndXJlIHRoZSBjbGllbnQgd2l0aCBge3Byb2plY3RJZDogPHByb2plY3RJZD4sIGRhdGFzZXQ6IDxkYXRhc2V0SWQ+fWAgaW5zdGVhZC5cIlxuICAgICAgICApO1xuICAgICAgY2FzZSBcImNhbnZhc1wiOlxuICAgICAgICByZXR1cm4gYC9jYW52YXNlcy8ke2lkfS9hc3NldHMvJHthc3NldFR5cGVFbmRwb2ludH1gO1xuICAgICAgY2FzZSBcIm1lZGlhLWxpYnJhcnlcIjpcbiAgICAgICAgcmV0dXJuIGAvbWVkaWEtbGlicmFyaWVzLyR7aWR9L3VwbG9hZGA7XG4gICAgICBjYXNlIFwiZGFzaGJvYXJkXCI6XG4gICAgICAgIHJldHVybiBgL2Rhc2hib2FyZHMvJHtpZH0vYXNzZXRzLyR7YXNzZXRUeXBlRW5kcG9pbnR9YDtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgcmVzb3VyY2UgdHlwZTogJHt0eXBlLnRvU3RyaW5nKCl9YCk7XG4gICAgfVxuICB9XG4gIGNvbnN0IGRhdGFzZXQyID0gaGFzRGF0YXNldChjb25maWcpO1xuICByZXR1cm4gYGFzc2V0cy8ke2Fzc2V0VHlwZUVuZHBvaW50fS8ke2RhdGFzZXQyfWA7XG59XG5mdW5jdGlvbiBvcHRpb25zRnJvbUZpbGUob3B0cywgZmlsZSkge1xuICByZXR1cm4gdHlwZW9mIEZpbGUgPiBcInVcIiB8fCAhKGZpbGUgaW5zdGFuY2VvZiBGaWxlKSA/IG9wdHMgOiBPYmplY3QuYXNzaWduKFxuICAgIHtcbiAgICAgIGZpbGVuYW1lOiBvcHRzLnByZXNlcnZlRmlsZW5hbWUgPT09ICExID8gdm9pZCAwIDogZmlsZS5uYW1lLFxuICAgICAgY29udGVudFR5cGU6IGZpbGUudHlwZVxuICAgIH0sXG4gICAgb3B0c1xuICApO1xufVxudmFyIGRlZmF1bHRzID0gKG9iaiwgZGVmYXVsdHMyKSA9PiBPYmplY3Qua2V5cyhkZWZhdWx0czIpLmNvbmNhdChPYmplY3Qua2V5cyhvYmopKS5yZWR1Y2UoKHRhcmdldCwgcHJvcCkgPT4gKHRhcmdldFtwcm9wXSA9IHR5cGVvZiBvYmpbcHJvcF0gPiBcInVcIiA/IGRlZmF1bHRzMltwcm9wXSA6IG9ialtwcm9wXSwgdGFyZ2V0KSwge30pO1xuY29uc3QgcGljayA9IChvYmosIHByb3BzKSA9PiBwcm9wcy5yZWR1Y2UoKHNlbGVjdGlvbiwgcHJvcCkgPT4gKHR5cGVvZiBvYmpbcHJvcF0gPiBcInVcIiB8fCAoc2VsZWN0aW9uW3Byb3BdID0gb2JqW3Byb3BdKSwgc2VsZWN0aW9uKSwge30pLCBldmVudFNvdXJjZVBvbHlmaWxsID0gZGVmZXIoKCkgPT4gaW1wb3J0KFwiQHNhbml0eS9ldmVudHNvdXJjZVwiKSkucGlwZShcbiAgbWFwKCh7IGRlZmF1bHQ6IEV2ZW50U291cmNlMiB9KSA9PiBFdmVudFNvdXJjZTIpLFxuICBzaGFyZVJlcGxheSgxKVxuKTtcbmZ1bmN0aW9uIHJlY29ubmVjdE9uQ29ubmVjdGlvbkZhaWx1cmUoKSB7XG4gIHJldHVybiBmdW5jdGlvbihzb3VyY2UpIHtcbiAgICByZXR1cm4gc291cmNlLnBpcGUoXG4gICAgICBjYXRjaEVycm9yKChlcnIsIGNhdWdodCkgPT4gZXJyIGluc3RhbmNlb2YgQ29ubmVjdGlvbkZhaWxlZEVycm9yID8gY29uY2F0KG9mKHsgdHlwZTogXCJyZWNvbm5lY3RcIiB9KSwgdGltZXIoMWUzKS5waXBlKG1lcmdlTWFwKCgpID0+IGNhdWdodCkpKSA6IHRocm93RXJyb3IoKCkgPT4gZXJyKSlcbiAgICApO1xuICB9O1xufVxuY29uc3QgTUFYX1VSTF9MRU5HVEggPSAxNDgwMCwgcG9zc2libGVPcHRpb25zID0gW1xuICBcImluY2x1ZGVQcmV2aW91c1JldmlzaW9uXCIsXG4gIFwiaW5jbHVkZVJlc3VsdFwiLFxuICBcImluY2x1ZGVNdXRhdGlvbnNcIixcbiAgXCJpbmNsdWRlQWxsVmVyc2lvbnNcIixcbiAgXCJ2aXNpYmlsaXR5XCIsXG4gIFwiZWZmZWN0Rm9ybWF0XCIsXG4gIFwidGFnXCJcbl0sIGRlZmF1bHRPcHRpb25zID0ge1xuICBpbmNsdWRlUmVzdWx0OiAhMFxufTtcbmZ1bmN0aW9uIF9saXN0ZW4ocXVlcnksIHBhcmFtcywgb3B0cyA9IHt9KSB7XG4gIGNvbnN0IHsgdXJsLCB0b2tlbiwgd2l0aENyZWRlbnRpYWxzLCByZXF1ZXN0VGFnUHJlZml4IH0gPSB0aGlzLmNvbmZpZygpLCB0YWcgPSBvcHRzLnRhZyAmJiByZXF1ZXN0VGFnUHJlZml4ID8gW3JlcXVlc3RUYWdQcmVmaXgsIG9wdHMudGFnXS5qb2luKFwiLlwiKSA6IG9wdHMudGFnLCBvcHRpb25zID0geyAuLi5kZWZhdWx0cyhvcHRzLCBkZWZhdWx0T3B0aW9ucyksIHRhZyB9LCBsaXN0ZW5PcHRzID0gcGljayhvcHRpb25zLCBwb3NzaWJsZU9wdGlvbnMpLCBxcyA9IGVuY29kZVF1ZXJ5U3RyaW5nKHsgcXVlcnksIHBhcmFtcywgb3B0aW9uczogeyB0YWcsIC4uLmxpc3Rlbk9wdHMgfSB9KSwgdXJpID0gYCR7dXJsfSR7X2dldERhdGFVcmwodGhpcywgXCJsaXN0ZW5cIiwgcXMpfWA7XG4gIGlmICh1cmkubGVuZ3RoID4gTUFYX1VSTF9MRU5HVEgpXG4gICAgcmV0dXJuIHRocm93RXJyb3IoKCkgPT4gbmV3IEVycm9yKFwiUXVlcnkgdG9vIGxhcmdlIGZvciBsaXN0ZW5lclwiKSk7XG4gIGNvbnN0IGxpc3RlbkZvciA9IG9wdGlvbnMuZXZlbnRzID8gb3B0aW9ucy5ldmVudHMgOiBbXCJtdXRhdGlvblwiXSwgZXNPcHRpb25zID0ge307XG4gIHJldHVybiB3aXRoQ3JlZGVudGlhbHMgJiYgKGVzT3B0aW9ucy53aXRoQ3JlZGVudGlhbHMgPSAhMCksIHRva2VuICYmIChlc09wdGlvbnMuaGVhZGVycyA9IHtcbiAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YFxuICB9KSwgY29ubmVjdEV2ZW50U291cmNlKCgpID0+IChcbiAgICAvLyB1c2UgcG9seWZpbGwgaWYgdGhlcmUgaXMgbm8gZ2xvYmFsIEV2ZW50U291cmNlIG9yIGlmIHdlIG5lZWQgdG8gc2V0IGhlYWRlcnNcbiAgICAodHlwZW9mIEV2ZW50U291cmNlID4gXCJ1XCIgfHwgZXNPcHRpb25zLmhlYWRlcnMgPyBldmVudFNvdXJjZVBvbHlmaWxsIDogb2YoRXZlbnRTb3VyY2UpKS5waXBlKG1hcCgoRXZlbnRTb3VyY2UyKSA9PiBuZXcgRXZlbnRTb3VyY2UyKHVyaSwgZXNPcHRpb25zKSkpXG4gICksIGxpc3RlbkZvcikucGlwZShcbiAgICByZWNvbm5lY3RPbkNvbm5lY3Rpb25GYWlsdXJlKCksXG4gICAgZmlsdGVyKChldmVudCkgPT4gbGlzdGVuRm9yLmluY2x1ZGVzKGV2ZW50LnR5cGUpKSxcbiAgICBtYXAoXG4gICAgICAoZXZlbnQpID0+ICh7XG4gICAgICAgIHR5cGU6IGV2ZW50LnR5cGUsXG4gICAgICAgIC4uLlwiZGF0YVwiIGluIGV2ZW50ID8gZXZlbnQuZGF0YSA6IHt9XG4gICAgICB9KVxuICAgIClcbiAgKTtcbn1cbmZ1bmN0aW9uIHNoYXJlUmVwbGF5TGF0ZXN0KGNvbmZpZ09yUHJlZGljYXRlLCBjb25maWcpIHtcbiAgcmV0dXJuIF9zaGFyZVJlcGxheUxhdGVzdChcbiAgICB0eXBlb2YgY29uZmlnT3JQcmVkaWNhdGUgPT0gXCJmdW5jdGlvblwiID8geyBwcmVkaWNhdGU6IGNvbmZpZ09yUHJlZGljYXRlLCAuLi5jb25maWcgfSA6IGNvbmZpZ09yUHJlZGljYXRlXG4gICk7XG59XG5mdW5jdGlvbiBfc2hhcmVSZXBsYXlMYXRlc3QoY29uZmlnKSB7XG4gIHJldHVybiAoc291cmNlKSA9PiB7XG4gICAgbGV0IGxhdGVzdCwgZW1pdHRlZCA9ICExO1xuICAgIGNvbnN0IHsgcHJlZGljYXRlLCAuLi5zaGFyZUNvbmZpZyB9ID0gY29uZmlnLCB3cmFwcGVkID0gc291cmNlLnBpcGUoXG4gICAgICB0YXAoKHZhbHVlKSA9PiB7XG4gICAgICAgIGNvbmZpZy5wcmVkaWNhdGUodmFsdWUpICYmIChlbWl0dGVkID0gITAsIGxhdGVzdCA9IHZhbHVlKTtcbiAgICAgIH0pLFxuICAgICAgZmluYWxpemUoKCkgPT4ge1xuICAgICAgICBlbWl0dGVkID0gITEsIGxhdGVzdCA9IHZvaWQgMDtcbiAgICAgIH0pLFxuICAgICAgc2hhcmUoc2hhcmVDb25maWcpXG4gICAgKSwgZW1pdExhdGVzdCA9IG5ldyBPYnNlcnZhYmxlKChzdWJzY3JpYmVyKSA9PiB7XG4gICAgICBlbWl0dGVkICYmIHN1YnNjcmliZXIubmV4dChcbiAgICAgICAgLy8gdGhpcyBjYXN0IGlzIHNhZmUgYmVjYXVzZSBvZiB0aGUgZW1pdHRlZCBjaGVjayB3aGljaCBhc3NlcnRzIHRoYXQgd2UgZ290IFQgZnJvbSB0aGUgc291cmNlXG4gICAgICAgIGxhdGVzdFxuICAgICAgKSwgc3Vic2NyaWJlci5jb21wbGV0ZSgpO1xuICAgIH0pO1xuICAgIHJldHVybiBtZXJnZSh3cmFwcGVkLCBlbWl0TGF0ZXN0KTtcbiAgfTtcbn1cbmNvbnN0IHJlcXVpcmVkQXBpVmVyc2lvbiA9IFwiMjAyMS0wMy0yNVwiO1xuY2xhc3MgTGl2ZUNsaWVudCB7XG4gICNjbGllbnQ7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgIHRoaXMuI2NsaWVudCA9IGNsaWVudDtcbiAgfVxuICAvKipcbiAgICogUmVxdWlyZXMgYGFwaVZlcnNpb25gIHRvIGJlIGAyMDIxLTAzLTI1YCBvciBsYXRlci5cbiAgICovXG4gIGV2ZW50cyh7XG4gICAgaW5jbHVkZURyYWZ0cyA9ICExLFxuICAgIHRhZzogX3RhZ1xuICB9ID0ge30pIHtcbiAgICByZXNvdXJjZUd1YXJkKFwibGl2ZVwiLCB0aGlzLiNjbGllbnQuY29uZmlnKCkpO1xuICAgIGNvbnN0IHtcbiAgICAgIHByb2plY3RJZDogcHJvamVjdElkMixcbiAgICAgIGFwaVZlcnNpb246IF9hcGlWZXJzaW9uLFxuICAgICAgdG9rZW4sXG4gICAgICB3aXRoQ3JlZGVudGlhbHMsXG4gICAgICByZXF1ZXN0VGFnUHJlZml4XG4gICAgfSA9IHRoaXMuI2NsaWVudC5jb25maWcoKSwgYXBpVmVyc2lvbiA9IF9hcGlWZXJzaW9uLnJlcGxhY2UoL152LywgXCJcIik7XG4gICAgaWYgKGFwaVZlcnNpb24gIT09IFwiWFwiICYmIGFwaVZlcnNpb24gPCByZXF1aXJlZEFwaVZlcnNpb24pXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBUaGUgbGl2ZSBldmVudHMgQVBJIHJlcXVpcmVzIEFQSSB2ZXJzaW9uICR7cmVxdWlyZWRBcGlWZXJzaW9ufSBvciBsYXRlci4gVGhlIGN1cnJlbnQgQVBJIHZlcnNpb24gaXMgJHthcGlWZXJzaW9ufS4gUGxlYXNlIHVwZGF0ZSB5b3VyIEFQSSB2ZXJzaW9uIHRvIHVzZSB0aGlzIGZlYXR1cmUuYFxuICAgICAgKTtcbiAgICBpZiAoaW5jbHVkZURyYWZ0cyAmJiAhdG9rZW4gJiYgIXdpdGhDcmVkZW50aWFscylcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJUaGUgbGl2ZSBldmVudHMgQVBJIHJlcXVpcmVzIGEgdG9rZW4gb3Igd2l0aENyZWRlbnRpYWxzIHdoZW4gJ2luY2x1ZGVEcmFmdHM6IHRydWUnLiBQbGVhc2UgdXBkYXRlIHlvdXIgY2xpZW50IGNvbmZpZ3VyYXRpb24uIFRoZSB0b2tlbiBzaG91bGQgaGF2ZSB0aGUgbG93ZXN0IHBvc3NpYmxlIGFjY2VzcyByb2xlLlwiXG4gICAgICApO1xuICAgIGNvbnN0IHBhdGggPSBfZ2V0RGF0YVVybCh0aGlzLiNjbGllbnQsIFwibGl2ZS9ldmVudHNcIiksIHVybCA9IG5ldyBVUkwodGhpcy4jY2xpZW50LmdldFVybChwYXRoLCAhMSkpLCB0YWcgPSBfdGFnICYmIHJlcXVlc3RUYWdQcmVmaXggPyBbcmVxdWVzdFRhZ1ByZWZpeCwgX3RhZ10uam9pbihcIi5cIikgOiBfdGFnO1xuICAgIHRhZyAmJiB1cmwuc2VhcmNoUGFyYW1zLnNldChcInRhZ1wiLCB0YWcpLCBpbmNsdWRlRHJhZnRzICYmIHVybC5zZWFyY2hQYXJhbXMuc2V0KFwiaW5jbHVkZURyYWZ0c1wiLCBcInRydWVcIik7XG4gICAgY29uc3QgZXNPcHRpb25zID0ge307XG4gICAgaW5jbHVkZURyYWZ0cyAmJiB0b2tlbiAmJiAoZXNPcHRpb25zLmhlYWRlcnMgPSB7XG4gICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YFxuICAgIH0pLCBpbmNsdWRlRHJhZnRzICYmIHdpdGhDcmVkZW50aWFscyAmJiAoZXNPcHRpb25zLndpdGhDcmVkZW50aWFscyA9ICEwKTtcbiAgICBjb25zdCBrZXkgPSBgJHt1cmwuaHJlZn06OiR7SlNPTi5zdHJpbmdpZnkoZXNPcHRpb25zKX1gLCBleGlzdGluZyA9IGV2ZW50c0NhY2hlLmdldChrZXkpO1xuICAgIGlmIChleGlzdGluZylcbiAgICAgIHJldHVybiBleGlzdGluZztcbiAgICBjb25zdCBldmVudHMgPSBjb25uZWN0RXZlbnRTb3VyY2UoKCkgPT4gKFxuICAgICAgLy8gdXNlIHBvbHlmaWxsIGlmIHRoZXJlIGlzIG5vIGdsb2JhbCBFdmVudFNvdXJjZSBvciBpZiB3ZSBuZWVkIHRvIHNldCBoZWFkZXJzXG4gICAgICAodHlwZW9mIEV2ZW50U291cmNlID4gXCJ1XCIgfHwgZXNPcHRpb25zLmhlYWRlcnMgPyBldmVudFNvdXJjZVBvbHlmaWxsIDogb2YoRXZlbnRTb3VyY2UpKS5waXBlKG1hcCgoRXZlbnRTb3VyY2UyKSA9PiBuZXcgRXZlbnRTb3VyY2UyKHVybC5ocmVmLCBlc09wdGlvbnMpKSlcbiAgICApLCBbXG4gICAgICBcIm1lc3NhZ2VcIixcbiAgICAgIFwicmVzdGFydFwiLFxuICAgICAgXCJ3ZWxjb21lXCIsXG4gICAgICBcInJlY29ubmVjdFwiLFxuICAgICAgXCJnb2F3YXlcIlxuICAgIF0pLnBpcGUoXG4gICAgICByZWNvbm5lY3RPbkNvbm5lY3Rpb25GYWlsdXJlKCksXG4gICAgICBtYXAoKGV2ZW50KSA9PiB7XG4gICAgICAgIGlmIChldmVudC50eXBlID09PSBcIm1lc3NhZ2VcIikge1xuICAgICAgICAgIGNvbnN0IHsgZGF0YSwgLi4ucmVzdCB9ID0gZXZlbnQ7XG4gICAgICAgICAgcmV0dXJuIHsgLi4ucmVzdCwgdGFnczogZGF0YS50YWdzIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGV2ZW50O1xuICAgICAgfSlcbiAgICApLCBjaGVja0NvcnMgPSBmZXRjaE9ic2VydmFibGUodXJsLCB7XG4gICAgICBtZXRob2Q6IFwiT1BUSU9OU1wiLFxuICAgICAgbW9kZTogXCJjb3JzXCIsXG4gICAgICBjcmVkZW50aWFsczogZXNPcHRpb25zLndpdGhDcmVkZW50aWFscyA/IFwiaW5jbHVkZVwiIDogXCJvbWl0XCIsXG4gICAgICBoZWFkZXJzOiBlc09wdGlvbnMuaGVhZGVyc1xuICAgIH0pLnBpcGUoXG4gICAgICBtZXJnZU1hcCgoKSA9PiBFTVBUWSksXG4gICAgICBjYXRjaEVycm9yKCgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IENvcnNPcmlnaW5FcnJvcih7IHByb2plY3RJZDogcHJvamVjdElkMiB9KTtcbiAgICAgIH0pXG4gICAgKSwgb2JzZXJ2YWJsZTIgPSBjb25jYXQoY2hlY2tDb3JzLCBldmVudHMpLnBpcGUoXG4gICAgICBmaW5hbGl6ZSQxKCgpID0+IGV2ZW50c0NhY2hlLmRlbGV0ZShrZXkpKSxcbiAgICAgIHNoYXJlUmVwbGF5TGF0ZXN0KHtcbiAgICAgICAgcHJlZGljYXRlOiAoZXZlbnQpID0+IGV2ZW50LnR5cGUgPT09IFwid2VsY29tZVwiXG4gICAgICB9KVxuICAgICk7XG4gICAgcmV0dXJuIGV2ZW50c0NhY2hlLnNldChrZXksIG9ic2VydmFibGUyKSwgb2JzZXJ2YWJsZTI7XG4gIH1cbn1cbmZ1bmN0aW9uIGZldGNoT2JzZXJ2YWJsZSh1cmwsIGluaXQpIHtcbiAgcmV0dXJuIG5ldyBPYnNlcnZhYmxlKChvYnNlcnZlcikgPT4ge1xuICAgIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCksIHNpZ25hbCA9IGNvbnRyb2xsZXIuc2lnbmFsO1xuICAgIHJldHVybiBmZXRjaCh1cmwsIHsgLi4uaW5pdCwgc2lnbmFsOiBjb250cm9sbGVyLnNpZ25hbCB9KS50aGVuKFxuICAgICAgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgIG9ic2VydmVyLm5leHQocmVzcG9uc2UpLCBvYnNlcnZlci5jb21wbGV0ZSgpO1xuICAgICAgfSxcbiAgICAgIChlcnIpID0+IHtcbiAgICAgICAgc2lnbmFsLmFib3J0ZWQgfHwgb2JzZXJ2ZXIuZXJyb3IoZXJyKTtcbiAgICAgIH1cbiAgICApLCAoKSA9PiBjb250cm9sbGVyLmFib3J0KCk7XG4gIH0pO1xufVxuY29uc3QgZXZlbnRzQ2FjaGUgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuY2xhc3MgT2JzZXJ2YWJsZURhdGFzZXRzQ2xpZW50IHtcbiAgI2NsaWVudDtcbiAgI2h0dHBSZXF1ZXN0O1xuICBjb25zdHJ1Y3RvcihjbGllbnQsIGh0dHBSZXF1ZXN0KSB7XG4gICAgdGhpcy4jY2xpZW50ID0gY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCA9IGh0dHBSZXF1ZXN0O1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBuZXcgZGF0YXNldCB3aXRoIHRoZSBnaXZlbiBuYW1lXG4gICAqXG4gICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiB0aGUgZGF0YXNldCB0byBjcmVhdGVcbiAgICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIGZvciB0aGUgZGF0YXNldFxuICAgKi9cbiAgY3JlYXRlKG5hbWUsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX21vZGlmeSh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCBcIlBVVFwiLCBuYW1lLCBvcHRpb25zKTtcbiAgfVxuICAvKipcbiAgICogRWRpdCBhIGRhdGFzZXQgd2l0aCB0aGUgZ2l2ZW4gbmFtZVxuICAgKlxuICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgdGhlIGRhdGFzZXQgdG8gZWRpdFxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIE5ldyBvcHRpb25zIGZvciB0aGUgZGF0YXNldFxuICAgKi9cbiAgZWRpdChuYW1lLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIF9tb2RpZnkodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgXCJQQVRDSFwiLCBuYW1lLCBvcHRpb25zKTtcbiAgfVxuICAvKipcbiAgICogRGVsZXRlIGEgZGF0YXNldCB3aXRoIHRoZSBnaXZlbiBuYW1lXG4gICAqXG4gICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiB0aGUgZGF0YXNldCB0byBkZWxldGVcbiAgICovXG4gIGRlbGV0ZShuYW1lKSB7XG4gICAgcmV0dXJuIF9tb2RpZnkodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgXCJERUxFVEVcIiwgbmFtZSk7XG4gIH1cbiAgLyoqXG4gICAqIEZldGNoIGEgbGlzdCBvZiBkYXRhc2V0cyBmb3IgdGhlIGNvbmZpZ3VyZWQgcHJvamVjdFxuICAgKi9cbiAgbGlzdCgpIHtcbiAgICByZXR1cm4gX3JlcXVlc3QodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwge1xuICAgICAgdXJpOiBcIi9kYXRhc2V0c1wiLFxuICAgICAgdGFnOiBudWxsXG4gICAgfSk7XG4gIH1cbn1cbmNsYXNzIERhdGFzZXRzQ2xpZW50IHtcbiAgI2NsaWVudDtcbiAgI2h0dHBSZXF1ZXN0O1xuICBjb25zdHJ1Y3RvcihjbGllbnQsIGh0dHBSZXF1ZXN0KSB7XG4gICAgdGhpcy4jY2xpZW50ID0gY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCA9IGh0dHBSZXF1ZXN0O1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBuZXcgZGF0YXNldCB3aXRoIHRoZSBnaXZlbiBuYW1lXG4gICAqXG4gICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiB0aGUgZGF0YXNldCB0byBjcmVhdGVcbiAgICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIGZvciB0aGUgZGF0YXNldFxuICAgKi9cbiAgY3JlYXRlKG5hbWUsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gcmVzb3VyY2VHdWFyZChcImRhdGFzZXRcIiwgdGhpcy4jY2xpZW50LmNvbmZpZygpKSwgbGFzdFZhbHVlRnJvbShcbiAgICAgIF9tb2RpZnkodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgXCJQVVRcIiwgbmFtZSwgb3B0aW9ucylcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBFZGl0IGEgZGF0YXNldCB3aXRoIHRoZSBnaXZlbiBuYW1lXG4gICAqXG4gICAqIEBwYXJhbSBuYW1lIC0gTmFtZSBvZiB0aGUgZGF0YXNldCB0byBlZGl0XG4gICAqIEBwYXJhbSBvcHRpb25zIC0gTmV3IG9wdGlvbnMgZm9yIHRoZSBkYXRhc2V0XG4gICAqL1xuICBlZGl0KG5hbWUsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gcmVzb3VyY2VHdWFyZChcImRhdGFzZXRcIiwgdGhpcy4jY2xpZW50LmNvbmZpZygpKSwgbGFzdFZhbHVlRnJvbShcbiAgICAgIF9tb2RpZnkodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgXCJQQVRDSFwiLCBuYW1lLCBvcHRpb25zKVxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIERlbGV0ZSBhIGRhdGFzZXQgd2l0aCB0aGUgZ2l2ZW4gbmFtZVxuICAgKlxuICAgKiBAcGFyYW0gbmFtZSAtIE5hbWUgb2YgdGhlIGRhdGFzZXQgdG8gZGVsZXRlXG4gICAqL1xuICBkZWxldGUobmFtZSkge1xuICAgIHJldHVybiByZXNvdXJjZUd1YXJkKFwiZGF0YXNldFwiLCB0aGlzLiNjbGllbnQuY29uZmlnKCkpLCBsYXN0VmFsdWVGcm9tKF9tb2RpZnkodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgXCJERUxFVEVcIiwgbmFtZSkpO1xuICB9XG4gIC8qKlxuICAgKiBGZXRjaCBhIGxpc3Qgb2YgZGF0YXNldHMgZm9yIHRoZSBjb25maWd1cmVkIHByb2plY3RcbiAgICovXG4gIGxpc3QoKSB7XG4gICAgcmV0dXJuIHJlc291cmNlR3VhcmQoXCJkYXRhc2V0XCIsIHRoaXMuI2NsaWVudC5jb25maWcoKSksIGxhc3RWYWx1ZUZyb20oXG4gICAgICBfcmVxdWVzdCh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCB7IHVyaTogXCIvZGF0YXNldHNcIiwgdGFnOiBudWxsIH0pXG4gICAgKTtcbiAgfVxufVxuZnVuY3Rpb24gX21vZGlmeShjbGllbnQsIGh0dHBSZXF1ZXN0LCBtZXRob2QsIG5hbWUsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHJlc291cmNlR3VhcmQoXCJkYXRhc2V0XCIsIGNsaWVudC5jb25maWcoKSksIGRhdGFzZXQobmFtZSksIF9yZXF1ZXN0KGNsaWVudCwgaHR0cFJlcXVlc3QsIHtcbiAgICBtZXRob2QsXG4gICAgdXJpOiBgL2RhdGFzZXRzLyR7bmFtZX1gLFxuICAgIGJvZHk6IG9wdGlvbnMsXG4gICAgdGFnOiBudWxsXG4gIH0pO1xufVxuY2xhc3MgT2JzZXJ2YWJsZVByb2plY3RzQ2xpZW50IHtcbiAgI2NsaWVudDtcbiAgI2h0dHBSZXF1ZXN0O1xuICBjb25zdHJ1Y3RvcihjbGllbnQsIGh0dHBSZXF1ZXN0KSB7XG4gICAgdGhpcy4jY2xpZW50ID0gY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCA9IGh0dHBSZXF1ZXN0O1xuICB9XG4gIGxpc3Qob3B0aW9ucykge1xuICAgIHJlc291cmNlR3VhcmQoXCJwcm9qZWN0c1wiLCB0aGlzLiNjbGllbnQuY29uZmlnKCkpO1xuICAgIGNvbnN0IHVyaSA9IG9wdGlvbnM/LmluY2x1ZGVNZW1iZXJzID09PSAhMSA/IFwiL3Byb2plY3RzP2luY2x1ZGVNZW1iZXJzPWZhbHNlXCIgOiBcIi9wcm9qZWN0c1wiO1xuICAgIHJldHVybiBfcmVxdWVzdCh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCB7IHVyaSB9KTtcbiAgfVxuICAvKipcbiAgICogRmV0Y2ggYSBwcm9qZWN0IGJ5IHByb2plY3QgSURcbiAgICpcbiAgICogQHBhcmFtIHByb2plY3RJZCAtIElEIG9mIHRoZSBwcm9qZWN0IHRvIGZldGNoXG4gICAqL1xuICBnZXRCeUlkKHByb2plY3RJZDIpIHtcbiAgICByZXR1cm4gcmVzb3VyY2VHdWFyZChcInByb2plY3RzXCIsIHRoaXMuI2NsaWVudC5jb25maWcoKSksIF9yZXF1ZXN0KHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIHsgdXJpOiBgL3Byb2plY3RzLyR7cHJvamVjdElkMn1gIH0pO1xuICB9XG59XG5jbGFzcyBQcm9qZWN0c0NsaWVudCB7XG4gICNjbGllbnQ7XG4gICNodHRwUmVxdWVzdDtcbiAgY29uc3RydWN0b3IoY2xpZW50LCBodHRwUmVxdWVzdCkge1xuICAgIHRoaXMuI2NsaWVudCA9IGNsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QgPSBodHRwUmVxdWVzdDtcbiAgfVxuICBsaXN0KG9wdGlvbnMpIHtcbiAgICByZXNvdXJjZUd1YXJkKFwicHJvamVjdHNcIiwgdGhpcy4jY2xpZW50LmNvbmZpZygpKTtcbiAgICBjb25zdCB1cmkgPSBvcHRpb25zPy5pbmNsdWRlTWVtYmVycyA9PT0gITEgPyBcIi9wcm9qZWN0cz9pbmNsdWRlTWVtYmVycz1mYWxzZVwiIDogXCIvcHJvamVjdHNcIjtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShfcmVxdWVzdCh0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCB7IHVyaSB9KSk7XG4gIH1cbiAgLyoqXG4gICAqIEZldGNoIGEgcHJvamVjdCBieSBwcm9qZWN0IElEXG4gICAqXG4gICAqIEBwYXJhbSBwcm9qZWN0SWQgLSBJRCBvZiB0aGUgcHJvamVjdCB0byBmZXRjaFxuICAgKi9cbiAgZ2V0QnlJZChwcm9qZWN0SWQyKSB7XG4gICAgcmV0dXJuIHJlc291cmNlR3VhcmQoXCJwcm9qZWN0c1wiLCB0aGlzLiNjbGllbnQuY29uZmlnKCkpLCBsYXN0VmFsdWVGcm9tKFxuICAgICAgX3JlcXVlc3QodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgeyB1cmk6IGAvcHJvamVjdHMvJHtwcm9qZWN0SWQyfWAgfSlcbiAgICApO1xuICB9XG59XG5jb25zdCBnZW5lcmF0ZVJlbGVhc2VJZCA9IGN1c3RvbUFscGhhYmV0KFxuICBcImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVowMTIzNDU2Nzg5XCIsXG4gIDhcbiksIGdldERvY3VtZW50VmVyc2lvbklkID0gKHB1Ymxpc2hlZElkLCByZWxlYXNlSWQpID0+IHJlbGVhc2VJZCA/IGdldFZlcnNpb25JZChwdWJsaXNoZWRJZCwgcmVsZWFzZUlkKSA6IGdldERyYWZ0SWQocHVibGlzaGVkSWQpO1xuZnVuY3Rpb24gZGVyaXZlRG9jdW1lbnRWZXJzaW9uSWQob3AsIHtcbiAgcmVsZWFzZUlkLFxuICBwdWJsaXNoZWRJZCxcbiAgZG9jdW1lbnRcbn0pIHtcbiAgaWYgKHB1Ymxpc2hlZElkICYmIGRvY3VtZW50Ll9pZCkge1xuICAgIGNvbnN0IHZlcnNpb25JZCA9IGdldERvY3VtZW50VmVyc2lvbklkKHB1Ymxpc2hlZElkLCByZWxlYXNlSWQpO1xuICAgIHJldHVybiB2YWxpZGF0ZVZlcnNpb25JZE1hdGNoKHZlcnNpb25JZCwgZG9jdW1lbnQpLCB2ZXJzaW9uSWQ7XG4gIH1cbiAgaWYgKGRvY3VtZW50Ll9pZCkge1xuICAgIGNvbnN0IGlzRHJhZnQgPSBpc0RyYWZ0SWQoZG9jdW1lbnQuX2lkKSwgaXNWZXJzaW9uID0gaXNWZXJzaW9uSWQoZG9jdW1lbnQuX2lkKTtcbiAgICBpZiAoIWlzRHJhZnQgJiYgIWlzVmVyc2lvbilcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYFxcYCR7b3B9KClcXGAgcmVxdWlyZXMgYSBkb2N1bWVudCB3aXRoIGFuIFxcYF9pZFxcYCB0aGF0IGlzIGEgdmVyc2lvbiBvciBkcmFmdCBJRGBcbiAgICAgICk7XG4gICAgaWYgKHJlbGVhc2VJZCkge1xuICAgICAgaWYgKGlzRHJhZnQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgXFxgJHtvcH0oKVxcYCB3YXMgY2FsbGVkIHdpdGggYSBkb2N1bWVudCBJRCAoXFxgJHtkb2N1bWVudC5faWR9XFxgKSB0aGF0IGlzIGEgZHJhZnQgSUQsIGJ1dCBhIHJlbGVhc2UgSUQgKFxcYCR7cmVsZWFzZUlkfVxcYCkgd2FzIGFsc28gcHJvdmlkZWQuYFxuICAgICAgICApO1xuICAgICAgY29uc3QgYnVpbHRWZXJzaW9uSWQgPSBnZXRWZXJzaW9uRnJvbUlkKGRvY3VtZW50Ll9pZCk7XG4gICAgICBpZiAoYnVpbHRWZXJzaW9uSWQgIT09IHJlbGVhc2VJZClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgIGBcXGAke29wfSgpXFxgIHdhcyBjYWxsZWQgd2l0aCBhIGRvY3VtZW50IElEIChcXGAke2RvY3VtZW50Ll9pZH1cXGApIHRoYXQgaXMgYSB2ZXJzaW9uIElELCBidXQgdGhlIHJlbGVhc2UgSUQgKFxcYCR7cmVsZWFzZUlkfVxcYCkgZG9lcyBub3QgbWF0Y2ggdGhlIGRvY3VtZW50J3MgdmVyc2lvbiBJRCAoXFxgJHtidWlsdFZlcnNpb25JZH1cXGApLmBcbiAgICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIGRvY3VtZW50Ll9pZDtcbiAgfVxuICBpZiAocHVibGlzaGVkSWQpXG4gICAgcmV0dXJuIGdldERvY3VtZW50VmVyc2lvbklkKHB1Ymxpc2hlZElkLCByZWxlYXNlSWQpO1xuICB0aHJvdyBuZXcgRXJyb3IoYFxcYCR7b3B9KClcXGAgcmVxdWlyZXMgZWl0aGVyIGEgcHVibGlzaGVkSWQgb3IgYSBkb2N1bWVudCB3aXRoIGFuIFxcYF9pZFxcYGApO1xufVxuY29uc3QgZ2V0QXJncyA9IChyZWxlYXNlT3JPcHRpb25zLCBtYXliZU9wdGlvbnMpID0+IHtcbiAgaWYgKHR5cGVvZiByZWxlYXNlT3JPcHRpb25zID09IFwib2JqZWN0XCIgJiYgcmVsZWFzZU9yT3B0aW9ucyAhPT0gbnVsbCAmJiAoXCJyZWxlYXNlSWRcIiBpbiByZWxlYXNlT3JPcHRpb25zIHx8IFwibWV0YWRhdGFcIiBpbiByZWxlYXNlT3JPcHRpb25zKSkge1xuICAgIGNvbnN0IHsgcmVsZWFzZUlkID0gZ2VuZXJhdGVSZWxlYXNlSWQoKSwgbWV0YWRhdGEgPSB7fSB9ID0gcmVsZWFzZU9yT3B0aW9ucztcbiAgICByZXR1cm4gW3JlbGVhc2VJZCwgbWV0YWRhdGEsIG1heWJlT3B0aW9uc107XG4gIH1cbiAgcmV0dXJuIFtnZW5lcmF0ZVJlbGVhc2VJZCgpLCB7fSwgcmVsZWFzZU9yT3B0aW9uc107XG59LCBjcmVhdGVSZWxlYXNlID0gKHJlbGVhc2VPck9wdGlvbnMsIG1heWJlT3B0aW9ucykgPT4ge1xuICBjb25zdCBbcmVsZWFzZUlkLCBtZXRhZGF0YSwgb3B0aW9uc10gPSBnZXRBcmdzKHJlbGVhc2VPck9wdGlvbnMsIG1heWJlT3B0aW9ucyksIGZpbmFsTWV0YWRhdGEgPSB7XG4gICAgLi4ubWV0YWRhdGEsXG4gICAgcmVsZWFzZVR5cGU6IG1ldGFkYXRhLnJlbGVhc2VUeXBlIHx8IFwidW5kZWNpZGVkXCJcbiAgfTtcbiAgcmV0dXJuIHsgYWN0aW9uOiB7XG4gICAgYWN0aW9uVHlwZTogXCJzYW5pdHkuYWN0aW9uLnJlbGVhc2UuY3JlYXRlXCIsXG4gICAgcmVsZWFzZUlkLFxuICAgIG1ldGFkYXRhOiBmaW5hbE1ldGFkYXRhXG4gIH0sIG9wdGlvbnMgfTtcbn07XG5jbGFzcyBPYnNlcnZhYmxlUmVsZWFzZXNDbGllbnQge1xuICAjY2xpZW50O1xuICAjaHR0cFJlcXVlc3Q7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCwgaHR0cFJlcXVlc3QpIHtcbiAgICB0aGlzLiNjbGllbnQgPSBjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0ID0gaHR0cFJlcXVlc3Q7XG4gIH1cbiAgLyoqXG4gICAqIEBwdWJsaWNcbiAgICpcbiAgICogUmV0cmlldmUgYSByZWxlYXNlIGJ5IGlkLlxuICAgKlxuICAgKiBAY2F0ZWdvcnkgUmVsZWFzZXNcbiAgICpcbiAgICogQHBhcmFtIHBhcmFtcyAtIFJlbGVhc2UgYWN0aW9uIHBhcmFtZXRlcnM6XG4gICAqICAgLSBgcmVsZWFzZUlkYCAtIFRoZSBpZCBvZiB0aGUgcmVsZWFzZSB0byByZXRyaWV2ZS5cbiAgICogQHBhcmFtIG9wdGlvbnMgLSBBZGRpdGlvbmFsIHF1ZXJ5IG9wdGlvbnMgaW5jbHVkaW5nIGFib3J0IHNpZ25hbCBhbmQgcXVlcnkgdGFnLlxuICAgKiBAcmV0dXJucyBBbiBvYnNlcnZhYmxlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIHJlbGVhc2UgZG9jdW1lbnQge0BsaW5rIFJlbGVhc2VEb2N1bWVudH0uXG4gICAqXG4gICAqIEBleGFtcGxlIFJldHJpZXZpbmcgYSByZWxlYXNlIGJ5IGlkXG4gICAqIGBgYHRzXG4gICAqIGNsaWVudC5vYnNlcnZhYmxlLnJlbGVhc2VzLmdldCh7cmVsZWFzZUlkOiAnbXktcmVsZWFzZSd9KS5waXBlKFxuICAgKiAgIHRhcCgocmVsZWFzZSkgPT4gY29uc29sZS5sb2cocmVsZWFzZSkpLFxuICAgKiAgIC8vIHtcbiAgICogICAvLyAgIF9pZDogJ18ucmVsZWFzZXMubXktcmVsZWFzZScsXG4gICAqICAgLy8gICBuYW1lOiAnbXktcmVsZWFzZSdcbiAgICogICAvLyAgIF90eXBlOiAnc3lzdGVtLnJlbGVhc2UnLFxuICAgKiAgIC8vICAgbWV0YWRhdGE6IHtyZWxlYXNlVHlwZTogJ2FzYXAnfSxcbiAgICogICAvLyAgIF9jcmVhdGVkQXQ6ICcyMDIxLTAxLTAxVDAwOjAwOjAwLjAwMFonLFxuICAgKiAgIC8vICAgLi4uXG4gICAqICAgLy8gfVxuICAgKiApLnN1YnNjcmliZSgpXG4gICAqIGBgYFxuICAgKi9cbiAgZ2V0KHsgcmVsZWFzZUlkIH0sIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX2dldERvY3VtZW50KFxuICAgICAgdGhpcy4jY2xpZW50LFxuICAgICAgdGhpcy4jaHR0cFJlcXVlc3QsXG4gICAgICBgXy5yZWxlYXNlcy4ke3JlbGVhc2VJZH1gLFxuICAgICAgb3B0aW9uc1xuICAgICk7XG4gIH1cbiAgY3JlYXRlKHJlbGVhc2VPck9wdGlvbnMsIG1heWJlT3B0aW9ucykge1xuICAgIGNvbnN0IHsgYWN0aW9uLCBvcHRpb25zIH0gPSBjcmVhdGVSZWxlYXNlKHJlbGVhc2VPck9wdGlvbnMsIG1heWJlT3B0aW9ucyksIHsgcmVsZWFzZUlkLCBtZXRhZGF0YSB9ID0gYWN0aW9uO1xuICAgIHJldHVybiBfYWN0aW9uKHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIGFjdGlvbiwgb3B0aW9ucykucGlwZShcbiAgICAgIG1hcCQxKChhY3Rpb25SZXN1bHQpID0+ICh7XG4gICAgICAgIC4uLmFjdGlvblJlc3VsdCxcbiAgICAgICAgcmVsZWFzZUlkLFxuICAgICAgICBtZXRhZGF0YVxuICAgICAgfSkpXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogQHB1YmxpY1xuICAgKlxuICAgKiBFZGl0cyBhbiBleGlzdGluZyByZWxlYXNlLCB1cGRhdGluZyB0aGUgbWV0YWRhdGEuXG4gICAqXG4gICAqIEBjYXRlZ29yeSBSZWxlYXNlc1xuICAgKlxuICAgKiBAcGFyYW0gcGFyYW1zIC0gUmVsZWFzZSBhY3Rpb24gcGFyYW1ldGVyczpcbiAgICogICAtIGByZWxlYXNlSWRgIC0gVGhlIGlkIG9mIHRoZSByZWxlYXNlIHRvIGVkaXQuXG4gICAqICAgLSBgcGF0Y2hgIC0gVGhlIHBhdGNoIG9wZXJhdGlvbiB0byBhcHBseSBvbiB0aGUgcmVsZWFzZSBtZXRhZGF0YSB7QGxpbmsgUGF0Y2hNdXRhdGlvbk9wZXJhdGlvbn0uXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQWRkaXRpb25hbCBhY3Rpb24gb3B0aW9ucy5cbiAgICogQHJldHVybnMgQW4gb2JzZXJ2YWJsZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBgdHJhbnNhY3Rpb25JZGAuXG4gICAqL1xuICBlZGl0KHsgcmVsZWFzZUlkLCBwYXRjaCB9LCBvcHRpb25zKSB7XG4gICAgY29uc3QgZWRpdEFjdGlvbiA9IHtcbiAgICAgIGFjdGlvblR5cGU6IFwic2FuaXR5LmFjdGlvbi5yZWxlYXNlLmVkaXRcIixcbiAgICAgIHJlbGVhc2VJZCxcbiAgICAgIHBhdGNoXG4gICAgfTtcbiAgICByZXR1cm4gX2FjdGlvbih0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCBlZGl0QWN0aW9uLCBvcHRpb25zKTtcbiAgfVxuICAvKipcbiAgICogQHB1YmxpY1xuICAgKlxuICAgKiBQdWJsaXNoZXMgYWxsIGRvY3VtZW50cyBpbiBhIHJlbGVhc2UgYXQgb25jZS4gRm9yIGxhcmdlciByZWxlYXNlcyB0aGUgZWZmZWN0IG9mIHRoZSBwdWJsaXNoXG4gICAqIHdpbGwgYmUgdmlzaWJsZSBpbW1lZGlhdGVseSB3aGVuIHF1ZXJ5aW5nIGJ1dCB0aGUgcmVtb3ZhbCBvZiB0aGUgYHZlcnNpb25zLjxyZWxlYXNlc0lkPi4qYFxuICAgKiBkb2N1bWVudHMgYW5kIGNyZWF0aW9uIG9mIHRoZSBjb3JyZXNwb25kaW5nIHB1Ymxpc2hlZCBkb2N1bWVudHMgd2l0aCB0aGUgbmV3IGNvbnRlbnQgbWF5XG4gICAqIHRha2Ugc29tZSB0aW1lLlxuICAgKlxuICAgKiBEdXJpbmcgdGhpcyBwZXJpb2QgYm90aCB0aGUgc291cmNlIGFuZCB0YXJnZXQgZG9jdW1lbnRzIGFyZSBsb2NrZWQgYW5kIGNhbm5vdCBiZVxuICAgKiBtb2RpZmllZCB0aHJvdWdoIGFueSBvdGhlciBtZWFucy5cbiAgICpcbiAgICogQGNhdGVnb3J5IFJlbGVhc2VzXG4gICAqXG4gICAqIEBwYXJhbSBwYXJhbXMgLSBSZWxlYXNlIGFjdGlvbiBwYXJhbWV0ZXJzOlxuICAgKiAgIC0gYHJlbGVhc2VJZGAgLSBUaGUgaWQgb2YgdGhlIHJlbGVhc2UgdG8gcHVibGlzaC5cbiAgICogQHBhcmFtIG9wdGlvbnMgLSBBZGRpdGlvbmFsIGFjdGlvbiBvcHRpb25zLlxuICAgKiBAcmV0dXJucyBBbiBvYnNlcnZhYmxlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGB0cmFuc2FjdGlvbklkYC5cbiAgICovXG4gIHB1Ymxpc2goeyByZWxlYXNlSWQgfSwgb3B0aW9ucykge1xuICAgIGNvbnN0IHB1Ymxpc2hBY3Rpb24gPSB7XG4gICAgICBhY3Rpb25UeXBlOiBcInNhbml0eS5hY3Rpb24ucmVsZWFzZS5wdWJsaXNoXCIsXG4gICAgICByZWxlYXNlSWRcbiAgICB9O1xuICAgIHJldHVybiBfYWN0aW9uKHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIHB1Ymxpc2hBY3Rpb24sIG9wdGlvbnMpO1xuICB9XG4gIC8qKlxuICAgKiBAcHVibGljXG4gICAqXG4gICAqIEFuIGFyY2hpdmUgYWN0aW9uIHJlbW92ZXMgYW4gYWN0aXZlIHJlbGVhc2UuIFRoZSBkb2N1bWVudHMgdGhhdCBjb21wcmlzZSB0aGUgcmVsZWFzZVxuICAgKiBhcmUgZGVsZXRlZCBhbmQgdGhlcmVmb3JlIG5vIGxvbmdlciBxdWVyeWFibGUuXG4gICAqXG4gICAqIFdoaWxlIHRoZSBkb2N1bWVudHMgcmVtYWluIGluIHJldGVudGlvbiB0aGUgbGFzdCB2ZXJzaW9uIGNhbiBzdGlsbCBiZSBhY2Nlc3NlZCB1c2luZyBkb2N1bWVudCBoaXN0b3J5IGVuZHBvaW50LlxuICAgKlxuICAgKiBAY2F0ZWdvcnkgUmVsZWFzZXNcbiAgICpcbiAgICogQHBhcmFtIHBhcmFtcyAtIFJlbGVhc2UgYWN0aW9uIHBhcmFtZXRlcnM6XG4gICAqICAgLSBgcmVsZWFzZUlkYCAtIFRoZSBpZCBvZiB0aGUgcmVsZWFzZSB0byBhcmNoaXZlLlxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIEFkZGl0aW9uYWwgYWN0aW9uIG9wdGlvbnMuXG4gICAqIEByZXR1cm5zIEFuIG9ic2VydmFibGUgdGhhdCByZXNvbHZlcyB0byB0aGUgYHRyYW5zYWN0aW9uSWRgLlxuICAgKi9cbiAgYXJjaGl2ZSh7IHJlbGVhc2VJZCB9LCBvcHRpb25zKSB7XG4gICAgY29uc3QgYXJjaGl2ZUFjdGlvbiA9IHtcbiAgICAgIGFjdGlvblR5cGU6IFwic2FuaXR5LmFjdGlvbi5yZWxlYXNlLmFyY2hpdmVcIixcbiAgICAgIHJlbGVhc2VJZFxuICAgIH07XG4gICAgcmV0dXJuIF9hY3Rpb24odGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgYXJjaGl2ZUFjdGlvbiwgb3B0aW9ucyk7XG4gIH1cbiAgLyoqXG4gICAqIEBwdWJsaWNcbiAgICpcbiAgICogQW4gdW5hcmNoaXZlIGFjdGlvbiByZXN0b3JlcyBhbiBhcmNoaXZlZCByZWxlYXNlIGFuZCBhbGwgZG9jdW1lbnRzXG4gICAqIHdpdGggdGhlIGNvbnRlbnQgdGhleSBoYWQganVzdCBwcmlvciB0byBhcmNoaXZpbmcuXG4gICAqXG4gICAqIEBjYXRlZ29yeSBSZWxlYXNlc1xuICAgKlxuICAgKiBAcGFyYW0gcGFyYW1zIC0gUmVsZWFzZSBhY3Rpb24gcGFyYW1ldGVyczpcbiAgICogICAtIGByZWxlYXNlSWRgIC0gVGhlIGlkIG9mIHRoZSByZWxlYXNlIHRvIHVuYXJjaGl2ZS5cbiAgICogQHBhcmFtIG9wdGlvbnMgLSBBZGRpdGlvbmFsIGFjdGlvbiBvcHRpb25zLlxuICAgKiBAcmV0dXJucyBBbiBvYnNlcnZhYmxlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGB0cmFuc2FjdGlvbklkYC5cbiAgICovXG4gIHVuYXJjaGl2ZSh7IHJlbGVhc2VJZCB9LCBvcHRpb25zKSB7XG4gICAgY29uc3QgdW5hcmNoaXZlQWN0aW9uID0ge1xuICAgICAgYWN0aW9uVHlwZTogXCJzYW5pdHkuYWN0aW9uLnJlbGVhc2UudW5hcmNoaXZlXCIsXG4gICAgICByZWxlYXNlSWRcbiAgICB9O1xuICAgIHJldHVybiBfYWN0aW9uKHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIHVuYXJjaGl2ZUFjdGlvbiwgb3B0aW9ucyk7XG4gIH1cbiAgLyoqXG4gICAqIEBwdWJsaWNcbiAgICpcbiAgICogQSBzY2hlZHVsZSBhY3Rpb24gcXVldWVzIGEgcmVsZWFzZSBmb3IgcHVibGlzaGluZyBhdCB0aGUgZ2l2ZW4gZnV0dXJlIHRpbWUuXG4gICAqIFRoZSByZWxlYXNlIGlzIGxvY2tlZCBzdWNoIHRoYXQgbm8gZG9jdW1lbnRzIGluIHRoZSByZWxlYXNlIGNhbiBiZSBtb2RpZmllZCBhbmRcbiAgICogbm8gZG9jdW1lbnRzIHRoYXQgaXQgcmVmZXJlbmNlcyBjYW4gYmUgZGVsZXRlZCBhcyB0aGlzIHdvdWxkIG1ha2UgdGhlIHB1Ymxpc2ggZmFpbC5cbiAgICogQXQgdGhlIGdpdmVuIHRpbWUsIHRoZSBzYW1lIGxvZ2ljIGFzIGZvciB0aGUgcHVibGlzaCBhY3Rpb24gaXMgdHJpZ2dlcmVkLlxuICAgKlxuICAgKiBAY2F0ZWdvcnkgUmVsZWFzZXNcbiAgICpcbiAgICogQHBhcmFtIHBhcmFtcyAtIFJlbGVhc2UgYWN0aW9uIHBhcmFtZXRlcnM6XG4gICAqICAgLSBgcmVsZWFzZUlkYCAtIFRoZSBpZCBvZiB0aGUgcmVsZWFzZSB0byBzY2hlZHVsZS5cbiAgICogICAtIGBwdWJsaXNoQXRgIC0gVGhlIHNlcmlhbGlzZWQgZGF0ZSBhbmQgdGltZSB0byBwdWJsaXNoIHRoZSByZWxlYXNlLiBJZiB0aGUgYHB1Ymxpc2hBdGAgaXMgaW4gdGhlIHBhc3QsIHRoZSByZWxlYXNlIHdpbGwgYmUgcHVibGlzaGVkIGltbWVkaWF0ZWx5LlxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIEFkZGl0aW9uYWwgYWN0aW9uIG9wdGlvbnMuXG4gICAqIEByZXR1cm5zIEFuIG9ic2VydmFibGUgdGhhdCByZXNvbHZlcyB0byB0aGUgYHRyYW5zYWN0aW9uSWRgLlxuICAgKi9cbiAgc2NoZWR1bGUoeyByZWxlYXNlSWQsIHB1Ymxpc2hBdCB9LCBvcHRpb25zKSB7XG4gICAgY29uc3Qgc2NoZWR1bGVBY3Rpb24gPSB7XG4gICAgICBhY3Rpb25UeXBlOiBcInNhbml0eS5hY3Rpb24ucmVsZWFzZS5zY2hlZHVsZVwiLFxuICAgICAgcmVsZWFzZUlkLFxuICAgICAgcHVibGlzaEF0XG4gICAgfTtcbiAgICByZXR1cm4gX2FjdGlvbih0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCBzY2hlZHVsZUFjdGlvbiwgb3B0aW9ucyk7XG4gIH1cbiAgLyoqXG4gICAqIEBwdWJsaWNcbiAgICpcbiAgICogQW4gdW5zY2hlZHVsZSBhY3Rpb24gc3RvcHMgYSByZWxlYXNlIGZyb20gYmVpbmcgcHVibGlzaGVkLlxuICAgKiBUaGUgZG9jdW1lbnRzIGluIHRoZSByZWxlYXNlIGFyZSBjb25zaWRlcmVkIHVubG9ja2VkIGFuZCBjYW4gYmUgZWRpdGVkIGFnYWluLlxuICAgKiBUaGlzIG1heSBmYWlsIGlmIGFub3RoZXIgcmVsZWFzZSBpcyBzY2hlZHVsZWQgdG8gYmUgcHVibGlzaGVkIGFmdGVyIHRoaXMgb25lIGFuZFxuICAgKiBoYXMgYSByZWZlcmVuY2UgdG8gYSBkb2N1bWVudCBjcmVhdGVkIGJ5IHRoaXMgb25lLlxuICAgKlxuICAgKiBAY2F0ZWdvcnkgUmVsZWFzZXNcbiAgICpcbiAgICogQHBhcmFtIHBhcmFtcyAtIFJlbGVhc2UgYWN0aW9uIHBhcmFtZXRlcnM6XG4gICAqICAgLSBgcmVsZWFzZUlkYCAtIFRoZSBpZCBvZiB0aGUgcmVsZWFzZSB0byB1bnNjaGVkdWxlLlxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIEFkZGl0aW9uYWwgYWN0aW9uIG9wdGlvbnMuXG4gICAqIEByZXR1cm5zIEFuIG9ic2VydmFibGUgdGhhdCByZXNvbHZlcyB0byB0aGUgYHRyYW5zYWN0aW9uSWRgLlxuICAgKi9cbiAgdW5zY2hlZHVsZSh7IHJlbGVhc2VJZCB9LCBvcHRpb25zKSB7XG4gICAgY29uc3QgdW5zY2hlZHVsZUFjdGlvbiA9IHtcbiAgICAgIGFjdGlvblR5cGU6IFwic2FuaXR5LmFjdGlvbi5yZWxlYXNlLnVuc2NoZWR1bGVcIixcbiAgICAgIHJlbGVhc2VJZFxuICAgIH07XG4gICAgcmV0dXJuIF9hY3Rpb24odGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgdW5zY2hlZHVsZUFjdGlvbiwgb3B0aW9ucyk7XG4gIH1cbiAgLyoqXG4gICAqIEBwdWJsaWNcbiAgICpcbiAgICogQSBkZWxldGUgYWN0aW9uIHJlbW92ZXMgYSBwdWJsaXNoZWQgb3IgYXJjaGl2ZWQgcmVsZWFzZS5cbiAgICogVGhlIGJhY2tpbmcgc3lzdGVtIGRvY3VtZW50IHdpbGwgYmUgcmVtb3ZlZCBmcm9tIHRoZSBkYXRhc2V0LlxuICAgKlxuICAgKiBAY2F0ZWdvcnkgUmVsZWFzZXNcbiAgICpcbiAgICogQHBhcmFtIHBhcmFtcyAtIFJlbGVhc2UgYWN0aW9uIHBhcmFtZXRlcnM6XG4gICAqICAgLSBgcmVsZWFzZUlkYCAtIFRoZSBpZCBvZiB0aGUgcmVsZWFzZSB0byBkZWxldGUuXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQWRkaXRpb25hbCBhY3Rpb24gb3B0aW9ucy5cbiAgICogQHJldHVybnMgQW4gb2JzZXJ2YWJsZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBgdHJhbnNhY3Rpb25JZGAuXG4gICAqL1xuICBkZWxldGUoeyByZWxlYXNlSWQgfSwgb3B0aW9ucykge1xuICAgIGNvbnN0IGRlbGV0ZUFjdGlvbiA9IHtcbiAgICAgIGFjdGlvblR5cGU6IFwic2FuaXR5LmFjdGlvbi5yZWxlYXNlLmRlbGV0ZVwiLFxuICAgICAgcmVsZWFzZUlkXG4gICAgfTtcbiAgICByZXR1cm4gX2FjdGlvbih0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCBkZWxldGVBY3Rpb24sIG9wdGlvbnMpO1xuICB9XG4gIC8qKlxuICAgKiBAcHVibGljXG4gICAqXG4gICAqIEZldGNoIHRoZSBkb2N1bWVudHMgaW4gYSByZWxlYXNlIGJ5IHJlbGVhc2UgaWQuXG4gICAqXG4gICAqIEBjYXRlZ29yeSBSZWxlYXNlc1xuICAgKlxuICAgKiBAcGFyYW0gcGFyYW1zIC0gUmVsZWFzZSBhY3Rpb24gcGFyYW1ldGVyczpcbiAgICogICAtIGByZWxlYXNlSWRgIC0gVGhlIGlkIG9mIHRoZSByZWxlYXNlIHRvIGZldGNoIGRvY3VtZW50cyBmb3IuXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQWRkaXRpb25hbCBtdXRhdGlvbiBvcHRpb25zIHtAbGluayBCYXNlTXV0YXRpb25PcHRpb25zfS5cbiAgICogQHJldHVybnMgQW4gb2JzZXJ2YWJsZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBkb2N1bWVudHMgaW4gdGhlIHJlbGVhc2UuXG4gICAqL1xuICBmZXRjaERvY3VtZW50cyh7IHJlbGVhc2VJZCB9LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIF9nZXRSZWxlYXNlRG9jdW1lbnRzKHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIHJlbGVhc2VJZCwgb3B0aW9ucyk7XG4gIH1cbn1cbmNsYXNzIFJlbGVhc2VzQ2xpZW50IHtcbiAgI2NsaWVudDtcbiAgI2h0dHBSZXF1ZXN0O1xuICBjb25zdHJ1Y3RvcihjbGllbnQsIGh0dHBSZXF1ZXN0KSB7XG4gICAgdGhpcy4jY2xpZW50ID0gY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCA9IGh0dHBSZXF1ZXN0O1xuICB9XG4gIC8qKlxuICAgKiBAcHVibGljXG4gICAqXG4gICAqIFJldHJpZXZlIGEgcmVsZWFzZSBieSBpZC5cbiAgICpcbiAgICogQGNhdGVnb3J5IFJlbGVhc2VzXG4gICAqXG4gICAqIEBwYXJhbSBwYXJhbXMgLSBSZWxlYXNlIGFjdGlvbiBwYXJhbWV0ZXJzOlxuICAgKiAgIC0gYHJlbGVhc2VJZGAgLSBUaGUgaWQgb2YgdGhlIHJlbGVhc2UgdG8gcmV0cmlldmUuXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQWRkaXRpb25hbCBxdWVyeSBvcHRpb25zIGluY2x1ZGluZyBhYm9ydCBzaWduYWwgYW5kIHF1ZXJ5IHRhZy5cbiAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIHJlbGVhc2UgZG9jdW1lbnQge0BsaW5rIFJlbGVhc2VEb2N1bWVudH0uXG4gICAqXG4gICAqIEBleGFtcGxlIFJldHJpZXZpbmcgYSByZWxlYXNlIGJ5IGlkXG4gICAqIGBgYHRzXG4gICAqIGNvbnN0IHJlbGVhc2UgPSBhd2FpdCBjbGllbnQucmVsZWFzZXMuZ2V0KHtyZWxlYXNlSWQ6ICdteS1yZWxlYXNlJ30pXG4gICAqIGNvbnNvbGUubG9nKHJlbGVhc2UpXG4gICAqIC8vIHtcbiAgICogLy8gICBfaWQ6ICdfLnJlbGVhc2VzLm15LXJlbGVhc2UnLFxuICAgKiAvLyAgIG5hbWU6ICdteS1yZWxlYXNlJ1xuICAgKiAvLyAgIF90eXBlOiAnc3lzdGVtLnJlbGVhc2UnLFxuICAgKiAvLyAgIG1ldGFkYXRhOiB7cmVsZWFzZVR5cGU6ICdhc2FwJ30sXG4gICAqIC8vICAgX2NyZWF0ZWRBdDogJzIwMjEtMDEtMDFUMDA6MDA6MDAuMDAwWicsXG4gICAqIC8vICAgLi4uXG4gICAqIC8vIH1cbiAgICogYGBgXG4gICAqL1xuICBnZXQoeyByZWxlYXNlSWQgfSwgb3B0aW9ucykge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKFxuICAgICAgX2dldERvY3VtZW50KFxuICAgICAgICB0aGlzLiNjbGllbnQsXG4gICAgICAgIHRoaXMuI2h0dHBSZXF1ZXN0LFxuICAgICAgICBgXy5yZWxlYXNlcy4ke3JlbGVhc2VJZH1gLFxuICAgICAgICBvcHRpb25zXG4gICAgICApXG4gICAgKTtcbiAgfVxuICBhc3luYyBjcmVhdGUocmVsZWFzZU9yT3B0aW9ucywgbWF5YmVPcHRpb25zKSB7XG4gICAgY29uc3QgeyBhY3Rpb24sIG9wdGlvbnMgfSA9IGNyZWF0ZVJlbGVhc2UocmVsZWFzZU9yT3B0aW9ucywgbWF5YmVPcHRpb25zKSwgeyByZWxlYXNlSWQsIG1ldGFkYXRhIH0gPSBhY3Rpb247XG4gICAgcmV0dXJuIHsgLi4uYXdhaXQgbGFzdFZhbHVlRnJvbShcbiAgICAgIF9hY3Rpb24odGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgYWN0aW9uLCBvcHRpb25zKVxuICAgICksIHJlbGVhc2VJZCwgbWV0YWRhdGEgfTtcbiAgfVxuICAvKipcbiAgICogQHB1YmxpY1xuICAgKlxuICAgKiBFZGl0cyBhbiBleGlzdGluZyByZWxlYXNlLCB1cGRhdGluZyB0aGUgbWV0YWRhdGEuXG4gICAqXG4gICAqIEBjYXRlZ29yeSBSZWxlYXNlc1xuICAgKlxuICAgKiBAcGFyYW0gcGFyYW1zIC0gUmVsZWFzZSBhY3Rpb24gcGFyYW1ldGVyczpcbiAgICogICAtIGByZWxlYXNlSWRgIC0gVGhlIGlkIG9mIHRoZSByZWxlYXNlIHRvIGVkaXQuXG4gICAqICAgLSBgcGF0Y2hgIC0gVGhlIHBhdGNoIG9wZXJhdGlvbiB0byBhcHBseSBvbiB0aGUgcmVsZWFzZSBtZXRhZGF0YSB7QGxpbmsgUGF0Y2hNdXRhdGlvbk9wZXJhdGlvbn0uXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQWRkaXRpb25hbCBhY3Rpb24gb3B0aW9ucy5cbiAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGB0cmFuc2FjdGlvbklkYC5cbiAgICovXG4gIGVkaXQoeyByZWxlYXNlSWQsIHBhdGNoIH0sIG9wdGlvbnMpIHtcbiAgICBjb25zdCBlZGl0QWN0aW9uID0ge1xuICAgICAgYWN0aW9uVHlwZTogXCJzYW5pdHkuYWN0aW9uLnJlbGVhc2UuZWRpdFwiLFxuICAgICAgcmVsZWFzZUlkLFxuICAgICAgcGF0Y2hcbiAgICB9O1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKF9hY3Rpb24odGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgZWRpdEFjdGlvbiwgb3B0aW9ucykpO1xuICB9XG4gIC8qKlxuICAgKiBAcHVibGljXG4gICAqXG4gICAqIFB1Ymxpc2hlcyBhbGwgZG9jdW1lbnRzIGluIGEgcmVsZWFzZSBhdCBvbmNlLiBGb3IgbGFyZ2VyIHJlbGVhc2VzIHRoZSBlZmZlY3Qgb2YgdGhlIHB1Ymxpc2hcbiAgICogd2lsbCBiZSB2aXNpYmxlIGltbWVkaWF0ZWx5IHdoZW4gcXVlcnlpbmcgYnV0IHRoZSByZW1vdmFsIG9mIHRoZSBgdmVyc2lvbnMuPHJlbGVhc2VzSWQ+LipgXG4gICAqIGRvY3VtZW50cyBhbmQgY3JlYXRpb24gb2YgdGhlIGNvcnJlc3BvbmRpbmcgcHVibGlzaGVkIGRvY3VtZW50cyB3aXRoIHRoZSBuZXcgY29udGVudCBtYXlcbiAgICogdGFrZSBzb21lIHRpbWUuXG4gICAqXG4gICAqIER1cmluZyB0aGlzIHBlcmlvZCBib3RoIHRoZSBzb3VyY2UgYW5kIHRhcmdldCBkb2N1bWVudHMgYXJlIGxvY2tlZCBhbmQgY2Fubm90IGJlXG4gICAqIG1vZGlmaWVkIHRocm91Z2ggYW55IG90aGVyIG1lYW5zLlxuICAgKlxuICAgKiBAY2F0ZWdvcnkgUmVsZWFzZXNcbiAgICpcbiAgICogQHBhcmFtIHBhcmFtcyAtIFJlbGVhc2UgYWN0aW9uIHBhcmFtZXRlcnM6XG4gICAqICAgLSBgcmVsZWFzZUlkYCAtIFRoZSBpZCBvZiB0aGUgcmVsZWFzZSB0byBwdWJsaXNoLlxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIEFkZGl0aW9uYWwgYWN0aW9uIG9wdGlvbnMuXG4gICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBgdHJhbnNhY3Rpb25JZGAuXG4gICAqL1xuICBwdWJsaXNoKHsgcmVsZWFzZUlkIH0sIG9wdGlvbnMpIHtcbiAgICBjb25zdCBwdWJsaXNoQWN0aW9uID0ge1xuICAgICAgYWN0aW9uVHlwZTogXCJzYW5pdHkuYWN0aW9uLnJlbGVhc2UucHVibGlzaFwiLFxuICAgICAgcmVsZWFzZUlkXG4gICAgfTtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShfYWN0aW9uKHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIHB1Ymxpc2hBY3Rpb24sIG9wdGlvbnMpKTtcbiAgfVxuICAvKipcbiAgICogQHB1YmxpY1xuICAgKlxuICAgKiBBbiBhcmNoaXZlIGFjdGlvbiByZW1vdmVzIGFuIGFjdGl2ZSByZWxlYXNlLiBUaGUgZG9jdW1lbnRzIHRoYXQgY29tcHJpc2UgdGhlIHJlbGVhc2VcbiAgICogYXJlIGRlbGV0ZWQgYW5kIHRoZXJlZm9yZSBubyBsb25nZXIgcXVlcnlhYmxlLlxuICAgKlxuICAgKiBXaGlsZSB0aGUgZG9jdW1lbnRzIHJlbWFpbiBpbiByZXRlbnRpb24gdGhlIGxhc3QgdmVyc2lvbiBjYW4gc3RpbGwgYmUgYWNjZXNzZWQgdXNpbmcgZG9jdW1lbnQgaGlzdG9yeSBlbmRwb2ludC5cbiAgICpcbiAgICogQGNhdGVnb3J5IFJlbGVhc2VzXG4gICAqXG4gICAqIEBwYXJhbSBwYXJhbXMgLSBSZWxlYXNlIGFjdGlvbiBwYXJhbWV0ZXJzOlxuICAgKiAgIC0gYHJlbGVhc2VJZGAgLSBUaGUgaWQgb2YgdGhlIHJlbGVhc2UgdG8gYXJjaGl2ZS5cbiAgICogQHBhcmFtIG9wdGlvbnMgLSBBZGRpdGlvbmFsIGFjdGlvbiBvcHRpb25zLlxuICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgYHRyYW5zYWN0aW9uSWRgLlxuICAgKi9cbiAgYXJjaGl2ZSh7IHJlbGVhc2VJZCB9LCBvcHRpb25zKSB7XG4gICAgY29uc3QgYXJjaGl2ZUFjdGlvbiA9IHtcbiAgICAgIGFjdGlvblR5cGU6IFwic2FuaXR5LmFjdGlvbi5yZWxlYXNlLmFyY2hpdmVcIixcbiAgICAgIHJlbGVhc2VJZFxuICAgIH07XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oX2FjdGlvbih0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCBhcmNoaXZlQWN0aW9uLCBvcHRpb25zKSk7XG4gIH1cbiAgLyoqXG4gICAqIEBwdWJsaWNcbiAgICpcbiAgICogQW4gdW5hcmNoaXZlIGFjdGlvbiByZXN0b3JlcyBhbiBhcmNoaXZlZCByZWxlYXNlIGFuZCBhbGwgZG9jdW1lbnRzXG4gICAqIHdpdGggdGhlIGNvbnRlbnQgdGhleSBoYWQganVzdCBwcmlvciB0byBhcmNoaXZpbmcuXG4gICAqXG4gICAqIEBjYXRlZ29yeSBSZWxlYXNlc1xuICAgKlxuICAgKiBAcGFyYW0gcGFyYW1zIC0gUmVsZWFzZSBhY3Rpb24gcGFyYW1ldGVyczpcbiAgICogICAtIGByZWxlYXNlSWRgIC0gVGhlIGlkIG9mIHRoZSByZWxlYXNlIHRvIHVuYXJjaGl2ZS5cbiAgICogQHBhcmFtIG9wdGlvbnMgLSBBZGRpdGlvbmFsIGFjdGlvbiBvcHRpb25zLlxuICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgYHRyYW5zYWN0aW9uSWRgLlxuICAgKi9cbiAgdW5hcmNoaXZlKHsgcmVsZWFzZUlkIH0sIG9wdGlvbnMpIHtcbiAgICBjb25zdCB1bmFyY2hpdmVBY3Rpb24gPSB7XG4gICAgICBhY3Rpb25UeXBlOiBcInNhbml0eS5hY3Rpb24ucmVsZWFzZS51bmFyY2hpdmVcIixcbiAgICAgIHJlbGVhc2VJZFxuICAgIH07XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oX2FjdGlvbih0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCB1bmFyY2hpdmVBY3Rpb24sIG9wdGlvbnMpKTtcbiAgfVxuICAvKipcbiAgICogQHB1YmxpY1xuICAgKlxuICAgKiBBIHNjaGVkdWxlIGFjdGlvbiBxdWV1ZXMgYSByZWxlYXNlIGZvciBwdWJsaXNoaW5nIGF0IHRoZSBnaXZlbiBmdXR1cmUgdGltZS5cbiAgICogVGhlIHJlbGVhc2UgaXMgbG9ja2VkIHN1Y2ggdGhhdCBubyBkb2N1bWVudHMgaW4gdGhlIHJlbGVhc2UgY2FuIGJlIG1vZGlmaWVkIGFuZFxuICAgKiBubyBkb2N1bWVudHMgdGhhdCBpdCByZWZlcmVuY2VzIGNhbiBiZSBkZWxldGVkIGFzIHRoaXMgd291bGQgbWFrZSB0aGUgcHVibGlzaCBmYWlsLlxuICAgKiBBdCB0aGUgZ2l2ZW4gdGltZSwgdGhlIHNhbWUgbG9naWMgYXMgZm9yIHRoZSBwdWJsaXNoIGFjdGlvbiBpcyB0cmlnZ2VyZWQuXG4gICAqXG4gICAqIEBjYXRlZ29yeSBSZWxlYXNlc1xuICAgKlxuICAgKiBAcGFyYW0gcGFyYW1zIC0gUmVsZWFzZSBhY3Rpb24gcGFyYW1ldGVyczpcbiAgICogICAtIGByZWxlYXNlSWRgIC0gVGhlIGlkIG9mIHRoZSByZWxlYXNlIHRvIHNjaGVkdWxlLlxuICAgKiAgIC0gYHB1Ymxpc2hBdGAgLSBUaGUgc2VyaWFsaXNlZCBkYXRlIGFuZCB0aW1lIHRvIHB1Ymxpc2ggdGhlIHJlbGVhc2UuIElmIHRoZSBgcHVibGlzaEF0YCBpcyBpbiB0aGUgcGFzdCwgdGhlIHJlbGVhc2Ugd2lsbCBiZSBwdWJsaXNoZWQgaW1tZWRpYXRlbHkuXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQWRkaXRpb25hbCBhY3Rpb24gb3B0aW9ucy5cbiAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGB0cmFuc2FjdGlvbklkYC5cbiAgICovXG4gIHNjaGVkdWxlKHsgcmVsZWFzZUlkLCBwdWJsaXNoQXQgfSwgb3B0aW9ucykge1xuICAgIGNvbnN0IHNjaGVkdWxlQWN0aW9uID0ge1xuICAgICAgYWN0aW9uVHlwZTogXCJzYW5pdHkuYWN0aW9uLnJlbGVhc2Uuc2NoZWR1bGVcIixcbiAgICAgIHJlbGVhc2VJZCxcbiAgICAgIHB1Ymxpc2hBdFxuICAgIH07XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oX2FjdGlvbih0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCBzY2hlZHVsZUFjdGlvbiwgb3B0aW9ucykpO1xuICB9XG4gIC8qKlxuICAgKiBAcHVibGljXG4gICAqXG4gICAqIEFuIHVuc2NoZWR1bGUgYWN0aW9uIHN0b3BzIGEgcmVsZWFzZSBmcm9tIGJlaW5nIHB1Ymxpc2hlZC5cbiAgICogVGhlIGRvY3VtZW50cyBpbiB0aGUgcmVsZWFzZSBhcmUgY29uc2lkZXJlZCB1bmxvY2tlZCBhbmQgY2FuIGJlIGVkaXRlZCBhZ2Fpbi5cbiAgICogVGhpcyBtYXkgZmFpbCBpZiBhbm90aGVyIHJlbGVhc2UgaXMgc2NoZWR1bGVkIHRvIGJlIHB1Ymxpc2hlZCBhZnRlciB0aGlzIG9uZSBhbmRcbiAgICogaGFzIGEgcmVmZXJlbmNlIHRvIGEgZG9jdW1lbnQgY3JlYXRlZCBieSB0aGlzIG9uZS5cbiAgICpcbiAgICogQGNhdGVnb3J5IFJlbGVhc2VzXG4gICAqXG4gICAqIEBwYXJhbSBwYXJhbXMgLSBSZWxlYXNlIGFjdGlvbiBwYXJhbWV0ZXJzOlxuICAgKiAgIC0gYHJlbGVhc2VJZGAgLSBUaGUgaWQgb2YgdGhlIHJlbGVhc2UgdG8gdW5zY2hlZHVsZS5cbiAgICogQHBhcmFtIG9wdGlvbnMgLSBBZGRpdGlvbmFsIGFjdGlvbiBvcHRpb25zLlxuICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgYHRyYW5zYWN0aW9uSWRgLlxuICAgKi9cbiAgdW5zY2hlZHVsZSh7IHJlbGVhc2VJZCB9LCBvcHRpb25zKSB7XG4gICAgY29uc3QgdW5zY2hlZHVsZUFjdGlvbiA9IHtcbiAgICAgIGFjdGlvblR5cGU6IFwic2FuaXR5LmFjdGlvbi5yZWxlYXNlLnVuc2NoZWR1bGVcIixcbiAgICAgIHJlbGVhc2VJZFxuICAgIH07XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oX2FjdGlvbih0aGlzLiNjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0LCB1bnNjaGVkdWxlQWN0aW9uLCBvcHRpb25zKSk7XG4gIH1cbiAgLyoqXG4gICAqIEBwdWJsaWNcbiAgICpcbiAgICogQSBkZWxldGUgYWN0aW9uIHJlbW92ZXMgYSBwdWJsaXNoZWQgb3IgYXJjaGl2ZWQgcmVsZWFzZS5cbiAgICogVGhlIGJhY2tpbmcgc3lzdGVtIGRvY3VtZW50IHdpbGwgYmUgcmVtb3ZlZCBmcm9tIHRoZSBkYXRhc2V0LlxuICAgKlxuICAgKiBAY2F0ZWdvcnkgUmVsZWFzZXNcbiAgICpcbiAgICogQHBhcmFtIHBhcmFtcyAtIFJlbGVhc2UgYWN0aW9uIHBhcmFtZXRlcnM6XG4gICAqICAgLSBgcmVsZWFzZUlkYCAtIFRoZSBpZCBvZiB0aGUgcmVsZWFzZSB0byBkZWxldGUuXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQWRkaXRpb25hbCBhY3Rpb24gb3B0aW9ucy5cbiAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGB0cmFuc2FjdGlvbklkYC5cbiAgICovXG4gIGRlbGV0ZSh7IHJlbGVhc2VJZCB9LCBvcHRpb25zKSB7XG4gICAgY29uc3QgZGVsZXRlQWN0aW9uID0ge1xuICAgICAgYWN0aW9uVHlwZTogXCJzYW5pdHkuYWN0aW9uLnJlbGVhc2UuZGVsZXRlXCIsXG4gICAgICByZWxlYXNlSWRcbiAgICB9O1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKF9hY3Rpb24odGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwgZGVsZXRlQWN0aW9uLCBvcHRpb25zKSk7XG4gIH1cbiAgLyoqXG4gICAqIEBwdWJsaWNcbiAgICpcbiAgICogRmV0Y2ggdGhlIGRvY3VtZW50cyBpbiBhIHJlbGVhc2UgYnkgcmVsZWFzZSBpZC5cbiAgICpcbiAgICogQGNhdGVnb3J5IFJlbGVhc2VzXG4gICAqXG4gICAqIEBwYXJhbSBwYXJhbXMgLSBSZWxlYXNlIGFjdGlvbiBwYXJhbWV0ZXJzOlxuICAgKiAgIC0gYHJlbGVhc2VJZGAgLSBUaGUgaWQgb2YgdGhlIHJlbGVhc2UgdG8gZmV0Y2ggZG9jdW1lbnRzIGZvci5cbiAgICogQHBhcmFtIG9wdGlvbnMgLSBBZGRpdGlvbmFsIG11dGF0aW9uIG9wdGlvbnMge0BsaW5rIEJhc2VNdXRhdGlvbk9wdGlvbnN9LlxuICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgZG9jdW1lbnRzIGluIHRoZSByZWxlYXNlLlxuICAgKi9cbiAgZmV0Y2hEb2N1bWVudHMoeyByZWxlYXNlSWQgfSwgb3B0aW9ucykge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKF9nZXRSZWxlYXNlRG9jdW1lbnRzKHRoaXMuI2NsaWVudCwgdGhpcy4jaHR0cFJlcXVlc3QsIHJlbGVhc2VJZCwgb3B0aW9ucykpO1xuICB9XG59XG5jbGFzcyBPYnNlcnZhYmxlVXNlcnNDbGllbnQge1xuICAjY2xpZW50O1xuICAjaHR0cFJlcXVlc3Q7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCwgaHR0cFJlcXVlc3QpIHtcbiAgICB0aGlzLiNjbGllbnQgPSBjbGllbnQsIHRoaXMuI2h0dHBSZXF1ZXN0ID0gaHR0cFJlcXVlc3Q7XG4gIH1cbiAgLyoqXG4gICAqIEZldGNoIGEgdXNlciBieSB1c2VyIElEXG4gICAqXG4gICAqIEBwYXJhbSBpZCAtIFVzZXIgSUQgb2YgdGhlIHVzZXIgdG8gZmV0Y2guIElmIGBtZWAgaXMgcHJvdmlkZWQsIGEgbWluaW1hbCByZXNwb25zZSBpbmNsdWRpbmcgdGhlIHVzZXJzIHJvbGUgaXMgcmV0dXJuZWQuXG4gICAqL1xuICBnZXRCeUlkKGlkKSB7XG4gICAgcmV0dXJuIF9yZXF1ZXN0KFxuICAgICAgdGhpcy4jY2xpZW50LFxuICAgICAgdGhpcy4jaHR0cFJlcXVlc3QsXG4gICAgICB7IHVyaTogYC91c2Vycy8ke2lkfWAgfVxuICAgICk7XG4gIH1cbn1cbmNsYXNzIFVzZXJzQ2xpZW50IHtcbiAgI2NsaWVudDtcbiAgI2h0dHBSZXF1ZXN0O1xuICBjb25zdHJ1Y3RvcihjbGllbnQsIGh0dHBSZXF1ZXN0KSB7XG4gICAgdGhpcy4jY2xpZW50ID0gY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCA9IGh0dHBSZXF1ZXN0O1xuICB9XG4gIC8qKlxuICAgKiBGZXRjaCBhIHVzZXIgYnkgdXNlciBJRFxuICAgKlxuICAgKiBAcGFyYW0gaWQgLSBVc2VyIElEIG9mIHRoZSB1c2VyIHRvIGZldGNoLiBJZiBgbWVgIGlzIHByb3ZpZGVkLCBhIG1pbmltYWwgcmVzcG9uc2UgaW5jbHVkaW5nIHRoZSB1c2VycyByb2xlIGlzIHJldHVybmVkLlxuICAgKi9cbiAgZ2V0QnlJZChpZCkge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKFxuICAgICAgX3JlcXVlc3QodGhpcy4jY2xpZW50LCB0aGlzLiNodHRwUmVxdWVzdCwge1xuICAgICAgICB1cmk6IGAvdXNlcnMvJHtpZH1gXG4gICAgICB9KVxuICAgICk7XG4gIH1cbn1cbmNsYXNzIE9ic2VydmFibGVTYW5pdHlDbGllbnQge1xuICBhc3NldHM7XG4gIGRhdGFzZXRzO1xuICBsaXZlO1xuICBwcm9qZWN0cztcbiAgdXNlcnM7XG4gIGFnZW50O1xuICByZWxlYXNlcztcbiAgLyoqXG4gICAqIFByaXZhdGUgcHJvcGVydGllc1xuICAgKi9cbiAgI2NsaWVudENvbmZpZztcbiAgI2h0dHBSZXF1ZXN0O1xuICAvKipcbiAgICogSW5zdGFuY2UgcHJvcGVydGllc1xuICAgKi9cbiAgbGlzdGVuID0gX2xpc3RlbjtcbiAgY29uc3RydWN0b3IoaHR0cFJlcXVlc3QsIGNvbmZpZyA9IGRlZmF1bHRDb25maWcpIHtcbiAgICB0aGlzLmNvbmZpZyhjb25maWcpLCB0aGlzLiNodHRwUmVxdWVzdCA9IGh0dHBSZXF1ZXN0LCB0aGlzLmFzc2V0cyA9IG5ldyBPYnNlcnZhYmxlQXNzZXRzQ2xpZW50KHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0KSwgdGhpcy5kYXRhc2V0cyA9IG5ldyBPYnNlcnZhYmxlRGF0YXNldHNDbGllbnQodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QpLCB0aGlzLmxpdmUgPSBuZXcgTGl2ZUNsaWVudCh0aGlzKSwgdGhpcy5wcm9qZWN0cyA9IG5ldyBPYnNlcnZhYmxlUHJvamVjdHNDbGllbnQodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QpLCB0aGlzLnVzZXJzID0gbmV3IE9ic2VydmFibGVVc2Vyc0NsaWVudCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCksIHRoaXMuYWdlbnQgPSB7XG4gICAgICBhY3Rpb246IG5ldyBPYnNlcnZhYmxlQWdlbnRzQWN0aW9uQ2xpZW50KHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0KVxuICAgIH0sIHRoaXMucmVsZWFzZXMgPSBuZXcgT2JzZXJ2YWJsZVJlbGVhc2VzQ2xpZW50KHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0KTtcbiAgfVxuICAvKipcbiAgICogQ2xvbmUgdGhlIGNsaWVudCAtIHJldHVybnMgYSBuZXcgaW5zdGFuY2VcbiAgICovXG4gIGNsb25lKCkge1xuICAgIHJldHVybiBuZXcgT2JzZXJ2YWJsZVNhbml0eUNsaWVudCh0aGlzLiNodHRwUmVxdWVzdCwgdGhpcy5jb25maWcoKSk7XG4gIH1cbiAgY29uZmlnKG5ld0NvbmZpZykge1xuICAgIGlmIChuZXdDb25maWcgPT09IHZvaWQgMClcbiAgICAgIHJldHVybiB7IC4uLnRoaXMuI2NsaWVudENvbmZpZyB9O1xuICAgIGlmICh0aGlzLiNjbGllbnRDb25maWcgJiYgdGhpcy4jY2xpZW50Q29uZmlnLmFsbG93UmVjb25maWd1cmUgPT09ICExKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIkV4aXN0aW5nIGNsaWVudCBpbnN0YW5jZSBjYW5ub3QgYmUgcmVjb25maWd1cmVkIC0gdXNlIGB3aXRoQ29uZmlnKG5ld0NvbmZpZylgIHRvIHJldHVybiBhIG5ldyBjbGllbnRcIlxuICAgICAgKTtcbiAgICByZXR1cm4gdGhpcy4jY2xpZW50Q29uZmlnID0gaW5pdENvbmZpZyhuZXdDb25maWcsIHRoaXMuI2NsaWVudENvbmZpZyB8fCB7fSksIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIENsb25lIHRoZSBjbGllbnQgd2l0aCBhIG5ldyAocGFydGlhbCkgY29uZmlndXJhdGlvbi5cbiAgICpcbiAgICogQHBhcmFtIG5ld0NvbmZpZyAtIE5ldyBjbGllbnQgY29uZmlndXJhdGlvbiBwcm9wZXJ0aWVzLCBzaGFsbG93bHkgbWVyZ2VkIHdpdGggZXhpc3RpbmcgY29uZmlndXJhdGlvblxuICAgKi9cbiAgd2l0aENvbmZpZyhuZXdDb25maWcpIHtcbiAgICBjb25zdCB0aGlzQ29uZmlnID0gdGhpcy5jb25maWcoKTtcbiAgICByZXR1cm4gbmV3IE9ic2VydmFibGVTYW5pdHlDbGllbnQodGhpcy4jaHR0cFJlcXVlc3QsIHtcbiAgICAgIC4uLnRoaXNDb25maWcsXG4gICAgICAuLi5uZXdDb25maWcsXG4gICAgICBzdGVnYToge1xuICAgICAgICAuLi50aGlzQ29uZmlnLnN0ZWdhIHx8IHt9LFxuICAgICAgICAuLi50eXBlb2YgbmV3Q29uZmlnPy5zdGVnYSA9PSBcImJvb2xlYW5cIiA/IHsgZW5hYmxlZDogbmV3Q29uZmlnLnN0ZWdhIH0gOiBuZXdDb25maWc/LnN0ZWdhIHx8IHt9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgZmV0Y2gocXVlcnksIHBhcmFtcywgb3B0aW9ucykge1xuICAgIHJldHVybiBfZmV0Y2goXG4gICAgICB0aGlzLFxuICAgICAgdGhpcy4jaHR0cFJlcXVlc3QsXG4gICAgICB0aGlzLiNjbGllbnRDb25maWcuc3RlZ2EsXG4gICAgICBxdWVyeSxcbiAgICAgIHBhcmFtcyxcbiAgICAgIG9wdGlvbnNcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBGZXRjaCBhIHNpbmdsZSBkb2N1bWVudCB3aXRoIHRoZSBnaXZlbiBJRC5cbiAgICpcbiAgICogQHBhcmFtIGlkIC0gRG9jdW1lbnQgSUQgdG8gZmV0Y2hcbiAgICogQHBhcmFtIG9wdGlvbnMgLSBSZXF1ZXN0IG9wdGlvbnNcbiAgICovXG4gIGdldERvY3VtZW50KGlkLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIF9nZXREb2N1bWVudCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgaWQsIG9wdGlvbnMpO1xuICB9XG4gIC8qKlxuICAgKiBGZXRjaCBtdWx0aXBsZSBkb2N1bWVudHMgaW4gb25lIHJlcXVlc3QuXG4gICAqIFNob3VsZCBiZSB1c2VkIHNwYXJpbmdseSAtIHBlcmZvcm1pbmcgYSBxdWVyeSBpcyB1c3VhbGx5IGEgYmV0dGVyIG9wdGlvbi5cbiAgICogVGhlIG9yZGVyL3Bvc2l0aW9uIG9mIGRvY3VtZW50cyBpcyBwcmVzZXJ2ZWQgYmFzZWQgb24gdGhlIG9yaWdpbmFsIGFycmF5IG9mIElEcy5cbiAgICogSWYgYW55IG9mIHRoZSBkb2N1bWVudHMgYXJlIG1pc3NpbmcsIHRoZXkgd2lsbCBiZSByZXBsYWNlZCBieSBhIGBudWxsYCBlbnRyeSBpbiB0aGUgcmV0dXJuZWQgYXJyYXlcbiAgICpcbiAgICogQHBhcmFtIGlkcyAtIERvY3VtZW50IElEcyB0byBmZXRjaFxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIFJlcXVlc3Qgb3B0aW9uc1xuICAgKi9cbiAgZ2V0RG9jdW1lbnRzKGlkcywgb3B0aW9ucykge1xuICAgIHJldHVybiBfZ2V0RG9jdW1lbnRzKHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0LCBpZHMsIG9wdGlvbnMpO1xuICB9XG4gIGNyZWF0ZShkb2N1bWVudCwgb3B0aW9ucykge1xuICAgIHJldHVybiBfY3JlYXRlKHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0LCBkb2N1bWVudCwgXCJjcmVhdGVcIiwgb3B0aW9ucyk7XG4gIH1cbiAgY3JlYXRlSWZOb3RFeGlzdHMoZG9jdW1lbnQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX2NyZWF0ZUlmTm90RXhpc3RzKHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0LCBkb2N1bWVudCwgb3B0aW9ucyk7XG4gIH1cbiAgY3JlYXRlT3JSZXBsYWNlKGRvY3VtZW50LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIF9jcmVhdGVPclJlcGxhY2UodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIGRvY3VtZW50LCBvcHRpb25zKTtcbiAgfVxuICBjcmVhdGVWZXJzaW9uKHtcbiAgICBkb2N1bWVudCxcbiAgICBwdWJsaXNoZWRJZCxcbiAgICByZWxlYXNlSWRcbiAgfSwgb3B0aW9ucykge1xuICAgIGNvbnN0IGRvY3VtZW50VmVyc2lvbklkID0gZGVyaXZlRG9jdW1lbnRWZXJzaW9uSWQoXCJjcmVhdGVWZXJzaW9uXCIsIHtcbiAgICAgIGRvY3VtZW50LFxuICAgICAgcHVibGlzaGVkSWQsXG4gICAgICByZWxlYXNlSWRcbiAgICB9KSwgZG9jdW1lbnRWZXJzaW9uID0geyAuLi5kb2N1bWVudCwgX2lkOiBkb2N1bWVudFZlcnNpb25JZCB9LCB2ZXJzaW9uUHVibGlzaGVkSWQgPSBwdWJsaXNoZWRJZCB8fCBnZXRQdWJsaXNoZWRJZChkb2N1bWVudC5faWQpO1xuICAgIHJldHVybiBfY3JlYXRlVmVyc2lvbihcbiAgICAgIHRoaXMsXG4gICAgICB0aGlzLiNodHRwUmVxdWVzdCxcbiAgICAgIGRvY3VtZW50VmVyc2lvbixcbiAgICAgIHZlcnNpb25QdWJsaXNoZWRJZCxcbiAgICAgIG9wdGlvbnNcbiAgICApO1xuICB9XG4gIGRlbGV0ZShzZWxlY3Rpb24sIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX2RlbGV0ZSh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgc2VsZWN0aW9uLCBvcHRpb25zKTtcbiAgfVxuICAvKipcbiAgICogQHB1YmxpY1xuICAgKlxuICAgKiBEZWxldGVzIHRoZSBkcmFmdCBvciByZWxlYXNlIHZlcnNpb24gb2YgYSBkb2N1bWVudC5cbiAgICpcbiAgICogQHJlbWFya3NcbiAgICogKiBEaXNjYXJkaW5nIGEgdmVyc2lvbiB3aXRoIG5vIGByZWxlYXNlSWRgIHdpbGwgZGlzY2FyZCB0aGUgZHJhZnQgdmVyc2lvbiBvZiB0aGUgcHVibGlzaGVkIGRvY3VtZW50LlxuICAgKiAqIElmIHRoZSBkcmFmdCBvciByZWxlYXNlIHZlcnNpb24gZG9lcyBub3QgZXhpc3QsIGFueSBlcnJvciB3aWxsIHRocm93LlxuICAgKlxuICAgKiBAcGFyYW0gcGFyYW1zIC0gVmVyc2lvbiBhY3Rpb24gcGFyYW1ldGVyczpcbiAgICogICAtIGByZWxlYXNlSWRgIC0gVGhlIElEIG9mIHRoZSByZWxlYXNlIHRvIGRpc2NhcmQgdGhlIGRvY3VtZW50IGZyb20uXG4gICAqICAgLSBgcHVibGlzaGVkSWRgIC0gVGhlIHB1Ymxpc2hlZCBJRCBvZiB0aGUgZG9jdW1lbnQgdG8gZGlzY2FyZC5cbiAgICogQHBhcmFtIHB1cmdlIC0gaWYgYHRydWVgIHRoZSBkb2N1bWVudCBoaXN0b3J5IGlzIGFsc28gZGlzY2FyZGVkLlxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIEFkZGl0aW9uYWwgYWN0aW9uIG9wdGlvbnMuXG4gICAqIEByZXR1cm5zIGFuIG9ic2VydmFibGUgdGhhdCByZXNvbHZlcyB0byB0aGUgYHRyYW5zYWN0aW9uSWRgLlxuICAgKlxuICAgKiBAZXhhbXBsZSBEaXNjYXJkaW5nIGEgcmVsZWFzZSB2ZXJzaW9uIG9mIGEgZG9jdW1lbnRcbiAgICogYGBgdHNcbiAgICogY2xpZW50Lm9ic2VydmFibGUuZGlzY2FyZFZlcnNpb24oe3B1Ymxpc2hlZElkOiAnbXlEb2N1bWVudCcsIHJlbGVhc2VJZDogJ215UmVsZWFzZSd9KVxuICAgKiAvLyBUaGUgZG9jdW1lbnQgd2l0aCB0aGUgSUQgYHZlcnNpb25zLm15UmVsZWFzZS5teURvY3VtZW50YCB3aWxsIGJlIGRpc2NhcmRlZC5cbiAgICogYGBgXG4gICAqXG4gICAqIEBleGFtcGxlIERpc2NhcmRpbmcgYSBkcmFmdCB2ZXJzaW9uIG9mIGEgZG9jdW1lbnRcbiAgICogYGBgdHNcbiAgICogY2xpZW50Lm9ic2VydmFibGUuZGlzY2FyZFZlcnNpb24oe3B1Ymxpc2hlZElkOiAnbXlEb2N1bWVudCd9KVxuICAgKiAvLyBUaGUgZG9jdW1lbnQgd2l0aCB0aGUgSUQgYGRyYWZ0cy5teURvY3VtZW50YCB3aWxsIGJlIGRpc2NhcmRlZC5cbiAgICogYGBgXG4gICAqL1xuICBkaXNjYXJkVmVyc2lvbih7IHJlbGVhc2VJZCwgcHVibGlzaGVkSWQgfSwgcHVyZ2UsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBkb2N1bWVudFZlcnNpb25JZCA9IGdldERvY3VtZW50VmVyc2lvbklkKHB1Ymxpc2hlZElkLCByZWxlYXNlSWQpO1xuICAgIHJldHVybiBfZGlzY2FyZFZlcnNpb24odGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIGRvY3VtZW50VmVyc2lvbklkLCBwdXJnZSwgb3B0aW9ucyk7XG4gIH1cbiAgcmVwbGFjZVZlcnNpb24oe1xuICAgIGRvY3VtZW50LFxuICAgIHB1Ymxpc2hlZElkLFxuICAgIHJlbGVhc2VJZFxuICB9LCBvcHRpb25zKSB7XG4gICAgY29uc3QgZG9jdW1lbnRWZXJzaW9uSWQgPSBkZXJpdmVEb2N1bWVudFZlcnNpb25JZChcInJlcGxhY2VWZXJzaW9uXCIsIHtcbiAgICAgIGRvY3VtZW50LFxuICAgICAgcHVibGlzaGVkSWQsXG4gICAgICByZWxlYXNlSWRcbiAgICB9KSwgZG9jdW1lbnRWZXJzaW9uID0geyAuLi5kb2N1bWVudCwgX2lkOiBkb2N1bWVudFZlcnNpb25JZCB9O1xuICAgIHJldHVybiBfcmVwbGFjZVZlcnNpb24odGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIGRvY3VtZW50VmVyc2lvbiwgb3B0aW9ucyk7XG4gIH1cbiAgLyoqXG4gICAqIEBwdWJsaWNcbiAgICpcbiAgICogVXNlZCB0byBpbmRpY2F0ZSB3aGVuIGEgZG9jdW1lbnQgd2l0aGluIGEgcmVsZWFzZSBzaG91bGQgYmUgdW5wdWJsaXNoZWQgd2hlblxuICAgKiB0aGUgcmVsZWFzZSBpcyBydW4uXG4gICAqXG4gICAqIEByZW1hcmtzXG4gICAqICogSWYgdGhlIHB1Ymxpc2hlZCBkb2N1bWVudCBkb2VzIG5vdCBleGlzdCwgYW4gZXJyb3Igd2lsbCBiZSB0aHJvd24uXG4gICAqXG4gICAqIEBwYXJhbSBwYXJhbXMgLSBWZXJzaW9uIGFjdGlvbiBwYXJhbWV0ZXJzOlxuICAgKiAgIC0gYHJlbGVhc2VJZGAgLSBUaGUgSUQgb2YgdGhlIHJlbGVhc2UgdG8gdW5wdWJsaXNoIHRoZSBkb2N1bWVudCBmcm9tLlxuICAgKiAgIC0gYHB1Ymxpc2hlZElkYCAtIFRoZSBwdWJsaXNoZWQgSUQgb2YgdGhlIGRvY3VtZW50IHRvIHVucHVibGlzaC5cbiAgICogQHBhcmFtIG9wdGlvbnMgLSBBZGRpdGlvbmFsIGFjdGlvbiBvcHRpb25zLlxuICAgKiBAcmV0dXJucyBhbiBvYnNlcnZhYmxlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGB0cmFuc2FjdGlvbklkYC5cbiAgICpcbiAgICogQGV4YW1wbGUgVW5wdWJsaXNoaW5nIGEgcmVsZWFzZSB2ZXJzaW9uIG9mIGEgcHVibGlzaGVkIGRvY3VtZW50XG4gICAqIGBgYHRzXG4gICAqIGNsaWVudC5vYnNlcnZhYmxlLnVucHVibGlzaFZlcnNpb24oe3B1Ymxpc2hlZElkOiAnbXlEb2N1bWVudCcsIHJlbGVhc2VJZDogJ215UmVsZWFzZSd9KVxuICAgKiAvLyBUaGUgZG9jdW1lbnQgd2l0aCB0aGUgSUQgYHZlcnNpb25zLm15UmVsZWFzZS5teURvY3VtZW50YCB3aWxsIGJlIHVucHVibGlzaGVkLiB3aGVuIGBteVJlbGVhc2VgIGlzIHJ1bi5cbiAgICogYGBgXG4gICAqL1xuICB1bnB1Ymxpc2hWZXJzaW9uKHsgcmVsZWFzZUlkLCBwdWJsaXNoZWRJZCB9LCBvcHRpb25zKSB7XG4gICAgY29uc3QgdmVyc2lvbklkID0gZ2V0VmVyc2lvbklkKHB1Ymxpc2hlZElkLCByZWxlYXNlSWQpO1xuICAgIHJldHVybiBfdW5wdWJsaXNoVmVyc2lvbih0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgdmVyc2lvbklkLCBwdWJsaXNoZWRJZCwgb3B0aW9ucyk7XG4gIH1cbiAgbXV0YXRlKG9wZXJhdGlvbnMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX211dGF0ZSh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgb3BlcmF0aW9ucywgb3B0aW9ucyk7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZSBhIG5ldyBidWlsZGFibGUgcGF0Y2ggb2Ygb3BlcmF0aW9ucyB0byBwZXJmb3JtXG4gICAqXG4gICAqIEBwYXJhbSBzZWxlY3Rpb24gLSBEb2N1bWVudCBJRCwgYW4gYXJyYXkgb2YgZG9jdW1lbnQgSURzLCBvciBhbiBvYmplY3Qgd2l0aCBgcXVlcnlgIGFuZCBvcHRpb25hbCBgcGFyYW1zYCwgZGVmaW5pbmcgd2hpY2ggZG9jdW1lbnQocykgdG8gcGF0Y2hcbiAgICogQHBhcmFtIG9wZXJhdGlvbnMgLSBPcHRpb25hbCBvYmplY3Qgb2YgcGF0Y2ggb3BlcmF0aW9ucyB0byBpbml0aWFsaXplIHRoZSBwYXRjaCBpbnN0YW5jZSB3aXRoXG4gICAqIEByZXR1cm5zIFBhdGNoIGluc3RhbmNlIC0gY2FsbCBgLmNvbW1pdCgpYCB0byBwZXJmb3JtIHRoZSBvcGVyYXRpb25zIGRlZmluZWRcbiAgICovXG4gIHBhdGNoKHNlbGVjdGlvbiwgb3BlcmF0aW9ucykge1xuICAgIHJldHVybiBuZXcgT2JzZXJ2YWJsZVBhdGNoKHNlbGVjdGlvbiwgb3BlcmF0aW9ucywgdGhpcyk7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZSBhIG5ldyB0cmFuc2FjdGlvbiBvZiBtdXRhdGlvbnNcbiAgICpcbiAgICogQHBhcmFtIG9wZXJhdGlvbnMgLSBPcHRpb25hbCBhcnJheSBvZiBtdXRhdGlvbiBvcGVyYXRpb25zIHRvIGluaXRpYWxpemUgdGhlIHRyYW5zYWN0aW9uIGluc3RhbmNlIHdpdGhcbiAgICovXG4gIHRyYW5zYWN0aW9uKG9wZXJhdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IE9ic2VydmFibGVUcmFuc2FjdGlvbihvcGVyYXRpb25zLCB0aGlzKTtcbiAgfVxuICAvKipcbiAgICogUGVyZm9ybSBhY3Rpb24gb3BlcmF0aW9ucyBhZ2FpbnN0IHRoZSBjb25maWd1cmVkIGRhdGFzZXRcbiAgICpcbiAgICogQHBhcmFtIG9wZXJhdGlvbnMgLSBBY3Rpb24gb3BlcmF0aW9uKHMpIHRvIGV4ZWN1dGVcbiAgICogQHBhcmFtIG9wdGlvbnMgLSBBY3Rpb24gb3B0aW9uc1xuICAgKi9cbiAgYWN0aW9uKG9wZXJhdGlvbnMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX2FjdGlvbih0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgb3BlcmF0aW9ucywgb3B0aW9ucyk7XG4gIH1cbiAgLyoqXG4gICAqIFBlcmZvcm0gYW4gSFRUUCByZXF1ZXN0IGFnYWluc3QgdGhlIFNhbml0eSBBUElcbiAgICpcbiAgICogQHBhcmFtIG9wdGlvbnMgLSBSZXF1ZXN0IG9wdGlvbnNcbiAgICovXG4gIHJlcXVlc3Qob3B0aW9ucykge1xuICAgIHJldHVybiBfcmVxdWVzdCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgb3B0aW9ucyk7XG4gIH1cbiAgLyoqXG4gICAqIEdldCBhIFNhbml0eSBBUEkgVVJMIGZvciB0aGUgVVJJIHByb3ZpZGVkXG4gICAqXG4gICAqIEBwYXJhbSB1cmkgLSBVUkkvcGF0aCB0byBidWlsZCBVUkwgZm9yXG4gICAqIEBwYXJhbSBjYW5Vc2VDZG4gLSBXaGV0aGVyIG9yIG5vdCB0byBhbGxvdyB1c2luZyB0aGUgQVBJIENETiBmb3IgdGhpcyByb3V0ZVxuICAgKi9cbiAgZ2V0VXJsKHVyaSwgY2FuVXNlQ2RuKSB7XG4gICAgcmV0dXJuIF9nZXRVcmwodGhpcywgdXJpLCBjYW5Vc2VDZG4pO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgYSBTYW5pdHkgQVBJIFVSTCBmb3IgdGhlIGRhdGEgb3BlcmF0aW9uIGFuZCBwYXRoIHByb3ZpZGVkXG4gICAqXG4gICAqIEBwYXJhbSBvcGVyYXRpb24gLSBEYXRhIG9wZXJhdGlvbiAoZWcgYHF1ZXJ5YCwgYG11dGF0ZWAsIGBsaXN0ZW5gIG9yIHNpbWlsYXIpXG4gICAqIEBwYXJhbSBwYXRoIC0gUGF0aCB0byBhcHBlbmQgYWZ0ZXIgdGhlIG9wZXJhdGlvblxuICAgKi9cbiAgZ2V0RGF0YVVybChvcGVyYXRpb24sIHBhdGgpIHtcbiAgICByZXR1cm4gX2dldERhdGFVcmwodGhpcywgb3BlcmF0aW9uLCBwYXRoKTtcbiAgfVxufVxuY2xhc3MgU2FuaXR5Q2xpZW50IHtcbiAgYXNzZXRzO1xuICBkYXRhc2V0cztcbiAgbGl2ZTtcbiAgcHJvamVjdHM7XG4gIHVzZXJzO1xuICBhZ2VudDtcbiAgcmVsZWFzZXM7XG4gIC8qKlxuICAgKiBPYnNlcnZhYmxlIHZlcnNpb24gb2YgdGhlIFNhbml0eSBjbGllbnQsIHdpdGggdGhlIHNhbWUgY29uZmlndXJhdGlvbiBhcyB0aGUgcHJvbWlzZS1iYXNlZCBvbmVcbiAgICovXG4gIG9ic2VydmFibGU7XG4gIC8qKlxuICAgKiBQcml2YXRlIHByb3BlcnRpZXNcbiAgICovXG4gICNjbGllbnRDb25maWc7XG4gICNodHRwUmVxdWVzdDtcbiAgLyoqXG4gICAqIEluc3RhbmNlIHByb3BlcnRpZXNcbiAgICovXG4gIGxpc3RlbiA9IF9saXN0ZW47XG4gIGNvbnN0cnVjdG9yKGh0dHBSZXF1ZXN0LCBjb25maWcgPSBkZWZhdWx0Q29uZmlnKSB7XG4gICAgdGhpcy5jb25maWcoY29uZmlnKSwgdGhpcy4jaHR0cFJlcXVlc3QgPSBodHRwUmVxdWVzdCwgdGhpcy5hc3NldHMgPSBuZXcgQXNzZXRzQ2xpZW50KHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0KSwgdGhpcy5kYXRhc2V0cyA9IG5ldyBEYXRhc2V0c0NsaWVudCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCksIHRoaXMubGl2ZSA9IG5ldyBMaXZlQ2xpZW50KHRoaXMpLCB0aGlzLnByb2plY3RzID0gbmV3IFByb2plY3RzQ2xpZW50KHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0KSwgdGhpcy51c2VycyA9IG5ldyBVc2Vyc0NsaWVudCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCksIHRoaXMuYWdlbnQgPSB7XG4gICAgICBhY3Rpb246IG5ldyBBZ2VudEFjdGlvbnNDbGllbnQodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QpXG4gICAgfSwgdGhpcy5yZWxlYXNlcyA9IG5ldyBSZWxlYXNlc0NsaWVudCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCksIHRoaXMub2JzZXJ2YWJsZSA9IG5ldyBPYnNlcnZhYmxlU2FuaXR5Q2xpZW50KGh0dHBSZXF1ZXN0LCBjb25maWcpO1xuICB9XG4gIC8qKlxuICAgKiBDbG9uZSB0aGUgY2xpZW50IC0gcmV0dXJucyBhIG5ldyBpbnN0YW5jZVxuICAgKi9cbiAgY2xvbmUoKSB7XG4gICAgcmV0dXJuIG5ldyBTYW5pdHlDbGllbnQodGhpcy4jaHR0cFJlcXVlc3QsIHRoaXMuY29uZmlnKCkpO1xuICB9XG4gIGNvbmZpZyhuZXdDb25maWcpIHtcbiAgICBpZiAobmV3Q29uZmlnID09PSB2b2lkIDApXG4gICAgICByZXR1cm4geyAuLi50aGlzLiNjbGllbnRDb25maWcgfTtcbiAgICBpZiAodGhpcy4jY2xpZW50Q29uZmlnICYmIHRoaXMuI2NsaWVudENvbmZpZy5hbGxvd1JlY29uZmlndXJlID09PSAhMSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJFeGlzdGluZyBjbGllbnQgaW5zdGFuY2UgY2Fubm90IGJlIHJlY29uZmlndXJlZCAtIHVzZSBgd2l0aENvbmZpZyhuZXdDb25maWcpYCB0byByZXR1cm4gYSBuZXcgY2xpZW50XCJcbiAgICAgICk7XG4gICAgcmV0dXJuIHRoaXMub2JzZXJ2YWJsZSAmJiB0aGlzLm9ic2VydmFibGUuY29uZmlnKG5ld0NvbmZpZyksIHRoaXMuI2NsaWVudENvbmZpZyA9IGluaXRDb25maWcobmV3Q29uZmlnLCB0aGlzLiNjbGllbnRDb25maWcgfHwge30pLCB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBDbG9uZSB0aGUgY2xpZW50IHdpdGggYSBuZXcgKHBhcnRpYWwpIGNvbmZpZ3VyYXRpb24uXG4gICAqXG4gICAqIEBwYXJhbSBuZXdDb25maWcgLSBOZXcgY2xpZW50IGNvbmZpZ3VyYXRpb24gcHJvcGVydGllcywgc2hhbGxvd2x5IG1lcmdlZCB3aXRoIGV4aXN0aW5nIGNvbmZpZ3VyYXRpb25cbiAgICovXG4gIHdpdGhDb25maWcobmV3Q29uZmlnKSB7XG4gICAgY29uc3QgdGhpc0NvbmZpZyA9IHRoaXMuY29uZmlnKCk7XG4gICAgcmV0dXJuIG5ldyBTYW5pdHlDbGllbnQodGhpcy4jaHR0cFJlcXVlc3QsIHtcbiAgICAgIC4uLnRoaXNDb25maWcsXG4gICAgICAuLi5uZXdDb25maWcsXG4gICAgICBzdGVnYToge1xuICAgICAgICAuLi50aGlzQ29uZmlnLnN0ZWdhIHx8IHt9LFxuICAgICAgICAuLi50eXBlb2YgbmV3Q29uZmlnPy5zdGVnYSA9PSBcImJvb2xlYW5cIiA/IHsgZW5hYmxlZDogbmV3Q29uZmlnLnN0ZWdhIH0gOiBuZXdDb25maWc/LnN0ZWdhIHx8IHt9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgZmV0Y2gocXVlcnksIHBhcmFtcywgb3B0aW9ucykge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKFxuICAgICAgX2ZldGNoKFxuICAgICAgICB0aGlzLFxuICAgICAgICB0aGlzLiNodHRwUmVxdWVzdCxcbiAgICAgICAgdGhpcy4jY2xpZW50Q29uZmlnLnN0ZWdhLFxuICAgICAgICBxdWVyeSxcbiAgICAgICAgcGFyYW1zLFxuICAgICAgICBvcHRpb25zXG4gICAgICApXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogRmV0Y2ggYSBzaW5nbGUgZG9jdW1lbnQgd2l0aCB0aGUgZ2l2ZW4gSUQuXG4gICAqXG4gICAqIEBwYXJhbSBpZCAtIERvY3VtZW50IElEIHRvIGZldGNoXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gUmVxdWVzdCBvcHRpb25zXG4gICAqL1xuICBnZXREb2N1bWVudChpZCwgb3B0aW9ucykge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKF9nZXREb2N1bWVudCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgaWQsIG9wdGlvbnMpKTtcbiAgfVxuICAvKipcbiAgICogRmV0Y2ggbXVsdGlwbGUgZG9jdW1lbnRzIGluIG9uZSByZXF1ZXN0LlxuICAgKiBTaG91bGQgYmUgdXNlZCBzcGFyaW5nbHkgLSBwZXJmb3JtaW5nIGEgcXVlcnkgaXMgdXN1YWxseSBhIGJldHRlciBvcHRpb24uXG4gICAqIFRoZSBvcmRlci9wb3NpdGlvbiBvZiBkb2N1bWVudHMgaXMgcHJlc2VydmVkIGJhc2VkIG9uIHRoZSBvcmlnaW5hbCBhcnJheSBvZiBJRHMuXG4gICAqIElmIGFueSBvZiB0aGUgZG9jdW1lbnRzIGFyZSBtaXNzaW5nLCB0aGV5IHdpbGwgYmUgcmVwbGFjZWQgYnkgYSBgbnVsbGAgZW50cnkgaW4gdGhlIHJldHVybmVkIGFycmF5XG4gICAqXG4gICAqIEBwYXJhbSBpZHMgLSBEb2N1bWVudCBJRHMgdG8gZmV0Y2hcbiAgICogQHBhcmFtIG9wdGlvbnMgLSBSZXF1ZXN0IG9wdGlvbnNcbiAgICovXG4gIGdldERvY3VtZW50cyhpZHMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShfZ2V0RG9jdW1lbnRzKHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0LCBpZHMsIG9wdGlvbnMpKTtcbiAgfVxuICBjcmVhdGUoZG9jdW1lbnQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShcbiAgICAgIF9jcmVhdGUodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIGRvY3VtZW50LCBcImNyZWF0ZVwiLCBvcHRpb25zKVxuICAgICk7XG4gIH1cbiAgY3JlYXRlSWZOb3RFeGlzdHMoZG9jdW1lbnQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShcbiAgICAgIF9jcmVhdGVJZk5vdEV4aXN0cyh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgZG9jdW1lbnQsIG9wdGlvbnMpXG4gICAgKTtcbiAgfVxuICBjcmVhdGVPclJlcGxhY2UoZG9jdW1lbnQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShcbiAgICAgIF9jcmVhdGVPclJlcGxhY2UodGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIGRvY3VtZW50LCBvcHRpb25zKVxuICAgICk7XG4gIH1cbiAgY3JlYXRlVmVyc2lvbih7XG4gICAgZG9jdW1lbnQsXG4gICAgcHVibGlzaGVkSWQsXG4gICAgcmVsZWFzZUlkXG4gIH0sIG9wdGlvbnMpIHtcbiAgICBjb25zdCBkb2N1bWVudFZlcnNpb25JZCA9IGRlcml2ZURvY3VtZW50VmVyc2lvbklkKFwiY3JlYXRlVmVyc2lvblwiLCB7XG4gICAgICBkb2N1bWVudCxcbiAgICAgIHB1Ymxpc2hlZElkLFxuICAgICAgcmVsZWFzZUlkXG4gICAgfSksIGRvY3VtZW50VmVyc2lvbiA9IHsgLi4uZG9jdW1lbnQsIF9pZDogZG9jdW1lbnRWZXJzaW9uSWQgfSwgdmVyc2lvblB1Ymxpc2hlZElkID0gcHVibGlzaGVkSWQgfHwgZ2V0UHVibGlzaGVkSWQoZG9jdW1lbnQuX2lkKTtcbiAgICByZXR1cm4gZmlyc3RWYWx1ZUZyb20oXG4gICAgICBfY3JlYXRlVmVyc2lvbihcbiAgICAgICAgdGhpcyxcbiAgICAgICAgdGhpcy4jaHR0cFJlcXVlc3QsXG4gICAgICAgIGRvY3VtZW50VmVyc2lvbixcbiAgICAgICAgdmVyc2lvblB1Ymxpc2hlZElkLFxuICAgICAgICBvcHRpb25zXG4gICAgICApXG4gICAgKTtcbiAgfVxuICBkZWxldGUoc2VsZWN0aW9uLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oX2RlbGV0ZSh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgc2VsZWN0aW9uLCBvcHRpb25zKSk7XG4gIH1cbiAgLyoqXG4gICAqIEBwdWJsaWNcbiAgICpcbiAgICogRGVsZXRlcyB0aGUgZHJhZnQgb3IgcmVsZWFzZSB2ZXJzaW9uIG9mIGEgZG9jdW1lbnQuXG4gICAqXG4gICAqIEByZW1hcmtzXG4gICAqICogRGlzY2FyZGluZyBhIHZlcnNpb24gd2l0aCBubyBgcmVsZWFzZUlkYCB3aWxsIGRpc2NhcmQgdGhlIGRyYWZ0IHZlcnNpb24gb2YgdGhlIHB1Ymxpc2hlZCBkb2N1bWVudC5cbiAgICogKiBJZiB0aGUgZHJhZnQgb3IgcmVsZWFzZSB2ZXJzaW9uIGRvZXMgbm90IGV4aXN0LCBhbnkgZXJyb3Igd2lsbCB0aHJvdy5cbiAgICpcbiAgICogQHBhcmFtIHBhcmFtcyAtIFZlcnNpb24gYWN0aW9uIHBhcmFtZXRlcnM6XG4gICAqICAgLSBgcmVsZWFzZUlkYCAtIFRoZSBJRCBvZiB0aGUgcmVsZWFzZSB0byBkaXNjYXJkIHRoZSBkb2N1bWVudCBmcm9tLlxuICAgKiAgIC0gYHB1Ymxpc2hlZElkYCAtIFRoZSBwdWJsaXNoZWQgSUQgb2YgdGhlIGRvY3VtZW50IHRvIGRpc2NhcmQuXG4gICAqIEBwYXJhbSBwdXJnZSAtIGlmIGB0cnVlYCB0aGUgZG9jdW1lbnQgaGlzdG9yeSBpcyBhbHNvIGRpc2NhcmRlZC5cbiAgICogQHBhcmFtIG9wdGlvbnMgLSBBZGRpdGlvbmFsIGFjdGlvbiBvcHRpb25zLlxuICAgKiBAcmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgYHRyYW5zYWN0aW9uSWRgLlxuICAgKlxuICAgKiBAZXhhbXBsZSBEaXNjYXJkaW5nIGEgcmVsZWFzZSB2ZXJzaW9uIG9mIGEgZG9jdW1lbnRcbiAgICogYGBgdHNcbiAgICogY2xpZW50LmRpc2NhcmRWZXJzaW9uKHtwdWJsaXNoZWRJZDogJ215RG9jdW1lbnQnLCByZWxlYXNlSWQ6ICdteVJlbGVhc2UnfSlcbiAgICogLy8gVGhlIGRvY3VtZW50IHdpdGggdGhlIElEIGB2ZXJzaW9ucy5teVJlbGVhc2UubXlEb2N1bWVudGAgd2lsbCBiZSBkaXNjYXJkZWQuXG4gICAqIGBgYFxuICAgKlxuICAgKiBAZXhhbXBsZSBEaXNjYXJkaW5nIGEgZHJhZnQgdmVyc2lvbiBvZiBhIGRvY3VtZW50XG4gICAqIGBgYHRzXG4gICAqIGNsaWVudC5kaXNjYXJkVmVyc2lvbih7cHVibGlzaGVkSWQ6ICdteURvY3VtZW50J30pXG4gICAqIC8vIFRoZSBkb2N1bWVudCB3aXRoIHRoZSBJRCBgZHJhZnRzLm15RG9jdW1lbnRgIHdpbGwgYmUgZGlzY2FyZGVkLlxuICAgKiBgYGBcbiAgICovXG4gIGRpc2NhcmRWZXJzaW9uKHsgcmVsZWFzZUlkLCBwdWJsaXNoZWRJZCB9LCBwdXJnZSwgb3B0aW9ucykge1xuICAgIGNvbnN0IGRvY3VtZW50VmVyc2lvbklkID0gZ2V0RG9jdW1lbnRWZXJzaW9uSWQocHVibGlzaGVkSWQsIHJlbGVhc2VJZCk7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oXG4gICAgICBfZGlzY2FyZFZlcnNpb24odGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIGRvY3VtZW50VmVyc2lvbklkLCBwdXJnZSwgb3B0aW9ucylcbiAgICApO1xuICB9XG4gIHJlcGxhY2VWZXJzaW9uKHtcbiAgICBkb2N1bWVudCxcbiAgICBwdWJsaXNoZWRJZCxcbiAgICByZWxlYXNlSWRcbiAgfSwgb3B0aW9ucykge1xuICAgIGNvbnN0IGRvY3VtZW50VmVyc2lvbklkID0gZGVyaXZlRG9jdW1lbnRWZXJzaW9uSWQoXCJyZXBsYWNlVmVyc2lvblwiLCB7XG4gICAgICBkb2N1bWVudCxcbiAgICAgIHB1Ymxpc2hlZElkLFxuICAgICAgcmVsZWFzZUlkXG4gICAgfSksIGRvY3VtZW50VmVyc2lvbiA9IHsgLi4uZG9jdW1lbnQsIF9pZDogZG9jdW1lbnRWZXJzaW9uSWQgfTtcbiAgICByZXR1cm4gZmlyc3RWYWx1ZUZyb20oXG4gICAgICBfcmVwbGFjZVZlcnNpb24odGhpcywgdGhpcy4jaHR0cFJlcXVlc3QsIGRvY3VtZW50VmVyc2lvbiwgb3B0aW9ucylcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBAcHVibGljXG4gICAqXG4gICAqIFVzZWQgdG8gaW5kaWNhdGUgd2hlbiBhIGRvY3VtZW50IHdpdGhpbiBhIHJlbGVhc2Ugc2hvdWxkIGJlIHVucHVibGlzaGVkIHdoZW5cbiAgICogdGhlIHJlbGVhc2UgaXMgcnVuLlxuICAgKlxuICAgKiBAcmVtYXJrc1xuICAgKiAqIElmIHRoZSBwdWJsaXNoZWQgZG9jdW1lbnQgZG9lcyBub3QgZXhpc3QsIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duLlxuICAgKlxuICAgKiBAcGFyYW0gcGFyYW1zIC0gVmVyc2lvbiBhY3Rpb24gcGFyYW1ldGVyczpcbiAgICogICAtIGByZWxlYXNlSWRgIC0gVGhlIElEIG9mIHRoZSByZWxlYXNlIHRvIHVucHVibGlzaCB0aGUgZG9jdW1lbnQgZnJvbS5cbiAgICogICAtIGBwdWJsaXNoZWRJZGAgLSBUaGUgcHVibGlzaGVkIElEIG9mIHRoZSBkb2N1bWVudCB0byB1bnB1Ymxpc2guXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQWRkaXRpb25hbCBhY3Rpb24gb3B0aW9ucy5cbiAgICogQHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGB0cmFuc2FjdGlvbklkYC5cbiAgICpcbiAgICogQGV4YW1wbGUgVW5wdWJsaXNoaW5nIGEgcmVsZWFzZSB2ZXJzaW9uIG9mIGEgcHVibGlzaGVkIGRvY3VtZW50XG4gICAqIGBgYHRzXG4gICAqIGF3YWl0IGNsaWVudC51bnB1Ymxpc2hWZXJzaW9uKHtwdWJsaXNoZWRJZDogJ215RG9jdW1lbnQnLCByZWxlYXNlSWQ6ICdteVJlbGVhc2UnfSlcbiAgICogLy8gVGhlIGRvY3VtZW50IHdpdGggdGhlIElEIGB2ZXJzaW9ucy5teVJlbGVhc2UubXlEb2N1bWVudGAgd2lsbCBiZSB1bnB1Ymxpc2hlZC4gd2hlbiBgbXlSZWxlYXNlYCBpcyBydW4uXG4gICAqIGBgYFxuICAgKi9cbiAgdW5wdWJsaXNoVmVyc2lvbih7IHJlbGVhc2VJZCwgcHVibGlzaGVkSWQgfSwgb3B0aW9ucykge1xuICAgIGNvbnN0IHZlcnNpb25JZCA9IGdldFZlcnNpb25JZChwdWJsaXNoZWRJZCwgcmVsZWFzZUlkKTtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShcbiAgICAgIF91bnB1Ymxpc2hWZXJzaW9uKHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0LCB2ZXJzaW9uSWQsIHB1Ymxpc2hlZElkLCBvcHRpb25zKVxuICAgICk7XG4gIH1cbiAgbXV0YXRlKG9wZXJhdGlvbnMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShfbXV0YXRlKHRoaXMsIHRoaXMuI2h0dHBSZXF1ZXN0LCBvcGVyYXRpb25zLCBvcHRpb25zKSk7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZSBhIG5ldyBidWlsZGFibGUgcGF0Y2ggb2Ygb3BlcmF0aW9ucyB0byBwZXJmb3JtXG4gICAqXG4gICAqIEBwYXJhbSBzZWxlY3Rpb24gLSBEb2N1bWVudCBJRCwgYW4gYXJyYXkgb2YgZG9jdW1lbnQgSURzLCBvciBhbiBvYmplY3Qgd2l0aCBgcXVlcnlgIGFuZCBvcHRpb25hbCBgcGFyYW1zYCwgZGVmaW5pbmcgd2hpY2ggZG9jdW1lbnQocykgdG8gcGF0Y2hcbiAgICogQHBhcmFtIG9wZXJhdGlvbnMgLSBPcHRpb25hbCBvYmplY3Qgb2YgcGF0Y2ggb3BlcmF0aW9ucyB0byBpbml0aWFsaXplIHRoZSBwYXRjaCBpbnN0YW5jZSB3aXRoXG4gICAqIEByZXR1cm5zIFBhdGNoIGluc3RhbmNlIC0gY2FsbCBgLmNvbW1pdCgpYCB0byBwZXJmb3JtIHRoZSBvcGVyYXRpb25zIGRlZmluZWRcbiAgICovXG4gIHBhdGNoKGRvY3VtZW50SWQsIG9wZXJhdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFBhdGNoKGRvY3VtZW50SWQsIG9wZXJhdGlvbnMsIHRoaXMpO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBuZXcgdHJhbnNhY3Rpb24gb2YgbXV0YXRpb25zXG4gICAqXG4gICAqIEBwYXJhbSBvcGVyYXRpb25zIC0gT3B0aW9uYWwgYXJyYXkgb2YgbXV0YXRpb24gb3BlcmF0aW9ucyB0byBpbml0aWFsaXplIHRoZSB0cmFuc2FjdGlvbiBpbnN0YW5jZSB3aXRoXG4gICAqL1xuICB0cmFuc2FjdGlvbihvcGVyYXRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbihvcGVyYXRpb25zLCB0aGlzKTtcbiAgfVxuICAvKipcbiAgICogUGVyZm9ybSBhY3Rpb24gb3BlcmF0aW9ucyBhZ2FpbnN0IHRoZSBjb25maWd1cmVkIGRhdGFzZXRcbiAgICogUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgdHJhbnNhY3Rpb24gcmVzdWx0XG4gICAqXG4gICAqIEBwYXJhbSBvcGVyYXRpb25zIC0gQWN0aW9uIG9wZXJhdGlvbihzKSB0byBleGVjdXRlXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQWN0aW9uIG9wdGlvbnNcbiAgICovXG4gIGFjdGlvbihvcGVyYXRpb25zLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGxhc3RWYWx1ZUZyb20oX2FjdGlvbih0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgb3BlcmF0aW9ucywgb3B0aW9ucykpO1xuICB9XG4gIC8qKlxuICAgKiBQZXJmb3JtIGEgcmVxdWVzdCBhZ2FpbnN0IHRoZSBTYW5pdHkgQVBJXG4gICAqIE5PVEU6IE9ubHkgdXNlIHRoaXMgZm9yIFNhbml0eSBBUEkgZW5kcG9pbnRzLCBub3QgZm9yIHlvdXIgb3duIEFQSXMhXG4gICAqXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gUmVxdWVzdCBvcHRpb25zXG4gICAqIEByZXR1cm5zIFByb21pc2UgcmVzb2x2aW5nIHRvIHRoZSByZXNwb25zZSBib2R5XG4gICAqL1xuICByZXF1ZXN0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbGFzdFZhbHVlRnJvbShfcmVxdWVzdCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgb3B0aW9ucykpO1xuICB9XG4gIC8qKlxuICAgKiBQZXJmb3JtIGFuIEhUVFAgcmVxdWVzdCBhIGAvZGF0YWAgc3ViLWVuZHBvaW50XG4gICAqIE5PVEU6IENvbnNpZGVyZWQgaW50ZXJuYWwsIHRodXMgbWFya2VkIGFzIGRlcHJlY2F0ZWQuIFVzZSBgcmVxdWVzdGAgaW5zdGVhZC5cbiAgICpcbiAgICogQGRlcHJlY2F0ZWQgLSBVc2UgYHJlcXVlc3QoKWAgb3IgeW91ciBvd24gSFRUUCBsaWJyYXJ5IGluc3RlYWRcbiAgICogQHBhcmFtIGVuZHBvaW50IC0gRW5kcG9pbnQgdG8gaGl0IChtdXRhdGUsIHF1ZXJ5IGV0YylcbiAgICogQHBhcmFtIGJvZHkgLSBSZXF1ZXN0IGJvZHlcbiAgICogQHBhcmFtIG9wdGlvbnMgLSBSZXF1ZXN0IG9wdGlvbnNcbiAgICogQGludGVybmFsXG4gICAqL1xuICBkYXRhUmVxdWVzdChlbmRwb2ludCwgYm9keSwgb3B0aW9ucykge1xuICAgIHJldHVybiBsYXN0VmFsdWVGcm9tKF9kYXRhUmVxdWVzdCh0aGlzLCB0aGlzLiNodHRwUmVxdWVzdCwgZW5kcG9pbnQsIGJvZHksIG9wdGlvbnMpKTtcbiAgfVxuICAvKipcbiAgICogR2V0IGEgU2FuaXR5IEFQSSBVUkwgZm9yIHRoZSBVUkkgcHJvdmlkZWRcbiAgICpcbiAgICogQHBhcmFtIHVyaSAtIFVSSS9wYXRoIHRvIGJ1aWxkIFVSTCBmb3JcbiAgICogQHBhcmFtIGNhblVzZUNkbiAtIFdoZXRoZXIgb3Igbm90IHRvIGFsbG93IHVzaW5nIHRoZSBBUEkgQ0ROIGZvciB0aGlzIHJvdXRlXG4gICAqL1xuICBnZXRVcmwodXJpLCBjYW5Vc2VDZG4pIHtcbiAgICByZXR1cm4gX2dldFVybCh0aGlzLCB1cmksIGNhblVzZUNkbik7XG4gIH1cbiAgLyoqXG4gICAqIEdldCBhIFNhbml0eSBBUEkgVVJMIGZvciB0aGUgZGF0YSBvcGVyYXRpb24gYW5kIHBhdGggcHJvdmlkZWRcbiAgICpcbiAgICogQHBhcmFtIG9wZXJhdGlvbiAtIERhdGEgb3BlcmF0aW9uIChlZyBgcXVlcnlgLCBgbXV0YXRlYCwgYGxpc3RlbmAgb3Igc2ltaWxhcilcbiAgICogQHBhcmFtIHBhdGggLSBQYXRoIHRvIGFwcGVuZCBhZnRlciB0aGUgb3BlcmF0aW9uXG4gICAqL1xuICBnZXREYXRhVXJsKG9wZXJhdGlvbiwgcGF0aCkge1xuICAgIHJldHVybiBfZ2V0RGF0YVVybCh0aGlzLCBvcGVyYXRpb24sIHBhdGgpO1xuICB9XG59XG5mdW5jdGlvbiBkZWZpbmVDcmVhdGVDbGllbnRFeHBvcnRzKGVudk1pZGRsZXdhcmUyLCBDbGFzc0NvbnN0cnVjdG9yKSB7XG4gIHJldHVybiB7IHJlcXVlc3RlcjogZGVmaW5lSHR0cFJlcXVlc3QoZW52TWlkZGxld2FyZTIpLCBjcmVhdGVDbGllbnQ6IChjb25maWcpID0+IHtcbiAgICBjb25zdCBjbGllbnRSZXF1ZXN0ZXIgPSBkZWZpbmVIdHRwUmVxdWVzdChlbnZNaWRkbGV3YXJlMik7XG4gICAgcmV0dXJuIG5ldyBDbGFzc0NvbnN0cnVjdG9yKFxuICAgICAgKG9wdGlvbnMsIHJlcXVlc3RlcjIpID0+IChyZXF1ZXN0ZXIyIHx8IGNsaWVudFJlcXVlc3Rlcikoe1xuICAgICAgICBtYXhSZWRpcmVjdHM6IDAsXG4gICAgICAgIG1heFJldHJpZXM6IGNvbmZpZy5tYXhSZXRyaWVzLFxuICAgICAgICByZXRyeURlbGF5OiBjb25maWcucmV0cnlEZWxheSxcbiAgICAgICAgLi4ub3B0aW9uc1xuICAgICAgfSksXG4gICAgICBjb25maWdcbiAgICApO1xuICB9IH07XG59XG5mdW5jdGlvbiBkZWZpbmVEZXByZWNhdGVkQ3JlYXRlQ2xpZW50KGNyZWF0ZUNsaWVudDIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGNvbmZpZykge1xuICAgIHJldHVybiBwcmludE5vRGVmYXVsdEV4cG9ydCgpLCBjcmVhdGVDbGllbnQyKGNvbmZpZyk7XG4gIH07XG59XG52YXIgZW52TWlkZGxld2FyZSA9IFtdO1xuY29uc3QgZXhwID0gZGVmaW5lQ3JlYXRlQ2xpZW50RXhwb3J0cyhlbnZNaWRkbGV3YXJlLCBTYW5pdHlDbGllbnQpLCByZXF1ZXN0ZXIgPSBleHAucmVxdWVzdGVyLCBjcmVhdGVDbGllbnQgPSBleHAuY3JlYXRlQ2xpZW50LCBkZXByZWNhdGVkQ3JlYXRlQ2xpZW50ID0gZGVmaW5lRGVwcmVjYXRlZENyZWF0ZUNsaWVudChjcmVhdGVDbGllbnQpO1xuZXhwb3J0IHtcbiAgQmFzZVBhdGNoLFxuICBCYXNlVHJhbnNhY3Rpb24sXG4gIENoYW5uZWxFcnJvcixcbiAgQ2xpZW50RXJyb3IsXG4gIENvbm5lY3Rpb25GYWlsZWRFcnJvcixcbiAgQ29yc09yaWdpbkVycm9yLFxuICBEaXNjb25uZWN0RXJyb3IsXG4gIE1lc3NhZ2VFcnJvcixcbiAgTWVzc2FnZVBhcnNlRXJyb3IsXG4gIE9ic2VydmFibGVQYXRjaCxcbiAgT2JzZXJ2YWJsZVNhbml0eUNsaWVudCxcbiAgT2JzZXJ2YWJsZVRyYW5zYWN0aW9uLFxuICBQYXRjaCxcbiAgU2FuaXR5Q2xpZW50LFxuICBTZXJ2ZXJFcnJvcixcbiAgVHJhbnNhY3Rpb24sXG4gIGNvbm5lY3RFdmVudFNvdXJjZSxcbiAgY3JlYXRlQ2xpZW50LFxuICBkZXByZWNhdGVkQ3JlYXRlQ2xpZW50IGFzIGRlZmF1bHQsXG4gIHJlcXVlc3RlcixcbiAgYWRhcHRlciBhcyB1bnN0YWJsZV9fYWRhcHRlcixcbiAgZW52aXJvbm1lbnQgYXMgdW5zdGFibGVfX2Vudmlyb25tZW50LFxuICB2YWxpZGF0ZUFwaVBlcnNwZWN0aXZlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguYnJvd3Nlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/client/dist/index.browser.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/next-loader/dist/_chunks-es/utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/_chunks-es/utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   perspectiveCookieName: () => (/* binding */ perspectiveCookieName),\n/* harmony export */   sanitizePerspective: () => (/* binding */ sanitizePerspective)\n/* harmony export */ });\n/* harmony import */ var _sanity_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanity/client */ \"(action-browser)/./node_modules/@sanity/client/dist/index.browser.js\");\n\nconst perspectiveCookieName = \"sanity-preview-perspective\";\nfunction sanitizePerspective(_perspective, fallback) {\n  const perspective = typeof _perspective == \"string\" && _perspective.includes(\",\") ? _perspective.split(\",\") : _perspective;\n  try {\n    return (0,_sanity_client__WEBPACK_IMPORTED_MODULE_0__.validateApiPerspective)(perspective), perspective === \"raw\" ? fallback : perspective;\n  } catch (err) {\n    return console.warn(\"Invalid perspective:\", _perspective, perspective, err), fallback;\n  }\n}\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L25leHQtbG9hZGVyL2Rpc3QvX2NodW5rcy1lcy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHNFQUFzQjtBQUNqQyxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbnRlYy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L25leHQtbG9hZGVyL2Rpc3QvX2NodW5rcy1lcy91dGlscy5qcz9jNWMyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZhbGlkYXRlQXBpUGVyc3BlY3RpdmUgfSBmcm9tIFwiQHNhbml0eS9jbGllbnRcIjtcbmNvbnN0IHBlcnNwZWN0aXZlQ29va2llTmFtZSA9IFwic2FuaXR5LXByZXZpZXctcGVyc3BlY3RpdmVcIjtcbmZ1bmN0aW9uIHNhbml0aXplUGVyc3BlY3RpdmUoX3BlcnNwZWN0aXZlLCBmYWxsYmFjaykge1xuICBjb25zdCBwZXJzcGVjdGl2ZSA9IHR5cGVvZiBfcGVyc3BlY3RpdmUgPT0gXCJzdHJpbmdcIiAmJiBfcGVyc3BlY3RpdmUuaW5jbHVkZXMoXCIsXCIpID8gX3BlcnNwZWN0aXZlLnNwbGl0KFwiLFwiKSA6IF9wZXJzcGVjdGl2ZTtcbiAgdHJ5IHtcbiAgICByZXR1cm4gdmFsaWRhdGVBcGlQZXJzcGVjdGl2ZShwZXJzcGVjdGl2ZSksIHBlcnNwZWN0aXZlID09PSBcInJhd1wiID8gZmFsbGJhY2sgOiBwZXJzcGVjdGl2ZTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIGNvbnNvbGUud2FybihcIkludmFsaWQgcGVyc3BlY3RpdmU6XCIsIF9wZXJzcGVjdGl2ZSwgcGVyc3BlY3RpdmUsIGVyciksIGZhbGxiYWNrO1xuICB9XG59XG5leHBvcnQge1xuICBwZXJzcGVjdGl2ZUNvb2tpZU5hbWUsXG4gIHNhbml0aXplUGVyc3BlY3RpdmVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/next-loader/dist/_chunks-es/utils.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@sanity/next-loader/dist/server-actions.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/next-loader/dist/server-actions.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   revalidateSyncTags: () => (/* binding */ revalidateSyncTags),\n/* harmony export */   setPerspectiveCookie: () => (/* binding */ setPerspectiveCookie)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(action-browser)/./node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var _chunks_es_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_chunks-es/utils.js */ \"(action-browser)/./node_modules/@sanity/next-loader/dist/_chunks-es/utils.js\");\n/* harmony import */ var next_cache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache.js */ \"(action-browser)/./node_modules/next/cache.js\");\n/* harmony import */ var next_headers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/headers.js */ \"(action-browser)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(action-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"9b57b19416ee7e1a29cee117cae807ecd1a3dd0b\":\"setPerspectiveCookie\",\"a2e723d6fb0a2a7b85d4e6588651e359c7abe391\":\"revalidateSyncTags\"} */ \n\n\n\n\nasync function revalidateSyncTags(tags) {\n    await (0,next_cache_js__WEBPACK_IMPORTED_MODULE_2__.revalidateTag)(\"sanity:fetch-sync-tags\");\n    for (const _tag of tags){\n        const tag = `sanity:${_tag}`;\n        await (0,next_cache_js__WEBPACK_IMPORTED_MODULE_2__.revalidateTag)(tag), console.log(`<SanityLive /> revalidated tag: ${tag}`);\n    }\n}\nasync function setPerspectiveCookie(perspective) {\n    if (!(await (0,next_headers_js__WEBPACK_IMPORTED_MODULE_3__.draftMode)()).isEnabled) return;\n    const sanitizedPerspective = (0,_chunks_es_utils_js__WEBPACK_IMPORTED_MODULE_4__.sanitizePerspective)(perspective, \"drafts\");\n    if (perspective !== sanitizedPerspective) throw new Error(`Invalid perspective: ${perspective}`);\n    (await (0,next_headers_js__WEBPACK_IMPORTED_MODULE_3__.cookies)()).set(_chunks_es_utils_js__WEBPACK_IMPORTED_MODULE_4__.perspectiveCookieName, Array.isArray(sanitizedPerspective) ? sanitizedPerspective.join(\",\") : sanitizedPerspective, {\n        httpOnly: !0,\n        path: \"/\",\n        secure: !0,\n        sameSite: \"none\"\n    });\n}\n //# sourceMappingURL=server-actions.js.map\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_5__.ensureServerEntryExports)([\n    revalidateSyncTags,\n    setPerspectiveCookie\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(\"a2e723d6fb0a2a7b85d4e6588651e359c7abe391\", revalidateSyncTags);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(\"9b57b19416ee7e1a29cee117cae807ecd1a3dd0b\", setPerspectiveCookie);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L25leHQtbG9hZGVyL2Rpc3Qvc2VydmVyLWFjdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxlQUFzQkEsbUJBQW1CQyxJQUFBO0lBQ3ZDLE1BQU1DLDREQUFhQSxDQUFDO0lBRXBCLFdBQVdDLFFBQVFGLEtBQU07UUFDakIsTUFBQUcsTUFBTSxVQUFVRCxLQUFJO1FBQzFCLE1BQU1ELDREQUFhQSxDQUFDRSxNQUVwQkMsUUFBUUMsR0FBQSxDQUFJLG1DQUFtQ0YsSUFBRyxDQUFFO0lBQUE7QUFFeEQ7QUFFQSxlQUFzQkcscUJBQXFCQyxXQUFBO0lBQ3JDLE1BQUUsTUFBTUMsMERBQVNBLEVBQVQsRUFBYUMsU0FBQSxFQUV2QjtJQUVJLE1BQUFDLHVCQUF1QkMsd0VBQW1CQSxDQUFDSixhQUFhO0lBQzlELElBQUlBLGdCQUFnQkcsc0JBQ2xCLE1BQU0sSUFBSUUsTUFBTSx3QkFBd0JMLFlBQVcsQ0FBRTtJQUdyRCxPQUFNTSx3REFBT0EsRUFBUCxFQUFXQyxHQUFBLENBQ2pCQyxzRUFBcUJBLEVBQ3JCQyxNQUFNQyxPQUFBLENBQVFQLHdCQUF3QkEscUJBQXFCUSxJQUFBLENBQUssT0FBT1Isc0JBQ3ZFO1FBQ0VTLFVBQVU7UUFDVkMsTUFBTTtRQUNOQyxRQUFRO1FBQ1JDLFVBQVU7SUFBQTtBQUdoQiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbnRlYy8uLi9zcmMvc2VydmVyLWFjdGlvbnMvaW5kZXgudHM/MTYzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcidcblxuaW1wb3J0IHR5cGUge0NsaWVudFBlcnNwZWN0aXZlLCBTeW5jVGFnfSBmcm9tICdAc2FuaXR5L2NsaWVudCdcbmltcG9ydCB7cGVyc3BlY3RpdmVDb29raWVOYW1lfSBmcm9tICdAc2FuaXR5L3ByZXZpZXctdXJsLXNlY3JldC9jb25zdGFudHMnXG5pbXBvcnQge3JldmFsaWRhdGVUYWd9IGZyb20gJ25leHQvY2FjaGUuanMnXG5pbXBvcnQge2Nvb2tpZXMsIGRyYWZ0TW9kZX0gZnJvbSAnbmV4dC9oZWFkZXJzLmpzJ1xuaW1wb3J0IHtzYW5pdGl6ZVBlcnNwZWN0aXZlfSBmcm9tICcuLi91dGlscydcblxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRpc2FibGVEcmFmdE1vZGUoKTogUHJvbWlzZTx2b2lkPiB7XG4vLyAgICd1c2Ugc2VydmVyJ1xuLy8gICBhd2FpdCBQcm9taXNlLmFsbFNldHRsZWQoW1xuLy8gICAgIChhd2FpdCBkcmFmdE1vZGUoKSkuZGlzYWJsZSgpLFxuLy8gICAgIC8vIFNpbXVsYXRlIGEgZGVsYXkgdG8gc2hvdyB0aGUgbG9hZGluZyBzdGF0ZVxuLy8gICAgIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDEwMDApKSxcbi8vICAgXSlcbi8vIH1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJldmFsaWRhdGVTeW5jVGFncyh0YWdzOiBTeW5jVGFnW10pOiBQcm9taXNlPHZvaWQ+IHtcbiAgYXdhaXQgcmV2YWxpZGF0ZVRhZygnc2FuaXR5OmZldGNoLXN5bmMtdGFncycpXG5cbiAgZm9yIChjb25zdCBfdGFnIG9mIHRhZ3MpIHtcbiAgICBjb25zdCB0YWcgPSBgc2FuaXR5OiR7X3RhZ31gXG4gICAgYXdhaXQgcmV2YWxpZGF0ZVRhZyh0YWcpXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLmxvZyhgPFNhbml0eUxpdmUgLz4gcmV2YWxpZGF0ZWQgdGFnOiAke3RhZ31gKVxuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZXRQZXJzcGVjdGl2ZUNvb2tpZShwZXJzcGVjdGl2ZTogQ2xpZW50UGVyc3BlY3RpdmUpOiBQcm9taXNlPHZvaWQ+IHtcbiAgaWYgKCEoYXdhaXQgZHJhZnRNb2RlKCkpLmlzRW5hYmxlZCkge1xuICAgIC8vIHRocm93IG5ldyBFcnJvcignRHJhZnQgbW9kZSBpcyBub3QgZW5hYmxlZCwgc2V0dGluZyBwZXJzcGVjdGl2ZSBjb29raWUgaXMgbm90IGFsbG93ZWQnKVxuICAgIHJldHVyblxuICB9XG4gIGNvbnN0IHNhbml0aXplZFBlcnNwZWN0aXZlID0gc2FuaXRpemVQZXJzcGVjdGl2ZShwZXJzcGVjdGl2ZSwgJ2RyYWZ0cycpXG4gIGlmIChwZXJzcGVjdGl2ZSAhPT0gc2FuaXRpemVkUGVyc3BlY3RpdmUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcGVyc3BlY3RpdmU6ICR7cGVyc3BlY3RpdmV9YClcbiAgfVxuXG4gIDsoYXdhaXQgY29va2llcygpKS5zZXQoXG4gICAgcGVyc3BlY3RpdmVDb29raWVOYW1lLFxuICAgIEFycmF5LmlzQXJyYXkoc2FuaXRpemVkUGVyc3BlY3RpdmUpID8gc2FuaXRpemVkUGVyc3BlY3RpdmUuam9pbignLCcpIDogc2FuaXRpemVkUGVyc3BlY3RpdmUsXG4gICAge1xuICAgICAgaHR0cE9ubHk6IHRydWUsXG4gICAgICBwYXRoOiAnLycsXG4gICAgICBzZWN1cmU6IHRydWUsXG4gICAgICBzYW1lU2l0ZTogJ25vbmUnLFxuICAgIH0sXG4gIClcbn1cblxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZURyYWZ0TW9kZUFjdGlvbk1pc3NpbmcoKTogUHJvbWlzZTx2b2lkIHwgc3RyaW5nPiB7XG4vLyAgIHJldHVybiAnVGhlIDxTYW5pdHlMaXZlIC8+IGNvbXBvbmVudCBpcyBtaXNzaW5nIHRoZSBoYW5kbGVEcmFmdE1vZGVBY3Rpb24gcHJvcCdcbi8vIH1cbiJdLCJuYW1lcyI6WyJyZXZhbGlkYXRlU3luY1RhZ3MiLCJ0YWdzIiwicmV2YWxpZGF0ZVRhZyIsIl90YWciLCJ0YWciLCJjb25zb2xlIiwibG9nIiwic2V0UGVyc3BlY3RpdmVDb29raWUiLCJwZXJzcGVjdGl2ZSIsImRyYWZ0TW9kZSIsImlzRW5hYmxlZCIsInNhbml0aXplZFBlcnNwZWN0aXZlIiwic2FuaXRpemVQZXJzcGVjdGl2ZSIsIkVycm9yIiwiY29va2llcyIsInNldCIsInBlcnNwZWN0aXZlQ29va2llTmFtZSIsIkFycmF5IiwiaXNBcnJheSIsImpvaW4iLCJodHRwT25seSIsInBhdGgiLCJzZWN1cmUiLCJzYW1lU2l0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@sanity/next-loader/dist/server-actions.js\n");

/***/ })

};
;